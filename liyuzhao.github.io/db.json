{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/ds.php","path":"images/ds.php","modified":0,"renderable":0},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"source/assets/blogImg/avatar.jpg","path":"assets/blogImg/avatar.jpg","modified":0,"renderable":0},{"_id":"source/assets/blogImg/wechat.jpg","path":"assets/blogImg/wechat.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"022afafd11ce9e1d8dadaff5c334361feed80389","modified":1462849178000},{"_id":"source/.DS_Store","hash":"3e607d7e64c892fcf1644b7e803c31104ea0d836","modified":1514205224091},{"_id":"themes/yilia/.babelrc","hash":"b1b76475ac17dc9e2fa50af96c9e31eea2d0f2b4","modified":1514204379507},{"_id":"themes/yilia/.editorconfig","hash":"da6d022b8f4d9c961e2f8f80677e92af8de0db4d","modified":1514204379507},{"_id":"themes/yilia/.eslintignore","hash":"df0a50b13cc00acb749226fee3cee6e0351fb1d9","modified":1514204379507},{"_id":"themes/yilia/.eslintrc.js","hash":"5696ae049de010ed3786768b0c359f14c05b5ec6","modified":1514204379507},{"_id":"themes/yilia/.gitattributes","hash":"e0f24dceeb1e6878a1dd9b01a2b9df1bc037a867","modified":1514204379507},{"_id":"themes/yilia/.gitignore","hash":"9c4b7d27a1e3e5efa0c8ed143a032a85d586b03b","modified":1514204379507},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1514204379508},{"_id":"themes/yilia/_config.yml","hash":"25b12bc45116b33f56244d8d0d896223815124da","modified":1514269629654},{"_id":"themes/yilia/package.json","hash":"367cb9579d35968a942c243ab248a5f5ebfaf462","modified":1514204379521},{"_id":"themes/yilia/webpack.config.js","hash":"05ba46a4ae744272f5312e684928910dccad3755","modified":1514204379550},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1514256417875},{"_id":"source/_posts/Android-TextView-部分字体设置颜色或大小.md","hash":"ee41767633a7bc43c63ecc03f100db305e97e65a","modified":1460688758000},{"_id":"source/_posts/Android-iOS打开手机QQ与指定聊天界面.md","hash":"cf5c7195ecb887eda4784edc5dcc78d7c0f80157","modified":1460688632000},{"_id":"source/_posts/Android-mk、Application-mk.md","hash":"bf657c15f247f1f65d8e17f734f115ab139d34f7","modified":1461307281000},{"_id":"source/_posts/Android中通过反射获取资源ID.md","hash":"b082f334aa0a85d2e474a63e0b9fc0e66749b7dc","modified":1512465736770},{"_id":"source/_posts/Atom-编辑器快捷键列表汇总整理.md","hash":"2d83f71f2d1854c27980281725a9f7fe80b1ce58","modified":1459137723000},{"_id":"source/_posts/EditText-的使用及值得注意的地方.md","hash":"9ab26ad5c9b9d889524b6c04e48d5a402de40006","modified":1472706321000},{"_id":"source/_posts/Github-安全类Repo收集整理-转载.md","hash":"7cff2ac9338a0677e5b153add74c4c39016888bb","modified":1505101019000},{"_id":"source/_posts/Git忽略文件-ignore模板（Android-Studio）.md","hash":"575a0b3263134cf1fecfb56ae74a1c1d38cb21bf","modified":1472472754000},{"_id":"source/_posts/Hexo常用命令记录.md","hash":"15c8f0a5d7c7e1cac724c977ce5b334ddbc69c21","modified":1463567170000},{"_id":"source/_posts/Gyp-学习记录.md","hash":"2ebc7275d0e645777283741032a90f8dea8e643d","modified":1514204043326},{"_id":"source/_posts/Linux命令wc的详细用法.md","hash":"8c591935d2cf886a166d27ef23a5346d7ed34e27","modified":1472461599000},{"_id":"source/_posts/Java中Math类的一些常用方法.md","hash":"cb3427c95a877560797968a63b817e084a336502","modified":1459339063000},{"_id":"source/_posts/Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7.md","hash":"5e6649f4c83a0f38b903f3aab8b9ece745dcb192","modified":1458447733000},{"_id":"source/_posts/Mac-清除-DNS-缓存.md","hash":"b637fde331907928005345a085fbe8b4ac346eef","modified":1458300788000},{"_id":"source/_posts/Mac下，添加Android-adb命令.md","hash":"dc379877b74f87cf09611a123630409358f42174","modified":1457753050000},{"_id":"source/_posts/MySQL常用命令总结.md","hash":"e763601e817ab373287a48014d5bf7ce28215689","modified":1512466737730},{"_id":"source/_posts/Qt-Creator常用快捷键.md","hash":"ca368dddbb7d65414dc911f2dd86d3b4f29c6026","modified":1479185669000},{"_id":"source/_posts/WebView调用本地的图片选择.md","hash":"f36753ec8cd31e78902719ade44b79f067cfcf36","modified":1463647861000},{"_id":"source/_posts/gitignore文件不起作用.md","hash":"b1f5e4c8a76c24b4b6f6472813e57e4086722da3","modified":1483430081000},{"_id":"source/_posts/glide的简单用法.md","hash":"7e67f757a9ec4a2eb05bfdd85ece18822277e033","modified":1472473478000},{"_id":"source/_posts/grep-find命令用法.md","hash":"f3bc45d2ef36142c4a72ad5135118f79d57c52b0","modified":1472730929000},{"_id":"source/_posts/iOS设置AppIcon-LauncherImages尺寸和位置.md","hash":"4405263437de00aa4bad38f1a72eded8e15fde14","modified":1512464464313},{"_id":"source/_posts/iPhone开发-GCD.md","hash":"ec654a0f06a579d2e967421376bb8de9f7949a57","modified":1510751005000},{"_id":"source/_posts/iPhone开发-Keyboard.md","hash":"361b9424ae987d99e83fa3c5820f476e5717aa04","modified":1510751970000},{"_id":"source/_posts/iPhone开发-UIImage-CIImage-CGImageRef.md","hash":"4109e7924877e1864b186b9204a80ddcb1495184","modified":1510750448000},{"_id":"source/_posts/iPhone开发-UILabel.md","hash":"f38ce61c5d04eb65a9aebdb166dabeb2a4fc7f0c","modified":1510749800000},{"_id":"source/_posts/iPhone开发-截屏.md","hash":"99ebedb02cfe69fe2179e7d3c66a9b37a65d968a","modified":1510748708000},{"_id":"source/_posts/iPhone开发-leftBarButtonItem.md","hash":"4770186dfaa93d640be62e485a435d2fc54858b3","modified":1510749404000},{"_id":"source/_posts/iPhone开发-常用组件.md","hash":"c67ea5b528b2638d6d84a7a599a7b9ec1197ab5d","modified":1510748069000},{"_id":"source/_posts/linux之cut用法.md","hash":"0dc65b7510ea4262da8eeace27f688c9d495ce1a","modified":1472460049000},{"_id":"source/_posts/mac系统如何显示和隐藏文件.md","hash":"a6e6889081615ec47587998dcfd629efe836a19f","modified":1457753096000},{"_id":"source/_posts/python字符串的去除空格函数-字符串的内建函数.md","hash":"d94c3d9bd9d56c23392ab6fd08682b415925bc3f","modified":1472053052000},{"_id":"source/_posts/一句代码搞定-Android-图片压缩.md","hash":"bc4c6708c94ff131340abdd945d87e584bf3136a","modified":1472474025000},{"_id":"source/_posts/使用Android-Studio的lint清除无用的资源文件.md","hash":"8f6e48c11025fb18f62b4030123679ca51d7d0cb","modified":1460688790000},{"_id":"source/_posts/关于Android中软键盘与布局的问题.md","hash":"9fb2e32d61dcfa1fc9585aae905179df95a644cb","modified":1512466639341},{"_id":"source/_posts/命名规则-阿里巴巴Java开发.md","hash":"d0cfad9cc568edcfc092a3e2362e953f91e40d18","modified":1502164479000},{"_id":"source/_posts/升级Xcode后Qt问题了.md","hash":"edaf31e35228f2ca64a8b957510d4c117b7446ed","modified":1485153001000},{"_id":"source/_posts/常用-Git-命令清单.md","hash":"a96705783cbf993037e7a9c2a36193033cd8ce75","modified":1457889191000},{"_id":"source/_posts/正则表达式--匹配电话号码和手机号码.md","hash":"7ef0a0b7f69e33ed7394626b7e6a9b66613e80e3","modified":1457753108000},{"_id":"source/_posts/查看被删的微信好友.md","hash":"56f444582dde1d752c92d399a506c0c0a8924950","modified":1459492672000},{"_id":"source/_posts/知道Android-中Gradle-的这些技巧，提升编译构建速度.md","hash":"b7ebdf062f54ad755fdc4e260ef892edb5563bb7","modified":1465283796000},{"_id":"source/_posts/编程中的命名设计那点事.md","hash":"7cdd63a6a4bcdb98f7ff008ebf597600236cf975","modified":1464584730000},{"_id":"source/_posts/英语谚语.md","hash":"0b0bb3b6c09cfa2a9d32719cab161f2852765bde","modified":1462241736000},{"_id":"source/categories/index.md","hash":"3cb97ec38f20b967331b58f9d6bbe7b71bb291a2","modified":1461315574000},{"_id":"source/images/ds.php","hash":"7069d9d3773c0c394867138e0a510a41ac0ead30","modified":1470982727000},{"_id":"source/tags/index.md","hash":"2241424081ba2c89788e24a836cb14df1f1303de","modified":1461315583000},{"_id":"source/images/embed.js","hash":"ad5ae707f1b7831187e414d613570e46939ab1c6","modified":1470986783000},{"_id":"themes/yilia/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1514204379508},{"_id":"themes/yilia/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1514204379508},{"_id":"themes/yilia/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1514204379509},{"_id":"themes/yilia/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1514204379509},{"_id":"themes/yilia/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1514204379509},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1514204379509},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1514204379509},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1514204379518},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1514204379519},{"_id":"themes/yilia/layout/index.ejs","hash":"a35dc900203f9d8dd863ea4c1722198d6d457ec8","modified":1514204379519},{"_id":"themes/yilia/layout/layout.ejs","hash":"0a332bdbd3b86c231d690614687f5b97186b85d5","modified":1514204379519},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1514204379519},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1514204379520},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1514204379520},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1514204379547},{"_id":"themes/yilia/source/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1514204379550},{"_id":"themes/yilia/source-src/css.ejs","hash":"94dbdb02ca11849e415d54fb28546a598f2cffb1","modified":1514204379521},{"_id":"themes/yilia/source-src/script.ejs","hash":"c21381e1317db7bb157f1d182b8c088cb7cba411","modified":1514204379542},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1514204379517},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1514204379548},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1514204379549},{"_id":"source/assets/blogImg/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1514206033250},{"_id":"source/assets/blogImg/avatar.jpg","hash":"b378c83a45b74762b7340e2cebd82d01ac4f35e3","modified":1514205152452},{"_id":"source/assets/img/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1514205344322},{"_id":"source/assets/blogImg/wechat.jpg","hash":"aa6d9dcdfebf4c889b3a1b18ff2f54981dcc1346","modified":1514205991253},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"845590ea500cbc6ccf86b102812dc78a0150d499","modified":1514268341868},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1514204379510},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"1f7d4819b7f67602c4a1b99871808d2160b60978","modified":1514204379510},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"630c6ec866d056657d3d91e34b4c64eb993c0654","modified":1514204379511},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"8edbd7993b9b061611a193533a664e2e85eae748","modified":1514204379511},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1514204379511},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"f0e6e88f9f7eb08b8fe51449a8a3016273507924","modified":1514204379511},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"f2994e0acd1d606ebf4680afc4fa652e148ccf4e","modified":1514204379511},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1514204379512},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"64f092186b5a744aa1603ce22bb1d44a34446add","modified":1514204379512},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1514204379512},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"183d7ca4ba8e7c80694ffdc8cf39957092238346","modified":1514204379513},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"151a1ef2173ba7b6789d349f0f8da89616cc1394","modified":1514204379513},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"7fbbfabf5e29525b24ada14613c21a26789132b4","modified":1514204379513},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"e495790b2abe2290875817e42bd505bc611d3e26","modified":1514204379518},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"c41341b9618e591538e1136a2d1637587c1bbd90","modified":1514204379518},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1514204379543},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1514204379543},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1514204379543},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1514204379545},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1514204379544},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1514204379544},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1514204379545},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1514204379545},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1514204379546},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"24f347a2412abbf58318369152504da9538f8d3b","modified":1514204379521},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"93a50dd19a93485712da1f8d0a1672482dd1eabc","modified":1514204379522},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"7d27e22ac898e8fafec14549e940c73cbea1fba8","modified":1514204379522},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"d79f2d35a06de83a2a226ca790b7a0a34789c115","modified":1514204379522},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"3fad68bd74260326f83090b0974dd80707e7bac7","modified":1514204379523},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"43e507f2a48504079afd9471353337e23ca47470","modified":1514204379523},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"578a67464dd0f542197f7fcee158c991db058563","modified":1514204379524},{"_id":"themes/yilia/source-src/css/article.scss","hash":"0f6d61af99ed4db87f8589db1feaea7747b55963","modified":1514204379524},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"cafe3834017a3bf47420f37543725025225a2c89","modified":1514204379524},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"97b8fba41c914145710b90091f400b845879577f","modified":1514204379527},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7c995410b25baaf61dfc5e148e22ca60330abcd3","modified":1514204379530},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1514204379530},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"849a29fcd7150214fcf7b9715fa5dc71d1f9b896","modified":1514204379530},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"3719994c2c9393813cc1d42b657205c368a329cb","modified":1514204379531},{"_id":"themes/yilia/source-src/css/left.scss","hash":"0d30c0e7cdb831c3881a017006c782f2214ac195","modified":1514204379532},{"_id":"themes/yilia/source-src/css/main.scss","hash":"2f86a014af93583caba78a563d9549826bf28294","modified":1514204379532},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"f053c609d84df0dd9eee1d11ddf0c19163a456be","modified":1514204379533},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"ace041d72f95b419f6a5e443191703c2b62007f4","modified":1514204379533},{"_id":"themes/yilia/source-src/css/page.scss","hash":"bf206bb7f7d0967bc8b7fdf01b7ffc99aff9ba88","modified":1514204379533},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"80a4fcf9171d4a33235da96ac8a2b7dcabc45dfb","modified":1514204379533},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"9c8dfd1c76854ef063494ca76fac6360b391ed6d","modified":1514204379534},{"_id":"themes/yilia/source-src/css/share.scss","hash":"150c6425f6582e7ec78a873256ce49c9930e8805","modified":1514204379534},{"_id":"themes/yilia/source-src/css/social.scss","hash":"724162ccf3977e70a45d189abfaa20b6e2fba87b","modified":1514204379534},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"c8aa84fca93862d3caae77c552873b8610f33327","modified":1514204379535},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"ac67a3c7097849206244db9b0ba91daaba017ef5","modified":1514204379535},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"1b1aa0908e58cf942b28e3881d07c5573c4129e1","modified":1514204379535},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"53d5a554bc2f38e9bb3d26400a47767013c05216","modified":1514204379535},{"_id":"themes/yilia/source-src/js/anm.js","hash":"4a4c5d82b09a3063f91a434388e6aa064fd7fd98","modified":1514204379536},{"_id":"themes/yilia/source-src/js/browser.js","hash":"04095b38cfd4316a23f8eb14b1ffaf95f78a4260","modified":1514204379537},{"_id":"themes/yilia/source-src/js/aside.js","hash":"754f771264548a6c5a8ad842908e59ae4e7ed099","modified":1514204379537},{"_id":"themes/yilia/source-src/js/Q.js","hash":"d011af172064b6c6e0c7051d8f9879373ddac113","modified":1514204379536},{"_id":"themes/yilia/source-src/js/main.js","hash":"3894e60827c817319e43c9ff3ed045fc3d7336ce","modified":1514204379538},{"_id":"themes/yilia/source-src/js/fix.js","hash":"d6782d53c992e712af39c84e804eccaf38830b94","modified":1514204379537},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"4d823b039fd296d24a454eae5a798b93c44560cb","modified":1514204379538},{"_id":"themes/yilia/source-src/js/report.js","hash":"4f1d9a18a936ce40b037f636a39127dd19175b6e","modified":1514204379539},{"_id":"themes/yilia/source-src/js/share.js","hash":"b090f82cf80cba7da764753906d9e2cc2acdf30d","modified":1514204379539},{"_id":"themes/yilia/source-src/js/slider.js","hash":"e846bcc5aac9c68b93f7b8de353df54d8d29f666","modified":1514204379539},{"_id":"themes/yilia/source-src/js/util.js","hash":"8456e9d6b19532742582c99b2fb9d09e146e1c58","modified":1514204379540},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"2577deb6a9fe4f5436360b2ce9afcc7f9a7f0116","modified":1514204379541},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"4cb685f07e89dd5175c2a576e73a1a957aec5637","modified":1514204379517},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"0809a4829aabeb4e911a3ed04ec28db4df7dfe3f","modified":1514204379513},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"ef71c4081e866a494367575c59610e7e6339ece0","modified":1514204379514},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"5f99b55980da64a723a8e14d5a7daba0d6504647","modified":1514204379514},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1514204379514},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"e68bbac9ffb1ad27b56837c9abad6ed6bb7daa0c","modified":1514204379514},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"1036c8e4e1a7bc935ba173744da735a0d6ed09cd","modified":1514204379514},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"5dccfbe165b23a101f1333cc65ed8efbd197453c","modified":1514204379515},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2e783e68755abb852760eb0e627a3fbb50a05a55","modified":1514204379515},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1514204379515},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"ea41c462168d9697caef9485862e9cac718a12c1","modified":1514204379516},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"491ab3378d5c11005ba65c607608bb36b368a9d5","modified":1514204379525},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"63a37f26276f9207405afe0f2d65339ce295bbaf","modified":1514204379525},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"3bba5c77bad5981eac859fe05c9561d580ba7fa9","modified":1514204379526},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"fab871fa93bd542e76a71a56428f2994a4aaf443","modified":1514204379526},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"fb511c505d1309249f21dc577d4ad2bad99a764f","modified":1514204379526},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1514204379527},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1514204379528},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1514204379529},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1514204379529},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1514204379531},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1514204379531},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1514204379532},{"_id":"public/images/embed.js","hash":"5abbb9c708fd0ef342e43e33a8ca4869ad081031","modified":1514264320456},{"_id":"public/content.json","hash":"bcf761fe8a00ee6c2194bbe78f6bbe3fff8bf3cd","modified":1514264321281},{"_id":"public/categories/index.html","hash":"22c79ef8acc794b6548c2189b994c4d47a9074cc","modified":1514269843162},{"_id":"public/tags/index.html","hash":"8e06e57eeaa7897fc75eb4dfaa6e7c532e8a58f8","modified":1514269843162},{"_id":"public/2017/12/25/Gyp-学习记录/index.html","hash":"c26bcc863bf760e861775ab879def1c531a4e91d","modified":1514269843162},{"_id":"public/2017/12/05/关于Android中软键盘与布局的问题/index.html","hash":"af567ca7e4de7872780f4b05e8ed4e9006e5737a","modified":1514269843163},{"_id":"public/2017/12/05/Android中通过反射获取资源ID/index.html","hash":"2958f0bdca5421b29947b6859d1e9bc2f967e6c7","modified":1514269843162},{"_id":"public/2017/12/05/iOS设置AppIcon-LauncherImages尺寸和位置/index.html","hash":"8258c931fe1d9bee1bb497f38f2b33e7354ee6e4","modified":1514269843163},{"_id":"public/2017/11/16/MySQL常用命令总结/index.html","hash":"1398808031b9eb129476931bd42ee7f3ce182745","modified":1514269843163},{"_id":"public/2017/11/15/iPhone开发-Keyboard/index.html","hash":"548639ae458f9f1b071b1d2a7d9735a21f85b076","modified":1514269843163},{"_id":"public/2017/11/15/iPhone开发-GCD/index.html","hash":"2389a7f901c9af5206a600e1939add2dbd805ca1","modified":1514269843163},{"_id":"public/2017/11/15/iPhone开发-UIImage-CIImage-CGImageRef/index.html","hash":"0b68aedcbee7897bd7ddd7fc40df4a0dba5cfdf3","modified":1514269843163},{"_id":"public/2017/11/15/iPhone开发-UILabel/index.html","hash":"949da6d4d521ba17ccf6d4074b87852bd90b3db6","modified":1514269843164},{"_id":"public/2017/11/15/iPhone开发-leftBarButtonItem/index.html","hash":"3bcb13d0d79d0bb5635911266f3faf12fad74114","modified":1514269843164},{"_id":"public/2017/11/15/iPhone开发-截屏/index.html","hash":"cf7b57453cc7ba8e14fecd8b3b7693f486d12fa6","modified":1514269843164},{"_id":"public/2017/11/15/iPhone开发-常用组件/index.html","hash":"4d3b0f3c8bb70a91cdc13eb6147dbe744df60b1d","modified":1514269843164},{"_id":"public/2017/09/11/Github-安全类Repo收集整理-转载/index.html","hash":"588cb7206800d55fe87def42f82d25d8acb071d8","modified":1514269843164},{"_id":"public/2017/08/08/命名规则-阿里巴巴Java开发/index.html","hash":"f183bb9f8701bde786731333c1bfdfc8d45476b9","modified":1514269843165},{"_id":"public/2017/01/23/升级Xcode后Qt问题了/index.html","hash":"44d044cf40cbdbce593578ca9f751fe814598ebd","modified":1514269843165},{"_id":"public/2017/01/03/gitignore文件不起作用/index.html","hash":"c9f9fcdb741a618043999c95f9fdbc2b149b2bd3","modified":1514269843165},{"_id":"public/2016/11/14/Qt-Creator常用快捷键/index.html","hash":"19f0b8054d1af776bd7b58773c87895a12aa98ce","modified":1514269843165},{"_id":"public/2016/09/01/grep-find命令用法/index.html","hash":"8691566fb04cb3a73df2d5bb111d2fec385ad375","modified":1514269843165},{"_id":"public/2016/09/01/EditText-的使用及值得注意的地方/index.html","hash":"df40dc558b714ca8ac7b0573504b70f5969d65eb","modified":1514269843165},{"_id":"public/2016/08/29/一句代码搞定-Android-图片压缩/index.html","hash":"6e8533b82a337ad287cebb6392d19efe342a8340","modified":1514269843166},{"_id":"public/2016/08/29/glide的简单用法/index.html","hash":"97688a87d9ac04758a6b3a6c81608ae78b757280","modified":1514269843166},{"_id":"public/2016/08/29/Git忽略文件-ignore模板（Android-Studio）/index.html","hash":"56ccbc157a996cbf621b5c4e98c98933939b691b","modified":1514269843166},{"_id":"public/2016/08/29/Linux命令wc的详细用法/index.html","hash":"8485a67b48ed06c13bdc9a44e6f4ca2eeb7f0c8f","modified":1514269843167},{"_id":"public/2016/08/29/linux之cut用法/index.html","hash":"03fd69edbcc0d47902f13e502e3a86b3629989ab","modified":1514269843167},{"_id":"public/2016/08/24/python字符串的去除空格函数-字符串的内建函数/index.html","hash":"1ce359a023c83afce3f52db46297291c41fa0545","modified":1514269843167},{"_id":"public/2016/06/07/知道Android-中Gradle-的这些技巧，提升编译构建速度/index.html","hash":"019fa949a8c1c9a0b89027f754b3d8d452465d08","modified":1514269843167},{"_id":"public/2016/05/30/编程中的命名设计那点事/index.html","hash":"562e7485aa2435fc266d3ea683b53833239350e9","modified":1514269843168},{"_id":"public/2016/05/19/WebView调用本地的图片选择/index.html","hash":"6f939cc5c1345f2b4b41215530a4b6b7f00068e7","modified":1514269843168},{"_id":"public/2016/05/18/Hexo常用命令记录/index.html","hash":"6777313a84ff6a2310908d786a71617240e1e398","modified":1514269843168},{"_id":"public/2016/04/15/Android-iOS打开手机QQ与指定聊天界面/index.html","hash":"7cd874a146f16f7016cd6a6677737b13ad1d8bf4","modified":1514269843169},{"_id":"public/2016/04/01/查看被删的微信好友/index.html","hash":"50ede8b1ce98d17c5f0d5b039b552be33240c90b","modified":1514269843169},{"_id":"public/2016/03/30/Java中Math类的一些常用方法/index.html","hash":"fd492e5527c0e869ae2822ce1b2be56abc0e7840","modified":1514269843169},{"_id":"public/2016/03/28/Atom-编辑器快捷键列表汇总整理/index.html","hash":"c90605e60933a5112a67017d713f93dcfee208b4","modified":1514269843169},{"_id":"public/2016/03/22/使用Android-Studio的lint清除无用的资源文件/index.html","hash":"1651b5b92518b8214fffe64281cb0e38ff8dac51","modified":1514269843170},{"_id":"public/2016/03/20/Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7/index.html","hash":"229bc00759f28113a2dd898f47dbc20207e693c8","modified":1514269843170},{"_id":"public/2016/03/18/Mac-清除-DNS-缓存/index.html","hash":"64385d7cb8366fbb2883942790b2495a8c3c151b","modified":1514269843170},{"_id":"public/2016/03/14/Android-mk、Application-mk/index.html","hash":"e5bffbb80e7f714812201da4853f5cdeb82e7671","modified":1514269843171},{"_id":"public/2016/03/14/常用-Git-命令清单/index.html","hash":"8be1217edb2952a27761feafb045741022ad532e","modified":1514269843171},{"_id":"public/2016/03/12/英语谚语/index.html","hash":"c872d43a3ee5186a77304d0dc419b16c6c111799","modified":1514269843171},{"_id":"public/2016/03/10/Android-TextView-部分字体设置颜色或大小/index.html","hash":"4612c0f95eb4a25134083d0e37b37af042bef13e","modified":1514269843171},{"_id":"public/2016/03/09/Mac下，添加Android-adb命令/index.html","hash":"90ad31d35a1f5c5bf611a3b5f4bfdb3680f66c09","modified":1514269843172},{"_id":"public/2016/03/09/mac系统如何显示和隐藏文件/index.html","hash":"b4d032d769439bf95a3fcaf13c1fe18d3c5d0a40","modified":1514269843172},{"_id":"public/2016/03/03/正则表达式--匹配电话号码和手机号码/index.html","hash":"58d183cc5ef3963d12751824fe97e48033c6781c","modified":1514269843172},{"_id":"public/index.html","hash":"b819e9ce6762ac4bd8cf081668a0f46b736974ac","modified":1514269843177},{"_id":"public/page/2/index.html","hash":"144533fb96126492ec1709bf45020048a3960640","modified":1514269843177},{"_id":"public/page/3/index.html","hash":"87f308b2e15891bab23cac6064e68a45ac59168c","modified":1514269843177},{"_id":"public/page/4/index.html","hash":"263e8d9ebf2a0521caf177685f136731126b5e68","modified":1514269843178},{"_id":"public/page/5/index.html","hash":"51dfd70d6aa3e3d6a32776de84bcda2cdbd698b7","modified":1514269843178},{"_id":"public/categories/android/index.html","hash":"ae6b946de93ee444d4d39bf0f9cc6eeb91c32c72","modified":1514269843178},{"_id":"public/categories/android/page/2/index.html","hash":"394203391236131bcd169b2813e4ede52c2abfd4","modified":1514269843178},{"_id":"public/categories/mac/index.html","hash":"09161212cfb92146e6f33f57ac8a873a805f058b","modified":1514269843179},{"_id":"public/categories/github/index.html","hash":"94398f90ce4015f39854db49d7028d9d8d353da4","modified":1514269843179},{"_id":"public/categories/git/index.html","hash":"df4b71a3074dc74ad20867f3f1b14805b1bdc20d","modified":1514269843179},{"_id":"public/categories/hexo/index.html","hash":"7686379d083fd4210fed08b176569cd19b9ab0ca","modified":1514269843180},{"_id":"public/categories/linux/index.html","hash":"15be3ea95aa271b57e9af6f87235126a9a957992","modified":1514269843180},{"_id":"public/categories/mac/atom/index.html","hash":"22a2e8fe160a1de48b5de4e20db7b0098b06e5e6","modified":1514269843180},{"_id":"public/categories/java/index.html","hash":"0217f37cd19346ffa3f5f6f13f60d797c4f8280e","modified":1514269843180},{"_id":"public/categories/c/index.html","hash":"d9b2884fb279df73cfbbb31ddb12fa1ede31650a","modified":1514269843181},{"_id":"public/categories/mysql/index.html","hash":"73a61397b3b5f22a5159092921d198de09afcb5e","modified":1514269843181},{"_id":"public/categories/qt/index.html","hash":"2c4a0b98826a2247a6058ef2179737ee1f4d4d2d","modified":1514269843181},{"_id":"public/categories/ios/index.html","hash":"fe435a524d17ce6c580ea8a6975ec617ebe2b280","modified":1514269843181},{"_id":"public/categories/python/index.html","hash":"d3818ab5a440745d858d9db07e0d2232a55bacd5","modified":1514269843182},{"_id":"public/categories/Git/index.html","hash":"4f51deca3a2e517ef38654859341c279f1f491f9","modified":1514269843182},{"_id":"public/categories/english/index.html","hash":"019861984a37e4bf327df83b2b2e141af02b4c93","modified":1514269843182},{"_id":"public/archives/index.html","hash":"57b411fb3b1bc99ceda1a992a0ecf594c025c45b","modified":1514269843173},{"_id":"public/archives/2016/index.html","hash":"67a0f0244d243287109c4b2a2b5ec6e3e0f66fa6","modified":1514269843173},{"_id":"public/archives/2016/03/index.html","hash":"642da44ae5f1b99b6d56df5c90cfe7f8a0c7b725","modified":1514269843173},{"_id":"public/archives/2016/04/index.html","hash":"6b633109f01e346f22e00a1f011f220b4352e8d6","modified":1514269843174},{"_id":"public/archives/2016/05/index.html","hash":"99541ebb95ec1ed60dbf3ed05d736f054a9b19fb","modified":1514269843174},{"_id":"public/archives/2016/06/index.html","hash":"1a8c71034454e5d20ae644f53ee308e5c881ec72","modified":1514269843174},{"_id":"public/archives/2016/08/index.html","hash":"3eefd1315fdd7168a3500a3db51d9656884ebed2","modified":1514269843175},{"_id":"public/archives/2016/09/index.html","hash":"f4421b9e38e239a878b89a03c09092d2441bd9b7","modified":1514269843175},{"_id":"public/archives/2016/11/index.html","hash":"216c53a91f0baf4d3e6622d918927d4609750790","modified":1514269843175},{"_id":"public/archives/2017/index.html","hash":"5052624b468440288a86eb87c667bf3ecf79315f","modified":1514269843175},{"_id":"public/archives/2017/01/index.html","hash":"69973f1b8b4cffe2d9e9402be19194b915c4d4a7","modified":1514269843175},{"_id":"public/archives/2017/08/index.html","hash":"fd2622e566c39fdbb30b94854696ad5b45c8cc4f","modified":1514269843176},{"_id":"public/archives/2017/09/index.html","hash":"55fbb8bf382ad71078b7faf36fc72dc80acb9b06","modified":1514269843176},{"_id":"public/archives/2017/11/index.html","hash":"0ba500b54d22edef61d8b35bdb1e92e36dda8d57","modified":1514269843176},{"_id":"public/archives/2017/12/index.html","hash":"b777f93c81c65100439555cc8969502bbe6476b1","modified":1514269843176},{"_id":"public/tags/android/index.html","hash":"2ae7ca6bdbeff2bf2582662dc2f0aba084ba3f48","modified":1514269843182},{"_id":"public/tags/qq/index.html","hash":"5b372fb538fb042edc4ee5754d64ff8235667121","modified":1514269843183},{"_id":"public/tags/intent/index.html","hash":"7ee3c50cf5df2a5c0b31c2c344ad5ae1ef7e284a","modified":1514269843183},{"_id":"public/tags/ndk/index.html","hash":"df4e3ad6cc36d208dc6aac1ccf011d155d90e29e","modified":1514269843183},{"_id":"public/tags/atom/index.html","hash":"43eaaa30b526aeb4dbc6f0f6e2430d39615fcd96","modified":1514269843183},{"_id":"public/tags/tools/index.html","hash":"ca972c0263f9719c453d60a4a8c2f37c016efeb9","modified":1514269843184},{"_id":"public/tags/mac/index.html","hash":"164750785ff1a5d00a5bbd4982928dab4a8c36ad","modified":1514269843184},{"_id":"public/tags/RAML/index.html","hash":"980c8a0eb2a3cdc5a927f92cbebad000e06a328b","modified":1514269843184},{"_id":"public/tags/EditText/index.html","hash":"5c63fe73e8251ad2d0bbeaaf1fedcead0d3ff5da","modified":1514269843184},{"_id":"public/tags/github/index.html","hash":"e093aaf86418687f3da634f188cae6d8cac50e86","modified":1514269843185},{"_id":"public/tags/安全/index.html","hash":"8ad4d39f08a8b5da7c8fcddc6c9e4516b3737597","modified":1514269843185},{"_id":"public/tags/git/index.html","hash":"02f8682d041d44a8ef1843fb640555531653b718","modified":1514269843185},{"_id":"public/tags/hexo/index.html","hash":"1ab66c4f77ecdf333903acd9271a7daaf9275a3e","modified":1514269843186},{"_id":"public/tags/linux/index.html","hash":"57253e47a238835d69db1dbc34bc1b97fa780710","modified":1514269843186},{"_id":"public/tags/java/index.html","hash":"d4f099ef41b4d13d557b4618c526fa1593a94114","modified":1514269843186},{"_id":"public/tags/math/index.html","hash":"b69e169167e9eb95f09da048ef06d938da604b15","modified":1514269843186},{"_id":"public/tags/round/index.html","hash":"291e231dbcca0b6983bfea68606fd3eeca7fdc9c","modified":1514269843187},{"_id":"public/tags/gyp/index.html","hash":"8472ccb5313dd55553cbc579d76f81820e7fd8b6","modified":1514269843187},{"_id":"public/tags/mysql/index.html","hash":"e3f095810ef57206e12c2a339108e62d9150cd35","modified":1514269843187},{"_id":"public/tags/数据库/index.html","hash":"e610049386acbc390a7f713caa1398c692106599","modified":1514269843187},{"_id":"public/tags/dns/index.html","hash":"4dd978a1cf64202d39559042327f887f1bd43aff","modified":1514269843187},{"_id":"public/tags/缓存/index.html","hash":"76bc39769b85c53780a3401f14df03b3c82e01fb","modified":1514269843188},{"_id":"public/tags/qt/index.html","hash":"d6d73611f7295729060358d9abad75f816bcc3f5","modified":1514269843188},{"_id":"public/tags/WebView/index.html","hash":"8d6e2574754c005a8911107c1cc69fad8a677d62","modified":1514269843188},{"_id":"public/tags/glide/index.html","hash":"9db79917f1ff7a38bd24c1bfc6b0734c3576af54","modified":1514269843189},{"_id":"public/tags/grep/index.html","hash":"5fe945392ca97992e40de7d39a4fe7e75adf154a","modified":1514269843189},{"_id":"public/tags/appicon/index.html","hash":"9a606909b118fc40312404ed38b3628e68ff3827","modified":1514269843189},{"_id":"public/tags/ios/index.html","hash":"61b446d22a20e2585aa7ccf08b5a4171a282288b","modified":1514269843190},{"_id":"public/tags/python/index.html","hash":"9745fbcb43fe51025ede3ad92719cd967ea81937","modified":1514269843190},{"_id":"public/tags/lint/index.html","hash":"f38a4a11633ac7dd2830c254c31969124c782373","modified":1514269843190},{"_id":"public/tags/keyboard/index.html","hash":"9b08d348cf0608b0f3297676c36da6fe156e15b7","modified":1514269843190},{"_id":"public/tags/Git/index.html","hash":"757d3c399334da33390c888d4d9400b5da3dd695","modified":1514269843190},{"_id":"public/tags/wechat/index.html","hash":"0a5c58334b48d1ad65c4675be7298f6bdc0e486d","modified":1514269843191},{"_id":"public/tags/微信/index.html","hash":"8602bbabad4a45b9cf36e4363726f2853544a362","modified":1514269843191},{"_id":"public/tags/命名/index.html","hash":"0573d500d08d82487f96b2457a88f5d8ec01bad9","modified":1514269843191},{"_id":"public/tags/english/index.html","hash":"38c1cc44b9f3d9f6144126e88ffcac01add02080","modified":1514269843191},{"_id":"public/CNAME","hash":"022afafd11ce9e1d8dadaff5c334361feed80389","modified":1514264321487},{"_id":"public/images/ds.php","hash":"7069d9d3773c0c394867138e0a510a41ac0ead30","modified":1514264321488},{"_id":"public/assets/blogImg/avatar.jpg","hash":"b378c83a45b74762b7340e2cebd82d01ac4f35e3","modified":1514264321488},{"_id":"public/assets/blogImg/wechat.jpg","hash":"aa6d9dcdfebf4c889b3a1b18ff2f54981dcc1346","modified":1514264321488},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1514264321488},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1514264321488},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"f9304e5714d20861be7d8f4d36687e88e86b9e1b","modified":1514264321488},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1514264321488},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1514264321488},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1514264321488},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1514264321488},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1514264321489},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1514264321489},{"_id":"public/main.0cf68a.css","hash":"ddf6e2c6b953c2c59a3c271e6070010a4cc81cf9","modified":1514264321499},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1514264321499},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1514264321499},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1514264321499}],"Category":[{"name":"android","_id":"cjbn5uujg0004pev254qha7m4"},{"name":"mac","_id":"cjbn5uujz000npev2tbn0pxwa"},{"name":"github","_id":"cjbn5uuk2000tpev206bmfme3"},{"name":"git","_id":"cjbn5uuk6000zpev2c9tfwon3"},{"name":"hexo","_id":"cjbn5uuk90015pev2f1vijlg4"},{"name":"linux","_id":"cjbn5uukd001epev237r5yovu"},{"name":"atom","parent":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uukg001kpev2m13ucx9i"},{"name":"java","_id":"cjbn5uukl001qpev21xllgpgc"},{"name":"c++","_id":"cjbn5uuko001xpev2kwgjv9fs"},{"name":"mysql","_id":"cjbn5uuks0026pev2c6eikskz"},{"name":"qt","_id":"cjbn5uukv002epev2cjeiludj"},{"name":"ios","_id":"cjbn5uukz002lpev2c9j3hgt3"},{"name":"python","_id":"cjbn5uulr0043pev2da09uc72"},{"name":"Git","_id":"cjbn5uuls004apev2uiq4k6hl"},{"name":"english","_id":"cjbn5uulv004gpev2sj8dn6w0"}],"Data":[],"Page":[{"title":"categories","date":"2016-03-10T03:02:47.000Z","type":"categories","comments":1,"_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-03-10 11:02:47\ntype: \"categories\"\ncomments: true\n---\n\n\n","updated":"2016-04-22T08:59:34.000Z","path":"categories/index.html","layout":"page","_id":"cjbn5uujc0001pev2amftxwat","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2016-03-10T03:02:47.000Z","type":"tags","comments":1,"_content":"\n\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-03-10 11:02:47\ntype: \"tags\"\ncomments: true\n---\n\n\n","updated":"2016-04-22T08:59:43.000Z","path":"tags/index.html","layout":"page","_id":"cjbn5uujf0003pev2erv2gh06","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"!function(e,t,s){function a(){return c.short_name?g+\"//\"+c.short_name+\".\"+S.DOMAIN:S.REMOTE}function i(){function t(){for(var t;t=y.shift();){var a=t.url,i=new s(t.title,{dir:\"auto\",icon:t.iconUrl,body:t.body});try{i.onclick=function(){e.focus(),h.href=a,i.close()}}catch(r){}setTimeout(function(){i.close&&i.close()},8e3)}}var s=e.Notification;\"Notification\"in e&&\"denied\"!==s.permission&&(\"granted\"===s.permission&&t(),s.requestPermission(function(e){\"granted\"===e&&t()}))}function r(){return 0==nt.data.user_id}function n(e){S.theme=e,\"none\"!=e&&o.injectStylesheet(S.STATIC_URL+\"/styles/embed\"+(e?\".\"+e+\".css?\"+M[e]:\".\"+short_name)+\".css\")}var o={},d=t.getElementsByTagName(\"head\")[0]||t.getElementsByTagName(\"body\")[0];if(o.extend=function(e,t){for(var s in t)e[s]=t[s];return e},o.injectScript=function(a,i){var r=t.createElement(\"script\"),n=t.head||t.getElementsByTagName(\"head\")[0]||t.documentElement;r.type=\"text/javascript\",r.src=a,r.async=\"async\",r.charset=\"utf-8\",i&&(r.onload=r.onreadystatechange=function(t,a){var o=a||!r.readyState||/loaded|complete/.test(r.readyState);o&&(r.onload=r.onreadystatechange=null,n&&r.parentNode&&n.removeChild(r),r=s,a||i.call(e))}),n.insertBefore(r,n.firstChild)},o.injectStylesheet=function(e){var s=t.createElement(\"link\");s.type=\"text/css\",s.rel=\"stylesheet\",s.href=e,d.appendChild(s)},o.injectStyle=function(e){var s=t.createElement(\"style\");return s.type=\"text/css\",d.appendChild(s),e=e.replace(/\\}/g,\"}\\n\"),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(t.createTextNode(e)),s},o.getCookie=function(e){for(var a,i,r,n=\" \"+e+\"=\",o=t.cookie.split(\";\"),d=0;d<o.length;d++)if(a=\" \"+o[d],i=a.indexOf(n),i>=0&&i+n.length==(r=a.indexOf(\"=\")+1))return decodeURIComponent(a.substring(r,a.length).replace(/\\+/g,\"\"));return s},o.param=function(e){var t=[];for(var a in e)e[a]!=s&&t.push(a+\"=\"+encodeURIComponent(e[a]));return t.join(\"&\")},o.cssProperty=function(e,s){var a=(t.body||t.documentElement).style;if(\"undefined\"==typeof a)return!1;if(\"string\"==typeof a[e])return s?e:!0;for(var i=[\"Moz\",\"Webkit\",\"ms\"],e=e.charAt(0).toUpperCase()+e.substr(1),r=0;r<i.length;r++)if(\"string\"==typeof a[i[r]+e])return s?i[r]+e:!0},!e.DUOSHUO){for(var l in Object.prototype)return alert(\"Object.prototype 不为空，请不要给 Object.prototype 设置方法\");var c,u,p=e.JSON,h=e.location,f=e.XMLHttpRequest,m=p&&p.stringify&&e.localStorage,v=e.navigator.userAgent,g=\"https:\"==t.location.protocol?\"https:\":\"http:\",b=0,y=[],_=u=function(){function e(e){return t[e]||\"&amp;\"}var t={\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},s=/&(?!\\w+;)|[<>\"'`]/g,a=/[&<>\"'`]/;return function(t){return null==t||t===!1?\"\":a.test(t)?t.replace(s,e):t}}(),k=function(e){if(e.match(/^(http|https):/))return e;var s=t.createElement(\"a\");return s.href=e,P.hrefNormalized?s.href:s.getAttribute(\"href\",4)},w=function(e){return function(){return e}},x=function(){for(var e={},t=0;t<arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var s=o.param(e);return s?\"?\"+s:\"\"},T=function(){var e=o.getCookie(\"duoshuo_token\");return e?{jwt:e}:c.remote_auth?{short_name:c.short_name,remote_auth:c.remote_auth}:s},q=function(){if(!c&&(c=e.duoshuoQuery)){if(!c.short_name||\"your_duoshuo_short_name\"===c.short_name)return c=s,void alert(\"你还没有设置多说域名(duoshuoQuery.short_name)，填入已有域名或创建新站点：http://duoshuo.com/create-site/\");it.trigger(\"queryDefined\")}return c},C=function(e){return e&&e.error&&e.warn?e:{error:function(){},log:function(){},warn:function(){}}}(e.console),S=e.DUOSHUO={sourceName:{weibo:\"新浪微博\",qq:\"QQ\",qzone:\"QQ空间\",qqt:\"腾讯微博\",renren:\"人人网\",douban:\"豆瓣网\",kaixin:\"开心网\",sohu:\"搜狐微博\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},serviceNames:{weibo:\"微博\",qq:\"QQ\",douban:\"豆瓣\",renren:\"人人\",kaixin:\"开心\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},parseDate:function(e){return e.parse(\"2011-10-28T00:00:00+08:00\")&&function(t){return new e(t)}||e.parse(\"2011/10/28T00:00:00+0800\")&&function(t){return new e(t.replace(/-/g,\"/\").replace(/:(\\d\\d)$/,\"$1\"))}||e.parse(\"2011/10/28 00:00:00+0800\")&&function(t){return new e(t.replace(/-/g,\"/\").replace(/:(\\d\\d)$/,\"$1\").replace(\"T\",\" \"))}||function(t){return new e(t)}}(Date),fullTime:function(e){var t=S.parseDate(e);return t.getFullYear()+\"年\"+(t.getMonth()+1)+\"月\"+t.getDate()+\"日 \"+t.toLocaleTimeString()},elapsedTime:function(e){var t=S.parseDate(e),s=new Date,a=(s-b-t)/1e3;return 10>a?\"刚刚\":60>a?Math.round(a)+\"秒前\":3600>a?Math.round(a/60)+\"分钟前\":86400>a?Math.round(a/3600)+\"小时前\":(s.getFullYear()==t.getFullYear()?\"\":t.getFullYear()+\"年\")+(t.getMonth()+1)+\"月\"+t.getDate()+\"日\"},compileStyle:function(e){var t=\"\",s={};if(s.textbox=\"#ds-thread #ds-reset .ds-replybox .ds-textarea-wrapper\",!e)return t;for(var a in e)t+=s[a]+\"{\"+e[a]+\"}\\n\";return t},init:function(e,t){e&&!O[e]&&(O[e]=t||{type:\"EmbedThread\"}),S.initView&&S.initView()}},j=t.all,P=S.support=function(){var s=t.createElement(\"div\");s.innerHTML='<a href=\"/a\" style=\"opacity:.55;\">a</a><input type=\"checkbox\"/>';var a=s.getElementsByTagName(\"a\")[0],i=s.getElementsByTagName(\"input\")[0],r={placeholder:\"placeholder\"in i,touch:\"ontouchstart\"in e||\"onmsgesturechange\"in e,opacity:/^0.55$/.test(a.style.opacity),hrefNormalized:\"/a\"===a.getAttribute(\"href\"),iOS:v.match(/ \\((iPad|iPhone|iPod);( U;)? CPU( iPhone)? OS /),android:v.match(/ \\(Linux; U; Android /)};return r.ie6=!f&&\"undefined\"==typeof s.style.maxHeight,r.authInWin=e.postMessage&&e.screen.width>800&&!r.iOS&&!r.android&&h.origin,r}(),O=S.selectors={\".ds-thread\":{type:\"EmbedThread\"},\".ds-recent-comments\":{type:\"RecentComments\"},\".ds-recent-visitors\":{type:\"RecentVisitors\"},\".ds-top-users\":{type:\"TopUsers\"},\".ds-top-threads\":{type:\"TopThreads\"},\".ds-login\":{type:\"LoginWidget\"},\".ds-thread-count\":{type:\"ThreadCount\"},\".ds-share\":{type:\"ShareWidget\"}},E=S.openDialog=function(e){return S.dialog!==s&&S.dialog.el.remove(),S.dialog=new st.Dialog(et.dialog(e)).open()},L=S.smilies={};S.require=function(){function t(e){var t=U[e]?\"?\"+U[e]+\".js\":\"\";return S.STATIC_URL+\"/libs/\"+e+\".js\"+t}var s={mzadxN:\"undefined\"!=typeof mzadxN};return\"undefined\"!=typeof jQuery&&jQuery.fn.jquery>=\"1.5\"&&(s[\"embed.compat\"]=!0,S.jQuery=e.jQuery),function(e,a){if(\"string\"==typeof e)s[e]?a():o.injectScript(t(e),function(){s[e]=!0,a()});else if(\"object\"==typeof e){var i,r=!0;for(i=0;i<e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectScript(t(n),function(){s[n]=!0;for(var t=0;t<e.length;t++)if(!s[e[t]])return;a()}))})(e[i]);r&&a()}}}();for(var N=0,I=[\"EmbedThread\",\"RecentComments\",\"RecentVisitors\",\"TopUsers\",\"TopThreads\",\"LoginWidget\",\"ThreadCount\"];N<I.length;N++)S[I[N]]=function(e){return function(t,s){s=s||{},s.type=e,t&&!O[t]&&(O[t]=s),S.initSelector&&S.initSelector(t,s)}}(I[N]),S[\"create\"+I[N]]=function(e){return function(s,a){var i=t.createElement(s);for(var r in a)i.setAttribute(\"data-\"+r,a[r]);return S[e](i),i}}(I[N]);S.RecentCommentsWidget=S.RecentComments;var R=S.API={ajax:function(e,t,i,r,n){function d(e){var t=e.getResponseHeader(\"Date\");t&&(b=new Date-new Date(t))}function l(e,t,s){var a,i,o,l=t;if(e>=200&&300>e||304===e)if(304===e)l=\"notmodified\",o=!0;else try{a=p.parse(s),l=\"success\",o=!0}catch(c){l=\"parsererror\",i=c}else{i=l,(!l||e)&&(l=\"error\",0>e&&(e=0));try{a=p.parse(s)}catch(c){l=\"parsererror\",i=c}}o?r&&r(a):\"parseerror\"===l?C.error(\"解析错误: \"+s):(C.error(\"出错啦(\"+a.code+\"): \"+a.errorMessage),n&&n(a),a.errorTrace&&C.error(a.errorTrace)),d(m)}var u=o.getCookie(\"duoshuo_token\");i=i||{},i.v=S.version,u?i.jwt=u:c.remote_auth&&(i.remote_auth=c.remote_auth);var h=f&&p&&p.parse;if(h){var m=new f,v=!!m&&\"withCredentials\"in m;if(v){var g;return m.open(e,a()+\"/api/\"+t+\".json\"+(\"GET\"==e?\"?\"+o.param(i):\"\"),!0),m.withCredentials=!0,m.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\"),m.send(\"GET\"==e?null:o.param(i)),g=function(e,t){var a,i,r,n;try{if(g&&(t||4===m.readyState))if(g=s,t)4!==m.readyState&&m.abort();else{a=m.status,r=m.getAllResponseHeaders();try{n=m.responseText}catch(e){}try{i=m.statusText}catch(o){i=\"\"}}}catch(d){t||l(-1,d)}n&&l(a,i,n,r)},void(4===m.readyState?g():m.onreadystatechange=g)}}\"GET\"!=e&&(i._method=\"POST\");var y=\"cb_\"+Math.round(1e6*Math.random());R[y]=function(e){switch(e.code){case 0:r&&r(e);break;default:n&&n(e),C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}},i.callback=\"DUOSHUO.API['\"+y+\"']\",o.injectScript(a()+\"/api/\"+t+\".jsonp?\"+o.param(i))},get:function(e,t,s,a){return this.ajax(\"GET\",e,t,s,a)},post:function(e,t,s,a){return this.ajax(\"POST\",e,t,s,a)}},A=S.ws={messages:[],send:function(s){if(!(\"WebSocket\"in e&&p))return!1;var a=this;if(a.messages.push(p.stringify(s)),!a.webSocket){var r=\"https:\"===t.location.protocol?\"wss://ws.duoshuo.com:8202/\":\"ws://ws.duoshuo.com:8201/\",n=a.webSocket=new WebSocket(r);n.onopen=function(){var e,t=1===n.readyState;if(t)for(;e=a.messages.shift();)n.send(e)},n.onmessage=function(e){try{var t=p.parse(e.data)}catch(s){return}switch(t.type){case\"post\":for(var a,r=0;r<S.pagelets.length;r++)a=S.pagelets[r],a.threadId==t.thread_id&&a.onMessage(t);break;case\"notification\":y.push(t),i()}},e.addEventListener(\"beforeunload\",function(){n.close()})}a.webSocket.onopen()}};S.DOMAIN=\"duoshuo.com\",S.STATIC_URL=g+\"//static.duoshuo.com\",S.REMOTE=g+\"//duoshuo.com\",S.version=\"16.6.16\";var M={\"default\":\"9b2a46a0\",dark:\"33f3a5ac\",bluebox:\"39a75d50\",newhua:\"706ba4eb\",justflat:\"9d72ec5a\"},U={\"embed.compat\":\"24f8ca3f\",smilies:\"921e8eda\"},z={post:\"发布\",posting:\"正在发布\",settings:\"设置\",reply:\"回复\",like:\"顶\",repost:\"转发\",report:\"举报\",\"delete\":\"删除\",reply_to:\"回复 \",reposts:\"转发\",comments:\"评论\",floor:\"楼\",latest:\"最新\",earliest:\"最早\",hottest:\"最热\",share_to:\"分享到:\",leave_a_message:\"说点什么吧…\",no_comments_yet:\"还没有评论，沙发等你来抢\",repost_reason:\"请输入转发理由\",hot_posts_title:\"被顶起来的评论\",comments_zero:\"暂无评论\",comments_one:\"1条评论\",comments_multiple:\"{num}条评论\",reposts_zero:\"暂无转发\",reposts_one:\"1条转发\",reposts_multiple:\"{num}条转发\",weibo_reposts_zero:\"暂无新浪微博\",weibo_reposts_one:\"1条新浪微博\",weibo_reposts_multiple:\"{num}条新浪微博\",qqt_reposts_zero:\"暂无腾讯微博\",qqt_reposts_one:\"1条腾讯微博\",qqt_reposts_multiple:\"{num}条腾讯微博\"},D={get:function(e){return m?m[e]:void 0},save:function(e,t){if(m)try{m.removeItem(e),m[e]=p.stringify(t),m.removeItem(e+\":timestamp\"),m[e+\":timestamp\"]=Math.floor((new Date-b)/1e3)}catch(s){}}},W=S.loadRequire=function(t){if(t.visitor&&(!nt.data&&t.visitor.user_id&&e.Notification&&A.send({logged_user_id:t.visitor.user_id}),nt.reset(t.visitor)),t.site&&(rt.reset(t.site),D.save(\"ds_site_\"+c.short_name,t.site)),!S.theme&&rt.data.theme&&n(rt.data.theme),t.lang&&(o.extend(z,t.lang),D.save(\"ds_lang_\"+c.short_name,t.lang)),t.stylesheets)for(var s=0;s<t.stylesheets.length;s++)o.injectStylesheet(t.stylesheets[s]);if(t.nonce&&(S.nonce=t.nonce),t.style&&o.injectStyle((t.style||\"\")+S.compileStyle(c.component_style)),t.unread&&ot.reset(t.unread),t.warnings)for(var s=0;s<t.warnings.length;s++)C.warn(t.warnings[s])},B=0,H=S.Class=function(){};H.extend=function(e){function t(){!B&&this.init&&this.init.apply(this,arguments)}B=1;var s=new this;B=0;for(var a in e)s[a]=e[a];return t.prototype=s,t.prototype.constructor=t,t.extend=arguments.callee,t};var J=S.Event=H.extend({on:function(e,t){var a=this.handlers||(this.handlers={});return a[e]===s&&(a[e]=[]),a[e].push(t),this},trigger:function(e,t){var s=(this.handlers||(this.handlers={}))[e];if(s)for(var a=0;a<s.length&&s[a].call(this,t)!==!1;a++);return this}}),Q=S.Widget=J.extend({init:function(e,t){this.el=e,this.options=t||{},this.render()},render:function(){},reset:function(){},load:function(e){switch(e.code){case 0:W(e);var t=this.prepare(e);t.options=o.extend(this.options,e.options),this.onload(t);break;default:this.onError(e)}},onload:function(e){this.el.html(et[this.tmpl](e))},prepare:function(e){return e},onMessage:function(){},onError:function(e){C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}}),V=S.Model=J.extend({init:function(e){this.data=e},reset:function(e){this.data=e,this.trigger(\"reset\")},remove:function(e){this.data.splice(e,1),this.trigger(\"reset\")},set:function(e,t){if(t===s)for(var a in e)this.data[a]=e[a];else this.data[e]=t;return this.trigger(\"reset\"),this},toJSON:function(){return o.extend({},this.data)}}),$=V.extend({toJSON:function(){return o.extend({},this.data)}}),F=V.extend({toJSON:function(){var e=o.extend({},this.data);return e.theAuthor=ct[this.data.author_id]&&ct[this.data.author_id].data||this.data.author,e.parents=this.data.parents||[],e}}),G=V.extend({toJSON:function(){return o.extend({},this.data)}}),Y=function(e){this.model=e};Y.prototype.set=function(e){for(var t in e)e[t]&&(this[t]?this[t].set(e[t]):this[t]=new this.model(e[t]))},Y.prototype.get=function(e){for(var t=0,s=[];t<e.length;t++)s[t]=this[e[t]];return s},Y.prototype.getJSON=function(e){for(var t=0,s=[];t<e.length;t++)this[e[t]]&&s.push(this[e[t]].toJSON());return s};var Z={userUrl:function(e){return e.url},avatarUrl:function(e){return e.avatar_url||rt.data.default_avatar_url},loginUrl:function(e,t){return t||(t={}),c.sso&&c.sso.login&&(t.sso=1,t.redirect_uri=c.sso.login),a()+\"/login/\"+e+\"/\"+x(t)},bindUrl:function(e){return a()+\"/bind/\"+e+\"/\"+x(c.sso&&c.sso.login?{sso:1,redirect_uri:c.sso.login}:null,T())},logoutUrl:function(){return a()+\"/logout/\"+x(c.sso&&c.sso.logout?{sso:1,redirect_uri:c.sso.logout}:null)}},X=[\"weixin\",\"weibo\",\"qq\",\"renren\"],K=[\"douban\",\"kaixin\",\"baidu\",\"google\"],et=S.templates={userAnchor:function(e){return e.url?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(e.url)+'\">'+_(e.name)+\"</a>\":_(e.name)},avatarImg:function(e,t){return'<img src=\"'+_(Z.avatarUrl(e,t))+'\" alt=\"'+_(e.name)+'\"'+(t?' style=\"width:'+t+\"px;height:\"+t+'px\"':\"\")+\"/>\"},avatar:function(e,t){var s=et.avatarImg(e,t),i=Z.userUrl(e);return i?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(i)+'\" '+(e.user_id?\" onclick=\\\"this.href='\"+a()+\"/user-url/?user_id=\"+e.user_id+\"';\\\"\":\"\")+' title=\"'+_(e.name)+'\">'+s+\"</a>\":s},timeText:function(e){return e?'<span class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</span>\":\"\"},timeAnchor:function(e,t){return e?'<a href=\"'+t+'\" target=\"_blank\" rel=\"nofollow\" class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</a>\":\"\"},serviceIcon:function(e,t){return'<a href=\"javascript:void(0)\" class=\"ds-service-icon'+(t?\"-grey\":\"\")+\" ds-\"+e+'\" data-service=\"'+e+'\" title=\"'+S.sourceName[e]+'\"></a>'},poweredBy:function(e){return'<p class=\"ds-powered-by\"><a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"nofollow\">'+_(e)+\"</a></p>\"},indicator:w('<div id=\"ds-indicator\"></div>'),waitingImg:w('<div id=\"ds-waiting\"></div>'),loginItem:function(e,t){var s=Z[t?\"bindUrl\":\"loginUrl\"](e);return'<li>    <a href=\"'+s+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+e+'\">'+S.serviceNames[e]+(nt.data.social_uid[e]?' <span class=\"ds-icon ds-icon-ok\"></span>':\"\")+\"</a></li>\"}},tt=function(e){var t=[];for(var s in e)t.push('<input type=\"hidden\" name=\"'+s+'\" value=\"'+_(e[s])+'\" />');return t.join(\"\\n\")};et.commentList=function(e){var t=\"\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li class=\"ds-comment',e.options.show_avatars&&(t+=\" ds-show-avatars\"),t+='\" data-post-id=\"'+a.post_id+'\">',e.options.show_avatars&&(t+='<div class=\"ds-avatar\">'+et.avatar(a.theAuthor,e.options.avatar_size)+\"</div>\"),t+='<div class=\"ds-meta\">'+et.userAnchor(a.theAuthor),e.options.show_time&&(t+=et.timeText(a.created_at)),t+=\"</div>\",t+=e.options.show_title?'<div class=\"ds-thread-title\">在 <a href=\"'+u(a.thread.url)+'#comments\">'+u(a.thread.title)+'</a> 中评论</div><div class=\"ds-excerpt\">'+a.message+\"</div>\":'<a class=\"ds-excerpt\" title=\"'+a.thread.title+' 中的评论\" href=\"'+u(a.thread.url)+'#comments\">'+a.message+\"</a>\",t+=\"</li>\";return t},et.ctxPost=function(e){var t=\"\";return e.post&&(t+='<li class=\"ds-ctx-entry\"',e.hidden&&(t+=' style=\"display:none\"'),t+=' data-post-id=\"'+e.post.post_id+'\"><div class=\"ds-avatar\">'+et.avatar(e.post.theAuthor||e.post.author)+'</div><div class=\"ds-ctx-body\"><div class=\"ds-ctx-head\">'+et.userAnchor(e.post.theAuthor||e.post.author)+et.timeAnchor(e.post.created_at,e.post.url),e.index>=0&&(t+='<div class=\"ds-ctx-nth\" title=\"'+S.fullTime(e.post.created_at)+'\">'+(e.index+1)+z.floor+\"</div>\"),t+='</div><div class=\"ds-ctx-content\">'+e.post.message,e.index>=0&&(t+='　　　　　　　<div class=\"ds-comment-actions',e.post.vote>0&&(t+=\" ds-post-liked\"),t+='\">'+et.likePost(e.post)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-reply\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a></div>\"),t+=\"</div></div></li>\"),t},et[\"dialog-anonymous\"]=function(e){var t='<h2>社交帐号登录</h2><div class=\"ds-icons-32\">',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\",e.options.deny_anonymous||(t+='<h2>作为游客留言</h2><form><div class=\"ds-control-group\"><input type=\"text\" name=\"author_name\" id=\"ds-dialog-name\" value=\"'+u(nt.data.name)+'\" required /><label for=\"ds-dialog-name\">名字(必填)</label></div>',e.options.require_guest_email&&(t+='<div class=\"ds-control-group\"><input type=\"email\" name=\"author_email\" id=\"ds-dialog-email\" value=\"'+u(nt.data.email)+'\" required /><label for=\"ds-dialog-email\">邮箱(必填)</label></div>'),e.options.require_guest_url&&(t+='<div class=\"ds-control-group\"><input type=\"url\" name=\"author_url\" id=\"ds-dialog-url\" placeholder=\"http://\" value=\"'+u(nt.data.url)+'\" /><label for=\"ds-dialog-url\">网址(可选)</label></div>'),t+='<button type=\"submit\">发布</button></form>'),t},et[\"dialog-ask-for-auth\"]=function(){var e='<h2>社交帐号登录</h2><ul class=\"ds-service-list\">'+et.serviceList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul>\";return e},et[\"dialog-bind-more\"]=function(){var e='<h2>绑定更多帐号</h2><ul class=\"ds-service-list\">'+et.serviceBindList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceBindList(K)+'</ul><div style=\"clear:both\"></div>';return e},et[\"dialog-qrcode\"]=function(e){var t='<h2>微信扫一扫，分享到朋友圈</h2><div class=\"ds-share-qrcode\" style=\"text-align:center;\"><img src=\"'+e.qrcode_url+'\" alt=\"'+e.url+'\"></div>';return t},et[\"dialog-reposts\"]=function(e){var t='<h2>转发到微博</h2><div class=\"ds-quote\"><strong>@'+u(e.post.theAuthor.name)+\"</strong>: \"+e.post.message+\"</div><form>\"+tt({post_id:e.post.post_id})+'<div class=\"ds-textarea-wrapper\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.repost_reason)+'\">'+u(e.repostMessage)+'</textarea><pre class=\"ds-hidden-text\"></pre>';return t+='</div><div class=\"ds-actions\">',e.service?t+=tt({\"service[]\":e.service}):(t+='<label><input type=\"checkbox\" name=\"service[]\" value=\"weibo\"',nt.data.social_uid.weibo&&(t+=' checked=\"checked\"'),t+=' /><span class=\"ds-service-icon ds-weibo\"></span>新浪微博</label><label><input type=\"checkbox\" name=\"service[]\" value=\"qqt\"',nt.data.social_uid.qq&&(t+=' checked=\"checked\"'),t+=' /><span class=\"ds-service-icon ds-qqt\"></span>腾讯微博</label>'),t+='<button type=\"submit\">'+z.repost+\"</button></div></form>\"},et.dialog=function(e){var t='<div class=\"ds-dialog\"><div class=\"ds-dialog-inner ds-rounded\"><div class=\"ds-dialog-body\">'+e+'</div><div class=\"ds-dialog-footer\"><a href=\"http://duoshuo.com/\" target=\"_blank\" class=\"ds-logo\"></a><span>社会化评论框</span></div><a class=\"ds-dialog-close\" href=\"javascript:void(0)\" title=\"关闭\"></a></div></div>';return t},et.hotPosts=function(e){var t='<div class=\"ds-header ds-gradient-bg\">'+u(z.hot_posts_title)+\"</div><ul>\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=et.post({post:a,options:e.options});return t+=\"</ul>\"},et.likePost=function(e){var t='<a class=\"ds-post-likes\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-like\"></span>'+z.like;return e.likes>0&&(t+=\"(\"+e.likes+\")\"),t+=\"</a>\"},et.likeTooltip=function(e){var t='<div class=\"ds-like-tooltip ds-rounded\"><p>很高兴你能喜欢，分享一下吧：</p><ul>';for(var s in e.services)t+='<li><a class=\"ds-share-to-'+s+\" ds-service-link ds-\"+s+'\" href=\"'+a()+\"/share-proxy/?\"+o.param({service:s,thread_id:e.thread_id})+'\">'+e.services[s]+\"</a></li>\";return t+='</ul><p class=\"ds-like-tooltip-footer\"><a class=\"ds-like-tooltip-close\">算了</a></p></div>'},et.loginButtons=function(){var e='<div class=\"ds-login-buttons\"><p>社交帐号登录:</p><div class=\"ds-social-links\"><ul class=\"ds-service-list\">'+et.serviceList(X)+'<li><a class=\"ds-more-services\" href=\"javascript:void(0)\">更多»</a></li></ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul></div></div>\";return e},et.loginWidget=function(e){var t='<div class=\"ds-icons-32\">',s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\"},et.meta=function(e){var t='<div class=\"ds-meta\"><a href=\"javascript:void(0)\" class=\"ds-like-thread-button ds-rounded';return e.user_vote>0&&(t+=\" ds-thread-liked\"),t+='\"><span class=\"ds-icon ds-icon-heart\"></span> <span class=\"ds-thread-like-text\">',t+=e.user_vote>0?\"已喜欢\":\"喜欢\",t+='</span><span class=\"ds-thread-cancel-like\">取消喜欢</span></a><span class=\"ds-like-panel\"></span></div>'},et.notify=function(e){var t='<div id=\"ds-reset\"><a class=\"ds-logo\" href=\"http://duoshuo.com/\" target=\"_blank\" title=\"多说\"></a><ul class=\"ds-notify-unread\"><li';return e.comments||(t+=' style=\"display:none;\"'),t+='><a data-type=\"unread-comments\" href=\"javascript:void(0);\">你有'+e.comments+\"条新回复</a></li><li\",e.notifications||(t+=' style=\"display:none;\"'),t+='><a data-type=\"unread-notifications\" href=\"javascript:void(0);\">你有'+e.notifications+\"条系统消息</a></li></ul></div>\"},et.post=function(e){var t=\"\",s=e.post,i=e.options,r=s.author;if(t+='<li class=\"ds-post\" data-post-id=\"'+s.post_id+'\"><div class=\"ds-post-self\" data-post-id=\"'+s.post_id+'\" data-thread-id=\"'+s.thread_id+'\" data-root-id=\"'+s.root_id+'\" data-source=\"'+s.source+'\"><div class=\"ds-avatar\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=\">\"+et.avatar(r),S.sourceName[s.source]&&(t+=et.serviceIcon(s.source)),t+='</div><div class=\"ds-comment-body\"><div class=\"ds-comment-header\">',r.url?(t+='<a class=\"ds-user-name ds-highlight\" data-qqt-account=\"'+(r.qqt_account||\"\")+'\" href=\"'+u(r.url)+'\" ',r.user_id&&(t+=\" onclick=\\\"this.href='\"+a()+\"/user-url/?user_id=\"+r.user_id+\"';\\\"\"),t+=' rel=\"nofollow\" target=\"_blank\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=\">\"+u(r.name)+\"</a>\"):(t+='<span class=\"ds-user-name\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=' data-qqt-account=\"'+(r.qqt_account||\"\")+'\">'+u(r.name)+\"</span>\"),t+=\"</div>\",1==i.max_depth&&i.show_context&&s.parents.length){t+='<ol id=\"ds-ctx\">';var n=lt.getJSON(s.parents);if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],1==d&&s.parents.length>2&&(t+='<li class=\"ds-ctx-entry\"><a href=\"javascript:void(0);\" class=\"ds-expand\">还有'+(s.parents.length-2)+\"条评论</a></li>\"),t+=et.ctxPost({post:o,index:d,hidden:d&&d<s.parents.length-1});t+=\"</ol>\"}if(t+=\"<p>\",s.parents.length>=i.max_depth&&(!i.show_context||i.max_depth>1)&&s.parent_id&&lt[s.parent_id]&&(t+='<a class=\"ds-comment-context\" data-post-id=\"'+s.post_id+'\" data-parent-id=\"'+s.parent_id+'\">'+z.reply_to+u(lt[s.parent_id].toJSON().author.name)+\": </a>\"),t+=s.message+'</p><div class=\"ds-comment-footer ds-comment-actions',s.vote>0&&(t+=\" ds-post-liked\"),t+='\">',t+=s.url?et.timeAnchor(s.created_at,s.url):et.timeText(s.created_at),\"duoshuo\"==s.source?(t+='<a class=\"ds-post-reply\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a>\"+et.likePost(s)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-report\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-report\"></span>'+z.report+\"</a>\",s.privileges[\"delete\"]&&(t+='<a class=\"ds-post-delete\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-delete\"></span>'+z[\"delete\"]+\"</a>\")):(\"qqt\"==s.source||\"weibo\"==s.source)&&(t+='<a class=\"ds-weibo-comments\" href=\"javascript:void(0);\">'+z.comments,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.comments+\"</span>)\"),t+='</a><a class=\"ds-weibo-reposts\" href=\"javascript:void(0);\">'+z.reposts,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.reposts+\"</span>)\"),t+=\"</a>\"),t+=\"</div></div></div>\",i.max_depth>1&&(s.childrenArray||s.children)&&\"weibo\"!=s.source&&\"qqt\"!=s.source){t+='<ul class=\"ds-children\">';var c=lt.getJSON(s.childrenArray||s.children);if(c)for(var s,d=-1,p=c.length-1;p>d;)s=c[d+=1],t+=et.post({post:s,options:i});t+=\"</ul>\"}return t+=\"</li>\"},et.postListHead=function(e){var t='<div class=\"ds-comments-info\"><div class=\"ds-sort\"><a class=\"ds-order-desc\">'+z.latest+'</a><a class=\"ds-order-asc\">'+z.earliest+'</a><a class=\"ds-order-hot\">'+z.hottest+'</a></div><ul class=\"ds-comments-tabs\"><li class=\"ds-tab\"><a class=\"ds-comments-tab-duoshuo ds-current\" href=\"javascript:void(0);\"></a></li>';return e.options.show_reposts&&e.thread.reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-repost\" href=\"javascript:void(0);\"></a></li>'),t+=\" \",e.options.show_weibo&&e.thread.weibo_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-weibo\" href=\"javascript:void(0);\"></a></li>'),t+=\" \",e.options.show_qqt&&e.thread.qqt_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-qqt\" href=\"javascript:void(0);\"></a></li>'),t+=\"</ul></div>\"},et.recentVisitors=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"</div>\";return t},et[\"related-read\"]=function(e){var t=\"\";if(e&&e.length){t+='<article class=\"ds-reads-expand\"><div class=\"ds-header\">头条推荐</div><section> ';var s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;){if(a=s[i+=1],t+=' <a href=\"'+a.url+'\" class=\"ds-reads-item\"> ',3==a.imgs.length){t+=\" <h2>\"+a.title+'</h2> <div class=\"ds-reads-pics\"> <ul> ';var n=a.imgs;if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],t+=' <li> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+o+');\"></div> </li> ';t+=' </ul> </div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> '}else t+=' <div class=\"ds-reads-desc ',a.imgs.length||(t+=\"ds-reads-only\"),t+='\"> <div class=\"ds-reads-title\">'+a.title+'</div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> </div> ',a.imgs.length&&(t+=' <div class=\"ds-reads-pic-right\"> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+a.imgs[0]+');\"> ',a.hasVideo&&(t+=' <div class=\"ds-reads-vid-info\"><span>'+a.videoDuration+\"</span></div> \"),t+=\" </div> </div> \"),t+=\" \";t+=\" </a> \"}t+=\"</section></article>\"}return t},et.replybox=function(e){var t='<div class=\"ds-replybox\"><a class=\"ds-avatar\"';if(t+=r()?' href=\"javascript:void(0);\" onclick=\"return false\"':' href=\"'+S.REMOTE+\"/settings/avatar/\"+x(T())+'\" target=\"_blank\" title=\"设置头像\"',t+=\">\"+et.avatarImg(nt.data)+'</a><form method=\"post\">'+tt(e.params)+'<div class=\"ds-textarea-wrapper ds-rounded-top\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.leave_a_message)+'\"></textarea><pre class=\"ds-hidden-text\"></pre>',t+=\"</div>\",t+='<div class=\"ds-post-toolbar\"><div class=\"ds-post-options ds-gradient-bg\"><span class=\"ds-sync\">',!r()&&nt.data.repostOptions){t+='<input id=\"ds-sync-checkbox',e.inline&&(t+=\"-inline\"),t+='\" type=\"checkbox\" name=\"repost\" ',e.checked&&(t+='checked=\"checked\" '),t+='value=\"'+e.repostArray.join(\",\")+'\"> <label for=\"ds-sync-checkbox',e.inline&&(t+=\"-inline\"),t+='\">'+z.share_to+\"</label>\";for(var s in nt.data.repostOptions)t+=et.serviceIcon(s,!nt.data.repostOptions[s])}return t+=\"</span>\",t+=\"</div>\",t+='<button class=\"ds-post-button\" type=\"submit\">'+u(z.post)+'</button><div class=\"ds-toolbar-buttons\">',e.options.use_smilies&&(t+='<a class=\"ds-toolbar-button ds-add-emote\" title=\"插入表情\"></a>'),e.options.use_images&&e.options.parse_html_enabled&&(t+='<a class=\"ds-toolbar-button ds-add-image\" title=\"插入图片\"></a>'),t+=\"</div></div>\",t+=\"</form></div>\"},et.serviceBindList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.bindUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a],nt.data.social_uid[a]&&(t+=' <span class=\"ds-icon ds-icon-ok\"></span>'),t+=\"</a></li>\";return t},et.serviceList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.loginUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a]+\"</a></li>\";return t},et.shareWidget=function(e){var t='<div class=\"ds-share-icons\"> <div class=\"ds-share-icons-inner\"> <ul class=\"ds-share-icons-16\"> ',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=' <li> <a class=\"ds-'+a+'\" href=\"javascript:void(0);\" data-service=\"'+a+'\">'+S.sourceName[a]+\"</a> </li> \";return t+=' </ul> </div> <div class=\"ds-share-icons-footer\">'+e.copyright+\"</div></div>\"},et.smiliesTooltip=function(e){var t='<div id=\"ds-smilies-tooltip\"><ul class=\"ds-smilies-tabs\">';for(var s in e)t+=\"<li><a>\"+s+\"</a></li>\";return t+='</ul><div class=\"ds-smilies-container\"></div></div>'},et.toolbar=function(){var e='<div class=\"ds-toolbar\"><div class=\"ds-account-control\"><span class=\"ds-icon ds-icon-settings\"></span> <span>帐号管理</span><ul><li><a class=\"ds-bind-more\" href=\"javascript:void(0);\" style=\"border-top: none\">绑定更多</a></li><li><a target=\"_blank\" href=\"'+S.REMOTE+\"/settings/\"+x(T())+'\">'+u(z.settings)+'</a></li><li><a rel=\"nofollow\" href=\"'+Z.logoutUrl()+'\" style=\"border-bottom: none\">登出</a></li></ul></div><div class=\"ds-visitor\">';return e+=nt.data.url?'<a class=\"ds-visitor-name\" href=\"'+u(nt.data.url)+'\" target=\"_blank\">'+u(nt.data.name)+\"</a>\":'<span class=\"ds-visitor-name\">'+u(nt.data.name)+\"</span>\",e+='<a class=\"ds-unread-comments-count\" href=\"javascript:void(0);\" title=\"新回复\"></a></div></div>'},et.topThreads=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a target=\"_blank\" href=\"'+u(a.url)+'\" title=\"'+u(a.title)+'\">'+u(a.title)+\"</a></li>\";return t},et.topUsers=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"<h4>\"+u(a.name)+\"</h4></div>\";return t},et.userInfo=function(e){var t='<a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\"/user-url/?user_id=\"+e.user_id+'\\';\" class=\"ds-avatar\" target=\"_blank\">'+et.avatarImg(e)+'</a><a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\"/user-url/?user_id=\"+e.user_id+'\\';\" class=\"ds-user-name ds-highlight\" target=\"_blank\">'+u(e.name)+\"</a>\";for(var s in e.social_uid)t+='<a href=\"'+S.REMOTE+\"/user-proxy/\"+s+\"/\"+e.social_uid[s]+'/\" target=\"_blank\" class=\"ds-service-icon ds-'+s+'\" title=\"'+S.sourceName[s]+'\"></a>';return t+='<p class=\"ds-user-card-meta\"><a href=\"'+S.REMOTE+\"/profile/\"+e.user_id+'/\" target=\"_blank\"><span class=\"ds-highlight\">'+e.comments+\"</span>条评论</a></p>\",e.description&&(t+='<p class=\"ds-user-description\">'+u(e.description)+\"</p>\"),t};var st=S.Views={},at=(S.Callbacks={},S.pagelets=[]),it=S.events=new J,rt=S.site=new V,nt=S.visitor=new $,ot=S.unread=new V,dt=S.threadPool=new Y(G),lt=S.postPool=new Y(F),ct=S.userPool=new Y($);it.on(\"queryDefined\",function(){var e=c.short_name;if(c.theme&&n(c.theme),m){var t=m[\"ds_site_\"+e],s=m[\"ds_lang_\"+e];t&&rt.reset(p.parse(t)),s&&o.extend(z,p.parse(s))}}),q(),S.require(\"embed.compat\",function(){function i(e){e.stopPropagation()}function n(e){(e.ctrlKey&&13==e.which||10==e.which)&&H(this.form).trigger(\"submit\")}function d(){var e=H(this);e.height(Math.max(54,e.next(\".ds-hidden-text\").text(this.value).height()+27))}function l(){if(P.authInWin){var e=this.href.match(/\\/(login|bind)\\/(\\w+)\\//i);if(e&&S.serviceNames[e[2]])return!b(e[2],this.href)\n}}function u(){var e,s,a,i,r,n=this,o=0,d=0;t.selection&&(s=t.selection.createRange(),s&&s.parentElement()==n&&(i=n.value.length,e=n.value.replace(/\\r\\n/g,\"\\n\"),a=n.createTextRange(),a.moveToBookmark(s.getBookmark()),r=n.createTextRange(),r.collapse(!1),a.compareEndPoints(\"StartToEnd\",r)>-1?o=d=i:(o=-a.moveStart(\"character\",-i),o+=e.slice(0,o).split(\"\\n\").length-1,a.compareEndPoints(\"EndToEnd\",r)>-1?d=i:(d=-a.moveEnd(\"character\",-i),d+=e.slice(0,d).split(\"\\n\").length-1)))),H(n).data(\"ds-range-start\",o).data(\"ds-range-end\",d)}function p(e){return P.touch&&e.addClass(\"ds-touch\"),o.cssProperty(\"transition\")||e.addClass(\"ds-no-transition\"),P.ie6&&e.addClass(\"ds-ie6\"),P.opacity||e.addClass(\"ds-no-opacity\"),e}function f(e){if(!P.placeholder){var t=e.attr(\"placeholder\");e.val(t).focus(function(){this.value===t&&(this.value=\"\")}).blur(function(){\"\"===this.value&&(this.value=t)})}return e}function g(e){if(\"http://duoshuo.com\"===e.origin)switch(e.data.type){case\"login\":h.href=e.data.redirectUrl}}function b(t,s){var a={weibo:[760,600],renren:[420,322],qq:[504,445],weixin:[450,550],google:[600,440]}[t]||[550,400];return e.open(s+(-1==s.indexOf(\"?\")?\"?\":\"&\")+o.param({origin:h.origin||\"http://\"+h.host}),\"_blank\",\"width=\"+a[0]+\",height=\"+a[1]+\",toolbar=no,menubar=no,location=yes\")}function y(e){var t=Z[r()?\"loginUrl\":\"bindUrl\"](e);P.authInWin&&b(e,t)||(h.href=t)}function w(){var e=E(et[\"dialog-ask-for-auth\"]({})).el.find(\".ds-dialog\").css(\"width\",\"300px\");e.find(\"a.ds-service-link\").click(l)}function x(e,t,s,a){function i(){function e(e){if(s&&a){var t=s.options,i=M(s.postList.el,e.response[a],t);\"asc\"==t.order==(\"top\"==t.formPosition)&&S.scrollTo(i);var r=s.el.find(\".ds-comments-tab-\"+a+\" span.ds-highlight\");r.html(parseInt(r.html())+1)}}return a||l.find(\"[type=checkbox]:checked\")[0]?(R.post(\"posts/repost\",S.toJSON(l),e),o.close(),!1):(alert(\"还没有选发布到哪儿呢\"),!1)}function r(){var e=this.value;return this.checked&&!nt.data.social_uid[\"qqt\"==e?\"qq\":e]?void y(e):void 0}var o=E(et[\"dialog-reposts\"]({post:e.toJSON(),repostMessage:t,service:a})),l=o.el.find(\"form\");return l.submit(i),l.find(\".ds-actions [type=checkbox]\").change(r),f(l.find(\"textarea\")).keyup(n).keyup(d).focus(),!1}function T(e){var t={\"unread-comments\":{title:\"新留言及回复\",apiUrl:\"users/unreadComments\",tmpl:function(e){return e.thread?'<li data-thread-id=\"'+e.thread.thread_id+'\">'+H.map(e.authors,et.userAnchor).join(\"、\")+' 在 <a class=\"ds-read\" href=\"'+e.thread.url+'#comments\" target=\"_blank\">'+_(e.thread.title||\"无标题\")+'</a> 中回复了你 <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\">知道了</a></li>':\"\"},read:function(e){var t=e.attr(\"data-thread-id\");R.post(\"threads/read\",{thread_id:t}),ot.data.comments--}},\"unread-notifications\":{title:\"系统消息\",apiUrl:\"users/unreadNotifications\",tmpl:function(e){return'<li data-notification-id=\"'+e.notification_id+'\" data-notification-type=\"'+e.type+'\">'+e.content+' <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\">知道了</a></li>'},read:function(e){var t=e.attr(\"data-notification-id\");R.post(\"notifications/read\",{notification_id:t}),ot.data.notifications--}}}[e],s=E(\"<h2>\"+t.title+'</h2><ul class=\"ds-unread-list\"></ul>');s.on(\"close\",S.resetNotify);var a=s.el.find(\".ds-unread-list\").delegate(\".ds-delete\",\"click\",function(){return H(this).parent().remove(),0===a.children().length&&s.close(),!1}).delegate(\".ds-read\",\"click\",function(){t.read(H(this).parent())});H(\"#ds-notify\").hide(),R.get(t.apiUrl,{},function(e){s.el.find(\".ds-unread-list\").html(H.map(e.response,t.tmpl).join(\"\\n\"))})}function N(){bubbleOutTimer&&(clearTimeout(bubbleOutTimer),bubbleOutTimer=0)}function I(){bubbleOutTimer=setTimeout(function(){bubbleOutTimer=0,X.detach()},400)}function M(e,t,s){return e.find(\".ds-post[data-post-id=\"+t.data.post_id+\"]\")[0]?void 0:(e.find(\".ds-post-placeholder\").remove(),H(et.post({post:t.toJSON(),options:s})).hide()[\"asc\"==s.order?\"appendTo\":\"prependTo\"](e).slideDown(function(){}))}function U(e,t){function s(){if(r())return w(),!1;var e=H(this).parent(),t=e.hasClass(\"ds-post-liked\"),s=H(this).html().match(/\\((\\d+)\\)/),a=(s?parseInt(s[1]):0)+(t?-1:1);return R.post(\"posts/vote\",{post_id:e.closest(\".ds-ctx-entry, .ds-post-self\").attr(\"data-post-id\"),vote:t?0:1}),H(this).html(H(this).html().replace(/\\(\\d+\\)/,\"\")+(a?\"(\"+a+\")\":\"\")),e[t?\"removeClass\":\"addClass\"](\"ds-post-liked\"),!1}function a(){var e=H(this).closest(\".ds-post-self\"),t=lt[e.attr(\"data-post-id\")];return x(t,\"\"),!1}function i(){if(!confirm(\"确定要删除这条评论吗？\"))return!1;var t=H(this).closest(\".ds-post-self\");return R.post(\"posts/remove\",{post_id:t.attr(\"data-post-id\")}),t.parent().fadeOut(200,function(){e.data.comments--,e.updateCounter(\"duoshuo\"),H(this).remove()}),!1}function n(){if(!confirm(\"确定要举报这条评论吗？\"))return!1;var e=H(this).closest(\".ds-post-self\");return R.post(\"posts/report\",{post_id:e.attr(\"data-post-id\")}),alert(\"感谢您的反馈！\"),!1}function o(){var s=H(this),a=s.closest(\".ds-comment-actions\");if(a.hasClass(\"ds-reply-active\"))h.el.fadeOut(200,function(){H(this).detach()}),a.removeClass(\"ds-reply-active\");else{var i=s.closest(\".ds-ctx-entry, .ds-post-self\");h?h.actionsBar.removeClass(\"ds-reply-active\"):(h=new st.Replybox(e),h.render(!0).el.addClass(\"ds-inline-replybox\").detach()),h.el.find(\"[name=parent_id]\").val(i.attr(\"data-post-id\")),h.el.show().appendTo(s.closest(\".ds-ctx-body, .ds-comment-body\")).find(\"textarea\").focus(),h.actionsBar=a.addClass(\"ds-reply-active\"),t.max_depth<=1?h.postList=e.postList.el:(h.postList=i.siblings(\".ds-children\"),h.postList[0]||(h.postList=H('<ul class=\"ds-children\"></ul>').insertAfter(i)))}return!1}function d(){function e(e){W(e),i.append(H.map(e.response,function(e){return et.post({post:e,options:t})}).join(\"\"))}{var s=H(this).closest(\".ds-post-self\"),a=s.attr(\"data-post-id\");s.data(\"source\")}if(0!=s.attr(\"data-root-id\"))return!1;var i=s.siblings(\".ds-children\");return i[0]?(i.remove(),!1):(i=H('<ul class=\"ds-children\"></ul>').insertAfter(s),R.get(\"posts/listComments\",B({post_id:a}),e),!1)}function l(){var t=H(this).closest(\".ds-post-self\"),s=lt[t.attr(\"data-post-id\")],a=s.data.source;if(!nt.data.social_uid[\"qqt\"==a?\"qq\":a])return void y(a);var i=s.data.root_id,r=\"0\"!=i?lt[i]:s,n=\"\";if(\"0\"!=i){var o=prepatePost(s.data).theAuthor;n=(\"weibo\"==a?\"//@\"+o.name:\"|| @\"+o.qqt_account)+\":\"+s.data.message}return x(r,n,e,a),!1}function c(){var e=H(this).parent();return e.siblings().show(),e.remove(),!1}function u(){function t(){function t(e){var t=e.response;ct[c]?ct[c].set(t):ct[c]=new $(t),X.owner==s&&K.html(et.userInfo(t))}tt=0,X.owner=s,N();var i=a.offset(),r=e.el.offset(),n=a.innerWidth()/2,o=e.el.innerHeight()-(i.top-r.top)+6,d=i.left-r.left-35+(n>35?35:n);try{if(a.hasClass(\"ds-comment-context\"))K.attr(\"id\",\"ds-ctx-bubble\").attr(\"data-post-id\",a.attr(\"data-post-id\")).html('<ul id=\"ds-ctx\">'+et.ctxPost({post:lt[a.attr(\"data-parent-id\")].toJSON()})+'</ul><div class=\"ds-bubble-footer\"><a class=\"ds-ctx-open\" href=\"javascript:void(0);\">查看对话</a></div>');else if(a.hasClass(\"ds-avatar\")||a.hasClass(\"ds-user-name\")){var l={},c=l.user_id=a.attr(\"data-user-id\");if(!c)throw\"no info\";K.attr(\"id\",\"ds-user-card\").attr(\"data-user-id\",c).empty(),ct[c]?K.html(et.userInfo(ct[c].data)):R.get(\"users/profile\",B(l),t)}X.css({bottom:o,left:d}).appendTo(e.innerEl)}catch(u){X.detach()}}var s=this;if(bubbleOutTimer&&X.owner==s)return clearTimeout(bubbleOutTimer),void(bubbleOutTimer=0);var a=H(s);tt=setTimeout(t,200)}function p(){tt?(clearTimeout(tt),tt=0):bubbleOutTimer||I()}var h;this.delegate(\"a.ds-post-likes\",\"click\",s).delegate(\"a.ds-post-repost\",\"click\",a).delegate(\"a.ds-post-delete\",\"click\",i).delegate(\"a.ds-post-report\",\"click\",n).delegate(\"a.ds-post-reply\",\"click\",o).delegate(\"a.ds-weibo-comments\",\"click\",d).delegate(\"a.ds-weibo-reposts\",\"click\",l).delegate(\"a.ds-expand\",\"click\",c),P.touch||this.delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseenter\",u).delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseleave\",p)}function B(e){var s={require:\"site,visitor,nonce,lang\"+(it++?\"\":\",unread,log,extraCss\"),site_ims:D.get(\"ds_site_\"+c.short_name+\":timestamp\"),lang_ims:D.get(\"ds_lang_\"+c.short_name+\":timestamp\"),referer:t.referrer};c.stylePatch&&(s.style_patch=c.stylePatch);for(var a in s)s[a]&&(!P.ie6||encodeURIComponent(s[a]).length<200)&&(e[a]=s[a]);return e}var H=S.jQuery,V=H(e),Y=H(t);e.postMessage&&(e.addEventListener?e.addEventListener(\"message\",g,!1):e.attachEvent&&e.attachEvent(\"onmessage\",g)),S.scrollTo=function(e){var t=e.offset().top;(t<V.scrollTop()||t>V.scrollTop()+V.height())&&H(\"html, body\").animate({scrollTop:t-40},200,\"swing\")},S.toJSON=function(e){var t=/\\r?\\n/g,s=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,a=/^(?:select|textarea)/i,i=e.map(function(){return this.elements?H.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||a.test(this.nodeName)||s.test(this.type))}).map(function(e,s){var a=H(this).val();return null==a?null:H.isArray(a)?H.map(a,function(e){return{name:s.name,value:e.replace(t,\"\\r\\n\")}}):{name:s.name,value:a.replace(t,\"\\r\\n\")}}).toArray(),r={};return H.each(i,function(){r[this.name]=this.value}),r},S.resetNotify=function(){var e=H(\"#ds-notify\"),s=ot.data;e[0]||(e=H('<div id=\"ds-notify\"></div>').css({hidden:{display:\"none\"},\"top-right\":{top:\"24px\",right:\"24px\"},\"bottom-right\":{bottom:\"24px\",right:\"24px\"}}[rt.data.notify_position]).delegate(\".ds-notify-unread a\",\"click\",function(){return T(H(this).data(\"type\")),!1}).appendTo(t.body)),e.html(et.notify(s))[!s.comments&&!s.notifications||\"hidden\"===rt.data.notify_position||H(\".ds-dialog\")[0]?\"hide\":\"show\"]()},ot.on(\"reset\",S.resetNotify),st.Replybox=function(e){this.embedThread=e},st.Replybox.prototype={render:function(e){function s(e){e.data(\"submitting\",!0),e.find(\".ds-post-button\").addClass(\"ds-waiting\").html(z.posting)[0].disabled=!0}function a(e){e.data(\"submitting\",!1),e.find(\".ds-post-button\").removeClass(\"ds-waiting\").html(z.post)[0].disabled=!1}var i=this,o=i.embedThread,c=o.options,p=function(){S.require(\"smilies\",function(){})},h={thread:o,options:c,inline:e,params:{thread_id:o.threadId,parent_id:\"\",nonce:S.nonce},repostArray:[],checked:0};for(var v in nt.data.repostOptions)nt.data.repostOptions[v]&&(h.repostArray.push(v),h.checked=1);var g=i.el=H(et.replybox(h)).click(p),b=g.find(\"form\"),y=b.find(\"input[type=checkbox]\")[0],_=b.find(\"a.ds-service-icon, a.ds-service-icon-grey\"),k=f(b.find(\"textarea\")).focus(p).keyup(n).keyup(d).bind(\"focus mousedown mouseup keyup\",u),w=g.find(\".ds-add-emote\").click(function(e){var s=S.smiliesTooltip;return w.toggleClass(\"ds-expanded\").hasClass(\"ds-expanded\")?(s||(s=S.smiliesTooltip=new st.SmiliesTooltip,s.render(),S.require(\"smilies\",function(){s.reset(\"微博-默认\")})),s.replybox=i,s.el.appendTo(t.body).css({top:i.el.offset().top+i.el.outerHeight()+4+\"px\",left:i.el.find(\".ds-textarea-wrapper\").offset().left+\"px\"}),H(t.body).click(x)):x(e),!1}),x=(g.find(\".ds-add-image\").click(function(e){var s=k[0],a=s.value,i=\"请输入图片地址\",r='<img src=\"'+i+'\" />';if(t.selection){s.value=a.substring(0,k.data(\"ds-range-start\"))+r+a.substring(k.data(\"ds-range-end\"),a.length),s.value=s.value.replace(\"说点什么吧 ...\",\"\"),s.focus();var n=t.selection.createRange();n.collapse(),n.findText(i),n.select()}else{s.value=a.substring(0,s.selectionStart)+r+a.substring(s.selectionEnd);var o=s.value.search(i);s.setSelectionRange(o,o+i.length),s.focus()}e.preventDefault()}),i.hideSmilies=function(){w.removeClass(\"ds-expanded\"),S.smiliesTooltip.el.detach(),H(t.body).unbind(\"click\",x)}),T=function(e,t){var s=E(et[\"dialog-anonymous\"]({services:[\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"],options:c})),a=s.el.find(\".ds-dialog\").css(\"width\",\"320px\");if(a.find(\".ds-icons-32 a\").click(l),!c.deny_anonymous){var i=s.el.find(\"form\");i.submit(function(){var e=i.find(\"input[name=author_email]\").val();return!e&&!c.require_guest_email||e.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)?(t(S.toJSON(i)),s.close(),!1):(alert(\"请输入一个有效的email地址.\"),!1)}),i.find(\"input[name=author_name]\")[0].focus()}};c.deny_anonymous&&k.focus(function(){if(r()){T(b,q);var e=function(t){t.stopPropagation(),k.unbind(\"click\",e)};k.click(e)}return!1});var q=function(e){s(b),R.post(\"posts/create\",H.extend(S.toJSON(b),e),function(e){var t=lt[e.response.post_id]=new F(e.response),s=M(i.postList,t,c);if(\"asc\"==c.order==(\"top\"==c.formPosition)&&S.scrollTo(s),o.data.comments++,o.updateCounter(\"duoshuo\"),k.val(\"\").trigger(\"keyup\"),a(b),g.hasClass(\"ds-inline-replybox\")&&(g.detach(),i.actionsBar.removeClass(\"ds-reply-active\")),m)try{m.removeItem(\"ds_draft_\"+o.threadId)}catch(r){}},function(e){a(b),alert(e.errorMessage)})};b.submit(function(){if(b.data(\"submitting\"))return!1;var e=H.trim(b[0].message.value);return\"\"==e||!P.placeholder&&e==k.attr(\"placeholder\")?(alert(\"您还没写内容呢\"),!1):(r()?T(b,q):q(),!1)});var C=function(e){return H(e).hasClass(\"ds-service-icon-grey\")?null:H(e).attr(\"data-service\")};if(_.click(function(){return H(this).toggleClass(\"ds-service-icon-grey\").toggleClass(\"ds-service-icon\"),y.value=H.map(_,C).join(\",\"),y.checked=\"\"!=y.value,!1}),H(y).change(function(){var e=this.checked;_[e?\"removeClass\":\"addClass\"](\"ds-service-icon-grey\")[e?\"addClass\":\"removeClass\"](\"ds-service-icon\"),this.value=H.map(_,C).join(\",\")}),!e&&m){var j=\"ds_draft_\"+o.threadId;k.bind(\"focus blur keyup\",function(e){var t=H(e.currentTarget).val();try{m[j]=t}catch(e){}}),m[j]&&k.val(m[j])}return this}},st.Dialog=J.extend({init:function(e,t){(this.el=H(\"#ds-wrapper\"))[0]||(this.el=p(H('<div id=\"ds-wrapper\"></div>'))),this.options=H.extend({width:600},t),e!==s&&H(e).attr(\"id\",\"ds-reset\").appendTo(this.el)},open:function(){function e(e){return 27==e.which?(a.close(),!1):void 0}function s(){return a.close(),!1}var a=this;return a.el.hide().appendTo(t.body).fadeIn(200),P.ie6&&a.el.css(\"top\",V.scrollTop()+100),a.el.show().find(\".ds-dialog\").delegate(\"a.ds-dialog-close\",\"click\",function(){return a.close(),!1}).click(i),Y.keydown(e),H(t.body).click(s),a.close=function(){Y.unbind(\"keydown\",e),H(t.body).unbind(\"click\",s),a.el.fadeOut(200,function(){H(this).remove()}),a.trigger(\"close\")},a}}),et.likePanel=function(e){return e.likes?'<span class=\"ds-highlight\">'+e.likes+\"</span> 人喜欢\":\"\"},st.Meta=function(e){this.embedThread=e},st.Meta.prototype={render:function(){function a(a){function r(e){o.set(e),n.resetLikePanel()}function c(){n.tooltip.detach(),H(t.body).unbind(\"click\",c)}function u(t){switch(this.className){case\"ds-like-tooltip-close\":c(t);break;default:if(!e.open(this.href,\"_blank\",\"height=500,width=600,top=0,left=0,toolbar=no,menubar=no,resizable=yes,location=yes,status=no\"))return}return!1}var p=l.hasClass(\"ds-thread-liked\");if(R.post(\"threads/vote\",{thread_id:n.embedThread.threadId,vote:p?0:1},r),l.toggleClass(\"ds-thread-liked\"),l.find(\".ds-thread-like-text\").text(p?\"喜欢\":\"已喜欢\"),p)return n.tooltip&&c(a),!1;if(n.tooltip===s){var h=et.likeTooltip({services:{qzone:\"QQ空间\",weibo:\"新浪微博\",qqt:\"腾讯微博\",renren:\"人人网\",kaixin:\"开心网\",douban:\"豆瓣网\",baidu:\"百度搜藏\"},thread_id:o.data.thread_id});n.tooltip=H(h).click(i).delegate(\"a\",\"click\",u)}var f={};return f.left=0,f.top=d.position().top+d.outerHeight()-4+\"px\",n.tooltip.appendTo(n.embedThread.innerEl).css(f),H(t.body).click(c),!1}var n=this,o=n.embedThread.model,d=n.el=H(et.meta(o.toJSON())),l=d.find(\".ds-like-thread-button\");return l.click(a),n.resetLikePanel(),r()&&d.hide(),n},resetLikePanel:function(){this.el.find(\".ds-like-panel\").html(et.likePanel(this.embedThread.model.toJSON()))}},st.PostListHead=function(e){this.embedThread=e},st.PostListHead.prototype={render:function(){function e(e){r.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.page=1;var t=e.currentTarget;switch(t.className){case\"ds-comments-tab-duoshuo\":a.params.source=\"duoshuo\",s.replybox.el.show();break;case\"ds-comments-tab-repost\":a.params.source=\"repost\",s.replybox.el.hide();break;case\"ds-comments-tab-weibo\":a.params.source=\"weibo\",s.replybox.el.hide();break;case\"ds-comments-tab-qqt\":a.params.source=\"qqt\",s.replybox.el.hide()}return H(t).addClass(\"ds-current\"),a.refetch(),!1}function t(){return n.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.order=s.options.order=this.className.replace(\"ds-order-\",\"\"),a.params.page=1,a.refetch(),H(this).addClass(\"ds-current\"),!1}var s=this.embedThread,a=s.postList,i=this.el=H(et.postListHead({thread:s.model.toJSON(),options:s.options})),r=i.find(\"ul.ds-comments-tabs\");r.delegate(\".ds-tab a\",\"click\",e);var n=i.find(\".ds-sort\");return n.delegate(\"a\",\"click\",t),n.find(\".ds-order-\"+a.params.order).addClass(\"ds-current\"),this}},st.Paginator=function(e){function t(){return i.params.page=parseInt(this.innerHTML),i.refetch(),a.find(\".ds-current\").removeClass(\"ds-current\"),H(this).addClass(\"ds-current\"),!1}e=e||{};var s=this,a=s.el=e.el||H('<div class=\"ds-paginator\"></div>'),i=s.collection=e.collection;a.delegate(\"a\",\"click\",t)},st.Paginator.prototype={reset:function(e){function t(e){i.push('<a data-page=\"'+e+'\" href=\"javascript:void(0);\">'+e+\"</a>\")}var s,a=this.collection.params.page||1,i=[];if(a>1)for(t(1),s=a>4?a-2:2,s>2&&i.push('<span class=\"page-break\">...</span>');a>s;s++)t(s);if(i.push('<a data-page=\"'+a+'\" href=\"javascript:void(0);\" class=\"ds-current\">'+a+\"</a>\"),a<e.pages){for(s=a+1;a+4>=s&&s<e.pages;s++)t(s);s<e.pages&&i.push('<span class=\"page-break\">...</span>'),t(e.pages)}this.el.html('<div class=\"ds-border\"></div>'+i.join(\" \"))[e.pages>1?\"show\":\"hide\"]()}},S.addSmilies=function(e,t){var s=S.smiliesTooltip;s&&s.el.find(\"ul.ds-smilies-tabs\").append(\"<li><a>\"+e+\"</a></li>\"),S.smilies[e]=t},st.SmiliesTooltip=function(){},st.SmiliesTooltip.prototype={render:function(){function e(){var e=s.replybox,a=e.el.find(\"textarea\"),i=a[0],r=i.value;if(t.selection){i.value=r.substring(0,a.data(\"ds-range-start\"))+this.title+r.substring(a.data(\"ds-range-end\"),r.length),i.value=i.value.replace(z.leave_a_message,\"\"),i.focus();var n=t.selection.createRange();n.moveStart(\"character\",a.data(\"ds-range-start\")+this.title.length),n.collapse(),n.select()}else{var o=i.selectionStart+this.title.length;i.value=r.substring(0,i.selectionStart)+this.title+r.substring(i.selectionEnd),i.setSelectionRange(o,o)}e.hideSmilies(),i.focus()}var s=this,a=s.el=H(et.smiliesTooltip(L));return a.click(i).find(\"ul.ds-smilies-tabs\").delegate(\"a\",\"click\",function(){s.reset(this.innerHTML)}),a.find(\".ds-smilies-container\").delegate(\"img\",\"click\",e),this},reset:function(e){function t(t,s){var i=0===e.indexOf(\"微博\")?\"http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/\"+s.replace(\"_org\",\"_thumb\"):S.STATIC_URL+\"/images/smilies/\"+s;\"WordPress\"===e&&(t=\" \"+t+\" \"),a+='<li><img src=\"'+i+'\" title=\"'+_(t)+'\" /></li>'}var s=this.el.find(\"ul.ds-smilies-tabs\");s.find(\"a.ds-current\").removeClass(\"ds-current\"),s.find(\"a\").filter(function(){return this.innerHTML==e}).addClass(\"ds-current\");var a=\"<ul>\";return H.each(L[e],t),a+=\"</ul>\",this.el.find(\".ds-smilies-container\").html(a),this}},et.postPlaceholder=function(){return['<li class=\"ds-post ds-post-placeholder\">',z.no_comments_yet,\"</li>\"].join(\"\")};var X=H('<div id=\"ds-bubble\"><div class=\"ds-bubble-content\"></div><div class=\"ds-arrow ds-arrow-down ds-arrow-border\"></div><div class=\"ds-arrow ds-arrow-down\"></div></div>'),K=X.find(\".ds-bubble-content\").delegate(\"a.ds-ctx-open\",\"click\",function(){function e(e){function t(e,t){return et.ctxPost({post:e,index:t})}C.log(H.map(e.response,t).join(\"\\n\"));s.el.find(\"ol\");s.el.find(\"ol\").html(H.map(e.response,t).join(\"\\n\"))}var t={};t.post_id=K.attr(\"data-post-id\"),R.get(\"posts/conversation\",t,e);var s=E('<h2>查看对话</h2><ol id=\"ds-ctx\"></ol>');return s.el.find(\".ds-dialog\").css(\"width\",\"600px\"),s.el.find(\".ds-dialog-body\").css({\"max-height\":\"350px\",_height:\"350px\",\"overflow-y\":\"auto\",\"padding-top\":\"10px\"}),!1}),tt=bubbleOutTimer=0;X.mouseenter(N).mouseleave(I),st.PostList=function(e){e&&(e.params&&(this.params=e.params),e.embedThread&&(this.embedThread=e.embedThread)),this.el=H('<ul class=\"ds-comments\"></ul>')},st.PostList.prototype={url:\"threads/listPosts\",render:function(){return U.call(this.el,this.embedThread,this.embedThread.options),this},reset:function(e){var t=this.embedThread.options;this.el.html(e[0]?H.map(lt.getJSON(e),function(e){return et.post({post:e,options:t})}).join(\"\"):et.postPlaceholder())},refetch:function(){function e(e){lt.set(e.parentPosts||e.relatedPosts),ct.set(e.users),s.reset(e.response),s.embedThread.paginator.reset(e.cursor),s.el.fadeTo(200,1),S.scrollTo(s.el),a.remove()}var s=this,a=H(et.indicator()).appendTo(t.body).fadeIn(200);s.el.fadeTo(200,.5),R.get(s.url,s.params,e)}},st.RelatedRead=function(){this._init()},st.RelatedRead.prototype={_init:function(){this.el=H('<div id=\"ds-related-reads\"></div>')},load:function(s){e.__duoshuo_id__=s,e.readsByToutiao=[],e.readsByToutiao.push({id:\"ds-related-reads\",num:3});var a=\"//s0.pstatp.com/site/reads-sdk/5bf3702b38076207bee1.js\",i=t.createElement(\"script\");i.src=a,i.charset=\"utf-8\",i.crossOrigin=\"anonymous\",t.head.appendChild(i)},mount:function(e){this.el.insertBefore(e)}},st.EmbedThread=Q.extend({uri:\"threads/listPosts\",params:\"thread-id local-thread-id source-thread-id thread-key category channel-key author-key author-id url limit order max-depth form-position container-url\"+(v.match(/MSIE 6\\.0/)?\"\":\" title image thumbnail\"),render:function(){var e=this.el;if(\"请将此处替换成文章在你的站点中的ID\"===e.data(\"thread-key\"))return alert(\"请设置正确的 data-thread-key 属性\"),!1;e.attr(\"id\",\"ds-thread\").append(et.waitingImg());var t=e.width(),s=e.data(\"url\")||!e.attr(\"data-thread-id\")&&H(\"link[rel=canonical]\").attr(\"href\");s?e.data(\"url\",k(s)):e.data(\"container-url\",h.href),t&&400>=t&&e.addClass(\"ds-narrow\").data(\"max-depth\",1)},updateCounter:function(e){function t(e){return e.substr(e.indexOf(\"}\")+1)}var s={duoshuo:[\"comments\",t(z.comments_multiple)||\"评论\"],repost:[\"reposts\",t(z.reposts_multiple)||\"转载\"],weibo:[\"weibo_reposts\",t(z.weibo_reposts_multiple)||\"新浪微博\"],qqt:[\"qqt_reposts\",t(z.qqt_reposts_multiple)||\"腾讯微博\"]};for(var a in s)if(!e||e==a){var i=this.data[s[a][0]];this.el.find(\".ds-comments-tab-\"+a).html(this.el.hasClass(\"ds-narrow\")?'<span class=\"ds-service-icon ds-'+a+'\"></span>'+i:(i?'<span class=\"ds-highlight\">'+i+\"</span>\":\"0\")+s[a][1])}},onError:function(e){this.el.html(\"评论框出错啦(\"+e.code+\"): \"+e.errorMessage)},onload:function(t){var a=this,i=a.threadId=t.thread.thread_id,n=t.cursor,o=a.options=t.options,d=a.innerEl=p(H('<div id=\"ds-reset\"></div>').appendTo(a.el));a.model=new G(a.data=t.thread),lt.set(t.parentPosts||t.relatedPosts),ct.set(t.users),a.el.find(\"#ds-waiting\").remove(),t.options&&t.options.show_recommend&&(a.relatedRead=new st.RelatedRead,a.relatedRead.load(t.thread.site_id),a.relatedRead.mount(d)),o.like_thread_enabled&&(a.meta=new st.Meta(a),d.append(a.meta.render().el)),o.hot_posts&&t.hotPosts&&t.hotPosts.length&&(a.hotPosts=new st.HotPosts(H('<div class=\"ds-rounded\"></div>'),{max_depth:1,show_context:o.show_context}),a.hotPosts.thread=a,d.append(a.hotPosts.el),a.hotPosts.onload({list:lt.getJSON(t.hotPosts)})),a.postListHead=new st.PostListHead(a),a.postList=new st.PostList({embedThread:a,params:{source:\"duoshuo\",thread_id:i,max_depth:o.max_depth,order:o.order,limit:o.limit}}),a.postList.render().reset(t.response),a.paginator=new st.Paginator({collection:a.postList}),a.paginator.reset(n);var c=a.replybox=new st.Replybox(a);c.postList=a.postList.el,r()?a.loginButtons=H(et.loginButtons()).delegate(\"a.ds-more-services\",\"click\",function(){return a.loginButtons.find(\".ds-additional-services\").toggle(),!1}).delegate(\"a.ds-service-link\",\"click\",l):a.toolbar=H(et.toolbar()).delegate(\".ds-account-control\",\"mouseenter\",function(){H(this).addClass(\"ds-active\")}).delegate(\".ds-account-control\",\"mouseleave\",function(){H(this).removeClass(\"ds-active\")}).delegate(\"a.ds-bind-more\",\"click\",function(){var e=E(et[\"dialog-bind-more\"]()).el.find(\".ds-dialog\").addClass(\"ds-dialog-bind-more\").css(\"width\",\"300px\");return e.find(\"a.ds-service-link\").click(l),!1}).delegate(\"a.ds-unread-comments-count\",\"click\",function(){return T(\"unread-comments\"),!1});var u=['<a name=\"respond\"></a>',a.toolbar||a.loginButtons,c.render().el];\"top\"==o.formPosition&&H.fn.append.apply(d,u),d.append(a.postListHead.render().el,a.postList.el,a.paginator.el),\"bottom\"==o.formPosition&&H.fn.append.apply(d,u),d.append(et.poweredBy(o.poweredby_text)),a.updateCounter(),t.alerts&&H.each(t.alerts,function(e,t){H('<div class=\"ds-alert\">'+t+\"</div>\").insertBefore(a.toolbar||loginButtons)}),o.message&&c.el.find(\"textarea\").val(o.message).focus(),ot.on(\"reset\",function(){var e=ot.data.comments||0;d.find(\"a.ds-unread-comments-count\").html(e).attr(\"title\",e?\"你有\"+e+\"条新回复\":\"你没有新回复\").css(\"display\",e?\"inline\":\"none\")}),o.mzadx_id&&(S.require(\"mzadxN\",function(){}),H('<div id=\"MZADX_'+o.mzadx_id+'\" style=\"margin:0 auto;\"></div>').appendTo(d),__mz_rpq=e.__mz_rpq||[],__mz_rpq.push({l:[o.mzadx_id],r:\"1\",_srv:\"MZADX\",_callback:function(){}})),S.thread=a,ot.data!==s&&ot.trigger(\"reset\"),r()||A.send({visit_thread_id:a.threadId})},onMessage:function(e){M(this.postList.el,new F(e),this.options)}}),st.HotPosts=Q.extend({tmpl:\"hotPosts\",params:\"show-quote\",render:function(){return this.el.attr(\"id\",\"ds-hot-posts\"),this},onload:function(e){e.options=H.extend(this.options,e.options),Q.prototype.onload.call(this,e),U.call(this.el.find(\"ul\"),this.thread,this.options)}}),st.RecentComments=Q.extend({tmpl:\"commentList\",uri:\"sites/listRecentPosts\",params:\"show-avatars show-time show-title avatar-size show-admin excerpt-length num-items channel-key\",render:function(){this.el.attr(\"id\",\"ds-recent-comments\")},prepare:function(e){return{list:H.map(e.response,function(e){return new F(e).toJSON()})}}}),st.RecentVisitors=Q.extend({tmpl:\"recentVisitors\",uri:\"sites/listVisitors\",params:\"show-time avatar-size num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-recent-visitors\").append(this.waitingEl=H(et.waitingImg()))}}),st.TopThreads=Q.extend({tmpl:\"topThreads\",uri:\"sites/listTopThreads\",params:\"range num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-top-threads\").append(this.waitingEl=H(et.waitingImg()))}}),st.LoginWidget=Q.extend({tmpl:\"loginWidget\",render:function(){var e=this.el;e.attr(\"id\",\"ds-login\").html(et.loginWidget([\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"])),e.find(\"a\").click(l),e.find(\"a.ds-logout\").attr(\"href\",Z.logoutUrl())}}),st.ThreadCount=Q.extend({onload:function(e){var t=this.el,s=t.data(\"count-type\")||\"comments\",a=e.data[s];t[t.data(\"replace\")?\"replaceWith\":\"html\"](z[s+\"_\"+(a?a>1?\"multiple\":\"one\":\"zero\")].replace(\"{num}\",a))}}),st.ShareWidget=Q.extend({tmpl:\"shareWidget\",render:function(){var e={copyright:\"多说分享插件\",services:[\"weibo\",\"qzone\",\"sohu\",\"renren\",\"netease\",\"qqt\",\"kaixin\",\"douban\",\"qq\",\"meilishuo\",\"mogujie\",\"baidu\",\"taobao\",\"google\",\"wechat\",\"diandian\",\"huaban\",\"duitang\",\"youdao\",\"pengyou\",\"facebook\",\"twitter\",\"linkedin\",\"msn\"]};this.el.attr(\"id\",\"ds-share\"),this.el.children().attr(\"id\",\"ds-reset\"),this.el.find(\".ds-share-aside-inner\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").hide(),this.el.hasClass(\"flat\")&&this.el.find(\"a\").each(function(){H(this).addClass(\"flat\")}),p(this.el),this.delegateEvents()},delegateEvents:function(){var s=this,i=s.el;if(i.children().hasClass(\"ds-share-inline\")){var r=\".ds-share-icons-more\",n=i.find(r),d=\"[data-toggle=ds-share-icons-more]\";i.delegate(d,\"mouseover\",function(){n.show()}),i.delegate(d,\"mouseout\",function(){n.hide()}),i.delegate(r,\"mouseover\",function(){n.show()}),i.delegate(r,\"mouseout\",function(){n.hide()})}else{var l=i.children().hasClass(\"ds-share-aside-left\")?\"slide-to-right\":\"slide-to-left\",c=i.children();if(!o.cssProperty(\"transition\")){var u=i.children().hasClass(\"ds-share-aside-left\")?\"left\":\"right\";i.delegate(\".ds-share-aside-toggle\",\"mouseover\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)-195:e[u]=0,c.animate(e,200)}),i.delegate(\".ds-share-aside-inner\",\"mouseleave\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)+230:e[u]=-229,c.animate(e,200)})}i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseover\",function(){c.addClass(l)}),i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseleave\",function(){c.removeClass(l)})}i.delegate(\"a\",\"click\",function(t){var s=H(this).data(\"service\");if(!i.data(\"url\"))return void alert(\"请设置data-url\");if(\"wechat\"===s){var r=a()+\"/api/qrcode/getImage.png\",n=\"?size=240&text=\"+i.data(\"url\"),d=E(et[\"dialog-qrcode\"]({qrcode_url:r+n,url:i.data(\"url\")}));d.el.find(\".ds-dialog\").css(\"width\",\"320px\")}else{var l=a()+\"/share-proxy/?\"+o.param({service:H(this).data(\"service\"),thread_key:i.data(\"threadKey\"),title:i.data(\"title\"),images:i.data(\"images\"),content:i.data(\"content\"),url:i.data(\"url\")});e.open(l,\"_blank\")}t.preventDefault(),t.stopPropagation()})}});var it=0;S.initSelector=function(e,t){function s(e){W(e),o.extend(z,e.options),dt.set(e.response)}var a=[];!q()||!H.isReady&&j||H(e).each(function(e,s){var i=H(s);if(!i.data(\"initialized\")){i.data(\"initialized\",!0);var r=new st[t.type](i,t);if(at.push(r),\"ThreadCount\"===t.type){var n=i.attr(\"data-thread-key\");i.attr(\"data-channel-key\")&&(n=i.attr(\"data-channel-key\")+\":\"+n),a.push(n),dt[n]||(dt[n]=new G({})),dt[n].on(\"reset\",function(){r.onload(this)})}else if(r.uri){var o={};H.each(r.params.split(\" \"),function(e,t){o[t.replace(/-/g,\"_\")]=i.attr(\"data-\"+t)||i.data(t)}),R.get(r.uri,B(o),function(e){r.load(e)})}}}),a.length&&R.get(\"threads/counts\",B({threads:a.join(\",\")}),s)},(S.initView=function(){H.each(O,S.initSelector)})(),H(function(){if(!c){if(!q())return C.error(\"缺少 duoshuoQuery 的定义\");C.warn(\"请在加载多说 embed.js 之前定义 duoshuoQuery\")}setInterval(function(){H(\".ds-time\").each(function(){var e=H(this).attr(\"datetime\");e&&(this.innerHTML=S.elapsedTime(e))})},2e4),c.ondomready&&c.ondomready(),S.initView(),!it&&c.short_name&&R.get(\"analytics/ping\",B({}),W)})})}}(window,document);","source":"images/embed.js","raw":"!function(e,t,s){function a(){return c.short_name?g+\"//\"+c.short_name+\".\"+S.DOMAIN:S.REMOTE}function i(){function t(){for(var t;t=y.shift();){var a=t.url,i=new s(t.title,{dir:\"auto\",icon:t.iconUrl,body:t.body});try{i.onclick=function(){e.focus(),h.href=a,i.close()}}catch(r){}setTimeout(function(){i.close&&i.close()},8e3)}}var s=e.Notification;\"Notification\"in e&&\"denied\"!==s.permission&&(\"granted\"===s.permission&&t(),s.requestPermission(function(e){\"granted\"===e&&t()}))}function r(){return 0==nt.data.user_id}function n(e){S.theme=e,\"none\"!=e&&o.injectStylesheet(S.STATIC_URL+\"/styles/embed\"+(e?\".\"+e+\".css?\"+M[e]:\".\"+short_name)+\".css\")}var o={},d=t.getElementsByTagName(\"head\")[0]||t.getElementsByTagName(\"body\")[0];if(o.extend=function(e,t){for(var s in t)e[s]=t[s];return e},o.injectScript=function(a,i){var r=t.createElement(\"script\"),n=t.head||t.getElementsByTagName(\"head\")[0]||t.documentElement;r.type=\"text/javascript\",r.src=a,r.async=\"async\",r.charset=\"utf-8\",i&&(r.onload=r.onreadystatechange=function(t,a){var o=a||!r.readyState||/loaded|complete/.test(r.readyState);o&&(r.onload=r.onreadystatechange=null,n&&r.parentNode&&n.removeChild(r),r=s,a||i.call(e))}),n.insertBefore(r,n.firstChild)},o.injectStylesheet=function(e){var s=t.createElement(\"link\");s.type=\"text/css\",s.rel=\"stylesheet\",s.href=e,d.appendChild(s)},o.injectStyle=function(e){var s=t.createElement(\"style\");return s.type=\"text/css\",d.appendChild(s),e=e.replace(/\\}/g,\"}\\n\"),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(t.createTextNode(e)),s},o.getCookie=function(e){for(var a,i,r,n=\" \"+e+\"=\",o=t.cookie.split(\";\"),d=0;d<o.length;d++)if(a=\" \"+o[d],i=a.indexOf(n),i>=0&&i+n.length==(r=a.indexOf(\"=\")+1))return decodeURIComponent(a.substring(r,a.length).replace(/\\+/g,\"\"));return s},o.param=function(e){var t=[];for(var a in e)e[a]!=s&&t.push(a+\"=\"+encodeURIComponent(e[a]));return t.join(\"&\")},o.cssProperty=function(e,s){var a=(t.body||t.documentElement).style;if(\"undefined\"==typeof a)return!1;if(\"string\"==typeof a[e])return s?e:!0;for(var i=[\"Moz\",\"Webkit\",\"ms\"],e=e.charAt(0).toUpperCase()+e.substr(1),r=0;r<i.length;r++)if(\"string\"==typeof a[i[r]+e])return s?i[r]+e:!0},!e.DUOSHUO){for(var l in Object.prototype)return alert(\"Object.prototype 不为空，请不要给 Object.prototype 设置方法\");var c,u,p=e.JSON,h=e.location,f=e.XMLHttpRequest,m=p&&p.stringify&&e.localStorage,v=e.navigator.userAgent,g=\"https:\"==t.location.protocol?\"https:\":\"http:\",b=0,y=[],_=u=function(){function e(e){return t[e]||\"&amp;\"}var t={\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},s=/&(?!\\w+;)|[<>\"'`]/g,a=/[&<>\"'`]/;return function(t){return null==t||t===!1?\"\":a.test(t)?t.replace(s,e):t}}(),k=function(e){if(e.match(/^(http|https):/))return e;var s=t.createElement(\"a\");return s.href=e,P.hrefNormalized?s.href:s.getAttribute(\"href\",4)},w=function(e){return function(){return e}},x=function(){for(var e={},t=0;t<arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var s=o.param(e);return s?\"?\"+s:\"\"},T=function(){var e=o.getCookie(\"duoshuo_token\");return e?{jwt:e}:c.remote_auth?{short_name:c.short_name,remote_auth:c.remote_auth}:s},q=function(){if(!c&&(c=e.duoshuoQuery)){if(!c.short_name||\"your_duoshuo_short_name\"===c.short_name)return c=s,void alert(\"你还没有设置多说域名(duoshuoQuery.short_name)，填入已有域名或创建新站点：http://duoshuo.com/create-site/\");it.trigger(\"queryDefined\")}return c},C=function(e){return e&&e.error&&e.warn?e:{error:function(){},log:function(){},warn:function(){}}}(e.console),S=e.DUOSHUO={sourceName:{weibo:\"新浪微博\",qq:\"QQ\",qzone:\"QQ空间\",qqt:\"腾讯微博\",renren:\"人人网\",douban:\"豆瓣网\",kaixin:\"开心网\",sohu:\"搜狐微博\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},serviceNames:{weibo:\"微博\",qq:\"QQ\",douban:\"豆瓣\",renren:\"人人\",kaixin:\"开心\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},parseDate:function(e){return e.parse(\"2011-10-28T00:00:00+08:00\")&&function(t){return new e(t)}||e.parse(\"2011/10/28T00:00:00+0800\")&&function(t){return new e(t.replace(/-/g,\"/\").replace(/:(\\d\\d)$/,\"$1\"))}||e.parse(\"2011/10/28 00:00:00+0800\")&&function(t){return new e(t.replace(/-/g,\"/\").replace(/:(\\d\\d)$/,\"$1\").replace(\"T\",\" \"))}||function(t){return new e(t)}}(Date),fullTime:function(e){var t=S.parseDate(e);return t.getFullYear()+\"年\"+(t.getMonth()+1)+\"月\"+t.getDate()+\"日 \"+t.toLocaleTimeString()},elapsedTime:function(e){var t=S.parseDate(e),s=new Date,a=(s-b-t)/1e3;return 10>a?\"刚刚\":60>a?Math.round(a)+\"秒前\":3600>a?Math.round(a/60)+\"分钟前\":86400>a?Math.round(a/3600)+\"小时前\":(s.getFullYear()==t.getFullYear()?\"\":t.getFullYear()+\"年\")+(t.getMonth()+1)+\"月\"+t.getDate()+\"日\"},compileStyle:function(e){var t=\"\",s={};if(s.textbox=\"#ds-thread #ds-reset .ds-replybox .ds-textarea-wrapper\",!e)return t;for(var a in e)t+=s[a]+\"{\"+e[a]+\"}\\n\";return t},init:function(e,t){e&&!O[e]&&(O[e]=t||{type:\"EmbedThread\"}),S.initView&&S.initView()}},j=t.all,P=S.support=function(){var s=t.createElement(\"div\");s.innerHTML='<a href=\"/a\" style=\"opacity:.55;\">a</a><input type=\"checkbox\"/>';var a=s.getElementsByTagName(\"a\")[0],i=s.getElementsByTagName(\"input\")[0],r={placeholder:\"placeholder\"in i,touch:\"ontouchstart\"in e||\"onmsgesturechange\"in e,opacity:/^0.55$/.test(a.style.opacity),hrefNormalized:\"/a\"===a.getAttribute(\"href\"),iOS:v.match(/ \\((iPad|iPhone|iPod);( U;)? CPU( iPhone)? OS /),android:v.match(/ \\(Linux; U; Android /)};return r.ie6=!f&&\"undefined\"==typeof s.style.maxHeight,r.authInWin=e.postMessage&&e.screen.width>800&&!r.iOS&&!r.android&&h.origin,r}(),O=S.selectors={\".ds-thread\":{type:\"EmbedThread\"},\".ds-recent-comments\":{type:\"RecentComments\"},\".ds-recent-visitors\":{type:\"RecentVisitors\"},\".ds-top-users\":{type:\"TopUsers\"},\".ds-top-threads\":{type:\"TopThreads\"},\".ds-login\":{type:\"LoginWidget\"},\".ds-thread-count\":{type:\"ThreadCount\"},\".ds-share\":{type:\"ShareWidget\"}},E=S.openDialog=function(e){return S.dialog!==s&&S.dialog.el.remove(),S.dialog=new st.Dialog(et.dialog(e)).open()},L=S.smilies={};S.require=function(){function t(e){var t=U[e]?\"?\"+U[e]+\".js\":\"\";return S.STATIC_URL+\"/libs/\"+e+\".js\"+t}var s={mzadxN:\"undefined\"!=typeof mzadxN};return\"undefined\"!=typeof jQuery&&jQuery.fn.jquery>=\"1.5\"&&(s[\"embed.compat\"]=!0,S.jQuery=e.jQuery),function(e,a){if(\"string\"==typeof e)s[e]?a():o.injectScript(t(e),function(){s[e]=!0,a()});else if(\"object\"==typeof e){var i,r=!0;for(i=0;i<e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectScript(t(n),function(){s[n]=!0;for(var t=0;t<e.length;t++)if(!s[e[t]])return;a()}))})(e[i]);r&&a()}}}();for(var N=0,I=[\"EmbedThread\",\"RecentComments\",\"RecentVisitors\",\"TopUsers\",\"TopThreads\",\"LoginWidget\",\"ThreadCount\"];N<I.length;N++)S[I[N]]=function(e){return function(t,s){s=s||{},s.type=e,t&&!O[t]&&(O[t]=s),S.initSelector&&S.initSelector(t,s)}}(I[N]),S[\"create\"+I[N]]=function(e){return function(s,a){var i=t.createElement(s);for(var r in a)i.setAttribute(\"data-\"+r,a[r]);return S[e](i),i}}(I[N]);S.RecentCommentsWidget=S.RecentComments;var R=S.API={ajax:function(e,t,i,r,n){function d(e){var t=e.getResponseHeader(\"Date\");t&&(b=new Date-new Date(t))}function l(e,t,s){var a,i,o,l=t;if(e>=200&&300>e||304===e)if(304===e)l=\"notmodified\",o=!0;else try{a=p.parse(s),l=\"success\",o=!0}catch(c){l=\"parsererror\",i=c}else{i=l,(!l||e)&&(l=\"error\",0>e&&(e=0));try{a=p.parse(s)}catch(c){l=\"parsererror\",i=c}}o?r&&r(a):\"parseerror\"===l?C.error(\"解析错误: \"+s):(C.error(\"出错啦(\"+a.code+\"): \"+a.errorMessage),n&&n(a),a.errorTrace&&C.error(a.errorTrace)),d(m)}var u=o.getCookie(\"duoshuo_token\");i=i||{},i.v=S.version,u?i.jwt=u:c.remote_auth&&(i.remote_auth=c.remote_auth);var h=f&&p&&p.parse;if(h){var m=new f,v=!!m&&\"withCredentials\"in m;if(v){var g;return m.open(e,a()+\"/api/\"+t+\".json\"+(\"GET\"==e?\"?\"+o.param(i):\"\"),!0),m.withCredentials=!0,m.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\"),m.send(\"GET\"==e?null:o.param(i)),g=function(e,t){var a,i,r,n;try{if(g&&(t||4===m.readyState))if(g=s,t)4!==m.readyState&&m.abort();else{a=m.status,r=m.getAllResponseHeaders();try{n=m.responseText}catch(e){}try{i=m.statusText}catch(o){i=\"\"}}}catch(d){t||l(-1,d)}n&&l(a,i,n,r)},void(4===m.readyState?g():m.onreadystatechange=g)}}\"GET\"!=e&&(i._method=\"POST\");var y=\"cb_\"+Math.round(1e6*Math.random());R[y]=function(e){switch(e.code){case 0:r&&r(e);break;default:n&&n(e),C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}},i.callback=\"DUOSHUO.API['\"+y+\"']\",o.injectScript(a()+\"/api/\"+t+\".jsonp?\"+o.param(i))},get:function(e,t,s,a){return this.ajax(\"GET\",e,t,s,a)},post:function(e,t,s,a){return this.ajax(\"POST\",e,t,s,a)}},A=S.ws={messages:[],send:function(s){if(!(\"WebSocket\"in e&&p))return!1;var a=this;if(a.messages.push(p.stringify(s)),!a.webSocket){var r=\"https:\"===t.location.protocol?\"wss://ws.duoshuo.com:8202/\":\"ws://ws.duoshuo.com:8201/\",n=a.webSocket=new WebSocket(r);n.onopen=function(){var e,t=1===n.readyState;if(t)for(;e=a.messages.shift();)n.send(e)},n.onmessage=function(e){try{var t=p.parse(e.data)}catch(s){return}switch(t.type){case\"post\":for(var a,r=0;r<S.pagelets.length;r++)a=S.pagelets[r],a.threadId==t.thread_id&&a.onMessage(t);break;case\"notification\":y.push(t),i()}},e.addEventListener(\"beforeunload\",function(){n.close()})}a.webSocket.onopen()}};S.DOMAIN=\"duoshuo.com\",S.STATIC_URL=g+\"//static.duoshuo.com\",S.REMOTE=g+\"//duoshuo.com\",S.version=\"16.6.16\";var M={\"default\":\"9b2a46a0\",dark:\"33f3a5ac\",bluebox:\"39a75d50\",newhua:\"706ba4eb\",justflat:\"9d72ec5a\"},U={\"embed.compat\":\"24f8ca3f\",smilies:\"921e8eda\"},z={post:\"发布\",posting:\"正在发布\",settings:\"设置\",reply:\"回复\",like:\"顶\",repost:\"转发\",report:\"举报\",\"delete\":\"删除\",reply_to:\"回复 \",reposts:\"转发\",comments:\"评论\",floor:\"楼\",latest:\"最新\",earliest:\"最早\",hottest:\"最热\",share_to:\"分享到:\",leave_a_message:\"说点什么吧…\",no_comments_yet:\"还没有评论，沙发等你来抢\",repost_reason:\"请输入转发理由\",hot_posts_title:\"被顶起来的评论\",comments_zero:\"暂无评论\",comments_one:\"1条评论\",comments_multiple:\"{num}条评论\",reposts_zero:\"暂无转发\",reposts_one:\"1条转发\",reposts_multiple:\"{num}条转发\",weibo_reposts_zero:\"暂无新浪微博\",weibo_reposts_one:\"1条新浪微博\",weibo_reposts_multiple:\"{num}条新浪微博\",qqt_reposts_zero:\"暂无腾讯微博\",qqt_reposts_one:\"1条腾讯微博\",qqt_reposts_multiple:\"{num}条腾讯微博\"},D={get:function(e){return m?m[e]:void 0},save:function(e,t){if(m)try{m.removeItem(e),m[e]=p.stringify(t),m.removeItem(e+\":timestamp\"),m[e+\":timestamp\"]=Math.floor((new Date-b)/1e3)}catch(s){}}},W=S.loadRequire=function(t){if(t.visitor&&(!nt.data&&t.visitor.user_id&&e.Notification&&A.send({logged_user_id:t.visitor.user_id}),nt.reset(t.visitor)),t.site&&(rt.reset(t.site),D.save(\"ds_site_\"+c.short_name,t.site)),!S.theme&&rt.data.theme&&n(rt.data.theme),t.lang&&(o.extend(z,t.lang),D.save(\"ds_lang_\"+c.short_name,t.lang)),t.stylesheets)for(var s=0;s<t.stylesheets.length;s++)o.injectStylesheet(t.stylesheets[s]);if(t.nonce&&(S.nonce=t.nonce),t.style&&o.injectStyle((t.style||\"\")+S.compileStyle(c.component_style)),t.unread&&ot.reset(t.unread),t.warnings)for(var s=0;s<t.warnings.length;s++)C.warn(t.warnings[s])},B=0,H=S.Class=function(){};H.extend=function(e){function t(){!B&&this.init&&this.init.apply(this,arguments)}B=1;var s=new this;B=0;for(var a in e)s[a]=e[a];return t.prototype=s,t.prototype.constructor=t,t.extend=arguments.callee,t};var J=S.Event=H.extend({on:function(e,t){var a=this.handlers||(this.handlers={});return a[e]===s&&(a[e]=[]),a[e].push(t),this},trigger:function(e,t){var s=(this.handlers||(this.handlers={}))[e];if(s)for(var a=0;a<s.length&&s[a].call(this,t)!==!1;a++);return this}}),Q=S.Widget=J.extend({init:function(e,t){this.el=e,this.options=t||{},this.render()},render:function(){},reset:function(){},load:function(e){switch(e.code){case 0:W(e);var t=this.prepare(e);t.options=o.extend(this.options,e.options),this.onload(t);break;default:this.onError(e)}},onload:function(e){this.el.html(et[this.tmpl](e))},prepare:function(e){return e},onMessage:function(){},onError:function(e){C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}}),V=S.Model=J.extend({init:function(e){this.data=e},reset:function(e){this.data=e,this.trigger(\"reset\")},remove:function(e){this.data.splice(e,1),this.trigger(\"reset\")},set:function(e,t){if(t===s)for(var a in e)this.data[a]=e[a];else this.data[e]=t;return this.trigger(\"reset\"),this},toJSON:function(){return o.extend({},this.data)}}),$=V.extend({toJSON:function(){return o.extend({},this.data)}}),F=V.extend({toJSON:function(){var e=o.extend({},this.data);return e.theAuthor=ct[this.data.author_id]&&ct[this.data.author_id].data||this.data.author,e.parents=this.data.parents||[],e}}),G=V.extend({toJSON:function(){return o.extend({},this.data)}}),Y=function(e){this.model=e};Y.prototype.set=function(e){for(var t in e)e[t]&&(this[t]?this[t].set(e[t]):this[t]=new this.model(e[t]))},Y.prototype.get=function(e){for(var t=0,s=[];t<e.length;t++)s[t]=this[e[t]];return s},Y.prototype.getJSON=function(e){for(var t=0,s=[];t<e.length;t++)this[e[t]]&&s.push(this[e[t]].toJSON());return s};var Z={userUrl:function(e){return e.url},avatarUrl:function(e){return e.avatar_url||rt.data.default_avatar_url},loginUrl:function(e,t){return t||(t={}),c.sso&&c.sso.login&&(t.sso=1,t.redirect_uri=c.sso.login),a()+\"/login/\"+e+\"/\"+x(t)},bindUrl:function(e){return a()+\"/bind/\"+e+\"/\"+x(c.sso&&c.sso.login?{sso:1,redirect_uri:c.sso.login}:null,T())},logoutUrl:function(){return a()+\"/logout/\"+x(c.sso&&c.sso.logout?{sso:1,redirect_uri:c.sso.logout}:null)}},X=[\"weixin\",\"weibo\",\"qq\",\"renren\"],K=[\"douban\",\"kaixin\",\"baidu\",\"google\"],et=S.templates={userAnchor:function(e){return e.url?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(e.url)+'\">'+_(e.name)+\"</a>\":_(e.name)},avatarImg:function(e,t){return'<img src=\"'+_(Z.avatarUrl(e,t))+'\" alt=\"'+_(e.name)+'\"'+(t?' style=\"width:'+t+\"px;height:\"+t+'px\"':\"\")+\"/>\"},avatar:function(e,t){var s=et.avatarImg(e,t),i=Z.userUrl(e);return i?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(i)+'\" '+(e.user_id?\" onclick=\\\"this.href='\"+a()+\"/user-url/?user_id=\"+e.user_id+\"';\\\"\":\"\")+' title=\"'+_(e.name)+'\">'+s+\"</a>\":s},timeText:function(e){return e?'<span class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</span>\":\"\"},timeAnchor:function(e,t){return e?'<a href=\"'+t+'\" target=\"_blank\" rel=\"nofollow\" class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</a>\":\"\"},serviceIcon:function(e,t){return'<a href=\"javascript:void(0)\" class=\"ds-service-icon'+(t?\"-grey\":\"\")+\" ds-\"+e+'\" data-service=\"'+e+'\" title=\"'+S.sourceName[e]+'\"></a>'},poweredBy:function(e){return'<p class=\"ds-powered-by\"><a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"nofollow\">'+_(e)+\"</a></p>\"},indicator:w('<div id=\"ds-indicator\"></div>'),waitingImg:w('<div id=\"ds-waiting\"></div>'),loginItem:function(e,t){var s=Z[t?\"bindUrl\":\"loginUrl\"](e);return'<li>    <a href=\"'+s+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+e+'\">'+S.serviceNames[e]+(nt.data.social_uid[e]?' <span class=\"ds-icon ds-icon-ok\"></span>':\"\")+\"</a></li>\"}},tt=function(e){var t=[];for(var s in e)t.push('<input type=\"hidden\" name=\"'+s+'\" value=\"'+_(e[s])+'\" />');return t.join(\"\\n\")};et.commentList=function(e){var t=\"\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li class=\"ds-comment',e.options.show_avatars&&(t+=\" ds-show-avatars\"),t+='\" data-post-id=\"'+a.post_id+'\">',e.options.show_avatars&&(t+='<div class=\"ds-avatar\">'+et.avatar(a.theAuthor,e.options.avatar_size)+\"</div>\"),t+='<div class=\"ds-meta\">'+et.userAnchor(a.theAuthor),e.options.show_time&&(t+=et.timeText(a.created_at)),t+=\"</div>\",t+=e.options.show_title?'<div class=\"ds-thread-title\">在 <a href=\"'+u(a.thread.url)+'#comments\">'+u(a.thread.title)+'</a> 中评论</div><div class=\"ds-excerpt\">'+a.message+\"</div>\":'<a class=\"ds-excerpt\" title=\"'+a.thread.title+' 中的评论\" href=\"'+u(a.thread.url)+'#comments\">'+a.message+\"</a>\",t+=\"</li>\";return t},et.ctxPost=function(e){var t=\"\";return e.post&&(t+='<li class=\"ds-ctx-entry\"',e.hidden&&(t+=' style=\"display:none\"'),t+=' data-post-id=\"'+e.post.post_id+'\"><div class=\"ds-avatar\">'+et.avatar(e.post.theAuthor||e.post.author)+'</div><div class=\"ds-ctx-body\"><div class=\"ds-ctx-head\">'+et.userAnchor(e.post.theAuthor||e.post.author)+et.timeAnchor(e.post.created_at,e.post.url),e.index>=0&&(t+='<div class=\"ds-ctx-nth\" title=\"'+S.fullTime(e.post.created_at)+'\">'+(e.index+1)+z.floor+\"</div>\"),t+='</div><div class=\"ds-ctx-content\">'+e.post.message,e.index>=0&&(t+='　　　　　　　<div class=\"ds-comment-actions',e.post.vote>0&&(t+=\" ds-post-liked\"),t+='\">'+et.likePost(e.post)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-reply\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a></div>\"),t+=\"</div></div></li>\"),t},et[\"dialog-anonymous\"]=function(e){var t='<h2>社交帐号登录</h2><div class=\"ds-icons-32\">',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\",e.options.deny_anonymous||(t+='<h2>作为游客留言</h2><form><div class=\"ds-control-group\"><input type=\"text\" name=\"author_name\" id=\"ds-dialog-name\" value=\"'+u(nt.data.name)+'\" required /><label for=\"ds-dialog-name\">名字(必填)</label></div>',e.options.require_guest_email&&(t+='<div class=\"ds-control-group\"><input type=\"email\" name=\"author_email\" id=\"ds-dialog-email\" value=\"'+u(nt.data.email)+'\" required /><label for=\"ds-dialog-email\">邮箱(必填)</label></div>'),e.options.require_guest_url&&(t+='<div class=\"ds-control-group\"><input type=\"url\" name=\"author_url\" id=\"ds-dialog-url\" placeholder=\"http://\" value=\"'+u(nt.data.url)+'\" /><label for=\"ds-dialog-url\">网址(可选)</label></div>'),t+='<button type=\"submit\">发布</button></form>'),t},et[\"dialog-ask-for-auth\"]=function(){var e='<h2>社交帐号登录</h2><ul class=\"ds-service-list\">'+et.serviceList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul>\";return e},et[\"dialog-bind-more\"]=function(){var e='<h2>绑定更多帐号</h2><ul class=\"ds-service-list\">'+et.serviceBindList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceBindList(K)+'</ul><div style=\"clear:both\"></div>';return e},et[\"dialog-qrcode\"]=function(e){var t='<h2>微信扫一扫，分享到朋友圈</h2><div class=\"ds-share-qrcode\" style=\"text-align:center;\"><img src=\"'+e.qrcode_url+'\" alt=\"'+e.url+'\"></div>';return t},et[\"dialog-reposts\"]=function(e){var t='<h2>转发到微博</h2><div class=\"ds-quote\"><strong>@'+u(e.post.theAuthor.name)+\"</strong>: \"+e.post.message+\"</div><form>\"+tt({post_id:e.post.post_id})+'<div class=\"ds-textarea-wrapper\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.repost_reason)+'\">'+u(e.repostMessage)+'</textarea><pre class=\"ds-hidden-text\"></pre>';return t+='</div><div class=\"ds-actions\">',e.service?t+=tt({\"service[]\":e.service}):(t+='<label><input type=\"checkbox\" name=\"service[]\" value=\"weibo\"',nt.data.social_uid.weibo&&(t+=' checked=\"checked\"'),t+=' /><span class=\"ds-service-icon ds-weibo\"></span>新浪微博</label><label><input type=\"checkbox\" name=\"service[]\" value=\"qqt\"',nt.data.social_uid.qq&&(t+=' checked=\"checked\"'),t+=' /><span class=\"ds-service-icon ds-qqt\"></span>腾讯微博</label>'),t+='<button type=\"submit\">'+z.repost+\"</button></div></form>\"},et.dialog=function(e){var t='<div class=\"ds-dialog\"><div class=\"ds-dialog-inner ds-rounded\"><div class=\"ds-dialog-body\">'+e+'</div><div class=\"ds-dialog-footer\"><a href=\"http://duoshuo.com/\" target=\"_blank\" class=\"ds-logo\"></a><span>社会化评论框</span></div><a class=\"ds-dialog-close\" href=\"javascript:void(0)\" title=\"关闭\"></a></div></div>';return t},et.hotPosts=function(e){var t='<div class=\"ds-header ds-gradient-bg\">'+u(z.hot_posts_title)+\"</div><ul>\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=et.post({post:a,options:e.options});return t+=\"</ul>\"},et.likePost=function(e){var t='<a class=\"ds-post-likes\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-like\"></span>'+z.like;return e.likes>0&&(t+=\"(\"+e.likes+\")\"),t+=\"</a>\"},et.likeTooltip=function(e){var t='<div class=\"ds-like-tooltip ds-rounded\"><p>很高兴你能喜欢，分享一下吧：</p><ul>';for(var s in e.services)t+='<li><a class=\"ds-share-to-'+s+\" ds-service-link ds-\"+s+'\" href=\"'+a()+\"/share-proxy/?\"+o.param({service:s,thread_id:e.thread_id})+'\">'+e.services[s]+\"</a></li>\";return t+='</ul><p class=\"ds-like-tooltip-footer\"><a class=\"ds-like-tooltip-close\">算了</a></p></div>'},et.loginButtons=function(){var e='<div class=\"ds-login-buttons\"><p>社交帐号登录:</p><div class=\"ds-social-links\"><ul class=\"ds-service-list\">'+et.serviceList(X)+'<li><a class=\"ds-more-services\" href=\"javascript:void(0)\">更多»</a></li></ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul></div></div>\";return e},et.loginWidget=function(e){var t='<div class=\"ds-icons-32\">',s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\"},et.meta=function(e){var t='<div class=\"ds-meta\"><a href=\"javascript:void(0)\" class=\"ds-like-thread-button ds-rounded';return e.user_vote>0&&(t+=\" ds-thread-liked\"),t+='\"><span class=\"ds-icon ds-icon-heart\"></span> <span class=\"ds-thread-like-text\">',t+=e.user_vote>0?\"已喜欢\":\"喜欢\",t+='</span><span class=\"ds-thread-cancel-like\">取消喜欢</span></a><span class=\"ds-like-panel\"></span></div>'},et.notify=function(e){var t='<div id=\"ds-reset\"><a class=\"ds-logo\" href=\"http://duoshuo.com/\" target=\"_blank\" title=\"多说\"></a><ul class=\"ds-notify-unread\"><li';return e.comments||(t+=' style=\"display:none;\"'),t+='><a data-type=\"unread-comments\" href=\"javascript:void(0);\">你有'+e.comments+\"条新回复</a></li><li\",e.notifications||(t+=' style=\"display:none;\"'),t+='><a data-type=\"unread-notifications\" href=\"javascript:void(0);\">你有'+e.notifications+\"条系统消息</a></li></ul></div>\"},et.post=function(e){var t=\"\",s=e.post,i=e.options,r=s.author;if(t+='<li class=\"ds-post\" data-post-id=\"'+s.post_id+'\"><div class=\"ds-post-self\" data-post-id=\"'+s.post_id+'\" data-thread-id=\"'+s.thread_id+'\" data-root-id=\"'+s.root_id+'\" data-source=\"'+s.source+'\"><div class=\"ds-avatar\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=\">\"+et.avatar(r),S.sourceName[s.source]&&(t+=et.serviceIcon(s.source)),t+='</div><div class=\"ds-comment-body\"><div class=\"ds-comment-header\">',r.url?(t+='<a class=\"ds-user-name ds-highlight\" data-qqt-account=\"'+(r.qqt_account||\"\")+'\" href=\"'+u(r.url)+'\" ',r.user_id&&(t+=\" onclick=\\\"this.href='\"+a()+\"/user-url/?user_id=\"+r.user_id+\"';\\\"\"),t+=' rel=\"nofollow\" target=\"_blank\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=\">\"+u(r.name)+\"</a>\"):(t+='<span class=\"ds-user-name\"',r.user_id&&(t+=' data-user-id=\"'+r.user_id+'\"'),t+=' data-qqt-account=\"'+(r.qqt_account||\"\")+'\">'+u(r.name)+\"</span>\"),t+=\"</div>\",1==i.max_depth&&i.show_context&&s.parents.length){t+='<ol id=\"ds-ctx\">';var n=lt.getJSON(s.parents);if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],1==d&&s.parents.length>2&&(t+='<li class=\"ds-ctx-entry\"><a href=\"javascript:void(0);\" class=\"ds-expand\">还有'+(s.parents.length-2)+\"条评论</a></li>\"),t+=et.ctxPost({post:o,index:d,hidden:d&&d<s.parents.length-1});t+=\"</ol>\"}if(t+=\"<p>\",s.parents.length>=i.max_depth&&(!i.show_context||i.max_depth>1)&&s.parent_id&&lt[s.parent_id]&&(t+='<a class=\"ds-comment-context\" data-post-id=\"'+s.post_id+'\" data-parent-id=\"'+s.parent_id+'\">'+z.reply_to+u(lt[s.parent_id].toJSON().author.name)+\": </a>\"),t+=s.message+'</p><div class=\"ds-comment-footer ds-comment-actions',s.vote>0&&(t+=\" ds-post-liked\"),t+='\">',t+=s.url?et.timeAnchor(s.created_at,s.url):et.timeText(s.created_at),\"duoshuo\"==s.source?(t+='<a class=\"ds-post-reply\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a>\"+et.likePost(s)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-report\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-report\"></span>'+z.report+\"</a>\",s.privileges[\"delete\"]&&(t+='<a class=\"ds-post-delete\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-delete\"></span>'+z[\"delete\"]+\"</a>\")):(\"qqt\"==s.source||\"weibo\"==s.source)&&(t+='<a class=\"ds-weibo-comments\" href=\"javascript:void(0);\">'+z.comments,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.comments+\"</span>)\"),t+='</a><a class=\"ds-weibo-reposts\" href=\"javascript:void(0);\">'+z.reposts,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.reposts+\"</span>)\"),t+=\"</a>\"),t+=\"</div></div></div>\",i.max_depth>1&&(s.childrenArray||s.children)&&\"weibo\"!=s.source&&\"qqt\"!=s.source){t+='<ul class=\"ds-children\">';var c=lt.getJSON(s.childrenArray||s.children);if(c)for(var s,d=-1,p=c.length-1;p>d;)s=c[d+=1],t+=et.post({post:s,options:i});t+=\"</ul>\"}return t+=\"</li>\"},et.postListHead=function(e){var t='<div class=\"ds-comments-info\"><div class=\"ds-sort\"><a class=\"ds-order-desc\">'+z.latest+'</a><a class=\"ds-order-asc\">'+z.earliest+'</a><a class=\"ds-order-hot\">'+z.hottest+'</a></div><ul class=\"ds-comments-tabs\"><li class=\"ds-tab\"><a class=\"ds-comments-tab-duoshuo ds-current\" href=\"javascript:void(0);\"></a></li>';return e.options.show_reposts&&e.thread.reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-repost\" href=\"javascript:void(0);\"></a></li>'),t+=\" \",e.options.show_weibo&&e.thread.weibo_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-weibo\" href=\"javascript:void(0);\"></a></li>'),t+=\" \",e.options.show_qqt&&e.thread.qqt_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-qqt\" href=\"javascript:void(0);\"></a></li>'),t+=\"</ul></div>\"},et.recentVisitors=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"</div>\";return t},et[\"related-read\"]=function(e){var t=\"\";if(e&&e.length){t+='<article class=\"ds-reads-expand\"><div class=\"ds-header\">头条推荐</div><section> ';var s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;){if(a=s[i+=1],t+=' <a href=\"'+a.url+'\" class=\"ds-reads-item\"> ',3==a.imgs.length){t+=\" <h2>\"+a.title+'</h2> <div class=\"ds-reads-pics\"> <ul> ';var n=a.imgs;if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],t+=' <li> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+o+');\"></div> </li> ';t+=' </ul> </div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> '}else t+=' <div class=\"ds-reads-desc ',a.imgs.length||(t+=\"ds-reads-only\"),t+='\"> <div class=\"ds-reads-title\">'+a.title+'</div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> </div> ',a.imgs.length&&(t+=' <div class=\"ds-reads-pic-right\"> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+a.imgs[0]+');\"> ',a.hasVideo&&(t+=' <div class=\"ds-reads-vid-info\"><span>'+a.videoDuration+\"</span></div> \"),t+=\" </div> </div> \"),t+=\" \";t+=\" </a> \"}t+=\"</section></article>\"}return t},et.replybox=function(e){var t='<div class=\"ds-replybox\"><a class=\"ds-avatar\"';if(t+=r()?' href=\"javascript:void(0);\" onclick=\"return false\"':' href=\"'+S.REMOTE+\"/settings/avatar/\"+x(T())+'\" target=\"_blank\" title=\"设置头像\"',t+=\">\"+et.avatarImg(nt.data)+'</a><form method=\"post\">'+tt(e.params)+'<div class=\"ds-textarea-wrapper ds-rounded-top\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.leave_a_message)+'\"></textarea><pre class=\"ds-hidden-text\"></pre>',t+=\"</div>\",t+='<div class=\"ds-post-toolbar\"><div class=\"ds-post-options ds-gradient-bg\"><span class=\"ds-sync\">',!r()&&nt.data.repostOptions){t+='<input id=\"ds-sync-checkbox',e.inline&&(t+=\"-inline\"),t+='\" type=\"checkbox\" name=\"repost\" ',e.checked&&(t+='checked=\"checked\" '),t+='value=\"'+e.repostArray.join(\",\")+'\"> <label for=\"ds-sync-checkbox',e.inline&&(t+=\"-inline\"),t+='\">'+z.share_to+\"</label>\";for(var s in nt.data.repostOptions)t+=et.serviceIcon(s,!nt.data.repostOptions[s])}return t+=\"</span>\",t+=\"</div>\",t+='<button class=\"ds-post-button\" type=\"submit\">'+u(z.post)+'</button><div class=\"ds-toolbar-buttons\">',e.options.use_smilies&&(t+='<a class=\"ds-toolbar-button ds-add-emote\" title=\"插入表情\"></a>'),e.options.use_images&&e.options.parse_html_enabled&&(t+='<a class=\"ds-toolbar-button ds-add-image\" title=\"插入图片\"></a>'),t+=\"</div></div>\",t+=\"</form></div>\"},et.serviceBindList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.bindUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a],nt.data.social_uid[a]&&(t+=' <span class=\"ds-icon ds-icon-ok\"></span>'),t+=\"</a></li>\";return t},et.serviceList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.loginUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a]+\"</a></li>\";return t},et.shareWidget=function(e){var t='<div class=\"ds-share-icons\"> <div class=\"ds-share-icons-inner\"> <ul class=\"ds-share-icons-16\"> ',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=' <li> <a class=\"ds-'+a+'\" href=\"javascript:void(0);\" data-service=\"'+a+'\">'+S.sourceName[a]+\"</a> </li> \";return t+=' </ul> </div> <div class=\"ds-share-icons-footer\">'+e.copyright+\"</div></div>\"},et.smiliesTooltip=function(e){var t='<div id=\"ds-smilies-tooltip\"><ul class=\"ds-smilies-tabs\">';for(var s in e)t+=\"<li><a>\"+s+\"</a></li>\";return t+='</ul><div class=\"ds-smilies-container\"></div></div>'},et.toolbar=function(){var e='<div class=\"ds-toolbar\"><div class=\"ds-account-control\"><span class=\"ds-icon ds-icon-settings\"></span> <span>帐号管理</span><ul><li><a class=\"ds-bind-more\" href=\"javascript:void(0);\" style=\"border-top: none\">绑定更多</a></li><li><a target=\"_blank\" href=\"'+S.REMOTE+\"/settings/\"+x(T())+'\">'+u(z.settings)+'</a></li><li><a rel=\"nofollow\" href=\"'+Z.logoutUrl()+'\" style=\"border-bottom: none\">登出</a></li></ul></div><div class=\"ds-visitor\">';return e+=nt.data.url?'<a class=\"ds-visitor-name\" href=\"'+u(nt.data.url)+'\" target=\"_blank\">'+u(nt.data.name)+\"</a>\":'<span class=\"ds-visitor-name\">'+u(nt.data.name)+\"</span>\",e+='<a class=\"ds-unread-comments-count\" href=\"javascript:void(0);\" title=\"新回复\"></a></div></div>'},et.topThreads=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a target=\"_blank\" href=\"'+u(a.url)+'\" title=\"'+u(a.title)+'\">'+u(a.title)+\"</a></li>\";return t},et.topUsers=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"<h4>\"+u(a.name)+\"</h4></div>\";return t},et.userInfo=function(e){var t='<a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\"/user-url/?user_id=\"+e.user_id+'\\';\" class=\"ds-avatar\" target=\"_blank\">'+et.avatarImg(e)+'</a><a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\"/user-url/?user_id=\"+e.user_id+'\\';\" class=\"ds-user-name ds-highlight\" target=\"_blank\">'+u(e.name)+\"</a>\";for(var s in e.social_uid)t+='<a href=\"'+S.REMOTE+\"/user-proxy/\"+s+\"/\"+e.social_uid[s]+'/\" target=\"_blank\" class=\"ds-service-icon ds-'+s+'\" title=\"'+S.sourceName[s]+'\"></a>';return t+='<p class=\"ds-user-card-meta\"><a href=\"'+S.REMOTE+\"/profile/\"+e.user_id+'/\" target=\"_blank\"><span class=\"ds-highlight\">'+e.comments+\"</span>条评论</a></p>\",e.description&&(t+='<p class=\"ds-user-description\">'+u(e.description)+\"</p>\"),t};var st=S.Views={},at=(S.Callbacks={},S.pagelets=[]),it=S.events=new J,rt=S.site=new V,nt=S.visitor=new $,ot=S.unread=new V,dt=S.threadPool=new Y(G),lt=S.postPool=new Y(F),ct=S.userPool=new Y($);it.on(\"queryDefined\",function(){var e=c.short_name;if(c.theme&&n(c.theme),m){var t=m[\"ds_site_\"+e],s=m[\"ds_lang_\"+e];t&&rt.reset(p.parse(t)),s&&o.extend(z,p.parse(s))}}),q(),S.require(\"embed.compat\",function(){function i(e){e.stopPropagation()}function n(e){(e.ctrlKey&&13==e.which||10==e.which)&&H(this.form).trigger(\"submit\")}function d(){var e=H(this);e.height(Math.max(54,e.next(\".ds-hidden-text\").text(this.value).height()+27))}function l(){if(P.authInWin){var e=this.href.match(/\\/(login|bind)\\/(\\w+)\\//i);if(e&&S.serviceNames[e[2]])return!b(e[2],this.href)\n}}function u(){var e,s,a,i,r,n=this,o=0,d=0;t.selection&&(s=t.selection.createRange(),s&&s.parentElement()==n&&(i=n.value.length,e=n.value.replace(/\\r\\n/g,\"\\n\"),a=n.createTextRange(),a.moveToBookmark(s.getBookmark()),r=n.createTextRange(),r.collapse(!1),a.compareEndPoints(\"StartToEnd\",r)>-1?o=d=i:(o=-a.moveStart(\"character\",-i),o+=e.slice(0,o).split(\"\\n\").length-1,a.compareEndPoints(\"EndToEnd\",r)>-1?d=i:(d=-a.moveEnd(\"character\",-i),d+=e.slice(0,d).split(\"\\n\").length-1)))),H(n).data(\"ds-range-start\",o).data(\"ds-range-end\",d)}function p(e){return P.touch&&e.addClass(\"ds-touch\"),o.cssProperty(\"transition\")||e.addClass(\"ds-no-transition\"),P.ie6&&e.addClass(\"ds-ie6\"),P.opacity||e.addClass(\"ds-no-opacity\"),e}function f(e){if(!P.placeholder){var t=e.attr(\"placeholder\");e.val(t).focus(function(){this.value===t&&(this.value=\"\")}).blur(function(){\"\"===this.value&&(this.value=t)})}return e}function g(e){if(\"http://duoshuo.com\"===e.origin)switch(e.data.type){case\"login\":h.href=e.data.redirectUrl}}function b(t,s){var a={weibo:[760,600],renren:[420,322],qq:[504,445],weixin:[450,550],google:[600,440]}[t]||[550,400];return e.open(s+(-1==s.indexOf(\"?\")?\"?\":\"&\")+o.param({origin:h.origin||\"http://\"+h.host}),\"_blank\",\"width=\"+a[0]+\",height=\"+a[1]+\",toolbar=no,menubar=no,location=yes\")}function y(e){var t=Z[r()?\"loginUrl\":\"bindUrl\"](e);P.authInWin&&b(e,t)||(h.href=t)}function w(){var e=E(et[\"dialog-ask-for-auth\"]({})).el.find(\".ds-dialog\").css(\"width\",\"300px\");e.find(\"a.ds-service-link\").click(l)}function x(e,t,s,a){function i(){function e(e){if(s&&a){var t=s.options,i=M(s.postList.el,e.response[a],t);\"asc\"==t.order==(\"top\"==t.formPosition)&&S.scrollTo(i);var r=s.el.find(\".ds-comments-tab-\"+a+\" span.ds-highlight\");r.html(parseInt(r.html())+1)}}return a||l.find(\"[type=checkbox]:checked\")[0]?(R.post(\"posts/repost\",S.toJSON(l),e),o.close(),!1):(alert(\"还没有选发布到哪儿呢\"),!1)}function r(){var e=this.value;return this.checked&&!nt.data.social_uid[\"qqt\"==e?\"qq\":e]?void y(e):void 0}var o=E(et[\"dialog-reposts\"]({post:e.toJSON(),repostMessage:t,service:a})),l=o.el.find(\"form\");return l.submit(i),l.find(\".ds-actions [type=checkbox]\").change(r),f(l.find(\"textarea\")).keyup(n).keyup(d).focus(),!1}function T(e){var t={\"unread-comments\":{title:\"新留言及回复\",apiUrl:\"users/unreadComments\",tmpl:function(e){return e.thread?'<li data-thread-id=\"'+e.thread.thread_id+'\">'+H.map(e.authors,et.userAnchor).join(\"、\")+' 在 <a class=\"ds-read\" href=\"'+e.thread.url+'#comments\" target=\"_blank\">'+_(e.thread.title||\"无标题\")+'</a> 中回复了你 <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\">知道了</a></li>':\"\"},read:function(e){var t=e.attr(\"data-thread-id\");R.post(\"threads/read\",{thread_id:t}),ot.data.comments--}},\"unread-notifications\":{title:\"系统消息\",apiUrl:\"users/unreadNotifications\",tmpl:function(e){return'<li data-notification-id=\"'+e.notification_id+'\" data-notification-type=\"'+e.type+'\">'+e.content+' <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\">知道了</a></li>'},read:function(e){var t=e.attr(\"data-notification-id\");R.post(\"notifications/read\",{notification_id:t}),ot.data.notifications--}}}[e],s=E(\"<h2>\"+t.title+'</h2><ul class=\"ds-unread-list\"></ul>');s.on(\"close\",S.resetNotify);var a=s.el.find(\".ds-unread-list\").delegate(\".ds-delete\",\"click\",function(){return H(this).parent().remove(),0===a.children().length&&s.close(),!1}).delegate(\".ds-read\",\"click\",function(){t.read(H(this).parent())});H(\"#ds-notify\").hide(),R.get(t.apiUrl,{},function(e){s.el.find(\".ds-unread-list\").html(H.map(e.response,t.tmpl).join(\"\\n\"))})}function N(){bubbleOutTimer&&(clearTimeout(bubbleOutTimer),bubbleOutTimer=0)}function I(){bubbleOutTimer=setTimeout(function(){bubbleOutTimer=0,X.detach()},400)}function M(e,t,s){return e.find(\".ds-post[data-post-id=\"+t.data.post_id+\"]\")[0]?void 0:(e.find(\".ds-post-placeholder\").remove(),H(et.post({post:t.toJSON(),options:s})).hide()[\"asc\"==s.order?\"appendTo\":\"prependTo\"](e).slideDown(function(){}))}function U(e,t){function s(){if(r())return w(),!1;var e=H(this).parent(),t=e.hasClass(\"ds-post-liked\"),s=H(this).html().match(/\\((\\d+)\\)/),a=(s?parseInt(s[1]):0)+(t?-1:1);return R.post(\"posts/vote\",{post_id:e.closest(\".ds-ctx-entry, .ds-post-self\").attr(\"data-post-id\"),vote:t?0:1}),H(this).html(H(this).html().replace(/\\(\\d+\\)/,\"\")+(a?\"(\"+a+\")\":\"\")),e[t?\"removeClass\":\"addClass\"](\"ds-post-liked\"),!1}function a(){var e=H(this).closest(\".ds-post-self\"),t=lt[e.attr(\"data-post-id\")];return x(t,\"\"),!1}function i(){if(!confirm(\"确定要删除这条评论吗？\"))return!1;var t=H(this).closest(\".ds-post-self\");return R.post(\"posts/remove\",{post_id:t.attr(\"data-post-id\")}),t.parent().fadeOut(200,function(){e.data.comments--,e.updateCounter(\"duoshuo\"),H(this).remove()}),!1}function n(){if(!confirm(\"确定要举报这条评论吗？\"))return!1;var e=H(this).closest(\".ds-post-self\");return R.post(\"posts/report\",{post_id:e.attr(\"data-post-id\")}),alert(\"感谢您的反馈！\"),!1}function o(){var s=H(this),a=s.closest(\".ds-comment-actions\");if(a.hasClass(\"ds-reply-active\"))h.el.fadeOut(200,function(){H(this).detach()}),a.removeClass(\"ds-reply-active\");else{var i=s.closest(\".ds-ctx-entry, .ds-post-self\");h?h.actionsBar.removeClass(\"ds-reply-active\"):(h=new st.Replybox(e),h.render(!0).el.addClass(\"ds-inline-replybox\").detach()),h.el.find(\"[name=parent_id]\").val(i.attr(\"data-post-id\")),h.el.show().appendTo(s.closest(\".ds-ctx-body, .ds-comment-body\")).find(\"textarea\").focus(),h.actionsBar=a.addClass(\"ds-reply-active\"),t.max_depth<=1?h.postList=e.postList.el:(h.postList=i.siblings(\".ds-children\"),h.postList[0]||(h.postList=H('<ul class=\"ds-children\"></ul>').insertAfter(i)))}return!1}function d(){function e(e){W(e),i.append(H.map(e.response,function(e){return et.post({post:e,options:t})}).join(\"\"))}{var s=H(this).closest(\".ds-post-self\"),a=s.attr(\"data-post-id\");s.data(\"source\")}if(0!=s.attr(\"data-root-id\"))return!1;var i=s.siblings(\".ds-children\");return i[0]?(i.remove(),!1):(i=H('<ul class=\"ds-children\"></ul>').insertAfter(s),R.get(\"posts/listComments\",B({post_id:a}),e),!1)}function l(){var t=H(this).closest(\".ds-post-self\"),s=lt[t.attr(\"data-post-id\")],a=s.data.source;if(!nt.data.social_uid[\"qqt\"==a?\"qq\":a])return void y(a);var i=s.data.root_id,r=\"0\"!=i?lt[i]:s,n=\"\";if(\"0\"!=i){var o=prepatePost(s.data).theAuthor;n=(\"weibo\"==a?\"//@\"+o.name:\"|| @\"+o.qqt_account)+\":\"+s.data.message}return x(r,n,e,a),!1}function c(){var e=H(this).parent();return e.siblings().show(),e.remove(),!1}function u(){function t(){function t(e){var t=e.response;ct[c]?ct[c].set(t):ct[c]=new $(t),X.owner==s&&K.html(et.userInfo(t))}tt=0,X.owner=s,N();var i=a.offset(),r=e.el.offset(),n=a.innerWidth()/2,o=e.el.innerHeight()-(i.top-r.top)+6,d=i.left-r.left-35+(n>35?35:n);try{if(a.hasClass(\"ds-comment-context\"))K.attr(\"id\",\"ds-ctx-bubble\").attr(\"data-post-id\",a.attr(\"data-post-id\")).html('<ul id=\"ds-ctx\">'+et.ctxPost({post:lt[a.attr(\"data-parent-id\")].toJSON()})+'</ul><div class=\"ds-bubble-footer\"><a class=\"ds-ctx-open\" href=\"javascript:void(0);\">查看对话</a></div>');else if(a.hasClass(\"ds-avatar\")||a.hasClass(\"ds-user-name\")){var l={},c=l.user_id=a.attr(\"data-user-id\");if(!c)throw\"no info\";K.attr(\"id\",\"ds-user-card\").attr(\"data-user-id\",c).empty(),ct[c]?K.html(et.userInfo(ct[c].data)):R.get(\"users/profile\",B(l),t)}X.css({bottom:o,left:d}).appendTo(e.innerEl)}catch(u){X.detach()}}var s=this;if(bubbleOutTimer&&X.owner==s)return clearTimeout(bubbleOutTimer),void(bubbleOutTimer=0);var a=H(s);tt=setTimeout(t,200)}function p(){tt?(clearTimeout(tt),tt=0):bubbleOutTimer||I()}var h;this.delegate(\"a.ds-post-likes\",\"click\",s).delegate(\"a.ds-post-repost\",\"click\",a).delegate(\"a.ds-post-delete\",\"click\",i).delegate(\"a.ds-post-report\",\"click\",n).delegate(\"a.ds-post-reply\",\"click\",o).delegate(\"a.ds-weibo-comments\",\"click\",d).delegate(\"a.ds-weibo-reposts\",\"click\",l).delegate(\"a.ds-expand\",\"click\",c),P.touch||this.delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseenter\",u).delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseleave\",p)}function B(e){var s={require:\"site,visitor,nonce,lang\"+(it++?\"\":\",unread,log,extraCss\"),site_ims:D.get(\"ds_site_\"+c.short_name+\":timestamp\"),lang_ims:D.get(\"ds_lang_\"+c.short_name+\":timestamp\"),referer:t.referrer};c.stylePatch&&(s.style_patch=c.stylePatch);for(var a in s)s[a]&&(!P.ie6||encodeURIComponent(s[a]).length<200)&&(e[a]=s[a]);return e}var H=S.jQuery,V=H(e),Y=H(t);e.postMessage&&(e.addEventListener?e.addEventListener(\"message\",g,!1):e.attachEvent&&e.attachEvent(\"onmessage\",g)),S.scrollTo=function(e){var t=e.offset().top;(t<V.scrollTop()||t>V.scrollTop()+V.height())&&H(\"html, body\").animate({scrollTop:t-40},200,\"swing\")},S.toJSON=function(e){var t=/\\r?\\n/g,s=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,a=/^(?:select|textarea)/i,i=e.map(function(){return this.elements?H.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||a.test(this.nodeName)||s.test(this.type))}).map(function(e,s){var a=H(this).val();return null==a?null:H.isArray(a)?H.map(a,function(e){return{name:s.name,value:e.replace(t,\"\\r\\n\")}}):{name:s.name,value:a.replace(t,\"\\r\\n\")}}).toArray(),r={};return H.each(i,function(){r[this.name]=this.value}),r},S.resetNotify=function(){var e=H(\"#ds-notify\"),s=ot.data;e[0]||(e=H('<div id=\"ds-notify\"></div>').css({hidden:{display:\"none\"},\"top-right\":{top:\"24px\",right:\"24px\"},\"bottom-right\":{bottom:\"24px\",right:\"24px\"}}[rt.data.notify_position]).delegate(\".ds-notify-unread a\",\"click\",function(){return T(H(this).data(\"type\")),!1}).appendTo(t.body)),e.html(et.notify(s))[!s.comments&&!s.notifications||\"hidden\"===rt.data.notify_position||H(\".ds-dialog\")[0]?\"hide\":\"show\"]()},ot.on(\"reset\",S.resetNotify),st.Replybox=function(e){this.embedThread=e},st.Replybox.prototype={render:function(e){function s(e){e.data(\"submitting\",!0),e.find(\".ds-post-button\").addClass(\"ds-waiting\").html(z.posting)[0].disabled=!0}function a(e){e.data(\"submitting\",!1),e.find(\".ds-post-button\").removeClass(\"ds-waiting\").html(z.post)[0].disabled=!1}var i=this,o=i.embedThread,c=o.options,p=function(){S.require(\"smilies\",function(){})},h={thread:o,options:c,inline:e,params:{thread_id:o.threadId,parent_id:\"\",nonce:S.nonce},repostArray:[],checked:0};for(var v in nt.data.repostOptions)nt.data.repostOptions[v]&&(h.repostArray.push(v),h.checked=1);var g=i.el=H(et.replybox(h)).click(p),b=g.find(\"form\"),y=b.find(\"input[type=checkbox]\")[0],_=b.find(\"a.ds-service-icon, a.ds-service-icon-grey\"),k=f(b.find(\"textarea\")).focus(p).keyup(n).keyup(d).bind(\"focus mousedown mouseup keyup\",u),w=g.find(\".ds-add-emote\").click(function(e){var s=S.smiliesTooltip;return w.toggleClass(\"ds-expanded\").hasClass(\"ds-expanded\")?(s||(s=S.smiliesTooltip=new st.SmiliesTooltip,s.render(),S.require(\"smilies\",function(){s.reset(\"微博-默认\")})),s.replybox=i,s.el.appendTo(t.body).css({top:i.el.offset().top+i.el.outerHeight()+4+\"px\",left:i.el.find(\".ds-textarea-wrapper\").offset().left+\"px\"}),H(t.body).click(x)):x(e),!1}),x=(g.find(\".ds-add-image\").click(function(e){var s=k[0],a=s.value,i=\"请输入图片地址\",r='<img src=\"'+i+'\" />';if(t.selection){s.value=a.substring(0,k.data(\"ds-range-start\"))+r+a.substring(k.data(\"ds-range-end\"),a.length),s.value=s.value.replace(\"说点什么吧 ...\",\"\"),s.focus();var n=t.selection.createRange();n.collapse(),n.findText(i),n.select()}else{s.value=a.substring(0,s.selectionStart)+r+a.substring(s.selectionEnd);var o=s.value.search(i);s.setSelectionRange(o,o+i.length),s.focus()}e.preventDefault()}),i.hideSmilies=function(){w.removeClass(\"ds-expanded\"),S.smiliesTooltip.el.detach(),H(t.body).unbind(\"click\",x)}),T=function(e,t){var s=E(et[\"dialog-anonymous\"]({services:[\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"],options:c})),a=s.el.find(\".ds-dialog\").css(\"width\",\"320px\");if(a.find(\".ds-icons-32 a\").click(l),!c.deny_anonymous){var i=s.el.find(\"form\");i.submit(function(){var e=i.find(\"input[name=author_email]\").val();return!e&&!c.require_guest_email||e.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)?(t(S.toJSON(i)),s.close(),!1):(alert(\"请输入一个有效的email地址.\"),!1)}),i.find(\"input[name=author_name]\")[0].focus()}};c.deny_anonymous&&k.focus(function(){if(r()){T(b,q);var e=function(t){t.stopPropagation(),k.unbind(\"click\",e)};k.click(e)}return!1});var q=function(e){s(b),R.post(\"posts/create\",H.extend(S.toJSON(b),e),function(e){var t=lt[e.response.post_id]=new F(e.response),s=M(i.postList,t,c);if(\"asc\"==c.order==(\"top\"==c.formPosition)&&S.scrollTo(s),o.data.comments++,o.updateCounter(\"duoshuo\"),k.val(\"\").trigger(\"keyup\"),a(b),g.hasClass(\"ds-inline-replybox\")&&(g.detach(),i.actionsBar.removeClass(\"ds-reply-active\")),m)try{m.removeItem(\"ds_draft_\"+o.threadId)}catch(r){}},function(e){a(b),alert(e.errorMessage)})};b.submit(function(){if(b.data(\"submitting\"))return!1;var e=H.trim(b[0].message.value);return\"\"==e||!P.placeholder&&e==k.attr(\"placeholder\")?(alert(\"您还没写内容呢\"),!1):(r()?T(b,q):q(),!1)});var C=function(e){return H(e).hasClass(\"ds-service-icon-grey\")?null:H(e).attr(\"data-service\")};if(_.click(function(){return H(this).toggleClass(\"ds-service-icon-grey\").toggleClass(\"ds-service-icon\"),y.value=H.map(_,C).join(\",\"),y.checked=\"\"!=y.value,!1}),H(y).change(function(){var e=this.checked;_[e?\"removeClass\":\"addClass\"](\"ds-service-icon-grey\")[e?\"addClass\":\"removeClass\"](\"ds-service-icon\"),this.value=H.map(_,C).join(\",\")}),!e&&m){var j=\"ds_draft_\"+o.threadId;k.bind(\"focus blur keyup\",function(e){var t=H(e.currentTarget).val();try{m[j]=t}catch(e){}}),m[j]&&k.val(m[j])}return this}},st.Dialog=J.extend({init:function(e,t){(this.el=H(\"#ds-wrapper\"))[0]||(this.el=p(H('<div id=\"ds-wrapper\"></div>'))),this.options=H.extend({width:600},t),e!==s&&H(e).attr(\"id\",\"ds-reset\").appendTo(this.el)},open:function(){function e(e){return 27==e.which?(a.close(),!1):void 0}function s(){return a.close(),!1}var a=this;return a.el.hide().appendTo(t.body).fadeIn(200),P.ie6&&a.el.css(\"top\",V.scrollTop()+100),a.el.show().find(\".ds-dialog\").delegate(\"a.ds-dialog-close\",\"click\",function(){return a.close(),!1}).click(i),Y.keydown(e),H(t.body).click(s),a.close=function(){Y.unbind(\"keydown\",e),H(t.body).unbind(\"click\",s),a.el.fadeOut(200,function(){H(this).remove()}),a.trigger(\"close\")},a}}),et.likePanel=function(e){return e.likes?'<span class=\"ds-highlight\">'+e.likes+\"</span> 人喜欢\":\"\"},st.Meta=function(e){this.embedThread=e},st.Meta.prototype={render:function(){function a(a){function r(e){o.set(e),n.resetLikePanel()}function c(){n.tooltip.detach(),H(t.body).unbind(\"click\",c)}function u(t){switch(this.className){case\"ds-like-tooltip-close\":c(t);break;default:if(!e.open(this.href,\"_blank\",\"height=500,width=600,top=0,left=0,toolbar=no,menubar=no,resizable=yes,location=yes,status=no\"))return}return!1}var p=l.hasClass(\"ds-thread-liked\");if(R.post(\"threads/vote\",{thread_id:n.embedThread.threadId,vote:p?0:1},r),l.toggleClass(\"ds-thread-liked\"),l.find(\".ds-thread-like-text\").text(p?\"喜欢\":\"已喜欢\"),p)return n.tooltip&&c(a),!1;if(n.tooltip===s){var h=et.likeTooltip({services:{qzone:\"QQ空间\",weibo:\"新浪微博\",qqt:\"腾讯微博\",renren:\"人人网\",kaixin:\"开心网\",douban:\"豆瓣网\",baidu:\"百度搜藏\"},thread_id:o.data.thread_id});n.tooltip=H(h).click(i).delegate(\"a\",\"click\",u)}var f={};return f.left=0,f.top=d.position().top+d.outerHeight()-4+\"px\",n.tooltip.appendTo(n.embedThread.innerEl).css(f),H(t.body).click(c),!1}var n=this,o=n.embedThread.model,d=n.el=H(et.meta(o.toJSON())),l=d.find(\".ds-like-thread-button\");return l.click(a),n.resetLikePanel(),r()&&d.hide(),n},resetLikePanel:function(){this.el.find(\".ds-like-panel\").html(et.likePanel(this.embedThread.model.toJSON()))}},st.PostListHead=function(e){this.embedThread=e},st.PostListHead.prototype={render:function(){function e(e){r.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.page=1;var t=e.currentTarget;switch(t.className){case\"ds-comments-tab-duoshuo\":a.params.source=\"duoshuo\",s.replybox.el.show();break;case\"ds-comments-tab-repost\":a.params.source=\"repost\",s.replybox.el.hide();break;case\"ds-comments-tab-weibo\":a.params.source=\"weibo\",s.replybox.el.hide();break;case\"ds-comments-tab-qqt\":a.params.source=\"qqt\",s.replybox.el.hide()}return H(t).addClass(\"ds-current\"),a.refetch(),!1}function t(){return n.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.order=s.options.order=this.className.replace(\"ds-order-\",\"\"),a.params.page=1,a.refetch(),H(this).addClass(\"ds-current\"),!1}var s=this.embedThread,a=s.postList,i=this.el=H(et.postListHead({thread:s.model.toJSON(),options:s.options})),r=i.find(\"ul.ds-comments-tabs\");r.delegate(\".ds-tab a\",\"click\",e);var n=i.find(\".ds-sort\");return n.delegate(\"a\",\"click\",t),n.find(\".ds-order-\"+a.params.order).addClass(\"ds-current\"),this}},st.Paginator=function(e){function t(){return i.params.page=parseInt(this.innerHTML),i.refetch(),a.find(\".ds-current\").removeClass(\"ds-current\"),H(this).addClass(\"ds-current\"),!1}e=e||{};var s=this,a=s.el=e.el||H('<div class=\"ds-paginator\"></div>'),i=s.collection=e.collection;a.delegate(\"a\",\"click\",t)},st.Paginator.prototype={reset:function(e){function t(e){i.push('<a data-page=\"'+e+'\" href=\"javascript:void(0);\">'+e+\"</a>\")}var s,a=this.collection.params.page||1,i=[];if(a>1)for(t(1),s=a>4?a-2:2,s>2&&i.push('<span class=\"page-break\">...</span>');a>s;s++)t(s);if(i.push('<a data-page=\"'+a+'\" href=\"javascript:void(0);\" class=\"ds-current\">'+a+\"</a>\"),a<e.pages){for(s=a+1;a+4>=s&&s<e.pages;s++)t(s);s<e.pages&&i.push('<span class=\"page-break\">...</span>'),t(e.pages)}this.el.html('<div class=\"ds-border\"></div>'+i.join(\" \"))[e.pages>1?\"show\":\"hide\"]()}},S.addSmilies=function(e,t){var s=S.smiliesTooltip;s&&s.el.find(\"ul.ds-smilies-tabs\").append(\"<li><a>\"+e+\"</a></li>\"),S.smilies[e]=t},st.SmiliesTooltip=function(){},st.SmiliesTooltip.prototype={render:function(){function e(){var e=s.replybox,a=e.el.find(\"textarea\"),i=a[0],r=i.value;if(t.selection){i.value=r.substring(0,a.data(\"ds-range-start\"))+this.title+r.substring(a.data(\"ds-range-end\"),r.length),i.value=i.value.replace(z.leave_a_message,\"\"),i.focus();var n=t.selection.createRange();n.moveStart(\"character\",a.data(\"ds-range-start\")+this.title.length),n.collapse(),n.select()}else{var o=i.selectionStart+this.title.length;i.value=r.substring(0,i.selectionStart)+this.title+r.substring(i.selectionEnd),i.setSelectionRange(o,o)}e.hideSmilies(),i.focus()}var s=this,a=s.el=H(et.smiliesTooltip(L));return a.click(i).find(\"ul.ds-smilies-tabs\").delegate(\"a\",\"click\",function(){s.reset(this.innerHTML)}),a.find(\".ds-smilies-container\").delegate(\"img\",\"click\",e),this},reset:function(e){function t(t,s){var i=0===e.indexOf(\"微博\")?\"http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/\"+s.replace(\"_org\",\"_thumb\"):S.STATIC_URL+\"/images/smilies/\"+s;\"WordPress\"===e&&(t=\" \"+t+\" \"),a+='<li><img src=\"'+i+'\" title=\"'+_(t)+'\" /></li>'}var s=this.el.find(\"ul.ds-smilies-tabs\");s.find(\"a.ds-current\").removeClass(\"ds-current\"),s.find(\"a\").filter(function(){return this.innerHTML==e}).addClass(\"ds-current\");var a=\"<ul>\";return H.each(L[e],t),a+=\"</ul>\",this.el.find(\".ds-smilies-container\").html(a),this}},et.postPlaceholder=function(){return['<li class=\"ds-post ds-post-placeholder\">',z.no_comments_yet,\"</li>\"].join(\"\")};var X=H('<div id=\"ds-bubble\"><div class=\"ds-bubble-content\"></div><div class=\"ds-arrow ds-arrow-down ds-arrow-border\"></div><div class=\"ds-arrow ds-arrow-down\"></div></div>'),K=X.find(\".ds-bubble-content\").delegate(\"a.ds-ctx-open\",\"click\",function(){function e(e){function t(e,t){return et.ctxPost({post:e,index:t})}C.log(H.map(e.response,t).join(\"\\n\"));s.el.find(\"ol\");s.el.find(\"ol\").html(H.map(e.response,t).join(\"\\n\"))}var t={};t.post_id=K.attr(\"data-post-id\"),R.get(\"posts/conversation\",t,e);var s=E('<h2>查看对话</h2><ol id=\"ds-ctx\"></ol>');return s.el.find(\".ds-dialog\").css(\"width\",\"600px\"),s.el.find(\".ds-dialog-body\").css({\"max-height\":\"350px\",_height:\"350px\",\"overflow-y\":\"auto\",\"padding-top\":\"10px\"}),!1}),tt=bubbleOutTimer=0;X.mouseenter(N).mouseleave(I),st.PostList=function(e){e&&(e.params&&(this.params=e.params),e.embedThread&&(this.embedThread=e.embedThread)),this.el=H('<ul class=\"ds-comments\"></ul>')},st.PostList.prototype={url:\"threads/listPosts\",render:function(){return U.call(this.el,this.embedThread,this.embedThread.options),this},reset:function(e){var t=this.embedThread.options;this.el.html(e[0]?H.map(lt.getJSON(e),function(e){return et.post({post:e,options:t})}).join(\"\"):et.postPlaceholder())},refetch:function(){function e(e){lt.set(e.parentPosts||e.relatedPosts),ct.set(e.users),s.reset(e.response),s.embedThread.paginator.reset(e.cursor),s.el.fadeTo(200,1),S.scrollTo(s.el),a.remove()}var s=this,a=H(et.indicator()).appendTo(t.body).fadeIn(200);s.el.fadeTo(200,.5),R.get(s.url,s.params,e)}},st.RelatedRead=function(){this._init()},st.RelatedRead.prototype={_init:function(){this.el=H('<div id=\"ds-related-reads\"></div>')},load:function(s){e.__duoshuo_id__=s,e.readsByToutiao=[],e.readsByToutiao.push({id:\"ds-related-reads\",num:3});var a=\"//s0.pstatp.com/site/reads-sdk/5bf3702b38076207bee1.js\",i=t.createElement(\"script\");i.src=a,i.charset=\"utf-8\",i.crossOrigin=\"anonymous\",t.head.appendChild(i)},mount:function(e){this.el.insertBefore(e)}},st.EmbedThread=Q.extend({uri:\"threads/listPosts\",params:\"thread-id local-thread-id source-thread-id thread-key category channel-key author-key author-id url limit order max-depth form-position container-url\"+(v.match(/MSIE 6\\.0/)?\"\":\" title image thumbnail\"),render:function(){var e=this.el;if(\"请将此处替换成文章在你的站点中的ID\"===e.data(\"thread-key\"))return alert(\"请设置正确的 data-thread-key 属性\"),!1;e.attr(\"id\",\"ds-thread\").append(et.waitingImg());var t=e.width(),s=e.data(\"url\")||!e.attr(\"data-thread-id\")&&H(\"link[rel=canonical]\").attr(\"href\");s?e.data(\"url\",k(s)):e.data(\"container-url\",h.href),t&&400>=t&&e.addClass(\"ds-narrow\").data(\"max-depth\",1)},updateCounter:function(e){function t(e){return e.substr(e.indexOf(\"}\")+1)}var s={duoshuo:[\"comments\",t(z.comments_multiple)||\"评论\"],repost:[\"reposts\",t(z.reposts_multiple)||\"转载\"],weibo:[\"weibo_reposts\",t(z.weibo_reposts_multiple)||\"新浪微博\"],qqt:[\"qqt_reposts\",t(z.qqt_reposts_multiple)||\"腾讯微博\"]};for(var a in s)if(!e||e==a){var i=this.data[s[a][0]];this.el.find(\".ds-comments-tab-\"+a).html(this.el.hasClass(\"ds-narrow\")?'<span class=\"ds-service-icon ds-'+a+'\"></span>'+i:(i?'<span class=\"ds-highlight\">'+i+\"</span>\":\"0\")+s[a][1])}},onError:function(e){this.el.html(\"评论框出错啦(\"+e.code+\"): \"+e.errorMessage)},onload:function(t){var a=this,i=a.threadId=t.thread.thread_id,n=t.cursor,o=a.options=t.options,d=a.innerEl=p(H('<div id=\"ds-reset\"></div>').appendTo(a.el));a.model=new G(a.data=t.thread),lt.set(t.parentPosts||t.relatedPosts),ct.set(t.users),a.el.find(\"#ds-waiting\").remove(),t.options&&t.options.show_recommend&&(a.relatedRead=new st.RelatedRead,a.relatedRead.load(t.thread.site_id),a.relatedRead.mount(d)),o.like_thread_enabled&&(a.meta=new st.Meta(a),d.append(a.meta.render().el)),o.hot_posts&&t.hotPosts&&t.hotPosts.length&&(a.hotPosts=new st.HotPosts(H('<div class=\"ds-rounded\"></div>'),{max_depth:1,show_context:o.show_context}),a.hotPosts.thread=a,d.append(a.hotPosts.el),a.hotPosts.onload({list:lt.getJSON(t.hotPosts)})),a.postListHead=new st.PostListHead(a),a.postList=new st.PostList({embedThread:a,params:{source:\"duoshuo\",thread_id:i,max_depth:o.max_depth,order:o.order,limit:o.limit}}),a.postList.render().reset(t.response),a.paginator=new st.Paginator({collection:a.postList}),a.paginator.reset(n);var c=a.replybox=new st.Replybox(a);c.postList=a.postList.el,r()?a.loginButtons=H(et.loginButtons()).delegate(\"a.ds-more-services\",\"click\",function(){return a.loginButtons.find(\".ds-additional-services\").toggle(),!1}).delegate(\"a.ds-service-link\",\"click\",l):a.toolbar=H(et.toolbar()).delegate(\".ds-account-control\",\"mouseenter\",function(){H(this).addClass(\"ds-active\")}).delegate(\".ds-account-control\",\"mouseleave\",function(){H(this).removeClass(\"ds-active\")}).delegate(\"a.ds-bind-more\",\"click\",function(){var e=E(et[\"dialog-bind-more\"]()).el.find(\".ds-dialog\").addClass(\"ds-dialog-bind-more\").css(\"width\",\"300px\");return e.find(\"a.ds-service-link\").click(l),!1}).delegate(\"a.ds-unread-comments-count\",\"click\",function(){return T(\"unread-comments\"),!1});var u=['<a name=\"respond\"></a>',a.toolbar||a.loginButtons,c.render().el];\"top\"==o.formPosition&&H.fn.append.apply(d,u),d.append(a.postListHead.render().el,a.postList.el,a.paginator.el),\"bottom\"==o.formPosition&&H.fn.append.apply(d,u),d.append(et.poweredBy(o.poweredby_text)),a.updateCounter(),t.alerts&&H.each(t.alerts,function(e,t){H('<div class=\"ds-alert\">'+t+\"</div>\").insertBefore(a.toolbar||loginButtons)}),o.message&&c.el.find(\"textarea\").val(o.message).focus(),ot.on(\"reset\",function(){var e=ot.data.comments||0;d.find(\"a.ds-unread-comments-count\").html(e).attr(\"title\",e?\"你有\"+e+\"条新回复\":\"你没有新回复\").css(\"display\",e?\"inline\":\"none\")}),o.mzadx_id&&(S.require(\"mzadxN\",function(){}),H('<div id=\"MZADX_'+o.mzadx_id+'\" style=\"margin:0 auto;\"></div>').appendTo(d),__mz_rpq=e.__mz_rpq||[],__mz_rpq.push({l:[o.mzadx_id],r:\"1\",_srv:\"MZADX\",_callback:function(){}})),S.thread=a,ot.data!==s&&ot.trigger(\"reset\"),r()||A.send({visit_thread_id:a.threadId})},onMessage:function(e){M(this.postList.el,new F(e),this.options)}}),st.HotPosts=Q.extend({tmpl:\"hotPosts\",params:\"show-quote\",render:function(){return this.el.attr(\"id\",\"ds-hot-posts\"),this},onload:function(e){e.options=H.extend(this.options,e.options),Q.prototype.onload.call(this,e),U.call(this.el.find(\"ul\"),this.thread,this.options)}}),st.RecentComments=Q.extend({tmpl:\"commentList\",uri:\"sites/listRecentPosts\",params:\"show-avatars show-time show-title avatar-size show-admin excerpt-length num-items channel-key\",render:function(){this.el.attr(\"id\",\"ds-recent-comments\")},prepare:function(e){return{list:H.map(e.response,function(e){return new F(e).toJSON()})}}}),st.RecentVisitors=Q.extend({tmpl:\"recentVisitors\",uri:\"sites/listVisitors\",params:\"show-time avatar-size num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-recent-visitors\").append(this.waitingEl=H(et.waitingImg()))}}),st.TopThreads=Q.extend({tmpl:\"topThreads\",uri:\"sites/listTopThreads\",params:\"range num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-top-threads\").append(this.waitingEl=H(et.waitingImg()))}}),st.LoginWidget=Q.extend({tmpl:\"loginWidget\",render:function(){var e=this.el;e.attr(\"id\",\"ds-login\").html(et.loginWidget([\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"])),e.find(\"a\").click(l),e.find(\"a.ds-logout\").attr(\"href\",Z.logoutUrl())}}),st.ThreadCount=Q.extend({onload:function(e){var t=this.el,s=t.data(\"count-type\")||\"comments\",a=e.data[s];t[t.data(\"replace\")?\"replaceWith\":\"html\"](z[s+\"_\"+(a?a>1?\"multiple\":\"one\":\"zero\")].replace(\"{num}\",a))}}),st.ShareWidget=Q.extend({tmpl:\"shareWidget\",render:function(){var e={copyright:\"多说分享插件\",services:[\"weibo\",\"qzone\",\"sohu\",\"renren\",\"netease\",\"qqt\",\"kaixin\",\"douban\",\"qq\",\"meilishuo\",\"mogujie\",\"baidu\",\"taobao\",\"google\",\"wechat\",\"diandian\",\"huaban\",\"duitang\",\"youdao\",\"pengyou\",\"facebook\",\"twitter\",\"linkedin\",\"msn\"]};this.el.attr(\"id\",\"ds-share\"),this.el.children().attr(\"id\",\"ds-reset\"),this.el.find(\".ds-share-aside-inner\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").hide(),this.el.hasClass(\"flat\")&&this.el.find(\"a\").each(function(){H(this).addClass(\"flat\")}),p(this.el),this.delegateEvents()},delegateEvents:function(){var s=this,i=s.el;if(i.children().hasClass(\"ds-share-inline\")){var r=\".ds-share-icons-more\",n=i.find(r),d=\"[data-toggle=ds-share-icons-more]\";i.delegate(d,\"mouseover\",function(){n.show()}),i.delegate(d,\"mouseout\",function(){n.hide()}),i.delegate(r,\"mouseover\",function(){n.show()}),i.delegate(r,\"mouseout\",function(){n.hide()})}else{var l=i.children().hasClass(\"ds-share-aside-left\")?\"slide-to-right\":\"slide-to-left\",c=i.children();if(!o.cssProperty(\"transition\")){var u=i.children().hasClass(\"ds-share-aside-left\")?\"left\":\"right\";i.delegate(\".ds-share-aside-toggle\",\"mouseover\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)-195:e[u]=0,c.animate(e,200)}),i.delegate(\".ds-share-aside-inner\",\"mouseleave\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)+230:e[u]=-229,c.animate(e,200)})}i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseover\",function(){c.addClass(l)}),i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseleave\",function(){c.removeClass(l)})}i.delegate(\"a\",\"click\",function(t){var s=H(this).data(\"service\");if(!i.data(\"url\"))return void alert(\"请设置data-url\");if(\"wechat\"===s){var r=a()+\"/api/qrcode/getImage.png\",n=\"?size=240&text=\"+i.data(\"url\"),d=E(et[\"dialog-qrcode\"]({qrcode_url:r+n,url:i.data(\"url\")}));d.el.find(\".ds-dialog\").css(\"width\",\"320px\")}else{var l=a()+\"/share-proxy/?\"+o.param({service:H(this).data(\"service\"),thread_key:i.data(\"threadKey\"),title:i.data(\"title\"),images:i.data(\"images\"),content:i.data(\"content\"),url:i.data(\"url\")});e.open(l,\"_blank\")}t.preventDefault(),t.stopPropagation()})}});var it=0;S.initSelector=function(e,t){function s(e){W(e),o.extend(z,e.options),dt.set(e.response)}var a=[];!q()||!H.isReady&&j||H(e).each(function(e,s){var i=H(s);if(!i.data(\"initialized\")){i.data(\"initialized\",!0);var r=new st[t.type](i,t);if(at.push(r),\"ThreadCount\"===t.type){var n=i.attr(\"data-thread-key\");i.attr(\"data-channel-key\")&&(n=i.attr(\"data-channel-key\")+\":\"+n),a.push(n),dt[n]||(dt[n]=new G({})),dt[n].on(\"reset\",function(){r.onload(this)})}else if(r.uri){var o={};H.each(r.params.split(\" \"),function(e,t){o[t.replace(/-/g,\"_\")]=i.attr(\"data-\"+t)||i.data(t)}),R.get(r.uri,B(o),function(e){r.load(e)})}}}),a.length&&R.get(\"threads/counts\",B({threads:a.join(\",\")}),s)},(S.initView=function(){H.each(O,S.initSelector)})(),H(function(){if(!c){if(!q())return C.error(\"缺少 duoshuoQuery 的定义\");C.warn(\"请在加载多说 embed.js 之前定义 duoshuoQuery\")}setInterval(function(){H(\".ds-time\").each(function(){var e=H(this).attr(\"datetime\");e&&(this.innerHTML=S.elapsedTime(e))})},2e4),c.ondomready&&c.ondomready(),S.initView(),!it&&c.short_name&&R.get(\"analytics/ping\",B({}),W)})})}}(window,document);","date":"2016-08-12T07:26:23.000Z","updated":"2016-08-12T07:26:23.000Z","path":"images/embed.js","layout":"false","title":"","comments":1,"_id":"cjbn5uujj0007pev2jscdgipw","content":"!function(e,t,s){function a(){return c.short_name?g+\"//\"+c.short_name+\".\"+S.DOMAIN:S.REMOTE}function i(){function t(){for(var t;t=y.shift();){var a=t.url,i=new s(t.title,{dir:\"auto\",icon:t.iconUrl,body:t.body});try{i.onclick=function(){e.focus(),h.href=a,i.close()}}catch(r){}setTimeout(function(){i.close&&i.close()},8e3)}}var s=e.Notification;\"Notification\"in e&&\"denied\"!==s.permission&&(\"granted\"===s.permission&&t(),s.requestPermission(function(e){\"granted\"===e&&t()}))}function r(){return 0==nt.data.user_id}function n(e){S.theme=e,\"none\"!=e&&o.injectStylesheet(S.STATIC_URL+\"/styles/embed\"+(e?\".\"+e+\".css?\"+M[e]:\".\"+short_name)+\".css\")}var o={},d=t.getElementsByTagName(\"head\")[0]||t.getElementsByTagName(\"body\")[0];if(o.extend=function(e,t){for(var s in t)e[s]=t[s];return e},o.injectScript=function(a,i){var r=t.createElement(\"script\"),n=t.head||t.getElementsByTagName(\"head\")[0]||t.documentElement;r.type=\"text/javascript\",r.src=a,r.async=\"async\",r.charset=\"utf-8\",i&&(r.onload=r.onreadystatechange=function(t,a){var o=a||!r.readyState||/loaded|complete/.test(r.readyState);o&&(r.onload=r.onreadystatechange=null,n&&r.parentNode&&n.removeChild(r),r=s,a||i.call(e))}),n.insertBefore(r,n.firstChild)},o.injectStylesheet=function(e){var s=t.createElement(\"link\");s.type=\"text/css\",s.rel=\"stylesheet\",s.href=e,d.appendChild(s)},o.injectStyle=function(e){var s=t.createElement(\"style\");return s.type=\"text/css\",d.appendChild(s),e=e.replace(/\\}/g,\"}\\n\"),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(t.createTextNode(e)),s},o.getCookie=function(e){for(var a,i,r,n=\" \"+e+\"=\",o=t.cookie.split(\";\"),d=0;d<o.length;d++)if(a=\" \"+o[d],i=\"a.indexOf(n),i\">=0&&i+n.length==(r=a.indexOf(\"=\")+1))return decodeURIComponent(a.substring(r,a.length).replace(/\\+/g,\"\"));return s},o.param=function(e){var t=[];for(var a in e)e[a]!=s&&t.push(a+\"=\"+encodeURIComponent(e[a]));return t.join(\"&\")},o.cssProperty=function(e,s){var a=(t.body||t.documentElement).style;if(\"undefined\"==typeof a)return!1;if(\"string\"==typeof a[e])return s?e:!0;for(var i=[\"Moz\",\"Webkit\",\"ms\"],e=e.charAt(0).toUpperCase()+e.substr(1),r=0;r<i.length;r++)if(\"string\"==typeof a[i[r]+e])return=\"\" s?i[r]+e:!0},!e.duoshuo){for(var=\"\" l=\"\" in=\"\" object.prototype)return=\"\" alert(\"object.prototype=\"\" 不为空，请不要给=\"\" object.prototype=\"\" 设置方法\");var=\"\" c,u,p=\"e.JSON,h=e.location,f=e.XMLHttpRequest,m=p&&p.stringify&&e.localStorage,v=e.navigator.userAgent,g=\"https:\"==t.location.protocol?\"https:\":\"http:\",b=0,y=[],_=u=function(){function\" e(e){return=\"\" t[e]||\"&amp;\"}var=\"\" t=\"{\"<\":\"&lt;\",\"\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},s=/&(?!\\w+;)|[<>\"'`]/g,a=/[&<>\"'`]/;return function(t){return null==t||t===!1?\"\":a.test(t)?t.replace(s,e):t}}(),k=function(e){if(e.match(/^(http|https):/))return e;var s=t.createElement(\"a\");return s.href=e,P.hrefNormalized?s.href:s.getAttribute(\"href\",4)},w=function(e){return function(){return e}},x=function(){for(var e={},t=0;t<arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var 10=\"\" 28=\"\" s=\"o.param(e);return\" s?\"?\"+s:\"\"},t=\"function(){var\" e=\"o.getCookie(\"duoshuo_token\");return\" e?{jwt:e}:c.remote_auth?{short_name:c.short_name,remote_auth:c.remote_auth}:s},q=\"function(){if(!c&&(c=e.duoshuoQuery)){if(!c.short_name||\"your_duoshuo_short_name\"===c.short_name)return\" c=\"s,void\" alert(\"你还没有设置多说域名(duoshuoquery.short_name)，填入已有域名或创建新站点：http:=\"\" duoshuo.com=\"\" create-site=\"\" \");it.trigger(\"querydefined\")}return=\"\" c},c=\"function(e){return\" e&&e.error&&e.warn?e:{error:function(){},log:function(){},warn:function(){}}}(e.console),s=\"e.DUOSHUO={sourceName:{weibo:\"新浪微博\",qq:\"QQ\",qzone:\"QQ空间\",qqt:\"腾讯微博\",renren:\"人人网\",douban:\"豆瓣网\",kaixin:\"开心网\",sohu:\"搜狐微博\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},serviceNames:{weibo:\"微博\",qq:\"QQ\",douban:\"豆瓣\",renren:\"人人\",kaixin:\"开心\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},parseDate:function(e){return\" e.parse(\"2011-10-28t00:00:00+08:00\")&&function(t){return=\"\" new=\"\" e(t)}||e.parse(\"2011=\"\" 28t00:00:00+0800\")&&function(t){return=\"\" e(t.replace(=\"\" -=\"\" g,\"=\"\" \").replace(=\"\" :(\\d\\d)$=\"\" ,\"$1\"))}||e.parse(\"2011=\"\" 00:00:00+0800\")&&function(t){return=\"\" ,\"$1\").replace(\"t\",\"=\"\" \"))}||function(t){return=\"\" e(t)}}(date),fulltime:function(e){var=\"\" t=\"S.parseDate(e);return\" t.getfullyear()+\"年\"+(t.getmonth()+1)+\"月\"+t.getdate()+\"日=\"\" \"+t.tolocaletimestring()},elapsedtime:function(e){var=\"\" date,a=\"(s-b-t)/1e3;return\">a?\"刚刚\":60>a?Math.round(a)+\"秒前\":3600>a?Math.round(a/60)+\"分钟前\":86400>a?Math.round(a/3600)+\"小时前\":(s.getFullYear()==t.getFullYear()?\"\":t.getFullYear()+\"年\")+(t.getMonth()+1)+\"月\"+t.getDate()+\"日\"},compileStyle:function(e){var t=\"\",s={};if(s.textbox=\"#ds-thread #ds-reset .ds-replybox .ds-textarea-wrapper\",!e)return t;for(var a in e)t+=s[a]+\"{\"+e[a]+\"}\\n\";return t},init:function(e,t){e&&!O[e]&&(O[e]=t||{type:\"EmbedThread\"}),S.initView&&S.initView()}},j=t.all,P=S.support=function(){var s=t.createElement(\"div\");s.innerHTML='<a href=\"/a\" style=\"opacity:.55;\">a</a><input type=\"checkbox\">';var a=s.getElementsByTagName(\"a\")[0],i=s.getElementsByTagName(\"input\")[0],r={placeholder:\"placeholder\"in i,touch:\"ontouchstart\"in e||\"onmsgesturechange\"in e,opacity:/^0.55$/.test(a.style.opacity),hrefNormalized:\"/a\"===a.getAttribute(\"href\"),iOS:v.match(/ \\((iPad|iPhone|iPod);( U;)? CPU( iPhone)? OS /),android:v.match(/ \\(Linux; U; Android /)};return r.ie6=!f&&\"undefined\"==typeof s.style.maxHeight,r.authInWin=e.postMessage&&e.screen.width>800&&!r.iOS&&!r.android&&h.origin,r}(),O=S.selectors={\".ds-thread\":{type:\"EmbedThread\"},\".ds-recent-comments\":{type:\"RecentComments\"},\".ds-recent-visitors\":{type:\"RecentVisitors\"},\".ds-top-users\":{type:\"TopUsers\"},\".ds-top-threads\":{type:\"TopThreads\"},\".ds-login\":{type:\"LoginWidget\"},\".ds-thread-count\":{type:\"ThreadCount\"},\".ds-share\":{type:\"ShareWidget\"}},E=S.openDialog=function(e){return S.dialog!==s&&S.dialog.el.remove(),S.dialog=new st.Dialog(et.dialog(e)).open()},L=S.smilies={};S.require=function(){function t(e){var t=U[e]?\"?\"+U[e]+\".js\":\"\";return S.STATIC_URL+\"/libs/\"+e+\".js\"+t}var s={mzadxN:\"undefined\"!=typeof mzadxN};return\"undefined\"!=typeof jQuery&&jQuery.fn.jquery>=\"1.5\"&&(s[\"embed.compat\"]=!0,S.jQuery=e.jQuery),function(e,a){if(\"string\"==typeof e)s[e]?a():o.injectScript(t(e),function(){s[e]=!0,a()});else if(\"object\"==typeof e){var i,r=!0;for(i=0;i<e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectscript(t(n),function(){s[n]=!0;for(var t=\"0;t<e.length;t++)if(!s[e[t]])return;a()}))})(e[i]);r&&a()}}}();for(var\" n=\"0,I=[\"EmbedThread\",\"RecentComments\",\"RecentVisitors\",\"TopUsers\",\"TopThreads\",\"LoginWidget\",\"ThreadCount\"];N<I.length;N++)S[I[N]]=function(e){return\" function(t,s){s=\"s||{},s.type=e,t&&!O[t]&&(O[t]=s),S.initSelector&&S.initSelector(t,s)}}(I[N]),S[\"create\"+I[N]]=function(e){return\" function(s,a){var=\"\" i=\"t.createElement(s);for(var\" r=\"\" in=\"\" a)i.setattribute(\"data-\"+r,a[r]);return=\"\" s[e](i),i}}(i[n]);s.recentcommentswidget=\"S.RecentComments;var\" d(e){var=\"\" date-new=\"\" date(t))}function=\"\" l(e,t,s){var=\"\" a,i,o,l=\"t;if(e\">=200&&300>e||304===e)if(304===e)l=\"notmodified\",o=!0;else try{a=p.parse(s),l=\"success\",o=!0}catch(c){l=\"parsererror\",i=c}else{i=l,(!l||e)&&(l=\"error\",0>e&&(e=0));try{a=p.parse(s)}catch(c){l=\"parsererror\",i=c}}o?r&&r(a):\"parseerror\"===l?C.error(\"解析错误: \"+s):(C.error(\"出错啦(\"+a.code+\"): \"+a.errorMessage),n&&n(a),a.errorTrace&&C.error(a.errorTrace)),d(m)}var u=o.getCookie(\"duoshuo_token\");i=i||{},i.v=S.version,u?i.jwt=u:c.remote_auth&&(i.remote_auth=c.remote_auth);var h=f&&p&&p.parse;if(h){var m=new f,v=!!m&&\"withCredentials\"in m;if(v){var g;return m.open(e,a()+\"/api/\"+t+\".json\"+(\"GET\"==e?\"?\"+o.param(i):\"\"),!0),m.withCredentials=!0,m.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\"),m.send(\"GET\"==e?null:o.param(i)),g=function(e,t){var a,i,r,n;try{if(g&&(t||4===m.readyState))if(g=s,t)4!==m.readyState&&m.abort();else{a=m.status,r=m.getAllResponseHeaders();try{n=m.responseText}catch(e){}try{i=m.statusText}catch(o){i=\"\"}}}catch(d){t||l(-1,d)}n&&l(a,i,n,r)},void(4===m.readyState?g():m.onreadystatechange=g)}}\"GET\"!=e&&(i._method=\"POST\");var y=\"cb_\"+Math.round(1e6*Math.random());R[y]=function(e){switch(e.code){case 0:r&&r(e);break;default:n&&n(e),C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}},i.callback=\"DUOSHUO.API['\"+y+\"']\",o.injectScript(a()+\"/api/\"+t+\".jsonp?\"+o.param(i))},get:function(e,t,s,a){return this.ajax(\"GET\",e,t,s,a)},post:function(e,t,s,a){return this.ajax(\"POST\",e,t,s,a)}},A=S.ws={messages:[],send:function(s){if(!(\"WebSocket\"in e&&p))return!1;var a=this;if(a.messages.push(p.stringify(s)),!a.webSocket){var r=\"https:\"===t.location.protocol?\"wss://ws.duoshuo.com:8202/\":\"ws://ws.duoshuo.com:8201/\",n=a.webSocket=new WebSocket(r);n.onopen=function(){var e,t=1===n.readyState;if(t)for(;e=a.messages.shift();)n.send(e)},n.onmessage=function(e){try{var t=p.parse(e.data)}catch(s){return}switch(t.type){case\"post\":for(var a,r=0;r<s.pagelets.length;r++)a=s.pagelets[r],a.threadid==t.thread_id&&a.onmessage(t);break;case\"notification\":y.push(t),i()}},e.addeventlistener(\"beforeunload\",function(){n.close()})}a.websocket.onopen()}};s.domain=\"duoshuo.com\",s.static_url=g+\" static.duoshuo.com\",s.remote=\"g+\"//duoshuo.com\",S.version=\"16.6.16\";var\" m=\"{\"default\":\"9b2a46a0\",dark:\"33f3a5ac\",bluebox:\"39a75d50\",newhua:\"706ba4eb\",justflat:\"9d72ec5a\"},U={\"embed.compat\":\"24f8ca3f\",smilies:\"921e8eda\"},z={post:\"发布\",posting:\"正在发布\",settings:\"设置\",reply:\"回复\",like:\"顶\",repost:\"转发\",report:\"举报\",\"delete\":\"删除\",reply_to:\"回复\" \",reposts:\"转发\",comments:\"评论\",floor:\"楼\",latest:\"最新\",earliest:\"最早\",hottest:\"最热\",share_to:\"分享到:\",leave_a_message:\"说点什么吧…\",no_comments_yet:\"还没有评论，沙发等你来抢\",repost_reason:\"请输入转发理由\",hot_posts_title:\"被顶起来的评论\",comments_zero:\"暂无评论\",comments_one:\"1条评论\",comments_multiple:\"{num}条评论\",reposts_zero:\"暂无转发\",reposts_one:\"1条转发\",reposts_multiple:\"{num}条转发\",weibo_reposts_zero:\"暂无新浪微博\",weibo_reposts_one:\"1条新浪微博\",weibo_reposts_multiple:\"{num}条新浪微博\",qqt_reposts_zero:\"暂无腾讯微博\",qqt_reposts_one:\"1条腾讯微博\",qqt_reposts_multiple:\"{num}条腾讯微博\"},d=\"{get:function(e){return\" m?m[e]:void=\"\" 0},save:function(e,t){if(m)try{m.removeitem(e),m[e]=\"p.stringify(t),m.removeItem(e+\":timestamp\"),m[e+\":timestamp\"]=Math.floor((new\" date-b)=\"\" 1e3)}catch(s){}}},w=\"S.loadRequire=function(t){if(t.visitor&&(!nt.data&&t.visitor.user_id&&e.Notification&&A.send({logged_user_id:t.visitor.user_id}),nt.reset(t.visitor)),t.site&&(rt.reset(t.site),D.save(\"ds_site_\"+c.short_name,t.site)),!S.theme&&rt.data.theme&&n(rt.data.theme),t.lang&&(o.extend(z,t.lang),D.save(\"ds_lang_\"+c.short_name,t.lang)),t.stylesheets)for(var\" s=\"0;s<t.stylesheets.length;s++)o.injectStylesheet(t.stylesheets[s]);if(t.nonce&&(S.nonce=t.nonce),t.style&&o.injectStyle((t.style||\"\")+S.compileStyle(c.component_style)),t.unread&&ot.reset(t.unread),t.warnings)for(var\" t(){!b&&this.init&&this.init.apply(this,arguments)}b=\"1;var\" this;b=\"0;for(var\" a=\"\" in=\"\" e)s[a]=\"e[a];return\" t.prototype=\"s,t.prototype.constructor=t,t.extend=arguments.callee,t};var\" j=\"S.Event=H.extend({on:function(e,t){var\" a[e]=\"==s&&(a[e]=[]),a[e].push(t),this},trigger:function(e,t){var\" this}}),q=\"S.Widget=J.extend({init:function(e,t){this.el=e,this.options=t||{},this.render()},render:function(){},reset:function(){},load:function(e){switch(e.code){case\" 0:w(e);var=\"\" t=\"this.prepare(e);t.options=o.extend(this.options,e.options),this.onload(t);break;default:this.onError(e)}},onload:function(e){this.el.html(et[this.tmpl](e))},prepare:function(e){return\" e},onmessage:function(){},onerror:function(e){c.error(\"出错啦(\"+e.code+\"):=\"\" \"+e.errormessage),e.errortrace&&c.error(e.errortrace)}}),v=\"S.Model=J.extend({init:function(e){this.data=e},reset:function(e){this.data=e,this.trigger(\"reset\")},remove:function(e){this.data.splice(e,1),this.trigger(\"reset\")},set:function(e,t){if(t===s)for(var\" e)this.data[a]=\"e[a];else\" this.data[e]=\"t;return\" this.trigger(\"reset\"),this},tojson:function(){return=\"\" o.extend({},this.data)}}),$=\"V.extend({toJSON:function(){return\" o.extend({},this.data)}}),f=\"V.extend({toJSON:function(){var\" e=\"o.extend({},this.data);return\" e.theauthor=\"ct[this.data.author_id]&&ct[this.data.author_id].data||this.data.author,e.parents=this.data.parents||[],e}}),G=V.extend({toJSON:function(){return\" o.extend({},this.data)}}),y=\"function(e){this.model=e};Y.prototype.set=function(e){for(var\" e)e[t]&&(this[t]?this[t].set(e[t]):this[t]=\"new\" this.model(e[t]))},y.prototype.get=\"function(e){for(var\" s},y.prototype.getjson=\"function(e){for(var\" s};var=\"\" z=\"{userUrl:function(e){return\" e.url},avatarurl:function(e){return=\"\" e.avatar_url||rt.data.default_avatar_url},loginurl:function(e,t){return=\"\" t||(t=\"{}),c.sso&&c.sso.login&&(t.sso=1,t.redirect_uri=c.sso.login),a()+\"/login/\"+e+\"/\"+x(t)},bindUrl:function(e){return\" a()+\"=\"\" bind=\"\" \"+e+\"=\"\" \"+x(c.sso&&c.sso.login?{sso:1,redirect_uri:c.sso.login}:null,t())},logouturl:function(){return=\"\" logout=\"\" \"+x(c.sso&&c.sso.logout?{sso:1,redirect_uri:c.sso.logout}:null)}},x=\"[\"weixin\",\"weibo\",\"qq\",\"renren\"],K=[\"douban\",\"kaixin\",\"baidu\",\"google\"],et=S.templates={userAnchor:function(e){return\" e.url?'<a=\"\" rel=\"nofollow author\" target=\"_blank\" href=\"'+_(e.url)+'\">'+_(e.name)+\"\":_(e.name)},avatarImg:function(e,t){return'<img src=\"'+_(Z.avatarUrl(e,t))+'\" alt=\"'+_(e.name)+'\" '+(t?'=\"\" style=\"width:'+t+\" px;height:\"+t+'px\"':\"\")+\"=\"\">\"},avatar:function(e,t){var s=et.avatarImg(e,t),i=Z.userUrl(e);return i?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(i)+'\" '+(e.user_id?\"=\"\" onclick=\"\\\"this.href='\"+a()+\"/user-url/?user_id=\"+e.user_id+\"';\\\"\":\"\")+'\" title=\"'+_(e.name)+'\">'+s+\"</a>\":s},timeText:function(e){return e?'<span class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</span>\":\"\"},timeAnchor:function(e,t){return e?'<a href=\"'+t+'\" target=\"_blank\" rel=\"nofollow\" class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</a>\":\"\"},serviceIcon:function(e,t){return'<a href=\"javascript:void(0)\" class=\"ds-service-icon'+(t?\" -grey\":\"\")+\"=\"\" ds-\"+e+'\"=\"\" data-service=\"'+e+'\" title=\"'+S.sourceName[e]+'\" target=\"_blank\" rel=\"noopener\"></a>'},poweredBy:function(e){return'<p class=\"ds-powered-by\"><a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"nofollow\">'+_(e)+\"</a></p>\"},indicator:w('<div id=\"ds-indicator\"></div>'),waitingImg:w('<div id=\"ds-waiting\"></div>'),loginItem:function(e,t){var s=Z[t?\"bindUrl\":\"loginUrl\"](e);return'<li>    <a href=\"'+s+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+e+'\">'+S.serviceNames[e]+(nt.data.social_uid[e]?' <span class=\"ds-icon ds-icon-ok\"></span>':\"\")+\"</a></li>\"}},tt=function(e){var t=[];for(var s in e)t.push('<input type=\"hidden\" name=\"'+s+'\" value=\"'+_(e[s])+'\">');return t.join(\"\\n\")};et.commentList=function(e){var t=\"\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li class=\"ds-comment',e.options.show_avatars&&(t+=\" ds-show-avatars\"),t+=\"\" data-post-id=\"\" +a.post_id+'\"=\"\">',e.options.show_avatars&&(t+='<div class=\"ds-avatar\">'+et.avatar(a.theAuthor,e.options.avatar_size)+\"</div>\"),t+='<div class=\"ds-meta\">'+et.userAnchor(a.theAuthor),e.options.show_time&&(t+=et.timeText(a.created_at)),t+=\"</div>\",t+=e.options.show_title?'<div class=\"ds-thread-title\">在 <a href=\"'+u(a.thread.url)+'#comments\">'+u(a.thread.title)+'</a> 中评论</div><div class=\"ds-excerpt\">'+a.message+\"</div>\":'<a class=\"ds-excerpt\" title=\"'+a.thread.title+' 中的评论\" href=\"'+u(a.thread.url)+'#comments\">'+a.message+\"</a>\",t+=\"</li>\";return t},et.ctxPost=function(e){var t=\"\";return e.post&&(t+='<li class=\"ds-ctx-entry\" ',e.hidden&&(t+=\" style=\"display:none\"\" ),t+=\" data-post-id=\"\" +e.post.post_id+'\"=\"\"><div class=\"ds-avatar\">'+et.avatar(e.post.theAuthor||e.post.author)+'</div><div class=\"ds-ctx-body\"><div class=\"ds-ctx-head\">'+et.userAnchor(e.post.theAuthor||e.post.author)+et.timeAnchor(e.post.created_at,e.post.url),e.index>=0&&(t+='<div class=\"ds-ctx-nth\" title=\"'+S.fullTime(e.post.created_at)+'\">'+(e.index+1)+z.floor+\"</div>\"),t+='</div><div class=\"ds-ctx-content\">'+e.post.message,e.index>=0&&(t+='　　　　　　　<div class=\"ds-comment-actions',e.post.vote>0&&(t+=\" ds-post-liked\"),t+=\"\">\" +et.likepost(e.post)+'<a=\"\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'<a class=\"ds-post-reply\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a></div>\"),t+=\"</div></div></li>\"),t},et[\"dialog-anonymous\"]=function(e){var t='<h2>社交帐号登录</h2><div class=\"ds-icons-32\">',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\",e.options.deny_anonymous||(t+='<h2>作为游客留言</h2><form><div class=\"ds-control-group\"><input type=\"text\" name=\"author_name\" id=\"ds-dialog-name\" value=\"'+u(nt.data.name)+'\" required><label for=\"ds-dialog-name\">名字(必填)</label></div>',e.options.require_guest_email&&(t+='<div class=\"ds-control-group\"><input type=\"email\" name=\"author_email\" id=\"ds-dialog-email\" value=\"'+u(nt.data.email)+'\" required><label for=\"ds-dialog-email\">邮箱(必填)</label></div>'),e.options.require_guest_url&&(t+='<div class=\"ds-control-group\"><input type=\"url\" name=\"author_url\" id=\"ds-dialog-url\" placeholder=\"http://\" value=\"'+u(nt.data.url)+'\"><label for=\"ds-dialog-url\">网址(可选)</label></div>'),t+='<button type=\"submit\">发布</button></form>'),t},et[\"dialog-ask-for-auth\"]=function(){var e='<h2>社交帐号登录</h2><ul class=\"ds-service-list\">'+et.serviceList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul>\";return e},et[\"dialog-bind-more\"]=function(){var e='<h2>绑定更多帐号</h2><ul class=\"ds-service-list\">'+et.serviceBindList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceBindList(K)+'</ul><div style=\"clear:both\"></div>';return e},et[\"dialog-qrcode\"]=function(e){var t='<h2>微信扫一扫，分享到朋友圈</h2><div class=\"ds-share-qrcode\" style=\"text-align:center;\"><img src=\"'+e.qrcode_url+'\" alt=\"'+e.url+'\"></div>';return t},et[\"dialog-reposts\"]=function(e){var t='<h2>转发到微博</h2><div class=\"ds-quote\"><strong>@'+u(e.post.theAuthor.name)+\"</strong>: \"+e.post.message+\"</div><form>\"+tt({post_id:e.post.post_id})+'<div class=\"ds-textarea-wrapper\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.repost_reason)+'\">'+u(e.repostMessage)+'</textarea><pre class=\"ds-hidden-text\"></pre>';return t+='</div><div class=\"ds-actions\">',e.service?t+=tt({\"service[]\":e.service}):(t+='<label><input type=\"checkbox\" name=\"service[]\" value=\"weibo\" ',nt.data.social_uid.weibo&&(t+=\" checked=\"checked\"\" ),t+=\" /><span class=\"ds-service-icon ds-weibo\"></span>新浪微博</label><label><input type=\"checkbox\" name=\"service[]\" value=\"qqt\"\" ,nt.data.social_uid.qq&&(t+=\" checked=\"checked\"\" +z.repost+\"<=\"\" button=\"\"></label></div></form>\"},et.dialog=function(e){var t='<div class=\"ds-dialog\"><div class=\"ds-dialog-inner ds-rounded\"><div class=\"ds-dialog-body\">'+e+'</div><div class=\"ds-dialog-footer\"><a href=\"http://duoshuo.com/\" target=\"_blank\" class=\"ds-logo\"></a><span>社会化评论框</span></div><a class=\"ds-dialog-close\" href=\"javascript:void(0)\" title=\"关闭\" target=\"_blank\" rel=\"noopener\"></a></div></div>';return t},et.hotPosts=function(e){var t='<div class=\"ds-header ds-gradient-bg\">'+u(z.hot_posts_title)+\"</div><ul>\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=et.post({post:a,options:e.options});return t+=\"</ul>\"},et.likePost=function(e){var t='<a class=\"ds-post-likes\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-like\"></span>'+z.like;return e.likes>0&&(t+=\"(\"+e.likes+\")\"),t+=\"</a>\"},et.likeTooltip=function(e){var t='<div class=\"ds-like-tooltip ds-rounded\"><p>很高兴你能喜欢，分享一下吧：</p><ul>';for(var s in e.services)t+='<li><a class=\"ds-share-to-'+s+\" ds-service-link=\"\" ds-\"+s+'\"=\"\" href=\"'+a()+\" share-proxy=\"\" ?\"+o.param({service:s,thread_id:e.thread_id})+'\"=\"\">'+e.services[s]+\"</a></li>\";return t+='</ul><p class=\"ds-like-tooltip-footer\"><a class=\"ds-like-tooltip-close\">算了</a></p></div>'},et.loginButtons=function(){var e='<div class=\"ds-login-buttons\"><p>社交帐号登录:</p><div class=\"ds-social-links\"><ul class=\"ds-service-list\">'+et.serviceList(X)+'<li><a class=\"ds-more-services\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">更多»</a></li></ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul></div></div>\";return e},et.loginWidget=function(e){var t='<div class=\"ds-icons-32\">',s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\"},et.meta=function(e){var t='<div class=\"ds-meta\"><a href=\"javascript:void(0)\" class=\"ds-like-thread-button ds-rounded';return e.user_vote>0&&(t+=\" ds-thread-liked\"),t+=\"\"><span class=\"ds-icon ds-icon-heart\"></span> <span class=\"ds-thread-like-text\">\" ,t+=\"e.user_vote\" target=\"_blank\" rel=\"noopener\">0?\"已喜欢\":\"喜欢\",t+='<span class=\"ds-thread-cancel-like\">取消喜欢</span></a><span class=\"ds-like-panel\"></span></div>'},et.notify=function(e){var t='<div id=\"ds-reset\"><a class=\"ds-logo\" href=\"http://duoshuo.com/\" target=\"_blank\" title=\"多说\"></a><ul class=\"ds-notify-unread\"><li';return e.comments||(t+=\" style=\"display:none;\"\" ),t+=\"><a data-type=\"unread-comments\" href=\"javascript:void(0);\">你有\" +e.comments+\"条新回复<=\"\" a=\"\"><li\",e.notifications||(t+=' style=\"display:none;\" '),t+=\"><a data-type=\"unread-notifications\" href=\"javascript:void(0);\">你有\" +e.notifications+\"条系统消息<=\"\" a=\"\"></li\",e.notifications||(t+='></li';return></ul></div>\"},et.post=function(e){var t=\"\",s=e.post,i=e.options,r=s.author;if(t+='<li class=\"ds-post\" data-post-id=\"'+s.post_id+'\"><div class=\"ds-post-self\" data-post-id=\"'+s.post_id+'\" data-thread-id=\"'+s.thread_id+'\" data-root-id=\"'+s.root_id+'\" data-source=\"'+s.source+'\"><div class=\"ds-avatar\" ',r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\">\" +et.avatar(r),s.sourcename[s.source]&&(t+=\"et.serviceIcon(s.source)),t+='</div\"><div class=\"ds-comment-body\"><div class=\"ds-comment-header\">',r.url?(t+='<a class=\"ds-user-name ds-highlight\" data-qqt-account=\"'+(r.qqt_account||\" \")+'\"=\"\" href=\"'+u(r.url)+'\" ',r.user_id&&(t+=\" onclick=\\\" this.href=\"\"+a()+\"/user-url/?user_id=\"+r.user_id+\"\" ;\\\"\"),t+=\" rel=\"nofollow\" target=\"_blank\"\" ,r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\">\" +u(r.name)+\"<=\"\" a=\"\">\"):(t+='<span class=\"ds-user-name\" ',r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\" data-qqt-account=\"\" +(r.qqt_account||\"\")+'\"=\"\">'+u(r.name)+\"</span>\"),t+=\"</a></div>\",1==i.max_depth&&i.show_context&&s.parents.length){t+='<ol id=\"ds-ctx\">';var n=lt.getJSON(s.parents);if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],1==d&&s.parents.length>2&&(t+='<li class=\"ds-ctx-entry\"><a href=\"javascript:void(0);\" class=\"ds-expand\" target=\"_blank\" rel=\"noopener\">还有'+(s.parents.length-2)+\"条评论</a></li>\"),t+=et.ctxPost({post:o,index:d,hidden:d&&d<s.parents.length-1});t+=\"< ol=\"\">\"}if(t+=\"<p>\",s.parents.length>=i.max_depth&&(!i.show_context||i.max_depth>1)&&s.parent_id&&lt[s.parent_id]&&(t+='<a class=\"ds-comment-context\" data-post-id=\"'+s.post_id+'\" data-parent-id=\"'+s.parent_id+'\">'+z.reply_to+u(lt[s.parent_id].toJSON().author.name)+\": </a>\"),t+=s.message+'</p><div class=\"ds-comment-footer ds-comment-actions',s.vote>0&&(t+=\" ds-post-liked\"),t+=\"\">\" ,t+=\"s.url?et.timeAnchor(s.created_at,s.url):et.timeText(s.created_at),\"duoshuo\"==s.source?(t+='<a\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"\"+et.likePost(s)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-report\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-report\"></span>'+z.report+\"</a>\",s.privileges[\"delete\"]&&(t+='<a class=\"ds-post-delete\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-delete\"></span>'+z[\"delete\"]+\"</a>\")):(\"qqt\"==s.source||\"weibo\"==s.source)&&(t+='<a class=\"ds-weibo-comments\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+z.comments,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.comments+\"</span>)\"),t+='</a><a class=\"ds-weibo-reposts\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+z.reposts,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.reposts+\"</span>)\"),t+=\"</a>\"),t+=\"</div></s.parents.length-1});t+=\"<></ol></div></div>\",i.max_depth>1&&(s.childrenArray||s.children)&&\"weibo\"!=s.source&&\"qqt\"!=s.source){t+='<ul class=\"ds-children\">';var c=lt.getJSON(s.childrenArray||s.children);if(c)for(var s,d=-1,p=c.length-1;p>d;)s=c[d+=1],t+=et.post({post:s,options:i});t+=\"</ul>\"}return t+=\"</div></li>\"},et.postListHead=function(e){var t='<div class=\"ds-comments-info\"><div class=\"ds-sort\"><a class=\"ds-order-desc\">'+z.latest+'</a><a class=\"ds-order-asc\">'+z.earliest+'</a><a class=\"ds-order-hot\">'+z.hottest+'</a></div><ul class=\"ds-comments-tabs\"><li class=\"ds-tab\"><a class=\"ds-comments-tab-duoshuo ds-current\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>';return e.options.show_reposts&&e.thread.reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-repost\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\" \",e.options.show_weibo&&e.thread.weibo_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-weibo\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\" \",e.options.show_qqt&&e.thread.qqt_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-qqt\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\"</ul></div>\"},et.recentVisitors=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"</div>\";return t},et[\"related-read\"]=function(e){var t=\"\";if(e&&e.length){t+='<article class=\"ds-reads-expand\"><div class=\"ds-header\">头条推荐</div><section> ';var s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;){if(a=s[i+=1],t+=' <a href=\"'+a.url+'\" class=\"ds-reads-item\"> ',3==a.imgs.length){t+=\" <h2>\"+a.title+'</h2> <div class=\"ds-reads-pics\"> <ul> ';var n=a.imgs;if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],t+=' <li> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+o+');\"></div> </li> ';t+=' </ul> </div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> '}else t+=' <div class=\"ds-reads-desc ',a.imgs.length||(t+=\" ds-reads-only\"),t+=\"\"> <div class=\"ds-reads-title\">\" +a.title+'<=\"\" div=\"\"> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> </div> ',a.imgs.length&&(t+=' <div class=\"ds-reads-pic-right\"> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+a.imgs[0]+');\"> ',a.hasVideo&&(t+=' <div class=\"ds-reads-vid-info\"><span>'+a.videoDuration+\"</span></div> \"),t+=\" </div> </div> \"),t+=\" \";t+=\" </a> \"}t+=\"</section></article>\"}return t},et.replybox=function(e){var t='<div class=\"ds-replybox\"><a class=\"ds-avatar\" ';if(t+=\"r()?'\" href=\"javascript:void(0);\" onclick=\"return false\" ':'=\"\" settings=\"\" avatar=\"\" \"+x(t())+'\"=\"\" target=\"_blank\" title=\"设置头像\" ',t+=\">\" +et.avatarimg(nt.data)+'<=\"\" a=\"\"><form method=\"post\">'+tt(e.params)+'<div class=\"ds-textarea-wrapper ds-rounded-top\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.leave_a_message)+'\"></textarea><pre class=\"ds-hidden-text\"></pre>',t+=\"</div>\",t+='<div class=\"ds-post-toolbar\"><div class=\"ds-post-options ds-gradient-bg\"><span class=\"ds-sync\">',!r()&&nt.data.repostOptions){t+='<input id=\"ds-sync-checkbox',e.inline&&(t+=\" -inline\"),t+=\"\" type=\"checkbox\" name=\"repost\" \" ,e.checked&&(t+=\"checked=\"checked\" \" ),t+=\"value=\"\" +e.repostarray.join(\",\")+'\"=\"\"> <label for=\"ds-sync-checkbox',e.inline&&(t+=\" -inline\"),t+=\"\">\" +z.share_to+\"<=\"\" label=\"\">\";for(var s in nt.data.repostOptions)t+=et.serviceIcon(s,!nt.data.repostOptions[s])}return t+=\"</label></span>\",t+=\"</div>\",t+='<button class=\"ds-post-button\" type=\"submit\">'+u(z.post)+'</button><div class=\"ds-toolbar-buttons\">',e.options.use_smilies&&(t+='<a class=\"ds-toolbar-button ds-add-emote\" title=\"插入表情\"></a>'),e.options.use_images&&e.options.parse_html_enabled&&(t+='<a class=\"ds-toolbar-button ds-add-image\" title=\"插入图片\"></a>'),t+=\"</div></div>\",t+=\"</form></a></div>\"},et.serviceBindList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.bindUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a],nt.data.social_uid[a]&&(t+=' <span class=\"ds-icon ds-icon-ok\"></span>'),t+=\"</a></li>\";return t},et.serviceList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.loginUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a]+\"</a></li>\";return t},et.shareWidget=function(e){var t='<div class=\"ds-share-icons\"> <div class=\"ds-share-icons-inner\"> <ul class=\"ds-share-icons-16\"> ',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=' <li> <a class=\"ds-'+a+'\" href=\"javascript:void(0);\" data-service=\"'+a+'\" target=\"_blank\" rel=\"noopener\">'+S.sourceName[a]+\"</a> </li> \";return t+=' </ul> </div> <div class=\"ds-share-icons-footer\">'+e.copyright+\"</div></div>\"},et.smiliesTooltip=function(e){var t='<div id=\"ds-smilies-tooltip\"><ul class=\"ds-smilies-tabs\">';for(var s in e)t+=\"<li><a>\"+s+\"</a></li>\";return t+='</ul><div class=\"ds-smilies-container\"></div></div>'},et.toolbar=function(){var e='<div class=\"ds-toolbar\"><div class=\"ds-account-control\"><span class=\"ds-icon ds-icon-settings\"></span> <span>帐号管理</span><ul><li><a class=\"ds-bind-more\" href=\"javascript:void(0);\" style=\"border-top: none\" target=\"_blank\" rel=\"noopener\">绑定更多</a></li><li><a target=\"_blank\" href=\"'+S.REMOTE+\" settings=\"\" \"+x(t())+'\"=\"\">'+u(z.settings)+'</a></li><li><a rel=\"nofollow\" href=\"'+Z.logoutUrl()+'\" style=\"border-bottom: none\">登出</a></li></ul></div><div class=\"ds-visitor\">';return e+=nt.data.url?'<a class=\"ds-visitor-name\" href=\"'+u(nt.data.url)+'\" target=\"_blank\">'+u(nt.data.name)+\"</a>\":'<span class=\"ds-visitor-name\">'+u(nt.data.name)+\"</span>\",e+='<a class=\"ds-unread-comments-count\" href=\"javascript:void(0);\" title=\"新回复\" target=\"_blank\" rel=\"noopener\"></a></div></div>'},et.topThreads=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a target=\"_blank\" href=\"'+u(a.url)+'\" title=\"'+u(a.title)+'\">'+u(a.title)+\"</a></li>\";return t},et.topUsers=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"<h4>\"+u(a.name)+\"</h4></div>\";return t},et.userInfo=function(e){var t='<a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\" user-url=\"\" ?user_id=\"+e.user_id+'\\';\" class=\"ds-avatar\" target=\"_blank\">'+et.avatarImg(e)+'</a><a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\" user-url=\"\" ?user_id=\"+e.user_id+'\\';\" class=\"ds-user-name ds-highlight\" target=\"_blank\">'+u(e.name)+\"</a>\";for(var s in e.social_uid)t+='<a href=\"'+S.REMOTE+\" user-proxy=\"\" \"+s+\"=\"\" \"+e.social_uid[s]+'=\"\" \"=\"\" target=\"_blank\" class=\"ds-service-icon ds-'+s+'\" title=\"'+S.sourceName[s]+'\"></a>';return t+='<p class=\"ds-user-card-meta\"><a href=\"'+S.REMOTE+\" profile=\"\" \"+e.user_id+'=\"\" \"=\"\" target=\"_blank\"><span class=\"ds-highlight\">'+e.comments+\"</span>条评论</a></p>\",e.description&&(t+='<p class=\"ds-user-description\">'+u(e.description)+\"</p>\"),t};var st=S.Views={},at=(S.Callbacks={},S.pagelets=[]),it=S.events=new J,rt=S.site=new V,nt=S.visitor=new $,ot=S.unread=new V,dt=S.threadPool=new Y(G),lt=S.postPool=new Y(F),ct=S.userPool=new Y($);it.on(\"queryDefined\",function(){var e=c.short_name;if(c.theme&&n(c.theme),m){var t=m[\"ds_site_\"+e],s=m[\"ds_lang_\"+e];t&&rt.reset(p.parse(t)),s&&o.extend(z,p.parse(s))}}),q(),S.require(\"embed.compat\",function(){function i(e){e.stopPropagation()}function n(e){(e.ctrlKey&&13==e.which||10==e.which)&&H(this.form).trigger(\"submit\")}function d(){var e=H(this);e.height(Math.max(54,e.next(\".ds-hidden-text\").text(this.value).height()+27))}function l(){if(P.authInWin){var e=this.href.match(/\\/(login|bind)\\/(\\w+)\\//i);if(e&&S.serviceNames[e[2]])return!b(e[2],this.href)\n}}function u(){var e,s,a,i,r,n=this,o=0,d=0;t.selection&&(s=t.selection.createRange(),s&&s.parentElement()==n&&(i=n.value.length,e=n.value.replace(/\\r\\n/g,\"\\n\"),a=n.createTextRange(),a.moveToBookmark(s.getBookmark()),r=n.createTextRange(),r.collapse(!1),a.compareEndPoints(\"StartToEnd\",r)>-1?o=d=i:(o=-a.moveStart(\"character\",-i),o+=e.slice(0,o).split(\"\\n\").length-1,a.compareEndPoints(\"EndToEnd\",r)>-1?d=i:(d=-a.moveEnd(\"character\",-i),d+=e.slice(0,d).split(\"\\n\").length-1)))),H(n).data(\"ds-range-start\",o).data(\"ds-range-end\",d)}function p(e){return P.touch&&e.addClass(\"ds-touch\"),o.cssProperty(\"transition\")||e.addClass(\"ds-no-transition\"),P.ie6&&e.addClass(\"ds-ie6\"),P.opacity||e.addClass(\"ds-no-opacity\"),e}function f(e){if(!P.placeholder){var t=e.attr(\"placeholder\");e.val(t).focus(function(){this.value===t&&(this.value=\"\")}).blur(function(){\"\"===this.value&&(this.value=t)})}return e}function g(e){if(\"http://duoshuo.com\"===e.origin)switch(e.data.type){case\"login\":h.href=e.data.redirectUrl}}function b(t,s){var a={weibo:[760,600],renren:[420,322],qq:[504,445],weixin:[450,550],google:[600,440]}[t]||[550,400];return e.open(s+(-1==s.indexOf(\"?\")?\"?\":\"&\")+o.param({origin:h.origin||\"http://\"+h.host}),\"_blank\",\"width=\"+a[0]+\",height=\"+a[1]+\",toolbar=no,menubar=no,location=yes\")}function y(e){var t=Z[r()?\"loginUrl\":\"bindUrl\"](e);P.authInWin&&b(e,t)||(h.href=t)}function w(){var e=E(et[\"dialog-ask-for-auth\"]({})).el.find(\".ds-dialog\").css(\"width\",\"300px\");e.find(\"a.ds-service-link\").click(l)}function x(e,t,s,a){function i(){function e(e){if(s&&a){var t=s.options,i=M(s.postList.el,e.response[a],t);\"asc\"==t.order==(\"top\"==t.formPosition)&&S.scrollTo(i);var r=s.el.find(\".ds-comments-tab-\"+a+\" span.ds-highlight\");r.html(parseInt(r.html())+1)}}return a||l.find(\"[type=checkbox]:checked\")[0]?(R.post(\"posts/repost\",S.toJSON(l),e),o.close(),!1):(alert(\"还没有选发布到哪儿呢\"),!1)}function r(){var e=this.value;return this.checked&&!nt.data.social_uid[\"qqt\"==e?\"qq\":e]?void y(e):void 0}var o=E(et[\"dialog-reposts\"]({post:e.toJSON(),repostMessage:t,service:a})),l=o.el.find(\"form\");return l.submit(i),l.find(\".ds-actions [type=checkbox]\").change(r),f(l.find(\"textarea\")).keyup(n).keyup(d).focus(),!1}function T(e){var t={\"unread-comments\":{title:\"新留言及回复\",apiUrl:\"users/unreadComments\",tmpl:function(e){return e.thread?'<li data-thread-id=\"'+e.thread.thread_id+'\">'+H.map(e.authors,et.userAnchor).join(\"、\")+' 在 <a class=\"ds-read\" href=\"'+e.thread.url+'#comments\" target=\"_blank\">'+_(e.thread.title||\"无标题\")+'</a> 中回复了你 <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">知道了</a></li>':\"\"},read:function(e){var t=e.attr(\"data-thread-id\");R.post(\"threads/read\",{thread_id:t}),ot.data.comments--}},\"unread-notifications\":{title:\"系统消息\",apiUrl:\"users/unreadNotifications\",tmpl:function(e){return'<li data-notification-id=\"'+e.notification_id+'\" data-notification-type=\"'+e.type+'\">'+e.content+' <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">知道了</a></li>'},read:function(e){var t=e.attr(\"data-notification-id\");R.post(\"notifications/read\",{notification_id:t}),ot.data.notifications--}}}[e],s=E(\"<h2>\"+t.title+'</h2><ul class=\"ds-unread-list\"></ul>');s.on(\"close\",S.resetNotify);var a=s.el.find(\".ds-unread-list\").delegate(\".ds-delete\",\"click\",function(){return H(this).parent().remove(),0===a.children().length&&s.close(),!1}).delegate(\".ds-read\",\"click\",function(){t.read(H(this).parent())});H(\"#ds-notify\").hide(),R.get(t.apiUrl,{},function(e){s.el.find(\".ds-unread-list\").html(H.map(e.response,t.tmpl).join(\"\\n\"))})}function N(){bubbleOutTimer&&(clearTimeout(bubbleOutTimer),bubbleOutTimer=0)}function I(){bubbleOutTimer=setTimeout(function(){bubbleOutTimer=0,X.detach()},400)}function M(e,t,s){return e.find(\".ds-post[data-post-id=\"+t.data.post_id+\"]\")[0]?void 0:(e.find(\".ds-post-placeholder\").remove(),H(et.post({post:t.toJSON(),options:s})).hide()[\"asc\"==s.order?\"appendTo\":\"prependTo\"](e).slideDown(function(){}))}function U(e,t){function s(){if(r())return w(),!1;var e=H(this).parent(),t=e.hasClass(\"ds-post-liked\"),s=H(this).html().match(/\\((\\d+)\\)/),a=(s?parseInt(s[1]):0)+(t?-1:1);return R.post(\"posts/vote\",{post_id:e.closest(\".ds-ctx-entry, .ds-post-self\").attr(\"data-post-id\"),vote:t?0:1}),H(this).html(H(this).html().replace(/\\(\\d+\\)/,\"\")+(a?\"(\"+a+\")\":\"\")),e[t?\"removeClass\":\"addClass\"](\"ds-post-liked\"),!1}function a(){var e=H(this).closest(\".ds-post-self\"),t=lt[e.attr(\"data-post-id\")];return x(t,\"\"),!1}function i(){if(!confirm(\"确定要删除这条评论吗？\"))return!1;var t=H(this).closest(\".ds-post-self\");return R.post(\"posts/remove\",{post_id:t.attr(\"data-post-id\")}),t.parent().fadeOut(200,function(){e.data.comments--,e.updateCounter(\"duoshuo\"),H(this).remove()}),!1}function n(){if(!confirm(\"确定要举报这条评论吗？\"))return!1;var e=H(this).closest(\".ds-post-self\");return R.post(\"posts/report\",{post_id:e.attr(\"data-post-id\")}),alert(\"感谢您的反馈！\"),!1}function o(){var s=H(this),a=s.closest(\".ds-comment-actions\");if(a.hasClass(\"ds-reply-active\"))h.el.fadeOut(200,function(){H(this).detach()}),a.removeClass(\"ds-reply-active\");else{var i=s.closest(\".ds-ctx-entry, .ds-post-self\");h?h.actionsBar.removeClass(\"ds-reply-active\"):(h=new st.Replybox(e),h.render(!0).el.addClass(\"ds-inline-replybox\").detach()),h.el.find(\"[name=parent_id]\").val(i.attr(\"data-post-id\")),h.el.show().appendTo(s.closest(\".ds-ctx-body, .ds-comment-body\")).find(\"textarea\").focus(),h.actionsBar=a.addClass(\"ds-reply-active\"),t.max_depth<=1?h.postlist=e.postlist.el:(h.postlist=i.siblings(\".ds-children\"),h.postlist[0]||(h.postlist=h('<ul class=\"ds-children\">').insertAfter(i)))}return!1}function d(){function e(e){W(e),i.append(H.map(e.response,function(e){return et.post({post:e,options:t})}).join(\"\"))}{var s=H(this).closest(\".ds-post-self\"),a=s.attr(\"data-post-id\");s.data(\"source\")}if(0!=s.attr(\"data-root-id\"))return!1;var i=s.siblings(\".ds-children\");return i[0]?(i.remove(),!1):(i=H('<ul class=\"ds-children\"></ul>').insertAfter(s),R.get(\"posts/listComments\",B({post_id:a}),e),!1)}function l(){var t=H(this).closest(\".ds-post-self\"),s=lt[t.attr(\"data-post-id\")],a=s.data.source;if(!nt.data.social_uid[\"qqt\"==a?\"qq\":a])return void y(a);var i=s.data.root_id,r=\"0\"!=i?lt[i]:s,n=\"\";if(\"0\"!=i){var o=prepatePost(s.data).theAuthor;n=(\"weibo\"==a?\"//@\"+o.name:\"|| @\"+o.qqt_account)+\":\"+s.data.message}return x(r,n,e,a),!1}function c(){var e=H(this).parent();return e.siblings().show(),e.remove(),!1}function u(){function t(){function t(e){var t=e.response;ct[c]?ct[c].set(t):ct[c]=new $(t),X.owner==s&&K.html(et.userInfo(t))}tt=0,X.owner=s,N();var i=a.offset(),r=e.el.offset(),n=a.innerWidth()/2,o=e.el.innerHeight()-(i.top-r.top)+6,d=i.left-r.left-35+(n>35?35:n);try{if(a.hasClass(\"ds-comment-context\"))K.attr(\"id\",\"ds-ctx-bubble\").attr(\"data-post-id\",a.attr(\"data-post-id\")).html('<ul id=\"ds-ctx\">'+et.ctxPost({post:lt[a.attr(\"data-parent-id\")].toJSON()})+'</ul><div class=\"ds-bubble-footer\"><a class=\"ds-ctx-open\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">查看对话</a></div>');else if(a.hasClass(\"ds-avatar\")||a.hasClass(\"ds-user-name\")){var l={},c=l.user_id=a.attr(\"data-user-id\");if(!c)throw\"no info\";K.attr(\"id\",\"ds-user-card\").attr(\"data-user-id\",c).empty(),ct[c]?K.html(et.userInfo(ct[c].data)):R.get(\"users/profile\",B(l),t)}X.css({bottom:o,left:d}).appendTo(e.innerEl)}catch(u){X.detach()}}var s=this;if(bubbleOutTimer&&X.owner==s)return clearTimeout(bubbleOutTimer),void(bubbleOutTimer=0);var a=H(s);tt=setTimeout(t,200)}function p(){tt?(clearTimeout(tt),tt=0):bubbleOutTimer||I()}var h;this.delegate(\"a.ds-post-likes\",\"click\",s).delegate(\"a.ds-post-repost\",\"click\",a).delegate(\"a.ds-post-delete\",\"click\",i).delegate(\"a.ds-post-report\",\"click\",n).delegate(\"a.ds-post-reply\",\"click\",o).delegate(\"a.ds-weibo-comments\",\"click\",d).delegate(\"a.ds-weibo-reposts\",\"click\",l).delegate(\"a.ds-expand\",\"click\",c),P.touch||this.delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseenter\",u).delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseleave\",p)}function B(e){var s={require:\"site,visitor,nonce,lang\"+(it++?\"\":\",unread,log,extraCss\"),site_ims:D.get(\"ds_site_\"+c.short_name+\":timestamp\"),lang_ims:D.get(\"ds_lang_\"+c.short_name+\":timestamp\"),referer:t.referrer};c.stylePatch&&(s.style_patch=c.stylePatch);for(var a in s)s[a]&&(!P.ie6||encodeURIComponent(s[a]).length<200)&&(e[a]=s[a]);return e}var=\"\" h=\"S.jQuery,V=H(e),Y=H(t);e.postMessage&&(e.addEventListener?e.addEventListener(\"message\",g,!1):e.attachEvent&&e.attachEvent(\"onmessage\",g)),S.scrollTo=function(e){var\" t=\"e.offset().top;(t<V.scrollTop()||t\">V.scrollTop()+V.height())&&H(\"html, body\").animate({scrollTop:t-40},200,\"swing\")},S.toJSON=function(e){var t=/\\r?\\n/g,s=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,a=/^(?:select|textarea)/i,i=e.map(function(){return this.elements?H.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||a.test(this.nodeName)||s.test(this.type))}).map(function(e,s){var a=H(this).val();return null==a?null:H.isArray(a)?H.map(a,function(e){return{name:s.name,value:e.replace(t,\"\\r\\n\")}}):{name:s.name,value:a.replace(t,\"\\r\\n\")}}).toArray(),r={};return H.each(i,function(){r[this.name]=this.value}),r},S.resetNotify=function(){var e=H(\"#ds-notify\"),s=ot.data;e[0]||(e=H('<div id=\"ds-notify\"></div>').css({hidden:{display:\"none\"},\"top-right\":{top:\"24px\",right:\"24px\"},\"bottom-right\":{bottom:\"24px\",right:\"24px\"}}[rt.data.notify_position]).delegate(\".ds-notify-unread a\",\"click\",function(){return T(H(this).data(\"type\")),!1}).appendTo(t.body)),e.html(et.notify(s))[!s.comments&&!s.notifications||\"hidden\"===rt.data.notify_position||H(\".ds-dialog\")[0]?\"hide\":\"show\"]()},ot.on(\"reset\",S.resetNotify),st.Replybox=function(e){this.embedThread=e},st.Replybox.prototype={render:function(e){function s(e){e.data(\"submitting\",!0),e.find(\".ds-post-button\").addClass(\"ds-waiting\").html(z.posting)[0].disabled=!0}function a(e){e.data(\"submitting\",!1),e.find(\".ds-post-button\").removeClass(\"ds-waiting\").html(z.post)[0].disabled=!1}var i=this,o=i.embedThread,c=o.options,p=function(){S.require(\"smilies\",function(){})},h={thread:o,options:c,inline:e,params:{thread_id:o.threadId,parent_id:\"\",nonce:S.nonce},repostArray:[],checked:0};for(var v in nt.data.repostOptions)nt.data.repostOptions[v]&&(h.repostArray.push(v),h.checked=1);var g=i.el=H(et.replybox(h)).click(p),b=g.find(\"form\"),y=b.find(\"input[type=checkbox]\")[0],_=b.find(\"a.ds-service-icon, a.ds-service-icon-grey\"),k=f(b.find(\"textarea\")).focus(p).keyup(n).keyup(d).bind(\"focus mousedown mouseup keyup\",u),w=g.find(\".ds-add-emote\").click(function(e){var s=S.smiliesTooltip;return w.toggleClass(\"ds-expanded\").hasClass(\"ds-expanded\")?(s||(s=S.smiliesTooltip=new st.SmiliesTooltip,s.render(),S.require(\"smilies\",function(){s.reset(\"微博-默认\")})),s.replybox=i,s.el.appendTo(t.body).css({top:i.el.offset().top+i.el.outerHeight()+4+\"px\",left:i.el.find(\".ds-textarea-wrapper\").offset().left+\"px\"}),H(t.body).click(x)):x(e),!1}),x=(g.find(\".ds-add-image\").click(function(e){var s=k[0],a=s.value,i=\"请输入图片地址\",r='<img src=\"'+i+'\">';if(t.selection){s.value=a.substring(0,k.data(\"ds-range-start\"))+r+a.substring(k.data(\"ds-range-end\"),a.length),s.value=s.value.replace(\"说点什么吧 ...\",\"\"),s.focus();var n=t.selection.createRange();n.collapse(),n.findText(i),n.select()}else{s.value=a.substring(0,s.selectionStart)+r+a.substring(s.selectionEnd);var o=s.value.search(i);s.setSelectionRange(o,o+i.length),s.focus()}e.preventDefault()}),i.hideSmilies=function(){w.removeClass(\"ds-expanded\"),S.smiliesTooltip.el.detach(),H(t.body).unbind(\"click\",x)}),T=function(e,t){var s=E(et[\"dialog-anonymous\"]({services:[\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"],options:c})),a=s.el.find(\".ds-dialog\").css(\"width\",\"320px\");if(a.find(\".ds-icons-32 a\").click(l),!c.deny_anonymous){var i=s.el.find(\"form\");i.submit(function(){var e=i.find(\"input[name=author_email]\").val();return!e&&!c.require_guest_email||e.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)?(t(S.toJSON(i)),s.close(),!1):(alert(\"请输入一个有效的email地址.\"),!1)}),i.find(\"input[name=author_name]\")[0].focus()}};c.deny_anonymous&&k.focus(function(){if(r()){T(b,q);var e=function(t){t.stopPropagation(),k.unbind(\"click\",e)};k.click(e)}return!1});var q=function(e){s(b),R.post(\"posts/create\",H.extend(S.toJSON(b),e),function(e){var t=lt[e.response.post_id]=new F(e.response),s=M(i.postList,t,c);if(\"asc\"==c.order==(\"top\"==c.formPosition)&&S.scrollTo(s),o.data.comments++,o.updateCounter(\"duoshuo\"),k.val(\"\").trigger(\"keyup\"),a(b),g.hasClass(\"ds-inline-replybox\")&&(g.detach(),i.actionsBar.removeClass(\"ds-reply-active\")),m)try{m.removeItem(\"ds_draft_\"+o.threadId)}catch(r){}},function(e){a(b),alert(e.errorMessage)})};b.submit(function(){if(b.data(\"submitting\"))return!1;var e=H.trim(b[0].message.value);return\"\"==e||!P.placeholder&&e==k.attr(\"placeholder\")?(alert(\"您还没写内容呢\"),!1):(r()?T(b,q):q(),!1)});var C=function(e){return H(e).hasClass(\"ds-service-icon-grey\")?null:H(e).attr(\"data-service\")};if(_.click(function(){return H(this).toggleClass(\"ds-service-icon-grey\").toggleClass(\"ds-service-icon\"),y.value=H.map(_,C).join(\",\"),y.checked=\"\"!=y.value,!1}),H(y).change(function(){var e=this.checked;_[e?\"removeClass\":\"addClass\"](\"ds-service-icon-grey\")[e?\"addClass\":\"removeClass\"](\"ds-service-icon\"),this.value=H.map(_,C).join(\",\")}),!e&&m){var j=\"ds_draft_\"+o.threadId;k.bind(\"focus blur keyup\",function(e){var t=H(e.currentTarget).val();try{m[j]=t}catch(e){}}),m[j]&&k.val(m[j])}return this}},st.Dialog=J.extend({init:function(e,t){(this.el=H(\"#ds-wrapper\"))[0]||(this.el=p(H('<div id=\"ds-wrapper\"></div>'))),this.options=H.extend({width:600},t),e!==s&&H(e).attr(\"id\",\"ds-reset\").appendTo(this.el)},open:function(){function e(e){return 27==e.which?(a.close(),!1):void 0}function s(){return a.close(),!1}var a=this;return a.el.hide().appendTo(t.body).fadeIn(200),P.ie6&&a.el.css(\"top\",V.scrollTop()+100),a.el.show().find(\".ds-dialog\").delegate(\"a.ds-dialog-close\",\"click\",function(){return a.close(),!1}).click(i),Y.keydown(e),H(t.body).click(s),a.close=function(){Y.unbind(\"keydown\",e),H(t.body).unbind(\"click\",s),a.el.fadeOut(200,function(){H(this).remove()}),a.trigger(\"close\")},a}}),et.likePanel=function(e){return e.likes?'<span class=\"ds-highlight\">'+e.likes+\"</span> 人喜欢\":\"\"},st.Meta=function(e){this.embedThread=e},st.Meta.prototype={render:function(){function a(a){function r(e){o.set(e),n.resetLikePanel()}function c(){n.tooltip.detach(),H(t.body).unbind(\"click\",c)}function u(t){switch(this.className){case\"ds-like-tooltip-close\":c(t);break;default:if(!e.open(this.href,\"_blank\",\"height=500,width=600,top=0,left=0,toolbar=no,menubar=no,resizable=yes,location=yes,status=no\"))return}return!1}var p=l.hasClass(\"ds-thread-liked\");if(R.post(\"threads/vote\",{thread_id:n.embedThread.threadId,vote:p?0:1},r),l.toggleClass(\"ds-thread-liked\"),l.find(\".ds-thread-like-text\").text(p?\"喜欢\":\"已喜欢\"),p)return n.tooltip&&c(a),!1;if(n.tooltip===s){var h=et.likeTooltip({services:{qzone:\"QQ空间\",weibo:\"新浪微博\",qqt:\"腾讯微博\",renren:\"人人网\",kaixin:\"开心网\",douban:\"豆瓣网\",baidu:\"百度搜藏\"},thread_id:o.data.thread_id});n.tooltip=H(h).click(i).delegate(\"a\",\"click\",u)}var f={};return f.left=0,f.top=d.position().top+d.outerHeight()-4+\"px\",n.tooltip.appendTo(n.embedThread.innerEl).css(f),H(t.body).click(c),!1}var n=this,o=n.embedThread.model,d=n.el=H(et.meta(o.toJSON())),l=d.find(\".ds-like-thread-button\");return l.click(a),n.resetLikePanel(),r()&&d.hide(),n},resetLikePanel:function(){this.el.find(\".ds-like-panel\").html(et.likePanel(this.embedThread.model.toJSON()))}},st.PostListHead=function(e){this.embedThread=e},st.PostListHead.prototype={render:function(){function e(e){r.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.page=1;var t=e.currentTarget;switch(t.className){case\"ds-comments-tab-duoshuo\":a.params.source=\"duoshuo\",s.replybox.el.show();break;case\"ds-comments-tab-repost\":a.params.source=\"repost\",s.replybox.el.hide();break;case\"ds-comments-tab-weibo\":a.params.source=\"weibo\",s.replybox.el.hide();break;case\"ds-comments-tab-qqt\":a.params.source=\"qqt\",s.replybox.el.hide()}return H(t).addClass(\"ds-current\"),a.refetch(),!1}function t(){return n.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.order=s.options.order=this.className.replace(\"ds-order-\",\"\"),a.params.page=1,a.refetch(),H(this).addClass(\"ds-current\"),!1}var s=this.embedThread,a=s.postList,i=this.el=H(et.postListHead({thread:s.model.toJSON(),options:s.options})),r=i.find(\"ul.ds-comments-tabs\");r.delegate(\".ds-tab a\",\"click\",e);var n=i.find(\".ds-sort\");return n.delegate(\"a\",\"click\",t),n.find(\".ds-order-\"+a.params.order).addClass(\"ds-current\"),this}},st.Paginator=function(e){function t(){return i.params.page=parseInt(this.innerHTML),i.refetch(),a.find(\".ds-current\").removeClass(\"ds-current\"),H(this).addClass(\"ds-current\"),!1}e=e||{};var s=this,a=s.el=e.el||H('<div class=\"ds-paginator\"></div>'),i=s.collection=e.collection;a.delegate(\"a\",\"click\",t)},st.Paginator.prototype={reset:function(e){function t(e){i.push('<a data-page=\"'+e+'\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+e+\"</a>\")}var s,a=this.collection.params.page||1,i=[];if(a>1)for(t(1),s=a>4?a-2:2,s>2&&i.push('<span class=\"page-break\">...</span>');a>s;s++)t(s);if(i.push('<a data-page=\"'+a+'\" href=\"javascript:void(0);\" class=\"ds-current\" target=\"_blank\" rel=\"noopener\">'+a+\"</a>\"),a<e.pages){for(s=a+1;a+4>=s&&s<e.pages;s++)t(s);s<e.pages&&i.push('<span class=\"page-break\">...'),t(e.pages)}this.el.html('<div class=\"ds-border\"></div>'+i.join(\" \"))[e.pages>1?\"show\":\"hide\"]()}},S.addSmilies=function(e,t){var s=S.smiliesTooltip;s&&s.el.find(\"ul.ds-smilies-tabs\").append(\"<li><a>\"+e+\"</a></li>\"),S.smilies[e]=t},st.SmiliesTooltip=function(){},st.SmiliesTooltip.prototype={render:function(){function e(){var e=s.replybox,a=e.el.find(\"textarea\"),i=a[0],r=i.value;if(t.selection){i.value=r.substring(0,a.data(\"ds-range-start\"))+this.title+r.substring(a.data(\"ds-range-end\"),r.length),i.value=i.value.replace(z.leave_a_message,\"\"),i.focus();var n=t.selection.createRange();n.moveStart(\"character\",a.data(\"ds-range-start\")+this.title.length),n.collapse(),n.select()}else{var o=i.selectionStart+this.title.length;i.value=r.substring(0,i.selectionStart)+this.title+r.substring(i.selectionEnd),i.setSelectionRange(o,o)}e.hideSmilies(),i.focus()}var s=this,a=s.el=H(et.smiliesTooltip(L));return a.click(i).find(\"ul.ds-smilies-tabs\").delegate(\"a\",\"click\",function(){s.reset(this.innerHTML)}),a.find(\".ds-smilies-container\").delegate(\"img\",\"click\",e),this},reset:function(e){function t(t,s){var i=0===e.indexOf(\"微博\")?\"http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/\"+s.replace(\"_org\",\"_thumb\"):S.STATIC_URL+\"/images/smilies/\"+s;\"WordPress\"===e&&(t=\" \"+t+\" \"),a+='<li><img src=\"'+i+'\" title=\"'+_(t)+'\"></li>'}var s=this.el.find(\"ul.ds-smilies-tabs\");s.find(\"a.ds-current\").removeClass(\"ds-current\"),s.find(\"a\").filter(function(){return this.innerHTML==e}).addClass(\"ds-current\");var a=\"<ul>\";return H.each(L[e],t),a+=\"</ul>\",this.el.find(\".ds-smilies-container\").html(a),this}},et.postPlaceholder=function(){return['<li class=\"ds-post ds-post-placeholder\">',z.no_comments_yet,\"</li>\"].join(\"\")};var X=H('<div id=\"ds-bubble\"><div class=\"ds-bubble-content\"></div><div class=\"ds-arrow ds-arrow-down ds-arrow-border\"></div><div class=\"ds-arrow ds-arrow-down\"></div></div>'),K=X.find(\".ds-bubble-content\").delegate(\"a.ds-ctx-open\",\"click\",function(){function e(e){function t(e,t){return et.ctxPost({post:e,index:t})}C.log(H.map(e.response,t).join(\"\\n\"));s.el.find(\"ol\");s.el.find(\"ol\").html(H.map(e.response,t).join(\"\\n\"))}var t={};t.post_id=K.attr(\"data-post-id\"),R.get(\"posts/conversation\",t,e);var s=E('<h2>查看对话</h2><ol id=\"ds-ctx\"></ol>');return s.el.find(\".ds-dialog\").css(\"width\",\"600px\"),s.el.find(\".ds-dialog-body\").css({\"max-height\":\"350px\",_height:\"350px\",\"overflow-y\":\"auto\",\"padding-top\":\"10px\"}),!1}),tt=bubbleOutTimer=0;X.mouseenter(N).mouseleave(I),st.PostList=function(e){e&&(e.params&&(this.params=e.params),e.embedThread&&(this.embedThread=e.embedThread)),this.el=H('<ul class=\"ds-comments\"></ul>')},st.PostList.prototype={url:\"threads/listPosts\",render:function(){return U.call(this.el,this.embedThread,this.embedThread.options),this},reset:function(e){var t=this.embedThread.options;this.el.html(e[0]?H.map(lt.getJSON(e),function(e){return et.post({post:e,options:t})}).join(\"\"):et.postPlaceholder())},refetch:function(){function e(e){lt.set(e.parentPosts||e.relatedPosts),ct.set(e.users),s.reset(e.response),s.embedThread.paginator.reset(e.cursor),s.el.fadeTo(200,1),S.scrollTo(s.el),a.remove()}var s=this,a=H(et.indicator()).appendTo(t.body).fadeIn(200);s.el.fadeTo(200,.5),R.get(s.url,s.params,e)}},st.RelatedRead=function(){this._init()},st.RelatedRead.prototype={_init:function(){this.el=H('<div id=\"ds-related-reads\"></div>')},load:function(s){e.__duoshuo_id__=s,e.readsByToutiao=[],e.readsByToutiao.push({id:\"ds-related-reads\",num:3});var a=\"//s0.pstatp.com/site/reads-sdk/5bf3702b38076207bee1.js\",i=t.createElement(\"script\");i.src=a,i.charset=\"utf-8\",i.crossOrigin=\"anonymous\",t.head.appendChild(i)},mount:function(e){this.el.insertBefore(e)}},st.EmbedThread=Q.extend({uri:\"threads/listPosts\",params:\"thread-id local-thread-id source-thread-id thread-key category channel-key author-key author-id url limit order max-depth form-position container-url\"+(v.match(/MSIE 6\\.0/)?\"\":\" title image thumbnail\"),render:function(){var e=this.el;if(\"请将此处替换成文章在你的站点中的ID\"===e.data(\"thread-key\"))return alert(\"请设置正确的 data-thread-key 属性\"),!1;e.attr(\"id\",\"ds-thread\").append(et.waitingImg());var t=e.width(),s=e.data(\"url\")||!e.attr(\"data-thread-id\")&&H(\"link[rel=canonical]\").attr(\"href\");s?e.data(\"url\",k(s)):e.data(\"container-url\",h.href),t&&400>=t&&e.addClass(\"ds-narrow\").data(\"max-depth\",1)},updateCounter:function(e){function t(e){return e.substr(e.indexOf(\"}\")+1)}var s={duoshuo:[\"comments\",t(z.comments_multiple)||\"评论\"],repost:[\"reposts\",t(z.reposts_multiple)||\"转载\"],weibo:[\"weibo_reposts\",t(z.weibo_reposts_multiple)||\"新浪微博\"],qqt:[\"qqt_reposts\",t(z.qqt_reposts_multiple)||\"腾讯微博\"]};for(var a in s)if(!e||e==a){var i=this.data[s[a][0]];this.el.find(\".ds-comments-tab-\"+a).html(this.el.hasClass(\"ds-narrow\")?'<span class=\"ds-service-icon ds-'+a+'\"></span>'+i:(i?'<span class=\"ds-highlight\">'+i+\"</span>\":\"0\")+s[a][1])}},onError:function(e){this.el.html(\"评论框出错啦(\"+e.code+\"): \"+e.errorMessage)},onload:function(t){var a=this,i=a.threadId=t.thread.thread_id,n=t.cursor,o=a.options=t.options,d=a.innerEl=p(H('<div id=\"ds-reset\"></div>').appendTo(a.el));a.model=new G(a.data=t.thread),lt.set(t.parentPosts||t.relatedPosts),ct.set(t.users),a.el.find(\"#ds-waiting\").remove(),t.options&&t.options.show_recommend&&(a.relatedRead=new st.RelatedRead,a.relatedRead.load(t.thread.site_id),a.relatedRead.mount(d)),o.like_thread_enabled&&(a.meta=new st.Meta(a),d.append(a.meta.render().el)),o.hot_posts&&t.hotPosts&&t.hotPosts.length&&(a.hotPosts=new st.HotPosts(H('<div class=\"ds-rounded\"></div>'),{max_depth:1,show_context:o.show_context}),a.hotPosts.thread=a,d.append(a.hotPosts.el),a.hotPosts.onload({list:lt.getJSON(t.hotPosts)})),a.postListHead=new st.PostListHead(a),a.postList=new st.PostList({embedThread:a,params:{source:\"duoshuo\",thread_id:i,max_depth:o.max_depth,order:o.order,limit:o.limit}}),a.postList.render().reset(t.response),a.paginator=new st.Paginator({collection:a.postList}),a.paginator.reset(n);var c=a.replybox=new st.Replybox(a);c.postList=a.postList.el,r()?a.loginButtons=H(et.loginButtons()).delegate(\"a.ds-more-services\",\"click\",function(){return a.loginButtons.find(\".ds-additional-services\").toggle(),!1}).delegate(\"a.ds-service-link\",\"click\",l):a.toolbar=H(et.toolbar()).delegate(\".ds-account-control\",\"mouseenter\",function(){H(this).addClass(\"ds-active\")}).delegate(\".ds-account-control\",\"mouseleave\",function(){H(this).removeClass(\"ds-active\")}).delegate(\"a.ds-bind-more\",\"click\",function(){var e=E(et[\"dialog-bind-more\"]()).el.find(\".ds-dialog\").addClass(\"ds-dialog-bind-more\").css(\"width\",\"300px\");return e.find(\"a.ds-service-link\").click(l),!1}).delegate(\"a.ds-unread-comments-count\",\"click\",function(){return T(\"unread-comments\"),!1});var u=['<a name=\"respond\"></a>',a.toolbar||a.loginButtons,c.render().el];\"top\"==o.formPosition&&H.fn.append.apply(d,u),d.append(a.postListHead.render().el,a.postList.el,a.paginator.el),\"bottom\"==o.formPosition&&H.fn.append.apply(d,u),d.append(et.poweredBy(o.poweredby_text)),a.updateCounter(),t.alerts&&H.each(t.alerts,function(e,t){H('<div class=\"ds-alert\">'+t+\"</div>\").insertBefore(a.toolbar||loginButtons)}),o.message&&c.el.find(\"textarea\").val(o.message).focus(),ot.on(\"reset\",function(){var e=ot.data.comments||0;d.find(\"a.ds-unread-comments-count\").html(e).attr(\"title\",e?\"你有\"+e+\"条新回复\":\"你没有新回复\").css(\"display\",e?\"inline\":\"none\")}),o.mzadx_id&&(S.require(\"mzadxN\",function(){}),H('<div id=\"MZADX_'+o.mzadx_id+'\" style=\"margin:0 auto;\"></div>').appendTo(d),__mz_rpq=e.__mz_rpq||[],__mz_rpq.push({l:[o.mzadx_id],r:\"1\",_srv:\"MZADX\",_callback:function(){}})),S.thread=a,ot.data!==s&&ot.trigger(\"reset\"),r()||A.send({visit_thread_id:a.threadId})},onMessage:function(e){M(this.postList.el,new F(e),this.options)}}),st.HotPosts=Q.extend({tmpl:\"hotPosts\",params:\"show-quote\",render:function(){return this.el.attr(\"id\",\"ds-hot-posts\"),this},onload:function(e){e.options=H.extend(this.options,e.options),Q.prototype.onload.call(this,e),U.call(this.el.find(\"ul\"),this.thread,this.options)}}),st.RecentComments=Q.extend({tmpl:\"commentList\",uri:\"sites/listRecentPosts\",params:\"show-avatars show-time show-title avatar-size show-admin excerpt-length num-items channel-key\",render:function(){this.el.attr(\"id\",\"ds-recent-comments\")},prepare:function(e){return{list:H.map(e.response,function(e){return new F(e).toJSON()})}}}),st.RecentVisitors=Q.extend({tmpl:\"recentVisitors\",uri:\"sites/listVisitors\",params:\"show-time avatar-size num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-recent-visitors\").append(this.waitingEl=H(et.waitingImg()))}}),st.TopThreads=Q.extend({tmpl:\"topThreads\",uri:\"sites/listTopThreads\",params:\"range num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-top-threads\").append(this.waitingEl=H(et.waitingImg()))}}),st.LoginWidget=Q.extend({tmpl:\"loginWidget\",render:function(){var e=this.el;e.attr(\"id\",\"ds-login\").html(et.loginWidget([\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"])),e.find(\"a\").click(l),e.find(\"a.ds-logout\").attr(\"href\",Z.logoutUrl())}}),st.ThreadCount=Q.extend({onload:function(e){var t=this.el,s=t.data(\"count-type\")||\"comments\",a=e.data[s];t[t.data(\"replace\")?\"replaceWith\":\"html\"](z[s+\"_\"+(a?a>1?\"multiple\":\"one\":\"zero\")].replace(\"{num}\",a))}}),st.ShareWidget=Q.extend({tmpl:\"shareWidget\",render:function(){var e={copyright:\"多说分享插件\",services:[\"weibo\",\"qzone\",\"sohu\",\"renren\",\"netease\",\"qqt\",\"kaixin\",\"douban\",\"qq\",\"meilishuo\",\"mogujie\",\"baidu\",\"taobao\",\"google\",\"wechat\",\"diandian\",\"huaban\",\"duitang\",\"youdao\",\"pengyou\",\"facebook\",\"twitter\",\"linkedin\",\"msn\"]};this.el.attr(\"id\",\"ds-share\"),this.el.children().attr(\"id\",\"ds-reset\"),this.el.find(\".ds-share-aside-inner\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").hide(),this.el.hasClass(\"flat\")&&this.el.find(\"a\").each(function(){H(this).addClass(\"flat\")}),p(this.el),this.delegateEvents()},delegateEvents:function(){var s=this,i=s.el;if(i.children().hasClass(\"ds-share-inline\")){var r=\".ds-share-icons-more\",n=i.find(r),d=\"[data-toggle=ds-share-icons-more]\";i.delegate(d,\"mouseover\",function(){n.show()}),i.delegate(d,\"mouseout\",function(){n.hide()}),i.delegate(r,\"mouseover\",function(){n.show()}),i.delegate(r,\"mouseout\",function(){n.hide()})}else{var l=i.children().hasClass(\"ds-share-aside-left\")?\"slide-to-right\":\"slide-to-left\",c=i.children();if(!o.cssProperty(\"transition\")){var u=i.children().hasClass(\"ds-share-aside-left\")?\"left\":\"right\";i.delegate(\".ds-share-aside-toggle\",\"mouseover\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)-195:e[u]=0,c.animate(e,200)}),i.delegate(\".ds-share-aside-inner\",\"mouseleave\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)+230:e[u]=-229,c.animate(e,200)})}i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseover\",function(){c.addClass(l)}),i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseleave\",function(){c.removeClass(l)})}i.delegate(\"a\",\"click\",function(t){var s=H(this).data(\"service\");if(!i.data(\"url\"))return void alert(\"请设置data-url\");if(\"wechat\"===s){var r=a()+\"/api/qrcode/getImage.png\",n=\"?size=240&text=\"+i.data(\"url\"),d=E(et[\"dialog-qrcode\"]({qrcode_url:r+n,url:i.data(\"url\")}));d.el.find(\".ds-dialog\").css(\"width\",\"320px\")}else{var l=a()+\"/share-proxy/?\"+o.param({service:H(this).data(\"service\"),thread_key:i.data(\"threadKey\"),title:i.data(\"title\"),images:i.data(\"images\"),content:i.data(\"content\"),url:i.data(\"url\")});e.open(l,\"_blank\")}t.preventDefault(),t.stopPropagation()})}});var it=0;S.initSelector=function(e,t){function s(e){W(e),o.extend(z,e.options),dt.set(e.response)}var a=[];!q()||!H.isReady&&j||H(e).each(function(e,s){var i=H(s);if(!i.data(\"initialized\")){i.data(\"initialized\",!0);var r=new st[t.type](i,t);if(at.push(r),\"ThreadCount\"===t.type){var n=i.attr(\"data-thread-key\");i.attr(\"data-channel-key\")&&(n=i.attr(\"data-channel-key\")+\":\"+n),a.push(n),dt[n]||(dt[n]=new G({})),dt[n].on(\"reset\",function(){r.onload(this)})}else if(r.uri){var o={};H.each(r.params.split(\" \"),function(e,t){o[t.replace(/-/g,\"_\")]=i.attr(\"data-\"+t)||i.data(t)}),R.get(r.uri,B(o),function(e){r.load(e)})}}}),a.length&&R.get(\"threads/counts\",B({threads:a.join(\",\")}),s)},(S.initView=function(){H.each(O,S.initSelector)})(),H(function(){if(!c){if(!q())return C.error(\"缺少 duoshuoQuery 的定义\");C.warn(\"请在加载多说 embed.js 之前定义 duoshuoQuery\")}setInterval(function(){H(\".ds-time\").each(function(){var e=H(this).attr(\"datetime\");e&&(this.innerHTML=S.elapsedTime(e))})},2e4),c.ondomready&&c.ondomready(),S.initView(),!it&&c.short_name&&R.get(\"analytics/ping\",B({}),W)})})}}(window,document);</e.pages;s++)t(s);s<e.pages&&i.push('<span></e.pages){for(s=a+1;a+4></200)&&(e[a]=s[a]);return></=1?h.postlist=e.postlist.el:(h.postlist=i.siblings(\".ds-children\"),h.postlist[0]||(h.postlist=h('<ul></s.pagelets.length;r++)a=s.pagelets[r],a.threadid==t.thread_id&&a.onmessage(t);break;case\"notification\":y.push(t),i()}},e.addeventlistener(\"beforeunload\",function(){n.close()})}a.websocket.onopen()}};s.domain=\"duoshuo.com\",s.static_url=g+\"></e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectscript(t(n),function(){s[n]=!0;for(var></arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var></i.length;r++)if(\"string\"==typeof></o.length;d++)if(a=\">","site":{"data":{}},"excerpt":"","more":"!function(e,t,s){function a(){return c.short_name?g+\"//\"+c.short_name+\".\"+S.DOMAIN:S.REMOTE}function i(){function t(){for(var t;t=y.shift();){var a=t.url,i=new s(t.title,{dir:\"auto\",icon:t.iconUrl,body:t.body});try{i.onclick=function(){e.focus(),h.href=a,i.close()}}catch(r){}setTimeout(function(){i.close&&i.close()},8e3)}}var s=e.Notification;\"Notification\"in e&&\"denied\"!==s.permission&&(\"granted\"===s.permission&&t(),s.requestPermission(function(e){\"granted\"===e&&t()}))}function r(){return 0==nt.data.user_id}function n(e){S.theme=e,\"none\"!=e&&o.injectStylesheet(S.STATIC_URL+\"/styles/embed\"+(e?\".\"+e+\".css?\"+M[e]:\".\"+short_name)+\".css\")}var o={},d=t.getElementsByTagName(\"head\")[0]||t.getElementsByTagName(\"body\")[0];if(o.extend=function(e,t){for(var s in t)e[s]=t[s];return e},o.injectScript=function(a,i){var r=t.createElement(\"script\"),n=t.head||t.getElementsByTagName(\"head\")[0]||t.documentElement;r.type=\"text/javascript\",r.src=a,r.async=\"async\",r.charset=\"utf-8\",i&&(r.onload=r.onreadystatechange=function(t,a){var o=a||!r.readyState||/loaded|complete/.test(r.readyState);o&&(r.onload=r.onreadystatechange=null,n&&r.parentNode&&n.removeChild(r),r=s,a||i.call(e))}),n.insertBefore(r,n.firstChild)},o.injectStylesheet=function(e){var s=t.createElement(\"link\");s.type=\"text/css\",s.rel=\"stylesheet\",s.href=e,d.appendChild(s)},o.injectStyle=function(e){var s=t.createElement(\"style\");return s.type=\"text/css\",d.appendChild(s),e=e.replace(/\\}/g,\"}\\n\"),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(t.createTextNode(e)),s},o.getCookie=function(e){for(var a,i,r,n=\" \"+e+\"=\",o=t.cookie.split(\";\"),d=0;d<o.length;d++)if(a=\" \"+o[d],i=\"a.indexOf(n),i\">=0&&i+n.length==(r=a.indexOf(\"=\")+1))return decodeURIComponent(a.substring(r,a.length).replace(/\\+/g,\"\"));return s},o.param=function(e){var t=[];for(var a in e)e[a]!=s&&t.push(a+\"=\"+encodeURIComponent(e[a]));return t.join(\"&\")},o.cssProperty=function(e,s){var a=(t.body||t.documentElement).style;if(\"undefined\"==typeof a)return!1;if(\"string\"==typeof a[e])return s?e:!0;for(var i=[\"Moz\",\"Webkit\",\"ms\"],e=e.charAt(0).toUpperCase()+e.substr(1),r=0;r<i.length;r++)if(\"string\"==typeof a[i[r]+e])return=\"\" s?i[r]+e:!0},!e.duoshuo){for(var=\"\" l=\"\" in=\"\" object.prototype)return=\"\" alert(\"object.prototype=\"\" 不为空，请不要给=\"\" object.prototype=\"\" 设置方法\");var=\"\" c,u,p=\"e.JSON,h=e.location,f=e.XMLHttpRequest,m=p&&p.stringify&&e.localStorage,v=e.navigator.userAgent,g=\"https:\"==t.location.protocol?\"https:\":\"http:\",b=0,y=[],_=u=function(){function\" e(e){return=\"\" t[e]||\"&amp;\"}var=\"\" t=\"{\"<\":\"&lt;\",\"\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#x27;\",\"`\":\"&#x60;\"},s=/&(?!\\w+;)|[<>\"'`]/g,a=/[&<>\"'`]/;return function(t){return null==t||t===!1?\"\":a.test(t)?t.replace(s,e):t}}(),k=function(e){if(e.match(/^(http|https):/))return e;var s=t.createElement(\"a\");return s.href=e,P.hrefNormalized?s.href:s.getAttribute(\"href\",4)},w=function(e){return function(){return e}},x=function(){for(var e={},t=0;t<arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var 10=\"\" 28=\"\" s=\"o.param(e);return\" s?\"?\"+s:\"\"},t=\"function(){var\" e=\"o.getCookie(\"duoshuo_token\");return\" e?{jwt:e}:c.remote_auth?{short_name:c.short_name,remote_auth:c.remote_auth}:s},q=\"function(){if(!c&&(c=e.duoshuoQuery)){if(!c.short_name||\"your_duoshuo_short_name\"===c.short_name)return\" c=\"s,void\" alert(\"你还没有设置多说域名(duoshuoquery.short_name)，填入已有域名或创建新站点：http:=\"\" duoshuo.com=\"\" create-site=\"\" \");it.trigger(\"querydefined\")}return=\"\" c},c=\"function(e){return\" e&&e.error&&e.warn?e:{error:function(){},log:function(){},warn:function(){}}}(e.console),s=\"e.DUOSHUO={sourceName:{weibo:\"新浪微博\",qq:\"QQ\",qzone:\"QQ空间\",qqt:\"腾讯微博\",renren:\"人人网\",douban:\"豆瓣网\",kaixin:\"开心网\",sohu:\"搜狐微博\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},serviceNames:{weibo:\"微博\",qq:\"QQ\",douban:\"豆瓣\",renren:\"人人\",kaixin:\"开心\",baidu:\"百度\",google:\"谷歌\",wechat:\"微信\",weixin:\"微信\",facebook:\"Facebook\",twitter:\"Twitter\",linkedin:\"Linkedin\"},parseDate:function(e){return\" e.parse(\"2011-10-28t00:00:00+08:00\")&&function(t){return=\"\" new=\"\" e(t)}||e.parse(\"2011=\"\" 28t00:00:00+0800\")&&function(t){return=\"\" e(t.replace(=\"\" -=\"\" g,\"=\"\" \").replace(=\"\" :(\\d\\d)$=\"\" ,\"$1\"))}||e.parse(\"2011=\"\" 00:00:00+0800\")&&function(t){return=\"\" ,\"$1\").replace(\"t\",\"=\"\" \"))}||function(t){return=\"\" e(t)}}(date),fulltime:function(e){var=\"\" t=\"S.parseDate(e);return\" t.getfullyear()+\"年\"+(t.getmonth()+1)+\"月\"+t.getdate()+\"日=\"\" \"+t.tolocaletimestring()},elapsedtime:function(e){var=\"\" date,a=\"(s-b-t)/1e3;return\">a?\"刚刚\":60>a?Math.round(a)+\"秒前\":3600>a?Math.round(a/60)+\"分钟前\":86400>a?Math.round(a/3600)+\"小时前\":(s.getFullYear()==t.getFullYear()?\"\":t.getFullYear()+\"年\")+(t.getMonth()+1)+\"月\"+t.getDate()+\"日\"},compileStyle:function(e){var t=\"\",s={};if(s.textbox=\"#ds-thread #ds-reset .ds-replybox .ds-textarea-wrapper\",!e)return t;for(var a in e)t+=s[a]+\"{\"+e[a]+\"}\\n\";return t},init:function(e,t){e&&!O[e]&&(O[e]=t||{type:\"EmbedThread\"}),S.initView&&S.initView()}},j=t.all,P=S.support=function(){var s=t.createElement(\"div\");s.innerHTML='<a href=\"/a\" style=\"opacity:.55;\">a</a><input type=\"checkbox\">';var a=s.getElementsByTagName(\"a\")[0],i=s.getElementsByTagName(\"input\")[0],r={placeholder:\"placeholder\"in i,touch:\"ontouchstart\"in e||\"onmsgesturechange\"in e,opacity:/^0.55$/.test(a.style.opacity),hrefNormalized:\"/a\"===a.getAttribute(\"href\"),iOS:v.match(/ \\((iPad|iPhone|iPod);( U;)? CPU( iPhone)? OS /),android:v.match(/ \\(Linux; U; Android /)};return r.ie6=!f&&\"undefined\"==typeof s.style.maxHeight,r.authInWin=e.postMessage&&e.screen.width>800&&!r.iOS&&!r.android&&h.origin,r}(),O=S.selectors={\".ds-thread\":{type:\"EmbedThread\"},\".ds-recent-comments\":{type:\"RecentComments\"},\".ds-recent-visitors\":{type:\"RecentVisitors\"},\".ds-top-users\":{type:\"TopUsers\"},\".ds-top-threads\":{type:\"TopThreads\"},\".ds-login\":{type:\"LoginWidget\"},\".ds-thread-count\":{type:\"ThreadCount\"},\".ds-share\":{type:\"ShareWidget\"}},E=S.openDialog=function(e){return S.dialog!==s&&S.dialog.el.remove(),S.dialog=new st.Dialog(et.dialog(e)).open()},L=S.smilies={};S.require=function(){function t(e){var t=U[e]?\"?\"+U[e]+\".js\":\"\";return S.STATIC_URL+\"/libs/\"+e+\".js\"+t}var s={mzadxN:\"undefined\"!=typeof mzadxN};return\"undefined\"!=typeof jQuery&&jQuery.fn.jquery>=\"1.5\"&&(s[\"embed.compat\"]=!0,S.jQuery=e.jQuery),function(e,a){if(\"string\"==typeof e)s[e]?a():o.injectScript(t(e),function(){s[e]=!0,a()});else if(\"object\"==typeof e){var i,r=!0;for(i=0;i<e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectscript(t(n),function(){s[n]=!0;for(var t=\"0;t<e.length;t++)if(!s[e[t]])return;a()}))})(e[i]);r&&a()}}}();for(var\" n=\"0,I=[\"EmbedThread\",\"RecentComments\",\"RecentVisitors\",\"TopUsers\",\"TopThreads\",\"LoginWidget\",\"ThreadCount\"];N<I.length;N++)S[I[N]]=function(e){return\" function(t,s){s=\"s||{},s.type=e,t&&!O[t]&&(O[t]=s),S.initSelector&&S.initSelector(t,s)}}(I[N]),S[\"create\"+I[N]]=function(e){return\" function(s,a){var=\"\" i=\"t.createElement(s);for(var\" r=\"\" in=\"\" a)i.setattribute(\"data-\"+r,a[r]);return=\"\" s[e](i),i}}(i[n]);s.recentcommentswidget=\"S.RecentComments;var\" d(e){var=\"\" date-new=\"\" date(t))}function=\"\" l(e,t,s){var=\"\" a,i,o,l=\"t;if(e\">=200&&300>e||304===e)if(304===e)l=\"notmodified\",o=!0;else try{a=p.parse(s),l=\"success\",o=!0}catch(c){l=\"parsererror\",i=c}else{i=l,(!l||e)&&(l=\"error\",0>e&&(e=0));try{a=p.parse(s)}catch(c){l=\"parsererror\",i=c}}o?r&&r(a):\"parseerror\"===l?C.error(\"解析错误: \"+s):(C.error(\"出错啦(\"+a.code+\"): \"+a.errorMessage),n&&n(a),a.errorTrace&&C.error(a.errorTrace)),d(m)}var u=o.getCookie(\"duoshuo_token\");i=i||{},i.v=S.version,u?i.jwt=u:c.remote_auth&&(i.remote_auth=c.remote_auth);var h=f&&p&&p.parse;if(h){var m=new f,v=!!m&&\"withCredentials\"in m;if(v){var g;return m.open(e,a()+\"/api/\"+t+\".json\"+(\"GET\"==e?\"?\"+o.param(i):\"\"),!0),m.withCredentials=!0,m.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded; charset=UTF-8\"),m.send(\"GET\"==e?null:o.param(i)),g=function(e,t){var a,i,r,n;try{if(g&&(t||4===m.readyState))if(g=s,t)4!==m.readyState&&m.abort();else{a=m.status,r=m.getAllResponseHeaders();try{n=m.responseText}catch(e){}try{i=m.statusText}catch(o){i=\"\"}}}catch(d){t||l(-1,d)}n&&l(a,i,n,r)},void(4===m.readyState?g():m.onreadystatechange=g)}}\"GET\"!=e&&(i._method=\"POST\");var y=\"cb_\"+Math.round(1e6*Math.random());R[y]=function(e){switch(e.code){case 0:r&&r(e);break;default:n&&n(e),C.error(\"出错啦(\"+e.code+\"): \"+e.errorMessage),e.errorTrace&&C.error(e.errorTrace)}},i.callback=\"DUOSHUO.API['\"+y+\"']\",o.injectScript(a()+\"/api/\"+t+\".jsonp?\"+o.param(i))},get:function(e,t,s,a){return this.ajax(\"GET\",e,t,s,a)},post:function(e,t,s,a){return this.ajax(\"POST\",e,t,s,a)}},A=S.ws={messages:[],send:function(s){if(!(\"WebSocket\"in e&&p))return!1;var a=this;if(a.messages.push(p.stringify(s)),!a.webSocket){var r=\"https:\"===t.location.protocol?\"wss://ws.duoshuo.com:8202/\":\"ws://ws.duoshuo.com:8201/\",n=a.webSocket=new WebSocket(r);n.onopen=function(){var e,t=1===n.readyState;if(t)for(;e=a.messages.shift();)n.send(e)},n.onmessage=function(e){try{var t=p.parse(e.data)}catch(s){return}switch(t.type){case\"post\":for(var a,r=0;r<s.pagelets.length;r++)a=s.pagelets[r],a.threadid==t.thread_id&&a.onmessage(t);break;case\"notification\":y.push(t),i()}},e.addeventlistener(\"beforeunload\",function(){n.close()})}a.websocket.onopen()}};s.domain=\"duoshuo.com\",s.static_url=g+\" static.duoshuo.com\",s.remote=\"g+\"//duoshuo.com\",S.version=\"16.6.16\";var\" m=\"{\"default\":\"9b2a46a0\",dark:\"33f3a5ac\",bluebox:\"39a75d50\",newhua:\"706ba4eb\",justflat:\"9d72ec5a\"},U={\"embed.compat\":\"24f8ca3f\",smilies:\"921e8eda\"},z={post:\"发布\",posting:\"正在发布\",settings:\"设置\",reply:\"回复\",like:\"顶\",repost:\"转发\",report:\"举报\",\"delete\":\"删除\",reply_to:\"回复\" \",reposts:\"转发\",comments:\"评论\",floor:\"楼\",latest:\"最新\",earliest:\"最早\",hottest:\"最热\",share_to:\"分享到:\",leave_a_message:\"说点什么吧…\",no_comments_yet:\"还没有评论，沙发等你来抢\",repost_reason:\"请输入转发理由\",hot_posts_title:\"被顶起来的评论\",comments_zero:\"暂无评论\",comments_one:\"1条评论\",comments_multiple:\"{num}条评论\",reposts_zero:\"暂无转发\",reposts_one:\"1条转发\",reposts_multiple:\"{num}条转发\",weibo_reposts_zero:\"暂无新浪微博\",weibo_reposts_one:\"1条新浪微博\",weibo_reposts_multiple:\"{num}条新浪微博\",qqt_reposts_zero:\"暂无腾讯微博\",qqt_reposts_one:\"1条腾讯微博\",qqt_reposts_multiple:\"{num}条腾讯微博\"},d=\"{get:function(e){return\" m?m[e]:void=\"\" 0},save:function(e,t){if(m)try{m.removeitem(e),m[e]=\"p.stringify(t),m.removeItem(e+\":timestamp\"),m[e+\":timestamp\"]=Math.floor((new\" date-b)=\"\" 1e3)}catch(s){}}},w=\"S.loadRequire=function(t){if(t.visitor&&(!nt.data&&t.visitor.user_id&&e.Notification&&A.send({logged_user_id:t.visitor.user_id}),nt.reset(t.visitor)),t.site&&(rt.reset(t.site),D.save(\"ds_site_\"+c.short_name,t.site)),!S.theme&&rt.data.theme&&n(rt.data.theme),t.lang&&(o.extend(z,t.lang),D.save(\"ds_lang_\"+c.short_name,t.lang)),t.stylesheets)for(var\" s=\"0;s<t.stylesheets.length;s++)o.injectStylesheet(t.stylesheets[s]);if(t.nonce&&(S.nonce=t.nonce),t.style&&o.injectStyle((t.style||\"\")+S.compileStyle(c.component_style)),t.unread&&ot.reset(t.unread),t.warnings)for(var\" t(){!b&&this.init&&this.init.apply(this,arguments)}b=\"1;var\" this;b=\"0;for(var\" a=\"\" in=\"\" e)s[a]=\"e[a];return\" t.prototype=\"s,t.prototype.constructor=t,t.extend=arguments.callee,t};var\" j=\"S.Event=H.extend({on:function(e,t){var\" a[e]=\"==s&&(a[e]=[]),a[e].push(t),this},trigger:function(e,t){var\" this}}),q=\"S.Widget=J.extend({init:function(e,t){this.el=e,this.options=t||{},this.render()},render:function(){},reset:function(){},load:function(e){switch(e.code){case\" 0:w(e);var=\"\" t=\"this.prepare(e);t.options=o.extend(this.options,e.options),this.onload(t);break;default:this.onError(e)}},onload:function(e){this.el.html(et[this.tmpl](e))},prepare:function(e){return\" e},onmessage:function(){},onerror:function(e){c.error(\"出错啦(\"+e.code+\"):=\"\" \"+e.errormessage),e.errortrace&&c.error(e.errortrace)}}),v=\"S.Model=J.extend({init:function(e){this.data=e},reset:function(e){this.data=e,this.trigger(\"reset\")},remove:function(e){this.data.splice(e,1),this.trigger(\"reset\")},set:function(e,t){if(t===s)for(var\" e)this.data[a]=\"e[a];else\" this.data[e]=\"t;return\" this.trigger(\"reset\"),this},tojson:function(){return=\"\" o.extend({},this.data)}}),$=\"V.extend({toJSON:function(){return\" o.extend({},this.data)}}),f=\"V.extend({toJSON:function(){var\" e=\"o.extend({},this.data);return\" e.theauthor=\"ct[this.data.author_id]&&ct[this.data.author_id].data||this.data.author,e.parents=this.data.parents||[],e}}),G=V.extend({toJSON:function(){return\" o.extend({},this.data)}}),y=\"function(e){this.model=e};Y.prototype.set=function(e){for(var\" e)e[t]&&(this[t]?this[t].set(e[t]):this[t]=\"new\" this.model(e[t]))},y.prototype.get=\"function(e){for(var\" s},y.prototype.getjson=\"function(e){for(var\" s};var=\"\" z=\"{userUrl:function(e){return\" e.url},avatarurl:function(e){return=\"\" e.avatar_url||rt.data.default_avatar_url},loginurl:function(e,t){return=\"\" t||(t=\"{}),c.sso&&c.sso.login&&(t.sso=1,t.redirect_uri=c.sso.login),a()+\"/login/\"+e+\"/\"+x(t)},bindUrl:function(e){return\" a()+\"=\"\" bind=\"\" \"+e+\"=\"\" \"+x(c.sso&&c.sso.login?{sso:1,redirect_uri:c.sso.login}:null,t())},logouturl:function(){return=\"\" logout=\"\" \"+x(c.sso&&c.sso.logout?{sso:1,redirect_uri:c.sso.logout}:null)}},x=\"[\"weixin\",\"weibo\",\"qq\",\"renren\"],K=[\"douban\",\"kaixin\",\"baidu\",\"google\"],et=S.templates={userAnchor:function(e){return\" e.url?'<a=\"\" rel=\"nofollow author\" target=\"_blank\" href=\"'+_(e.url)+'\">'+_(e.name)+\"\":_(e.name)},avatarImg:function(e,t){return'<img src=\"'+_(Z.avatarUrl(e,t))+'\" alt=\"'+_(e.name)+'\" '+(t?'=\"\" style=\"width:'+t+\" px;height:\"+t+'px\"':\"\")+\"=\"\">\"},avatar:function(e,t){var s=et.avatarImg(e,t),i=Z.userUrl(e);return i?'<a rel=\"nofollow author\" target=\"_blank\" href=\"'+_(i)+'\" '+(e.user_id?\"=\"\" onclick=\"\\\"this.href='\"+a()+\"/user-url/?user_id=\"+e.user_id+\"';\\\"\":\"\")+'\" title=\"'+_(e.name)+'\">'+s+\"</a>\":s},timeText:function(e){return e?'<span class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</span>\":\"\"},timeAnchor:function(e,t){return e?'<a href=\"'+t+'\" target=\"_blank\" rel=\"nofollow\" class=\"ds-time\" datetime=\"'+e+'\" title=\"'+S.fullTime(e)+'\">'+S.elapsedTime(e)+\"</a>\":\"\"},serviceIcon:function(e,t){return'<a href=\"javascript:void(0)\" class=\"ds-service-icon'+(t?\" -grey\":\"\")+\"=\"\" ds-\"+e+'\"=\"\" data-service=\"'+e+'\" title=\"'+S.sourceName[e]+'\" target=\"_blank\" rel=\"noopener\"></a>'},poweredBy:function(e){return'<p class=\"ds-powered-by\"><a href=\"http://duoshuo.com\" target=\"_blank\" rel=\"nofollow\">'+_(e)+\"</a></p>\"},indicator:w('<div id=\"ds-indicator\"></div>'),waitingImg:w('<div id=\"ds-waiting\"></div>'),loginItem:function(e,t){var s=Z[t?\"bindUrl\":\"loginUrl\"](e);return'<li>    <a href=\"'+s+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+e+'\">'+S.serviceNames[e]+(nt.data.social_uid[e]?' <span class=\"ds-icon ds-icon-ok\"></span>':\"\")+\"</a></li>\"}},tt=function(e){var t=[];for(var s in e)t.push('<input type=\"hidden\" name=\"'+s+'\" value=\"'+_(e[s])+'\">');return t.join(\"\\n\")};et.commentList=function(e){var t=\"\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li class=\"ds-comment',e.options.show_avatars&&(t+=\" ds-show-avatars\"),t+=\"\" data-post-id=\"\" +a.post_id+'\"=\"\">',e.options.show_avatars&&(t+='<div class=\"ds-avatar\">'+et.avatar(a.theAuthor,e.options.avatar_size)+\"</div>\"),t+='<div class=\"ds-meta\">'+et.userAnchor(a.theAuthor),e.options.show_time&&(t+=et.timeText(a.created_at)),t+=\"</div>\",t+=e.options.show_title?'<div class=\"ds-thread-title\">在 <a href=\"'+u(a.thread.url)+'#comments\">'+u(a.thread.title)+'</a> 中评论</div><div class=\"ds-excerpt\">'+a.message+\"</div>\":'<a class=\"ds-excerpt\" title=\"'+a.thread.title+' 中的评论\" href=\"'+u(a.thread.url)+'#comments\">'+a.message+\"</a>\",t+=\"</li>\";return t},et.ctxPost=function(e){var t=\"\";return e.post&&(t+='<li class=\"ds-ctx-entry\" ',e.hidden&&(t+=\" style=\"display:none\"\" ),t+=\" data-post-id=\"\" +e.post.post_id+'\"=\"\"><div class=\"ds-avatar\">'+et.avatar(e.post.theAuthor||e.post.author)+'</div><div class=\"ds-ctx-body\"><div class=\"ds-ctx-head\">'+et.userAnchor(e.post.theAuthor||e.post.author)+et.timeAnchor(e.post.created_at,e.post.url),e.index>=0&&(t+='<div class=\"ds-ctx-nth\" title=\"'+S.fullTime(e.post.created_at)+'\">'+(e.index+1)+z.floor+\"</div>\"),t+='</div><div class=\"ds-ctx-content\">'+e.post.message,e.index>=0&&(t+='　　　　　　　<div class=\"ds-comment-actions',e.post.vote>0&&(t+=\" ds-post-liked\"),t+=\"\">\" +et.likepost(e.post)+'<a=\"\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'<a class=\"ds-post-reply\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"</a></div>\"),t+=\"</div></div></li>\"),t},et[\"dialog-anonymous\"]=function(e){var t='<h2>社交帐号登录</h2><div class=\"ds-icons-32\">',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\",e.options.deny_anonymous||(t+='<h2>作为游客留言</h2><form><div class=\"ds-control-group\"><input type=\"text\" name=\"author_name\" id=\"ds-dialog-name\" value=\"'+u(nt.data.name)+'\" required><label for=\"ds-dialog-name\">名字(必填)</label></div>',e.options.require_guest_email&&(t+='<div class=\"ds-control-group\"><input type=\"email\" name=\"author_email\" id=\"ds-dialog-email\" value=\"'+u(nt.data.email)+'\" required><label for=\"ds-dialog-email\">邮箱(必填)</label></div>'),e.options.require_guest_url&&(t+='<div class=\"ds-control-group\"><input type=\"url\" name=\"author_url\" id=\"ds-dialog-url\" placeholder=\"http://\" value=\"'+u(nt.data.url)+'\"><label for=\"ds-dialog-url\">网址(可选)</label></div>'),t+='<button type=\"submit\">发布</button></form>'),t},et[\"dialog-ask-for-auth\"]=function(){var e='<h2>社交帐号登录</h2><ul class=\"ds-service-list\">'+et.serviceList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul>\";return e},et[\"dialog-bind-more\"]=function(){var e='<h2>绑定更多帐号</h2><ul class=\"ds-service-list\">'+et.serviceBindList(X)+'</ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceBindList(K)+'</ul><div style=\"clear:both\"></div>';return e},et[\"dialog-qrcode\"]=function(e){var t='<h2>微信扫一扫，分享到朋友圈</h2><div class=\"ds-share-qrcode\" style=\"text-align:center;\"><img src=\"'+e.qrcode_url+'\" alt=\"'+e.url+'\"></div>';return t},et[\"dialog-reposts\"]=function(e){var t='<h2>转发到微博</h2><div class=\"ds-quote\"><strong>@'+u(e.post.theAuthor.name)+\"</strong>: \"+e.post.message+\"</div><form>\"+tt({post_id:e.post.post_id})+'<div class=\"ds-textarea-wrapper\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.repost_reason)+'\">'+u(e.repostMessage)+'</textarea><pre class=\"ds-hidden-text\"></pre>';return t+='</div><div class=\"ds-actions\">',e.service?t+=tt({\"service[]\":e.service}):(t+='<label><input type=\"checkbox\" name=\"service[]\" value=\"weibo\" ',nt.data.social_uid.weibo&&(t+=\" checked=\"checked\"\" ),t+=\" /><span class=\"ds-service-icon ds-weibo\"></span>新浪微博</label><label><input type=\"checkbox\" name=\"service[]\" value=\"qqt\"\" ,nt.data.social_uid.qq&&(t+=\" checked=\"checked\"\" +z.repost+\"<=\"\" button=\"\"></label></div></form>\"},et.dialog=function(e){var t='<div class=\"ds-dialog\"><div class=\"ds-dialog-inner ds-rounded\"><div class=\"ds-dialog-body\">'+e+'</div><div class=\"ds-dialog-footer\"><a href=\"http://duoshuo.com/\" target=\"_blank\" class=\"ds-logo\"></a><span>社会化评论框</span></div><a class=\"ds-dialog-close\" href=\"javascript:void(0)\" title=\"关闭\" target=\"_blank\" rel=\"noopener\"></a></div></div>';return t},et.hotPosts=function(e){var t='<div class=\"ds-header ds-gradient-bg\">'+u(z.hot_posts_title)+\"</div><ul>\",s=e.list;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=et.post({post:a,options:e.options});return t+=\"</ul>\"},et.likePost=function(e){var t='<a class=\"ds-post-likes\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-like\"></span>'+z.like;return e.likes>0&&(t+=\"(\"+e.likes+\")\"),t+=\"</a>\"},et.likeTooltip=function(e){var t='<div class=\"ds-like-tooltip ds-rounded\"><p>很高兴你能喜欢，分享一下吧：</p><ul>';for(var s in e.services)t+='<li><a class=\"ds-share-to-'+s+\" ds-service-link=\"\" ds-\"+s+'\"=\"\" href=\"'+a()+\" share-proxy=\"\" ?\"+o.param({service:s,thread_id:e.thread_id})+'\"=\"\">'+e.services[s]+\"</a></li>\";return t+='</ul><p class=\"ds-like-tooltip-footer\"><a class=\"ds-like-tooltip-close\">算了</a></p></div>'},et.loginButtons=function(){var e='<div class=\"ds-login-buttons\"><p>社交帐号登录:</p><div class=\"ds-social-links\"><ul class=\"ds-service-list\">'+et.serviceList(X)+'<li><a class=\"ds-more-services\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">更多»</a></li></ul><ul class=\"ds-service-list ds-additional-services\">'+et.serviceList(K)+\"</ul></div></div>\";return e},et.loginWidget=function(e){var t='<div class=\"ds-icons-32\">',s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<a class=\"ds-'+a+'\" href=\"'+Z.loginUrl(a)+'\">'+S.sourceName[a]+\"</a>\";return t+=\"</div>\"},et.meta=function(e){var t='<div class=\"ds-meta\"><a href=\"javascript:void(0)\" class=\"ds-like-thread-button ds-rounded';return e.user_vote>0&&(t+=\" ds-thread-liked\"),t+=\"\"><span class=\"ds-icon ds-icon-heart\"></span> <span class=\"ds-thread-like-text\">\" ,t+=\"e.user_vote\" target=\"_blank\" rel=\"noopener\">0?\"已喜欢\":\"喜欢\",t+='<span class=\"ds-thread-cancel-like\">取消喜欢</span></a><span class=\"ds-like-panel\"></span></div>'},et.notify=function(e){var t='<div id=\"ds-reset\"><a class=\"ds-logo\" href=\"http://duoshuo.com/\" target=\"_blank\" title=\"多说\"></a><ul class=\"ds-notify-unread\"><li';return e.comments||(t+=\" style=\"display:none;\"\" ),t+=\"><a data-type=\"unread-comments\" href=\"javascript:void(0);\">你有\" +e.comments+\"条新回复<=\"\" a=\"\"><li\",e.notifications||(t+=' style=\"display:none;\" '),t+=\"><a data-type=\"unread-notifications\" href=\"javascript:void(0);\">你有\" +e.notifications+\"条系统消息<=\"\" a=\"\"></li\",e.notifications||(t+='></li';return></ul></div>\"},et.post=function(e){var t=\"\",s=e.post,i=e.options,r=s.author;if(t+='<li class=\"ds-post\" data-post-id=\"'+s.post_id+'\"><div class=\"ds-post-self\" data-post-id=\"'+s.post_id+'\" data-thread-id=\"'+s.thread_id+'\" data-root-id=\"'+s.root_id+'\" data-source=\"'+s.source+'\"><div class=\"ds-avatar\" ',r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\">\" +et.avatar(r),s.sourcename[s.source]&&(t+=\"et.serviceIcon(s.source)),t+='</div\"><div class=\"ds-comment-body\"><div class=\"ds-comment-header\">',r.url?(t+='<a class=\"ds-user-name ds-highlight\" data-qqt-account=\"'+(r.qqt_account||\" \")+'\"=\"\" href=\"'+u(r.url)+'\" ',r.user_id&&(t+=\" onclick=\\\" this.href=\"\"+a()+\"/user-url/?user_id=\"+r.user_id+\"\" ;\\\"\"),t+=\" rel=\"nofollow\" target=\"_blank\"\" ,r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\">\" +u(r.name)+\"<=\"\" a=\"\">\"):(t+='<span class=\"ds-user-name\" ',r.user_id&&(t+=\" data-user-id=\"\" +r.user_id+'\"'),t+=\" data-qqt-account=\"\" +(r.qqt_account||\"\")+'\"=\"\">'+u(r.name)+\"</span>\"),t+=\"</a></div>\",1==i.max_depth&&i.show_context&&s.parents.length){t+='<ol id=\"ds-ctx\">';var n=lt.getJSON(s.parents);if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],1==d&&s.parents.length>2&&(t+='<li class=\"ds-ctx-entry\"><a href=\"javascript:void(0);\" class=\"ds-expand\" target=\"_blank\" rel=\"noopener\">还有'+(s.parents.length-2)+\"条评论</a></li>\"),t+=et.ctxPost({post:o,index:d,hidden:d&&d<s.parents.length-1});t+=\"< ol=\"\">\"}if(t+=\"<p>\",s.parents.length>=i.max_depth&&(!i.show_context||i.max_depth>1)&&s.parent_id&&lt[s.parent_id]&&(t+='<a class=\"ds-comment-context\" data-post-id=\"'+s.post_id+'\" data-parent-id=\"'+s.parent_id+'\">'+z.reply_to+u(lt[s.parent_id].toJSON().author.name)+\": </a>\"),t+=s.message+'</p><div class=\"ds-comment-footer ds-comment-actions',s.vote>0&&(t+=\" ds-post-liked\"),t+=\"\">\" ,t+=\"s.url?et.timeAnchor(s.created_at,s.url):et.timeText(s.created_at),\"duoshuo\"==s.source?(t+='<a\" href=\"javascript:void(0);\"><span class=\"ds-icon ds-icon-reply\"></span>'+z.reply+\"\"+et.likePost(s)+'<a class=\"ds-post-repost\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-share\"></span>'+z.repost+'</a><a class=\"ds-post-report\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-report\"></span>'+z.report+\"</a>\",s.privileges[\"delete\"]&&(t+='<a class=\"ds-post-delete\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"><span class=\"ds-icon ds-icon-delete\"></span>'+z[\"delete\"]+\"</a>\")):(\"qqt\"==s.source||\"weibo\"==s.source)&&(t+='<a class=\"ds-weibo-comments\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+z.comments,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.comments+\"</span>)\"),t+='</a><a class=\"ds-weibo-reposts\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+z.reposts,s.type.match(/\\-comment$/)||(t+='(<span class=\"ds-count\">'+s.reposts+\"</span>)\"),t+=\"</a>\"),t+=\"</div></s.parents.length-1});t+=\"<></ol></div></div>\",i.max_depth>1&&(s.childrenArray||s.children)&&\"weibo\"!=s.source&&\"qqt\"!=s.source){t+='<ul class=\"ds-children\">';var c=lt.getJSON(s.childrenArray||s.children);if(c)for(var s,d=-1,p=c.length-1;p>d;)s=c[d+=1],t+=et.post({post:s,options:i});t+=\"</ul>\"}return t+=\"</div></li>\"},et.postListHead=function(e){var t='<div class=\"ds-comments-info\"><div class=\"ds-sort\"><a class=\"ds-order-desc\">'+z.latest+'</a><a class=\"ds-order-asc\">'+z.earliest+'</a><a class=\"ds-order-hot\">'+z.hottest+'</a></div><ul class=\"ds-comments-tabs\"><li class=\"ds-tab\"><a class=\"ds-comments-tab-duoshuo ds-current\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>';return e.options.show_reposts&&e.thread.reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-repost\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\" \",e.options.show_weibo&&e.thread.weibo_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-weibo\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\" \",e.options.show_qqt&&e.thread.qqt_reposts&&(t+='<li class=\"ds-tab\"><a class=\"ds-comments-tab-qqt\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\"></a></li>'),t+=\"</ul></div>\"},et.recentVisitors=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"</div>\";return t},et[\"related-read\"]=function(e){var t=\"\";if(e&&e.length){t+='<article class=\"ds-reads-expand\"><div class=\"ds-header\">头条推荐</div><section> ';var s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;){if(a=s[i+=1],t+=' <a href=\"'+a.url+'\" class=\"ds-reads-item\"> ',3==a.imgs.length){t+=\" <h2>\"+a.title+'</h2> <div class=\"ds-reads-pics\"> <ul> ';var n=a.imgs;if(n)for(var o,d=-1,l=n.length-1;l>d;)o=n[d+=1],t+=' <li> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+o+');\"></div> </li> ';t+=' </ul> </div> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> '}else t+=' <div class=\"ds-reads-desc ',a.imgs.length||(t+=\" ds-reads-only\"),t+=\"\"> <div class=\"ds-reads-title\">\" +a.title+'<=\"\" div=\"\"> <div class=\"ds-reads-info\"> ',1==a.type&&(t+=' <span class=\"ds-reads-app-special\">打开头条阅读</span> '),t+=' <span class=\"ds-reads-date\" data-date=\"'+a.timeStamp+'\"></span> </div> </div> ',a.imgs.length&&(t+=' <div class=\"ds-reads-pic-right\"> <div class=\"ds-reads-dumb\"></div> <div class=\"ds-reads-pic-wrap\" style=\"background-image:url('+a.imgs[0]+');\"> ',a.hasVideo&&(t+=' <div class=\"ds-reads-vid-info\"><span>'+a.videoDuration+\"</span></div> \"),t+=\" </div> </div> \"),t+=\" \";t+=\" </a> \"}t+=\"</section></article>\"}return t},et.replybox=function(e){var t='<div class=\"ds-replybox\"><a class=\"ds-avatar\" ';if(t+=\"r()?'\" href=\"javascript:void(0);\" onclick=\"return false\" ':'=\"\" settings=\"\" avatar=\"\" \"+x(t())+'\"=\"\" target=\"_blank\" title=\"设置头像\" ',t+=\">\" +et.avatarimg(nt.data)+'<=\"\" a=\"\"><form method=\"post\">'+tt(e.params)+'<div class=\"ds-textarea-wrapper ds-rounded-top\"><textarea name=\"message\" title=\"Ctrl+Enter快捷提交\" placeholder=\"'+u(z.leave_a_message)+'\"></textarea><pre class=\"ds-hidden-text\"></pre>',t+=\"</div>\",t+='<div class=\"ds-post-toolbar\"><div class=\"ds-post-options ds-gradient-bg\"><span class=\"ds-sync\">',!r()&&nt.data.repostOptions){t+='<input id=\"ds-sync-checkbox',e.inline&&(t+=\" -inline\"),t+=\"\" type=\"checkbox\" name=\"repost\" \" ,e.checked&&(t+=\"checked=\"checked\" \" ),t+=\"value=\"\" +e.repostarray.join(\",\")+'\"=\"\"> <label for=\"ds-sync-checkbox',e.inline&&(t+=\" -inline\"),t+=\"\">\" +z.share_to+\"<=\"\" label=\"\">\";for(var s in nt.data.repostOptions)t+=et.serviceIcon(s,!nt.data.repostOptions[s])}return t+=\"</label></span>\",t+=\"</div>\",t+='<button class=\"ds-post-button\" type=\"submit\">'+u(z.post)+'</button><div class=\"ds-toolbar-buttons\">',e.options.use_smilies&&(t+='<a class=\"ds-toolbar-button ds-add-emote\" title=\"插入表情\"></a>'),e.options.use_images&&e.options.parse_html_enabled&&(t+='<a class=\"ds-toolbar-button ds-add-image\" title=\"插入图片\"></a>'),t+=\"</div></div>\",t+=\"</form></a></div>\"},et.serviceBindList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.bindUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a],nt.data.social_uid[a]&&(t+=' <span class=\"ds-icon ds-icon-ok\"></span>'),t+=\"</a></li>\";return t},et.serviceList=function(e){var t=\"\",s=e;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a href=\"'+Z.loginUrl(a)+'\" rel=\"nofollow\" class=\"ds-service-link ds-'+a+'\">'+S.serviceNames[a]+\"</a></li>\";return t},et.shareWidget=function(e){var t='<div class=\"ds-share-icons\"> <div class=\"ds-share-icons-inner\"> <ul class=\"ds-share-icons-16\"> ',s=e.services;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+=' <li> <a class=\"ds-'+a+'\" href=\"javascript:void(0);\" data-service=\"'+a+'\" target=\"_blank\" rel=\"noopener\">'+S.sourceName[a]+\"</a> </li> \";return t+=' </ul> </div> <div class=\"ds-share-icons-footer\">'+e.copyright+\"</div></div>\"},et.smiliesTooltip=function(e){var t='<div id=\"ds-smilies-tooltip\"><ul class=\"ds-smilies-tabs\">';for(var s in e)t+=\"<li><a>\"+s+\"</a></li>\";return t+='</ul><div class=\"ds-smilies-container\"></div></div>'},et.toolbar=function(){var e='<div class=\"ds-toolbar\"><div class=\"ds-account-control\"><span class=\"ds-icon ds-icon-settings\"></span> <span>帐号管理</span><ul><li><a class=\"ds-bind-more\" href=\"javascript:void(0);\" style=\"border-top: none\" target=\"_blank\" rel=\"noopener\">绑定更多</a></li><li><a target=\"_blank\" href=\"'+S.REMOTE+\" settings=\"\" \"+x(t())+'\"=\"\">'+u(z.settings)+'</a></li><li><a rel=\"nofollow\" href=\"'+Z.logoutUrl()+'\" style=\"border-bottom: none\">登出</a></li></ul></div><div class=\"ds-visitor\">';return e+=nt.data.url?'<a class=\"ds-visitor-name\" href=\"'+u(nt.data.url)+'\" target=\"_blank\">'+u(nt.data.name)+\"</a>\":'<span class=\"ds-visitor-name\">'+u(nt.data.name)+\"</span>\",e+='<a class=\"ds-unread-comments-count\" href=\"javascript:void(0);\" title=\"新回复\" target=\"_blank\" rel=\"noopener\"></a></div></div>'},et.topThreads=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<li><a target=\"_blank\" href=\"'+u(a.url)+'\" title=\"'+u(a.title)+'\">'+u(a.title)+\"</a></li>\";return t},et.topUsers=function(e){var t=\"\",s=e.response;if(s)for(var a,i=-1,r=s.length-1;r>i;)a=s[i+=1],t+='<div class=\"ds-avatar\">'+et.avatar(a,e.options.avatar_size)+\"<h4>\"+u(a.name)+\"</h4></div>\";return t},et.userInfo=function(e){var t='<a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\" user-url=\"\" ?user_id=\"+e.user_id+'\\';\" class=\"ds-avatar\" target=\"_blank\">'+et.avatarImg(e)+'</a><a href=\"'+u(e.url)+'\" onclick=\"this.href=\\''+a()+\" user-url=\"\" ?user_id=\"+e.user_id+'\\';\" class=\"ds-user-name ds-highlight\" target=\"_blank\">'+u(e.name)+\"</a>\";for(var s in e.social_uid)t+='<a href=\"'+S.REMOTE+\" user-proxy=\"\" \"+s+\"=\"\" \"+e.social_uid[s]+'=\"\" \"=\"\" target=\"_blank\" class=\"ds-service-icon ds-'+s+'\" title=\"'+S.sourceName[s]+'\"></a>';return t+='<p class=\"ds-user-card-meta\"><a href=\"'+S.REMOTE+\" profile=\"\" \"+e.user_id+'=\"\" \"=\"\" target=\"_blank\"><span class=\"ds-highlight\">'+e.comments+\"</span>条评论</a></p>\",e.description&&(t+='<p class=\"ds-user-description\">'+u(e.description)+\"</p>\"),t};var st=S.Views={},at=(S.Callbacks={},S.pagelets=[]),it=S.events=new J,rt=S.site=new V,nt=S.visitor=new $,ot=S.unread=new V,dt=S.threadPool=new Y(G),lt=S.postPool=new Y(F),ct=S.userPool=new Y($);it.on(\"queryDefined\",function(){var e=c.short_name;if(c.theme&&n(c.theme),m){var t=m[\"ds_site_\"+e],s=m[\"ds_lang_\"+e];t&&rt.reset(p.parse(t)),s&&o.extend(z,p.parse(s))}}),q(),S.require(\"embed.compat\",function(){function i(e){e.stopPropagation()}function n(e){(e.ctrlKey&&13==e.which||10==e.which)&&H(this.form).trigger(\"submit\")}function d(){var e=H(this);e.height(Math.max(54,e.next(\".ds-hidden-text\").text(this.value).height()+27))}function l(){if(P.authInWin){var e=this.href.match(/\\/(login|bind)\\/(\\w+)\\//i);if(e&&S.serviceNames[e[2]])return!b(e[2],this.href)\n}}function u(){var e,s,a,i,r,n=this,o=0,d=0;t.selection&&(s=t.selection.createRange(),s&&s.parentElement()==n&&(i=n.value.length,e=n.value.replace(/\\r\\n/g,\"\\n\"),a=n.createTextRange(),a.moveToBookmark(s.getBookmark()),r=n.createTextRange(),r.collapse(!1),a.compareEndPoints(\"StartToEnd\",r)>-1?o=d=i:(o=-a.moveStart(\"character\",-i),o+=e.slice(0,o).split(\"\\n\").length-1,a.compareEndPoints(\"EndToEnd\",r)>-1?d=i:(d=-a.moveEnd(\"character\",-i),d+=e.slice(0,d).split(\"\\n\").length-1)))),H(n).data(\"ds-range-start\",o).data(\"ds-range-end\",d)}function p(e){return P.touch&&e.addClass(\"ds-touch\"),o.cssProperty(\"transition\")||e.addClass(\"ds-no-transition\"),P.ie6&&e.addClass(\"ds-ie6\"),P.opacity||e.addClass(\"ds-no-opacity\"),e}function f(e){if(!P.placeholder){var t=e.attr(\"placeholder\");e.val(t).focus(function(){this.value===t&&(this.value=\"\")}).blur(function(){\"\"===this.value&&(this.value=t)})}return e}function g(e){if(\"http://duoshuo.com\"===e.origin)switch(e.data.type){case\"login\":h.href=e.data.redirectUrl}}function b(t,s){var a={weibo:[760,600],renren:[420,322],qq:[504,445],weixin:[450,550],google:[600,440]}[t]||[550,400];return e.open(s+(-1==s.indexOf(\"?\")?\"?\":\"&\")+o.param({origin:h.origin||\"http://\"+h.host}),\"_blank\",\"width=\"+a[0]+\",height=\"+a[1]+\",toolbar=no,menubar=no,location=yes\")}function y(e){var t=Z[r()?\"loginUrl\":\"bindUrl\"](e);P.authInWin&&b(e,t)||(h.href=t)}function w(){var e=E(et[\"dialog-ask-for-auth\"]({})).el.find(\".ds-dialog\").css(\"width\",\"300px\");e.find(\"a.ds-service-link\").click(l)}function x(e,t,s,a){function i(){function e(e){if(s&&a){var t=s.options,i=M(s.postList.el,e.response[a],t);\"asc\"==t.order==(\"top\"==t.formPosition)&&S.scrollTo(i);var r=s.el.find(\".ds-comments-tab-\"+a+\" span.ds-highlight\");r.html(parseInt(r.html())+1)}}return a||l.find(\"[type=checkbox]:checked\")[0]?(R.post(\"posts/repost\",S.toJSON(l),e),o.close(),!1):(alert(\"还没有选发布到哪儿呢\"),!1)}function r(){var e=this.value;return this.checked&&!nt.data.social_uid[\"qqt\"==e?\"qq\":e]?void y(e):void 0}var o=E(et[\"dialog-reposts\"]({post:e.toJSON(),repostMessage:t,service:a})),l=o.el.find(\"form\");return l.submit(i),l.find(\".ds-actions [type=checkbox]\").change(r),f(l.find(\"textarea\")).keyup(n).keyup(d).focus(),!1}function T(e){var t={\"unread-comments\":{title:\"新留言及回复\",apiUrl:\"users/unreadComments\",tmpl:function(e){return e.thread?'<li data-thread-id=\"'+e.thread.thread_id+'\">'+H.map(e.authors,et.userAnchor).join(\"、\")+' 在 <a class=\"ds-read\" href=\"'+e.thread.url+'#comments\" target=\"_blank\">'+_(e.thread.title||\"无标题\")+'</a> 中回复了你 <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">知道了</a></li>':\"\"},read:function(e){var t=e.attr(\"data-thread-id\");R.post(\"threads/read\",{thread_id:t}),ot.data.comments--}},\"unread-notifications\":{title:\"系统消息\",apiUrl:\"users/unreadNotifications\",tmpl:function(e){return'<li data-notification-id=\"'+e.notification_id+'\" data-notification-type=\"'+e.type+'\">'+e.content+' <a class=\"ds-delete ds-read\" title=\"知道了\" href=\"javascript:void(0)\" target=\"_blank\" rel=\"noopener\">知道了</a></li>'},read:function(e){var t=e.attr(\"data-notification-id\");R.post(\"notifications/read\",{notification_id:t}),ot.data.notifications--}}}[e],s=E(\"<h2>\"+t.title+'</h2><ul class=\"ds-unread-list\"></ul>');s.on(\"close\",S.resetNotify);var a=s.el.find(\".ds-unread-list\").delegate(\".ds-delete\",\"click\",function(){return H(this).parent().remove(),0===a.children().length&&s.close(),!1}).delegate(\".ds-read\",\"click\",function(){t.read(H(this).parent())});H(\"#ds-notify\").hide(),R.get(t.apiUrl,{},function(e){s.el.find(\".ds-unread-list\").html(H.map(e.response,t.tmpl).join(\"\\n\"))})}function N(){bubbleOutTimer&&(clearTimeout(bubbleOutTimer),bubbleOutTimer=0)}function I(){bubbleOutTimer=setTimeout(function(){bubbleOutTimer=0,X.detach()},400)}function M(e,t,s){return e.find(\".ds-post[data-post-id=\"+t.data.post_id+\"]\")[0]?void 0:(e.find(\".ds-post-placeholder\").remove(),H(et.post({post:t.toJSON(),options:s})).hide()[\"asc\"==s.order?\"appendTo\":\"prependTo\"](e).slideDown(function(){}))}function U(e,t){function s(){if(r())return w(),!1;var e=H(this).parent(),t=e.hasClass(\"ds-post-liked\"),s=H(this).html().match(/\\((\\d+)\\)/),a=(s?parseInt(s[1]):0)+(t?-1:1);return R.post(\"posts/vote\",{post_id:e.closest(\".ds-ctx-entry, .ds-post-self\").attr(\"data-post-id\"),vote:t?0:1}),H(this).html(H(this).html().replace(/\\(\\d+\\)/,\"\")+(a?\"(\"+a+\")\":\"\")),e[t?\"removeClass\":\"addClass\"](\"ds-post-liked\"),!1}function a(){var e=H(this).closest(\".ds-post-self\"),t=lt[e.attr(\"data-post-id\")];return x(t,\"\"),!1}function i(){if(!confirm(\"确定要删除这条评论吗？\"))return!1;var t=H(this).closest(\".ds-post-self\");return R.post(\"posts/remove\",{post_id:t.attr(\"data-post-id\")}),t.parent().fadeOut(200,function(){e.data.comments--,e.updateCounter(\"duoshuo\"),H(this).remove()}),!1}function n(){if(!confirm(\"确定要举报这条评论吗？\"))return!1;var e=H(this).closest(\".ds-post-self\");return R.post(\"posts/report\",{post_id:e.attr(\"data-post-id\")}),alert(\"感谢您的反馈！\"),!1}function o(){var s=H(this),a=s.closest(\".ds-comment-actions\");if(a.hasClass(\"ds-reply-active\"))h.el.fadeOut(200,function(){H(this).detach()}),a.removeClass(\"ds-reply-active\");else{var i=s.closest(\".ds-ctx-entry, .ds-post-self\");h?h.actionsBar.removeClass(\"ds-reply-active\"):(h=new st.Replybox(e),h.render(!0).el.addClass(\"ds-inline-replybox\").detach()),h.el.find(\"[name=parent_id]\").val(i.attr(\"data-post-id\")),h.el.show().appendTo(s.closest(\".ds-ctx-body, .ds-comment-body\")).find(\"textarea\").focus(),h.actionsBar=a.addClass(\"ds-reply-active\"),t.max_depth<=1?h.postlist=e.postlist.el:(h.postlist=i.siblings(\".ds-children\"),h.postlist[0]||(h.postlist=h('<ul class=\"ds-children\">').insertAfter(i)))}return!1}function d(){function e(e){W(e),i.append(H.map(e.response,function(e){return et.post({post:e,options:t})}).join(\"\"))}{var s=H(this).closest(\".ds-post-self\"),a=s.attr(\"data-post-id\");s.data(\"source\")}if(0!=s.attr(\"data-root-id\"))return!1;var i=s.siblings(\".ds-children\");return i[0]?(i.remove(),!1):(i=H('<ul class=\"ds-children\"></ul>').insertAfter(s),R.get(\"posts/listComments\",B({post_id:a}),e),!1)}function l(){var t=H(this).closest(\".ds-post-self\"),s=lt[t.attr(\"data-post-id\")],a=s.data.source;if(!nt.data.social_uid[\"qqt\"==a?\"qq\":a])return void y(a);var i=s.data.root_id,r=\"0\"!=i?lt[i]:s,n=\"\";if(\"0\"!=i){var o=prepatePost(s.data).theAuthor;n=(\"weibo\"==a?\"//@\"+o.name:\"|| @\"+o.qqt_account)+\":\"+s.data.message}return x(r,n,e,a),!1}function c(){var e=H(this).parent();return e.siblings().show(),e.remove(),!1}function u(){function t(){function t(e){var t=e.response;ct[c]?ct[c].set(t):ct[c]=new $(t),X.owner==s&&K.html(et.userInfo(t))}tt=0,X.owner=s,N();var i=a.offset(),r=e.el.offset(),n=a.innerWidth()/2,o=e.el.innerHeight()-(i.top-r.top)+6,d=i.left-r.left-35+(n>35?35:n);try{if(a.hasClass(\"ds-comment-context\"))K.attr(\"id\",\"ds-ctx-bubble\").attr(\"data-post-id\",a.attr(\"data-post-id\")).html('<ul id=\"ds-ctx\">'+et.ctxPost({post:lt[a.attr(\"data-parent-id\")].toJSON()})+'</ul><div class=\"ds-bubble-footer\"><a class=\"ds-ctx-open\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">查看对话</a></div>');else if(a.hasClass(\"ds-avatar\")||a.hasClass(\"ds-user-name\")){var l={},c=l.user_id=a.attr(\"data-user-id\");if(!c)throw\"no info\";K.attr(\"id\",\"ds-user-card\").attr(\"data-user-id\",c).empty(),ct[c]?K.html(et.userInfo(ct[c].data)):R.get(\"users/profile\",B(l),t)}X.css({bottom:o,left:d}).appendTo(e.innerEl)}catch(u){X.detach()}}var s=this;if(bubbleOutTimer&&X.owner==s)return clearTimeout(bubbleOutTimer),void(bubbleOutTimer=0);var a=H(s);tt=setTimeout(t,200)}function p(){tt?(clearTimeout(tt),tt=0):bubbleOutTimer||I()}var h;this.delegate(\"a.ds-post-likes\",\"click\",s).delegate(\"a.ds-post-repost\",\"click\",a).delegate(\"a.ds-post-delete\",\"click\",i).delegate(\"a.ds-post-report\",\"click\",n).delegate(\"a.ds-post-reply\",\"click\",o).delegate(\"a.ds-weibo-comments\",\"click\",d).delegate(\"a.ds-weibo-reposts\",\"click\",l).delegate(\"a.ds-expand\",\"click\",c),P.touch||this.delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseenter\",u).delegate(\"a.ds-comment-context, .ds-avatar, .ds-user-name\",\"mouseleave\",p)}function B(e){var s={require:\"site,visitor,nonce,lang\"+(it++?\"\":\",unread,log,extraCss\"),site_ims:D.get(\"ds_site_\"+c.short_name+\":timestamp\"),lang_ims:D.get(\"ds_lang_\"+c.short_name+\":timestamp\"),referer:t.referrer};c.stylePatch&&(s.style_patch=c.stylePatch);for(var a in s)s[a]&&(!P.ie6||encodeURIComponent(s[a]).length<200)&&(e[a]=s[a]);return e}var=\"\" h=\"S.jQuery,V=H(e),Y=H(t);e.postMessage&&(e.addEventListener?e.addEventListener(\"message\",g,!1):e.attachEvent&&e.attachEvent(\"onmessage\",g)),S.scrollTo=function(e){var\" t=\"e.offset().top;(t<V.scrollTop()||t\">V.scrollTop()+V.height())&&H(\"html, body\").animate({scrollTop:t-40},200,\"swing\")},S.toJSON=function(e){var t=/\\r?\\n/g,s=/^(?:color|date|datetime|datetime-local|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,a=/^(?:select|textarea)/i,i=e.map(function(){return this.elements?H.makeArray(this.elements):this}).filter(function(){return this.name&&!this.disabled&&(this.checked||a.test(this.nodeName)||s.test(this.type))}).map(function(e,s){var a=H(this).val();return null==a?null:H.isArray(a)?H.map(a,function(e){return{name:s.name,value:e.replace(t,\"\\r\\n\")}}):{name:s.name,value:a.replace(t,\"\\r\\n\")}}).toArray(),r={};return H.each(i,function(){r[this.name]=this.value}),r},S.resetNotify=function(){var e=H(\"#ds-notify\"),s=ot.data;e[0]||(e=H('<div id=\"ds-notify\"></div>').css({hidden:{display:\"none\"},\"top-right\":{top:\"24px\",right:\"24px\"},\"bottom-right\":{bottom:\"24px\",right:\"24px\"}}[rt.data.notify_position]).delegate(\".ds-notify-unread a\",\"click\",function(){return T(H(this).data(\"type\")),!1}).appendTo(t.body)),e.html(et.notify(s))[!s.comments&&!s.notifications||\"hidden\"===rt.data.notify_position||H(\".ds-dialog\")[0]?\"hide\":\"show\"]()},ot.on(\"reset\",S.resetNotify),st.Replybox=function(e){this.embedThread=e},st.Replybox.prototype={render:function(e){function s(e){e.data(\"submitting\",!0),e.find(\".ds-post-button\").addClass(\"ds-waiting\").html(z.posting)[0].disabled=!0}function a(e){e.data(\"submitting\",!1),e.find(\".ds-post-button\").removeClass(\"ds-waiting\").html(z.post)[0].disabled=!1}var i=this,o=i.embedThread,c=o.options,p=function(){S.require(\"smilies\",function(){})},h={thread:o,options:c,inline:e,params:{thread_id:o.threadId,parent_id:\"\",nonce:S.nonce},repostArray:[],checked:0};for(var v in nt.data.repostOptions)nt.data.repostOptions[v]&&(h.repostArray.push(v),h.checked=1);var g=i.el=H(et.replybox(h)).click(p),b=g.find(\"form\"),y=b.find(\"input[type=checkbox]\")[0],_=b.find(\"a.ds-service-icon, a.ds-service-icon-grey\"),k=f(b.find(\"textarea\")).focus(p).keyup(n).keyup(d).bind(\"focus mousedown mouseup keyup\",u),w=g.find(\".ds-add-emote\").click(function(e){var s=S.smiliesTooltip;return w.toggleClass(\"ds-expanded\").hasClass(\"ds-expanded\")?(s||(s=S.smiliesTooltip=new st.SmiliesTooltip,s.render(),S.require(\"smilies\",function(){s.reset(\"微博-默认\")})),s.replybox=i,s.el.appendTo(t.body).css({top:i.el.offset().top+i.el.outerHeight()+4+\"px\",left:i.el.find(\".ds-textarea-wrapper\").offset().left+\"px\"}),H(t.body).click(x)):x(e),!1}),x=(g.find(\".ds-add-image\").click(function(e){var s=k[0],a=s.value,i=\"请输入图片地址\",r='<img src=\"'+i+'\">';if(t.selection){s.value=a.substring(0,k.data(\"ds-range-start\"))+r+a.substring(k.data(\"ds-range-end\"),a.length),s.value=s.value.replace(\"说点什么吧 ...\",\"\"),s.focus();var n=t.selection.createRange();n.collapse(),n.findText(i),n.select()}else{s.value=a.substring(0,s.selectionStart)+r+a.substring(s.selectionEnd);var o=s.value.search(i);s.setSelectionRange(o,o+i.length),s.focus()}e.preventDefault()}),i.hideSmilies=function(){w.removeClass(\"ds-expanded\"),S.smiliesTooltip.el.detach(),H(t.body).unbind(\"click\",x)}),T=function(e,t){var s=E(et[\"dialog-anonymous\"]({services:[\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"],options:c})),a=s.el.find(\".ds-dialog\").css(\"width\",\"320px\");if(a.find(\".ds-icons-32 a\").click(l),!c.deny_anonymous){var i=s.el.find(\"form\");i.submit(function(){var e=i.find(\"input[name=author_email]\").val();return!e&&!c.require_guest_email||e.match(/^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)?(t(S.toJSON(i)),s.close(),!1):(alert(\"请输入一个有效的email地址.\"),!1)}),i.find(\"input[name=author_name]\")[0].focus()}};c.deny_anonymous&&k.focus(function(){if(r()){T(b,q);var e=function(t){t.stopPropagation(),k.unbind(\"click\",e)};k.click(e)}return!1});var q=function(e){s(b),R.post(\"posts/create\",H.extend(S.toJSON(b),e),function(e){var t=lt[e.response.post_id]=new F(e.response),s=M(i.postList,t,c);if(\"asc\"==c.order==(\"top\"==c.formPosition)&&S.scrollTo(s),o.data.comments++,o.updateCounter(\"duoshuo\"),k.val(\"\").trigger(\"keyup\"),a(b),g.hasClass(\"ds-inline-replybox\")&&(g.detach(),i.actionsBar.removeClass(\"ds-reply-active\")),m)try{m.removeItem(\"ds_draft_\"+o.threadId)}catch(r){}},function(e){a(b),alert(e.errorMessage)})};b.submit(function(){if(b.data(\"submitting\"))return!1;var e=H.trim(b[0].message.value);return\"\"==e||!P.placeholder&&e==k.attr(\"placeholder\")?(alert(\"您还没写内容呢\"),!1):(r()?T(b,q):q(),!1)});var C=function(e){return H(e).hasClass(\"ds-service-icon-grey\")?null:H(e).attr(\"data-service\")};if(_.click(function(){return H(this).toggleClass(\"ds-service-icon-grey\").toggleClass(\"ds-service-icon\"),y.value=H.map(_,C).join(\",\"),y.checked=\"\"!=y.value,!1}),H(y).change(function(){var e=this.checked;_[e?\"removeClass\":\"addClass\"](\"ds-service-icon-grey\")[e?\"addClass\":\"removeClass\"](\"ds-service-icon\"),this.value=H.map(_,C).join(\",\")}),!e&&m){var j=\"ds_draft_\"+o.threadId;k.bind(\"focus blur keyup\",function(e){var t=H(e.currentTarget).val();try{m[j]=t}catch(e){}}),m[j]&&k.val(m[j])}return this}},st.Dialog=J.extend({init:function(e,t){(this.el=H(\"#ds-wrapper\"))[0]||(this.el=p(H('<div id=\"ds-wrapper\"></div>'))),this.options=H.extend({width:600},t),e!==s&&H(e).attr(\"id\",\"ds-reset\").appendTo(this.el)},open:function(){function e(e){return 27==e.which?(a.close(),!1):void 0}function s(){return a.close(),!1}var a=this;return a.el.hide().appendTo(t.body).fadeIn(200),P.ie6&&a.el.css(\"top\",V.scrollTop()+100),a.el.show().find(\".ds-dialog\").delegate(\"a.ds-dialog-close\",\"click\",function(){return a.close(),!1}).click(i),Y.keydown(e),H(t.body).click(s),a.close=function(){Y.unbind(\"keydown\",e),H(t.body).unbind(\"click\",s),a.el.fadeOut(200,function(){H(this).remove()}),a.trigger(\"close\")},a}}),et.likePanel=function(e){return e.likes?'<span class=\"ds-highlight\">'+e.likes+\"</span> 人喜欢\":\"\"},st.Meta=function(e){this.embedThread=e},st.Meta.prototype={render:function(){function a(a){function r(e){o.set(e),n.resetLikePanel()}function c(){n.tooltip.detach(),H(t.body).unbind(\"click\",c)}function u(t){switch(this.className){case\"ds-like-tooltip-close\":c(t);break;default:if(!e.open(this.href,\"_blank\",\"height=500,width=600,top=0,left=0,toolbar=no,menubar=no,resizable=yes,location=yes,status=no\"))return}return!1}var p=l.hasClass(\"ds-thread-liked\");if(R.post(\"threads/vote\",{thread_id:n.embedThread.threadId,vote:p?0:1},r),l.toggleClass(\"ds-thread-liked\"),l.find(\".ds-thread-like-text\").text(p?\"喜欢\":\"已喜欢\"),p)return n.tooltip&&c(a),!1;if(n.tooltip===s){var h=et.likeTooltip({services:{qzone:\"QQ空间\",weibo:\"新浪微博\",qqt:\"腾讯微博\",renren:\"人人网\",kaixin:\"开心网\",douban:\"豆瓣网\",baidu:\"百度搜藏\"},thread_id:o.data.thread_id});n.tooltip=H(h).click(i).delegate(\"a\",\"click\",u)}var f={};return f.left=0,f.top=d.position().top+d.outerHeight()-4+\"px\",n.tooltip.appendTo(n.embedThread.innerEl).css(f),H(t.body).click(c),!1}var n=this,o=n.embedThread.model,d=n.el=H(et.meta(o.toJSON())),l=d.find(\".ds-like-thread-button\");return l.click(a),n.resetLikePanel(),r()&&d.hide(),n},resetLikePanel:function(){this.el.find(\".ds-like-panel\").html(et.likePanel(this.embedThread.model.toJSON()))}},st.PostListHead=function(e){this.embedThread=e},st.PostListHead.prototype={render:function(){function e(e){r.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.page=1;var t=e.currentTarget;switch(t.className){case\"ds-comments-tab-duoshuo\":a.params.source=\"duoshuo\",s.replybox.el.show();break;case\"ds-comments-tab-repost\":a.params.source=\"repost\",s.replybox.el.hide();break;case\"ds-comments-tab-weibo\":a.params.source=\"weibo\",s.replybox.el.hide();break;case\"ds-comments-tab-qqt\":a.params.source=\"qqt\",s.replybox.el.hide()}return H(t).addClass(\"ds-current\"),a.refetch(),!1}function t(){return n.find(\"a.ds-current\").removeClass(\"ds-current\"),a.params.order=s.options.order=this.className.replace(\"ds-order-\",\"\"),a.params.page=1,a.refetch(),H(this).addClass(\"ds-current\"),!1}var s=this.embedThread,a=s.postList,i=this.el=H(et.postListHead({thread:s.model.toJSON(),options:s.options})),r=i.find(\"ul.ds-comments-tabs\");r.delegate(\".ds-tab a\",\"click\",e);var n=i.find(\".ds-sort\");return n.delegate(\"a\",\"click\",t),n.find(\".ds-order-\"+a.params.order).addClass(\"ds-current\"),this}},st.Paginator=function(e){function t(){return i.params.page=parseInt(this.innerHTML),i.refetch(),a.find(\".ds-current\").removeClass(\"ds-current\"),H(this).addClass(\"ds-current\"),!1}e=e||{};var s=this,a=s.el=e.el||H('<div class=\"ds-paginator\"></div>'),i=s.collection=e.collection;a.delegate(\"a\",\"click\",t)},st.Paginator.prototype={reset:function(e){function t(e){i.push('<a data-page=\"'+e+'\" href=\"javascript:void(0);\" target=\"_blank\" rel=\"noopener\">'+e+\"</a>\")}var s,a=this.collection.params.page||1,i=[];if(a>1)for(t(1),s=a>4?a-2:2,s>2&&i.push('<span class=\"page-break\">...</span>');a>s;s++)t(s);if(i.push('<a data-page=\"'+a+'\" href=\"javascript:void(0);\" class=\"ds-current\" target=\"_blank\" rel=\"noopener\">'+a+\"</a>\"),a<e.pages){for(s=a+1;a+4>=s&&s<e.pages;s++)t(s);s<e.pages&&i.push('<span class=\"page-break\">...'),t(e.pages)}this.el.html('<div class=\"ds-border\"></div>'+i.join(\" \"))[e.pages>1?\"show\":\"hide\"]()}},S.addSmilies=function(e,t){var s=S.smiliesTooltip;s&&s.el.find(\"ul.ds-smilies-tabs\").append(\"<li><a>\"+e+\"</a></li>\"),S.smilies[e]=t},st.SmiliesTooltip=function(){},st.SmiliesTooltip.prototype={render:function(){function e(){var e=s.replybox,a=e.el.find(\"textarea\"),i=a[0],r=i.value;if(t.selection){i.value=r.substring(0,a.data(\"ds-range-start\"))+this.title+r.substring(a.data(\"ds-range-end\"),r.length),i.value=i.value.replace(z.leave_a_message,\"\"),i.focus();var n=t.selection.createRange();n.moveStart(\"character\",a.data(\"ds-range-start\")+this.title.length),n.collapse(),n.select()}else{var o=i.selectionStart+this.title.length;i.value=r.substring(0,i.selectionStart)+this.title+r.substring(i.selectionEnd),i.setSelectionRange(o,o)}e.hideSmilies(),i.focus()}var s=this,a=s.el=H(et.smiliesTooltip(L));return a.click(i).find(\"ul.ds-smilies-tabs\").delegate(\"a\",\"click\",function(){s.reset(this.innerHTML)}),a.find(\".ds-smilies-container\").delegate(\"img\",\"click\",e),this},reset:function(e){function t(t,s){var i=0===e.indexOf(\"微博\")?\"http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/\"+s.replace(\"_org\",\"_thumb\"):S.STATIC_URL+\"/images/smilies/\"+s;\"WordPress\"===e&&(t=\" \"+t+\" \"),a+='<li><img src=\"'+i+'\" title=\"'+_(t)+'\"></li>'}var s=this.el.find(\"ul.ds-smilies-tabs\");s.find(\"a.ds-current\").removeClass(\"ds-current\"),s.find(\"a\").filter(function(){return this.innerHTML==e}).addClass(\"ds-current\");var a=\"<ul>\";return H.each(L[e],t),a+=\"</ul>\",this.el.find(\".ds-smilies-container\").html(a),this}},et.postPlaceholder=function(){return['<li class=\"ds-post ds-post-placeholder\">',z.no_comments_yet,\"</li>\"].join(\"\")};var X=H('<div id=\"ds-bubble\"><div class=\"ds-bubble-content\"></div><div class=\"ds-arrow ds-arrow-down ds-arrow-border\"></div><div class=\"ds-arrow ds-arrow-down\"></div></div>'),K=X.find(\".ds-bubble-content\").delegate(\"a.ds-ctx-open\",\"click\",function(){function e(e){function t(e,t){return et.ctxPost({post:e,index:t})}C.log(H.map(e.response,t).join(\"\\n\"));s.el.find(\"ol\");s.el.find(\"ol\").html(H.map(e.response,t).join(\"\\n\"))}var t={};t.post_id=K.attr(\"data-post-id\"),R.get(\"posts/conversation\",t,e);var s=E('<h2>查看对话</h2><ol id=\"ds-ctx\"></ol>');return s.el.find(\".ds-dialog\").css(\"width\",\"600px\"),s.el.find(\".ds-dialog-body\").css({\"max-height\":\"350px\",_height:\"350px\",\"overflow-y\":\"auto\",\"padding-top\":\"10px\"}),!1}),tt=bubbleOutTimer=0;X.mouseenter(N).mouseleave(I),st.PostList=function(e){e&&(e.params&&(this.params=e.params),e.embedThread&&(this.embedThread=e.embedThread)),this.el=H('<ul class=\"ds-comments\"></ul>')},st.PostList.prototype={url:\"threads/listPosts\",render:function(){return U.call(this.el,this.embedThread,this.embedThread.options),this},reset:function(e){var t=this.embedThread.options;this.el.html(e[0]?H.map(lt.getJSON(e),function(e){return et.post({post:e,options:t})}).join(\"\"):et.postPlaceholder())},refetch:function(){function e(e){lt.set(e.parentPosts||e.relatedPosts),ct.set(e.users),s.reset(e.response),s.embedThread.paginator.reset(e.cursor),s.el.fadeTo(200,1),S.scrollTo(s.el),a.remove()}var s=this,a=H(et.indicator()).appendTo(t.body).fadeIn(200);s.el.fadeTo(200,.5),R.get(s.url,s.params,e)}},st.RelatedRead=function(){this._init()},st.RelatedRead.prototype={_init:function(){this.el=H('<div id=\"ds-related-reads\"></div>')},load:function(s){e.__duoshuo_id__=s,e.readsByToutiao=[],e.readsByToutiao.push({id:\"ds-related-reads\",num:3});var a=\"//s0.pstatp.com/site/reads-sdk/5bf3702b38076207bee1.js\",i=t.createElement(\"script\");i.src=a,i.charset=\"utf-8\",i.crossOrigin=\"anonymous\",t.head.appendChild(i)},mount:function(e){this.el.insertBefore(e)}},st.EmbedThread=Q.extend({uri:\"threads/listPosts\",params:\"thread-id local-thread-id source-thread-id thread-key category channel-key author-key author-id url limit order max-depth form-position container-url\"+(v.match(/MSIE 6\\.0/)?\"\":\" title image thumbnail\"),render:function(){var e=this.el;if(\"请将此处替换成文章在你的站点中的ID\"===e.data(\"thread-key\"))return alert(\"请设置正确的 data-thread-key 属性\"),!1;e.attr(\"id\",\"ds-thread\").append(et.waitingImg());var t=e.width(),s=e.data(\"url\")||!e.attr(\"data-thread-id\")&&H(\"link[rel=canonical]\").attr(\"href\");s?e.data(\"url\",k(s)):e.data(\"container-url\",h.href),t&&400>=t&&e.addClass(\"ds-narrow\").data(\"max-depth\",1)},updateCounter:function(e){function t(e){return e.substr(e.indexOf(\"}\")+1)}var s={duoshuo:[\"comments\",t(z.comments_multiple)||\"评论\"],repost:[\"reposts\",t(z.reposts_multiple)||\"转载\"],weibo:[\"weibo_reposts\",t(z.weibo_reposts_multiple)||\"新浪微博\"],qqt:[\"qqt_reposts\",t(z.qqt_reposts_multiple)||\"腾讯微博\"]};for(var a in s)if(!e||e==a){var i=this.data[s[a][0]];this.el.find(\".ds-comments-tab-\"+a).html(this.el.hasClass(\"ds-narrow\")?'<span class=\"ds-service-icon ds-'+a+'\"></span>'+i:(i?'<span class=\"ds-highlight\">'+i+\"</span>\":\"0\")+s[a][1])}},onError:function(e){this.el.html(\"评论框出错啦(\"+e.code+\"): \"+e.errorMessage)},onload:function(t){var a=this,i=a.threadId=t.thread.thread_id,n=t.cursor,o=a.options=t.options,d=a.innerEl=p(H('<div id=\"ds-reset\"></div>').appendTo(a.el));a.model=new G(a.data=t.thread),lt.set(t.parentPosts||t.relatedPosts),ct.set(t.users),a.el.find(\"#ds-waiting\").remove(),t.options&&t.options.show_recommend&&(a.relatedRead=new st.RelatedRead,a.relatedRead.load(t.thread.site_id),a.relatedRead.mount(d)),o.like_thread_enabled&&(a.meta=new st.Meta(a),d.append(a.meta.render().el)),o.hot_posts&&t.hotPosts&&t.hotPosts.length&&(a.hotPosts=new st.HotPosts(H('<div class=\"ds-rounded\"></div>'),{max_depth:1,show_context:o.show_context}),a.hotPosts.thread=a,d.append(a.hotPosts.el),a.hotPosts.onload({list:lt.getJSON(t.hotPosts)})),a.postListHead=new st.PostListHead(a),a.postList=new st.PostList({embedThread:a,params:{source:\"duoshuo\",thread_id:i,max_depth:o.max_depth,order:o.order,limit:o.limit}}),a.postList.render().reset(t.response),a.paginator=new st.Paginator({collection:a.postList}),a.paginator.reset(n);var c=a.replybox=new st.Replybox(a);c.postList=a.postList.el,r()?a.loginButtons=H(et.loginButtons()).delegate(\"a.ds-more-services\",\"click\",function(){return a.loginButtons.find(\".ds-additional-services\").toggle(),!1}).delegate(\"a.ds-service-link\",\"click\",l):a.toolbar=H(et.toolbar()).delegate(\".ds-account-control\",\"mouseenter\",function(){H(this).addClass(\"ds-active\")}).delegate(\".ds-account-control\",\"mouseleave\",function(){H(this).removeClass(\"ds-active\")}).delegate(\"a.ds-bind-more\",\"click\",function(){var e=E(et[\"dialog-bind-more\"]()).el.find(\".ds-dialog\").addClass(\"ds-dialog-bind-more\").css(\"width\",\"300px\");return e.find(\"a.ds-service-link\").click(l),!1}).delegate(\"a.ds-unread-comments-count\",\"click\",function(){return T(\"unread-comments\"),!1});var u=['<a name=\"respond\"></a>',a.toolbar||a.loginButtons,c.render().el];\"top\"==o.formPosition&&H.fn.append.apply(d,u),d.append(a.postListHead.render().el,a.postList.el,a.paginator.el),\"bottom\"==o.formPosition&&H.fn.append.apply(d,u),d.append(et.poweredBy(o.poweredby_text)),a.updateCounter(),t.alerts&&H.each(t.alerts,function(e,t){H('<div class=\"ds-alert\">'+t+\"</div>\").insertBefore(a.toolbar||loginButtons)}),o.message&&c.el.find(\"textarea\").val(o.message).focus(),ot.on(\"reset\",function(){var e=ot.data.comments||0;d.find(\"a.ds-unread-comments-count\").html(e).attr(\"title\",e?\"你有\"+e+\"条新回复\":\"你没有新回复\").css(\"display\",e?\"inline\":\"none\")}),o.mzadx_id&&(S.require(\"mzadxN\",function(){}),H('<div id=\"MZADX_'+o.mzadx_id+'\" style=\"margin:0 auto;\"></div>').appendTo(d),__mz_rpq=e.__mz_rpq||[],__mz_rpq.push({l:[o.mzadx_id],r:\"1\",_srv:\"MZADX\",_callback:function(){}})),S.thread=a,ot.data!==s&&ot.trigger(\"reset\"),r()||A.send({visit_thread_id:a.threadId})},onMessage:function(e){M(this.postList.el,new F(e),this.options)}}),st.HotPosts=Q.extend({tmpl:\"hotPosts\",params:\"show-quote\",render:function(){return this.el.attr(\"id\",\"ds-hot-posts\"),this},onload:function(e){e.options=H.extend(this.options,e.options),Q.prototype.onload.call(this,e),U.call(this.el.find(\"ul\"),this.thread,this.options)}}),st.RecentComments=Q.extend({tmpl:\"commentList\",uri:\"sites/listRecentPosts\",params:\"show-avatars show-time show-title avatar-size show-admin excerpt-length num-items channel-key\",render:function(){this.el.attr(\"id\",\"ds-recent-comments\")},prepare:function(e){return{list:H.map(e.response,function(e){return new F(e).toJSON()})}}}),st.RecentVisitors=Q.extend({tmpl:\"recentVisitors\",uri:\"sites/listVisitors\",params:\"show-time avatar-size num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-recent-visitors\").append(this.waitingEl=H(et.waitingImg()))}}),st.TopThreads=Q.extend({tmpl:\"topThreads\",uri:\"sites/listTopThreads\",params:\"range num-items channel-key\",render:function(){this.el.children().detach(),this.el.attr(\"id\",\"ds-top-threads\").append(this.waitingEl=H(et.waitingImg()))}}),st.LoginWidget=Q.extend({tmpl:\"loginWidget\",render:function(){var e=this.el;e.attr(\"id\",\"ds-login\").html(et.loginWidget([\"weixin\",\"weibo\",\"qq\",\"renren\",\"kaixin\",\"douban\"])),e.find(\"a\").click(l),e.find(\"a.ds-logout\").attr(\"href\",Z.logoutUrl())}}),st.ThreadCount=Q.extend({onload:function(e){var t=this.el,s=t.data(\"count-type\")||\"comments\",a=e.data[s];t[t.data(\"replace\")?\"replaceWith\":\"html\"](z[s+\"_\"+(a?a>1?\"multiple\":\"one\":\"zero\")].replace(\"{num}\",a))}}),st.ShareWidget=Q.extend({tmpl:\"shareWidget\",render:function(){var e={copyright:\"多说分享插件\",services:[\"weibo\",\"qzone\",\"sohu\",\"renren\",\"netease\",\"qqt\",\"kaixin\",\"douban\",\"qq\",\"meilishuo\",\"mogujie\",\"baidu\",\"taobao\",\"google\",\"wechat\",\"diandian\",\"huaban\",\"duitang\",\"youdao\",\"pengyou\",\"facebook\",\"twitter\",\"linkedin\",\"msn\"]};this.el.attr(\"id\",\"ds-share\"),this.el.children().attr(\"id\",\"ds-reset\"),this.el.find(\".ds-share-aside-inner\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").html(et.shareWidget(e)),this.el.find(\".ds-share-icons-more\").hide(),this.el.hasClass(\"flat\")&&this.el.find(\"a\").each(function(){H(this).addClass(\"flat\")}),p(this.el),this.delegateEvents()},delegateEvents:function(){var s=this,i=s.el;if(i.children().hasClass(\"ds-share-inline\")){var r=\".ds-share-icons-more\",n=i.find(r),d=\"[data-toggle=ds-share-icons-more]\";i.delegate(d,\"mouseover\",function(){n.show()}),i.delegate(d,\"mouseout\",function(){n.hide()}),i.delegate(r,\"mouseover\",function(){n.show()}),i.delegate(r,\"mouseout\",function(){n.hide()})}else{var l=i.children().hasClass(\"ds-share-aside-left\")?\"slide-to-right\":\"slide-to-left\",c=i.children();if(!o.cssProperty(\"transition\")){var u=i.children().hasClass(\"ds-share-aside-left\")?\"left\":\"right\";i.delegate(\".ds-share-aside-toggle\",\"mouseover\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)-195:e[u]=0,c.animate(e,200)}),i.delegate(\".ds-share-aside-inner\",\"mouseleave\",function(){var e={},s=P.ie6&&\"right\"===u;s?e.left=(t.documentElement.scrollLeft+t.documentElement.clientWidth-this.offsetWidth-(parseInt(this.currentStyle.marginLeft,10)||0)-parseInt(this.currentStyle.marginRight,10)||0)+230:e[u]=-229,c.animate(e,200)})}i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseover\",function(){c.addClass(l)}),i.delegate(\".ds-share-aside-toggle,.ds-share-aside-inner\",\"mouseleave\",function(){c.removeClass(l)})}i.delegate(\"a\",\"click\",function(t){var s=H(this).data(\"service\");if(!i.data(\"url\"))return void alert(\"请设置data-url\");if(\"wechat\"===s){var r=a()+\"/api/qrcode/getImage.png\",n=\"?size=240&text=\"+i.data(\"url\"),d=E(et[\"dialog-qrcode\"]({qrcode_url:r+n,url:i.data(\"url\")}));d.el.find(\".ds-dialog\").css(\"width\",\"320px\")}else{var l=a()+\"/share-proxy/?\"+o.param({service:H(this).data(\"service\"),thread_key:i.data(\"threadKey\"),title:i.data(\"title\"),images:i.data(\"images\"),content:i.data(\"content\"),url:i.data(\"url\")});e.open(l,\"_blank\")}t.preventDefault(),t.stopPropagation()})}});var it=0;S.initSelector=function(e,t){function s(e){W(e),o.extend(z,e.options),dt.set(e.response)}var a=[];!q()||!H.isReady&&j||H(e).each(function(e,s){var i=H(s);if(!i.data(\"initialized\")){i.data(\"initialized\",!0);var r=new st[t.type](i,t);if(at.push(r),\"ThreadCount\"===t.type){var n=i.attr(\"data-thread-key\");i.attr(\"data-channel-key\")&&(n=i.attr(\"data-channel-key\")+\":\"+n),a.push(n),dt[n]||(dt[n]=new G({})),dt[n].on(\"reset\",function(){r.onload(this)})}else if(r.uri){var o={};H.each(r.params.split(\" \"),function(e,t){o[t.replace(/-/g,\"_\")]=i.attr(\"data-\"+t)||i.data(t)}),R.get(r.uri,B(o),function(e){r.load(e)})}}}),a.length&&R.get(\"threads/counts\",B({threads:a.join(\",\")}),s)},(S.initView=function(){H.each(O,S.initSelector)})(),H(function(){if(!c){if(!q())return C.error(\"缺少 duoshuoQuery 的定义\");C.warn(\"请在加载多说 embed.js 之前定义 duoshuoQuery\")}setInterval(function(){H(\".ds-time\").each(function(){var e=H(this).attr(\"datetime\");e&&(this.innerHTML=S.elapsedTime(e))})},2e4),c.ondomready&&c.ondomready(),S.initView(),!it&&c.short_name&&R.get(\"analytics/ping\",B({}),W)})})}}(window,document);</e.pages;s++)t(s);s<e.pages&&i.push('<span></e.pages){for(s=a+1;a+4></200)&&(e[a]=s[a]);return></=1?h.postlist=e.postlist.el:(h.postlist=i.siblings(\".ds-children\"),h.postlist[0]||(h.postlist=h('<ul></s.pagelets.length;r++)a=s.pagelets[r],a.threadid==t.thread_id&&a.onmessage(t);break;case\"notification\":y.push(t),i()}},e.addeventlistener(\"beforeunload\",function(){n.close()})}a.websocket.onopen()}};s.domain=\"duoshuo.com\",s.static_url=g+\"></e.length;i++)(function(n){s[e[i]]||(r=!1,o.injectscript(t(n),function(){s[n]=!0;for(var></arguments.length;t++)arguments[t]&&o.extend(e,arguments[t]);var></i.length;r++)if(\"string\"==typeof></o.length;d++)if(a=\">"}],"Post":[{"title":"Android TextView 部分字体设置颜色或大小","date":"2016-03-10T13:06:03.000Z","_content":"### Android TextView 部分字体设置颜色或大小 \n>在某些情况下，会遇到某些关键字需要**高亮**显示，可Android自带的TextView支持很困难。\n\n>背景来自：今天一同学问我怎么实现，给他举例两种方式，他感觉不方便，因此我才写此文章，简单介绍下。\n\n#### 支持方式一\n可以通过HTML的方式，因为TextView可以加载HTML，因此可以简单的实现，缺点是和Android自带的字体看起来有点别扭。\n\n`````\ntextView4.setText(Html.fromHtml(\"北京市发布霾黄色预警，<font color='#ff0000'><small><small>外出携带好</small></small></font>口罩\"));\n`````\n<!--more-->\n\n#### 支持方式二\n可以通过代码的方式，对TextView设置部分字体的颜色。\n\n`````\nSpannable span = new SpannableString(textView3.getText());\nspan.setSpan(new AbsoluteSizeSpan(58), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nspan.setSpan(new ForegroundColorSpan(Color.RED), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nspan.setSpan(new BackgroundColorSpan(Color.YELLOW), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\ntextView3.setText(span);\n`````\n\n\n----\n以上两种方式，我感觉就可以了，不过有些同学感觉就是用起来比较麻烦，因此我们可以封装下第二种方法，变为第三种方法，也就是我要写的。\n\n#### 支持方式三\n\n通过自定义View的方式来封装这些代码。\n\n##### 首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好\n\n`````\npublic class CTextView extends TextView {\n    private float normalTextSize;\n    private float highlightTextSize;\n    private int normalTextColor;\n    private int highlightTextColor;\n\n    public CTextView(Context context) {\n        super(context);\n    }\n\n    public CTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        TypedArray typedArray = null;\n        try {\n            typedArray = context.obtainStyledAttributes(attrs, R.styleable.CTextView, 0, 0);\n            normalTextSize = typedArray.getDimension(R.styleable.CTextView_normal_textsize, 14);\n            highlightTextSize = typedArray.getDimension(R.styleable.CTextView_highlight_textsize, 14);\n            normalTextColor = typedArray.getColor(R.styleable.CTextView_normal_textcolor, Color.BLACK);\n            highlightTextColor = typedArray.getColor(R.styleable.CTextView_highlight_textcolor, Color.BLACK);\n\n        } finally {\n            if (typedArray != null) {\n                typedArray.recycle();\n            }\n        }\n    }\n\n    public void setText(String allString, String highlightString) {\n        SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder();\n        spannableStringBuilder.append(allString);\n        spannableStringBuilder.setSpan(new AbsoluteSizeSpan((int) normalTextSize, true), 0, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        spannableStringBuilder.setSpan(new ForegroundColorSpan(normalTextColor), 0, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        List<Integer> list = getSubIndex(0, allString, highlightString);\n        for (int i = 0; i < list.size(); i++) {\n            int index = list.get(i);\n            spannableStringBuilder.setSpan(new StyleSpan(Typeface.BOLD), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n            spannableStringBuilder.setSpan(new AbsoluteSizeSpan((int) highlightTextSize, true), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n            spannableStringBuilder.setSpan(new ForegroundColorSpan(highlightTextColor), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        }\n        setMovementMethod(LinkMovementMethod.getInstance());\n        setText(spannableStringBuilder);\n    }\n\n    private List<Integer> getSubIndex(int startIndex, String allString, String highlightString) {\n        List<Integer> list = new ArrayList<Integer>();\n        int index = -1;\n        if (startIndex == 0) {\n            index = allString.indexOf(highlightString);\n        } else {\n            index = allString.indexOf(highlightString, startIndex);\n        }\n        if (index != -1) {\n            list.add(index);\n            list.addAll(getSubIndex(index + highlightString.length(), allString, highlightString));\n        }\n        return list;\n    }\n\n}\n\n`````\n\n##### 定义上面类中用到的attrs.xml\n\n`````\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <declare-styleable name=\"CTextView\">\n        <attr name=\"normal_textsize\" format=\"dimension\"/>\n        <attr name=\"highlight_textsize\" format=\"dimension\"/>\n        <attr name=\"normal_textcolor\" format=\"color\"/>\n        <attr name=\"highlight_textcolor\" format=\"color\"/>\n    </declare-styleable>\n</resources>\n`````\n\n##### 在xml中的TextView的用法\n\n`````\n<LinearLayout \n\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n\txmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\tandroid:layout_width=\"match_parent\"\n\tandroid:layout_height=\"wrap_content\"\n\tandroid:orientation=\"vertical\">\n\t<!-- 此处是包名+类名，请写自己的包名 -->\n<com.easemob.ctextview.CTextView\n    android:id=\"@+id/c_textview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:normal_textsize=\"12sp\"\n    app:highlight_textsize=\"20sp\"\n    app:normal_textcolor=\"#000\"\n    app:highlight_textcolor=\"#f00\" />\n</LinearLayout>\n`````\n\n##### 在Activity中的用法\n\n`````\nCTextView cTextView = (CTextView) findViewById(R.id.c_textview);\ncTextView.setText(\"欢迎大家看我说了这么久，大家辛苦了！\",\"大家\");\n`````\n\n##### 结果如下：\n![result ctextview](http://7xpj58.com1.z0.glb.clouddn.com/img_20160310202020.png)\n\n\n\n","source":"_posts/Android-TextView-部分字体设置颜色或大小.md","raw":"---\ntitle: Android TextView 部分字体设置颜色或大小\ndate: 2016-03-10 21:06:03\ntags: [android]\ncategories: android\n---\n### Android TextView 部分字体设置颜色或大小 \n>在某些情况下，会遇到某些关键字需要**高亮**显示，可Android自带的TextView支持很困难。\n\n>背景来自：今天一同学问我怎么实现，给他举例两种方式，他感觉不方便，因此我才写此文章，简单介绍下。\n\n#### 支持方式一\n可以通过HTML的方式，因为TextView可以加载HTML，因此可以简单的实现，缺点是和Android自带的字体看起来有点别扭。\n\n`````\ntextView4.setText(Html.fromHtml(\"北京市发布霾黄色预警，<font color='#ff0000'><small><small>外出携带好</small></small></font>口罩\"));\n`````\n<!--more-->\n\n#### 支持方式二\n可以通过代码的方式，对TextView设置部分字体的颜色。\n\n`````\nSpannable span = new SpannableString(textView3.getText());\nspan.setSpan(new AbsoluteSizeSpan(58), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nspan.setSpan(new ForegroundColorSpan(Color.RED), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\nspan.setSpan(new BackgroundColorSpan(Color.YELLOW), 11, 16, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);\ntextView3.setText(span);\n`````\n\n\n----\n以上两种方式，我感觉就可以了，不过有些同学感觉就是用起来比较麻烦，因此我们可以封装下第二种方法，变为第三种方法，也就是我要写的。\n\n#### 支持方式三\n\n通过自定义View的方式来封装这些代码。\n\n##### 首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好\n\n`````\npublic class CTextView extends TextView {\n    private float normalTextSize;\n    private float highlightTextSize;\n    private int normalTextColor;\n    private int highlightTextColor;\n\n    public CTextView(Context context) {\n        super(context);\n    }\n\n    public CTextView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        TypedArray typedArray = null;\n        try {\n            typedArray = context.obtainStyledAttributes(attrs, R.styleable.CTextView, 0, 0);\n            normalTextSize = typedArray.getDimension(R.styleable.CTextView_normal_textsize, 14);\n            highlightTextSize = typedArray.getDimension(R.styleable.CTextView_highlight_textsize, 14);\n            normalTextColor = typedArray.getColor(R.styleable.CTextView_normal_textcolor, Color.BLACK);\n            highlightTextColor = typedArray.getColor(R.styleable.CTextView_highlight_textcolor, Color.BLACK);\n\n        } finally {\n            if (typedArray != null) {\n                typedArray.recycle();\n            }\n        }\n    }\n\n    public void setText(String allString, String highlightString) {\n        SpannableStringBuilder spannableStringBuilder = new SpannableStringBuilder();\n        spannableStringBuilder.append(allString);\n        spannableStringBuilder.setSpan(new AbsoluteSizeSpan((int) normalTextSize, true), 0, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        spannableStringBuilder.setSpan(new ForegroundColorSpan(normalTextColor), 0, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        List<Integer> list = getSubIndex(0, allString, highlightString);\n        for (int i = 0; i < list.size(); i++) {\n            int index = list.get(i);\n            spannableStringBuilder.setSpan(new StyleSpan(Typeface.BOLD), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n            spannableStringBuilder.setSpan(new AbsoluteSizeSpan((int) highlightTextSize, true), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n            spannableStringBuilder.setSpan(new ForegroundColorSpan(highlightTextColor), index, index + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n        }\n        setMovementMethod(LinkMovementMethod.getInstance());\n        setText(spannableStringBuilder);\n    }\n\n    private List<Integer> getSubIndex(int startIndex, String allString, String highlightString) {\n        List<Integer> list = new ArrayList<Integer>();\n        int index = -1;\n        if (startIndex == 0) {\n            index = allString.indexOf(highlightString);\n        } else {\n            index = allString.indexOf(highlightString, startIndex);\n        }\n        if (index != -1) {\n            list.add(index);\n            list.addAll(getSubIndex(index + highlightString.length(), allString, highlightString));\n        }\n        return list;\n    }\n\n}\n\n`````\n\n##### 定义上面类中用到的attrs.xml\n\n`````\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resources>\n    <declare-styleable name=\"CTextView\">\n        <attr name=\"normal_textsize\" format=\"dimension\"/>\n        <attr name=\"highlight_textsize\" format=\"dimension\"/>\n        <attr name=\"normal_textcolor\" format=\"color\"/>\n        <attr name=\"highlight_textcolor\" format=\"color\"/>\n    </declare-styleable>\n</resources>\n`````\n\n##### 在xml中的TextView的用法\n\n`````\n<LinearLayout \n\txmlns:android=\"http://schemas.android.com/apk/res/android\"\n\txmlns:app=\"http://schemas.android.com/apk/res-auto\"\n\tandroid:layout_width=\"match_parent\"\n\tandroid:layout_height=\"wrap_content\"\n\tandroid:orientation=\"vertical\">\n\t<!-- 此处是包名+类名，请写自己的包名 -->\n<com.easemob.ctextview.CTextView\n    android:id=\"@+id/c_textview\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    app:normal_textsize=\"12sp\"\n    app:highlight_textsize=\"20sp\"\n    app:normal_textcolor=\"#000\"\n    app:highlight_textcolor=\"#f00\" />\n</LinearLayout>\n`````\n\n##### 在Activity中的用法\n\n`````\nCTextView cTextView = (CTextView) findViewById(R.id.c_textview);\ncTextView.setText(\"欢迎大家看我说了这么久，大家辛苦了！\",\"大家\");\n`````\n\n##### 结果如下：\n![result ctextview](http://7xpj58.com1.z0.glb.clouddn.com/img_20160310202020.png)\n\n\n\n","slug":"Android-TextView-部分字体设置颜色或大小","published":1,"updated":"2016-04-15T02:52:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuj80000pev2rmtjmda2","content":"<h3 id=\"Android-TextView-部分字体设置颜色或大小\"><a href=\"#Android-TextView-部分字体设置颜色或大小\" class=\"headerlink\" title=\"Android TextView 部分字体设置颜色或大小\"></a>Android TextView 部分字体设置颜色或大小</h3><blockquote>\n<p>在某些情况下，会遇到某些关键字需要<strong>高亮</strong>显示，可Android自带的TextView支持很困难。</p>\n<p>背景来自：今天一同学问我怎么实现，给他举例两种方式，他感觉不方便，因此我才写此文章，简单介绍下。</p>\n</blockquote>\n<h4 id=\"支持方式一\"><a href=\"#支持方式一\" class=\"headerlink\" title=\"支持方式一\"></a>支持方式一</h4><p>可以通过HTML的方式，因为TextView可以加载HTML，因此可以简单的实现，缺点是和Android自带的字体看起来有点别扭。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textView4.setText(Html.fromHtml(\"北京市发布霾黄色预警，<span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">'#ff0000'</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>外出携带好<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span>口罩\"));</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"支持方式二\"><a href=\"#支持方式二\" class=\"headerlink\" title=\"支持方式二\"></a>支持方式二</h4><p>可以通过代码的方式，对TextView设置部分字体的颜色。</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spannable span = <span class=\"keyword\">new</span> <span class=\"type\">SpannableString</span>(textView3.getText());</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">AbsoluteSizeSpan</span>(<span class=\"number\">58</span>), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">ForegroundColorSpan</span>(Color.RED), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">BackgroundColorSpan</span>(Color.YELLOW), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">textView3.setText(span);</span><br></pre></td></tr></table></figure>\n<hr>\n<p>以上两种方式，我感觉就可以了，不过有些同学感觉就是用起来比较麻烦，因此我们可以封装下第二种方法，变为第三种方法，也就是我要写的。</p>\n<h4 id=\"支持方式三\"><a href=\"#支持方式三\" class=\"headerlink\" title=\"支持方式三\"></a>支持方式三</h4><p>通过自定义View的方式来封装这些代码。</p>\n<h5 id=\"首先是CTextView-extends-TextView-当然名称无所谓，自己喜欢就好\"><a href=\"#首先是CTextView-extends-TextView-当然名称无所谓，自己喜欢就好\" class=\"headerlink\" title=\"首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好\"></a>首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好</h5><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CTextView</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> float normalTextSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> float highlightTextSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> normalTextColor;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> highlightTextColor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CTextView(Context context) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CTextView(Context context, AttributeSet attrs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        TypedArray typedArray = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            typedArray = context.obtainStyledAttributes(attrs, R.styleable.CTextView, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">            normalTextSize = typedArray.getDimension(R.styleable.CTextView_normal_textsize, <span class=\"number\">14</span>);</span><br><span class=\"line\">            highlightTextSize = typedArray.getDimension(R.styleable.CTextView_highlight_textsize, <span class=\"number\">14</span>);</span><br><span class=\"line\">            normalTextColor = typedArray.getColor(R.styleable.CTextView_normal_textcolor, Color.BLACK);</span><br><span class=\"line\">            highlightTextColor = typedArray.getColor(R.styleable.CTextView_highlight_textcolor, Color.BLACK);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (typedArray != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                typedArray.recycle();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setText(String allString, String highlightString) &#123;</span><br><span class=\"line\">        SpannableStringBuilder spannableStringBuilder = <span class=\"keyword\">new</span> SpannableStringBuilder();</span><br><span class=\"line\">        spannableStringBuilder.append(allString);</span><br><span class=\"line\">        spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> AbsoluteSizeSpan((<span class=\"keyword\">int</span>) normalTextSize, <span class=\"keyword\">true</span>), <span class=\"number\">0</span>, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> ForegroundColorSpan(normalTextColor), <span class=\"number\">0</span>, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        List&lt;Integer&gt; list = getSubIndex(<span class=\"number\">0</span>, allString, highlightString);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> <span class=\"keyword\">index</span> = list.get(i);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> StyleSpan(Typeface.BOLD), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> AbsoluteSizeSpan((<span class=\"keyword\">int</span>) highlightTextSize, <span class=\"keyword\">true</span>), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> ForegroundColorSpan(highlightTextColor), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        setMovementMethod(LinkMovementMethod.getInstance());</span><br><span class=\"line\">        setText(spannableStringBuilder);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Integer&gt; getSubIndex(<span class=\"keyword\">int</span> startIndex, String allString, String highlightString) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"keyword\">index</span> = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (startIndex == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">index</span> = allString.indexOf(highlightString);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">index</span> = allString.indexOf(highlightString, startIndex);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">index</span> != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">index</span>);</span><br><span class=\"line\">            list.addAll(getSubIndex(<span class=\"keyword\">index</span> + highlightString.length(), allString, highlightString));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"定义上面类中用到的attrs-xml\"><a href=\"#定义上面类中用到的attrs-xml\" class=\"headerlink\" title=\"定义上面类中用到的attrs.xml\"></a>定义上面类中用到的attrs.xml</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">declare-styleable</span> <span class=\"attr\">name</span>=<span class=\"string\">\"CTextView\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"normal_textsize\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"dimension\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"highlight_textsize\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"dimension\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"normal_textcolor\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"highlight_textcolor\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">declare-styleable</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"在xml中的TextView的用法\"><a href=\"#在xml中的TextView的用法\" class=\"headerlink\" title=\"在xml中的TextView的用法\"></a>在xml中的TextView的用法</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> </span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 此处是包名+类名，请写自己的包名 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.easemob.ctextview.CTextView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/c_textview\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:normal_textsize</span>=<span class=\"string\">\"12sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:highlight_textsize</span>=<span class=\"string\">\"20sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:normal_textcolor</span>=<span class=\"string\">\"#000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:highlight_textcolor</span>=<span class=\"string\">\"#f00\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"在Activity中的用法\"><a href=\"#在Activity中的用法\" class=\"headerlink\" title=\"在Activity中的用法\"></a>在Activity中的用法</h5><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CTextView cTextView = (CTextView) findViewById(R.id.c_textview)<span class=\"comment\">;</span></span><br><span class=\"line\">cTextView.setText(<span class=\"string\">\"欢迎大家看我说了这么久，大家辛苦了！\"</span>,<span class=\"string\">\"大家\"</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"结果如下：\"><a href=\"#结果如下：\" class=\"headerlink\" title=\"结果如下：\"></a>结果如下：</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/img_20160310202020.png\" alt=\"result ctextview\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"Android-TextView-部分字体设置颜色或大小\"><a href=\"#Android-TextView-部分字体设置颜色或大小\" class=\"headerlink\" title=\"Android TextView 部分字体设置颜色或大小\"></a>Android TextView 部分字体设置颜色或大小</h3><blockquote>\n<p>在某些情况下，会遇到某些关键字需要<strong>高亮</strong>显示，可Android自带的TextView支持很困难。</p>\n<p>背景来自：今天一同学问我怎么实现，给他举例两种方式，他感觉不方便，因此我才写此文章，简单介绍下。</p>\n</blockquote>\n<h4 id=\"支持方式一\"><a href=\"#支持方式一\" class=\"headerlink\" title=\"支持方式一\"></a>支持方式一</h4><p>可以通过HTML的方式，因为TextView可以加载HTML，因此可以简单的实现，缺点是和Android自带的字体看起来有点别扭。</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textView4.setText(Html.fromHtml(\"北京市发布霾黄色预警，<span class=\"tag\">&lt;<span class=\"name\">font</span> <span class=\"attr\">color</span>=<span class=\"string\">'#ff0000'</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">small</span>&gt;</span>外出携带好<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">font</span>&gt;</span>口罩\"));</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"支持方式二\"><a href=\"#支持方式二\" class=\"headerlink\" title=\"支持方式二\"></a>支持方式二</h4><p>可以通过代码的方式，对TextView设置部分字体的颜色。</p>\n<figure class=\"highlight haxe\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Spannable span = <span class=\"keyword\">new</span> <span class=\"type\">SpannableString</span>(textView3.getText());</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">AbsoluteSizeSpan</span>(<span class=\"number\">58</span>), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">ForegroundColorSpan</span>(Color.RED), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">span.setSpan(<span class=\"keyword\">new</span> <span class=\"type\">BackgroundColorSpan</span>(Color.YELLOW), <span class=\"number\">11</span>, <span class=\"number\">16</span>, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">textView3.setText(span);</span><br></pre></td></tr></table></figure>\n<hr>\n<p>以上两种方式，我感觉就可以了，不过有些同学感觉就是用起来比较麻烦，因此我们可以封装下第二种方法，变为第三种方法，也就是我要写的。</p>\n<h4 id=\"支持方式三\"><a href=\"#支持方式三\" class=\"headerlink\" title=\"支持方式三\"></a>支持方式三</h4><p>通过自定义View的方式来封装这些代码。</p>\n<h5 id=\"首先是CTextView-extends-TextView-当然名称无所谓，自己喜欢就好\"><a href=\"#首先是CTextView-extends-TextView-当然名称无所谓，自己喜欢就好\" class=\"headerlink\" title=\"首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好\"></a>首先是CTextView extends TextView,当然名称无所谓，自己喜欢就好</h5><figure class=\"highlight axapta\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CTextView</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> float normalTextSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> float highlightTextSize;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> normalTextColor;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> highlightTextColor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CTextView(Context context) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> CTextView(Context context, AttributeSet attrs) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        TypedArray typedArray = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            typedArray = context.obtainStyledAttributes(attrs, R.styleable.CTextView, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">            normalTextSize = typedArray.getDimension(R.styleable.CTextView_normal_textsize, <span class=\"number\">14</span>);</span><br><span class=\"line\">            highlightTextSize = typedArray.getDimension(R.styleable.CTextView_highlight_textsize, <span class=\"number\">14</span>);</span><br><span class=\"line\">            normalTextColor = typedArray.getColor(R.styleable.CTextView_normal_textcolor, Color.BLACK);</span><br><span class=\"line\">            highlightTextColor = typedArray.getColor(R.styleable.CTextView_highlight_textcolor, Color.BLACK);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (typedArray != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                typedArray.recycle();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> setText(String allString, String highlightString) &#123;</span><br><span class=\"line\">        SpannableStringBuilder spannableStringBuilder = <span class=\"keyword\">new</span> SpannableStringBuilder();</span><br><span class=\"line\">        spannableStringBuilder.append(allString);</span><br><span class=\"line\">        spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> AbsoluteSizeSpan((<span class=\"keyword\">int</span>) normalTextSize, <span class=\"keyword\">true</span>), <span class=\"number\">0</span>, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> ForegroundColorSpan(normalTextColor), <span class=\"number\">0</span>, allString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        List&lt;Integer&gt; list = getSubIndex(<span class=\"number\">0</span>, allString, highlightString);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> <span class=\"keyword\">index</span> = list.get(i);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> StyleSpan(Typeface.BOLD), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> AbsoluteSizeSpan((<span class=\"keyword\">int</span>) highlightTextSize, <span class=\"keyword\">true</span>), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">            spannableStringBuilder.setSpan(<span class=\"keyword\">new</span> ForegroundColorSpan(highlightTextColor), <span class=\"keyword\">index</span>, <span class=\"keyword\">index</span> + highlightString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        setMovementMethod(LinkMovementMethod.getInstance());</span><br><span class=\"line\">        setText(spannableStringBuilder);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;Integer&gt; getSubIndex(<span class=\"keyword\">int</span> startIndex, String allString, String highlightString) &#123;</span><br><span class=\"line\">        List&lt;Integer&gt; list = <span class=\"keyword\">new</span> ArrayList&lt;Integer&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> <span class=\"keyword\">index</span> = <span class=\"number\">-1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (startIndex == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">index</span> = allString.indexOf(highlightString);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">index</span> = allString.indexOf(highlightString, startIndex);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">index</span> != <span class=\"number\">-1</span>) &#123;</span><br><span class=\"line\">            list.add(<span class=\"keyword\">index</span>);</span><br><span class=\"line\">            list.addAll(getSubIndex(<span class=\"keyword\">index</span> + highlightString.length(), allString, highlightString));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"定义上面类中用到的attrs-xml\"><a href=\"#定义上面类中用到的attrs-xml\" class=\"headerlink\" title=\"定义上面类中用到的attrs.xml\"></a>定义上面类中用到的attrs.xml</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"php\"><span class=\"meta\">&lt;?</span>xml version=<span class=\"string\">\"1.0\"</span> encoding=<span class=\"string\">\"utf-8\"</span><span class=\"meta\">?&gt;</span></span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">resources</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">declare-styleable</span> <span class=\"attr\">name</span>=<span class=\"string\">\"CTextView\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"normal_textsize\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"dimension\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"highlight_textsize\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"dimension\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"normal_textcolor\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">attr</span> <span class=\"attr\">name</span>=<span class=\"string\">\"highlight_textcolor\"</span> <span class=\"attr\">format</span>=<span class=\"string\">\"color\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">declare-styleable</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"在xml中的TextView的用法\"><a href=\"#在xml中的TextView的用法\" class=\"headerlink\" title=\"在xml中的TextView的用法\"></a>在xml中的TextView的用法</h5><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> </span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">\t<span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"comment\">&lt;!-- 此处是包名+类名，请写自己的包名 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.easemob.ctextview.CTextView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/c_textview\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:normal_textsize</span>=<span class=\"string\">\"12sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:highlight_textsize</span>=<span class=\"string\">\"20sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:normal_textcolor</span>=<span class=\"string\">\"#000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">app:highlight_textcolor</span>=<span class=\"string\">\"#f00\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"在Activity中的用法\"><a href=\"#在Activity中的用法\" class=\"headerlink\" title=\"在Activity中的用法\"></a>在Activity中的用法</h5><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CTextView cTextView = (CTextView) findViewById(R.id.c_textview)<span class=\"comment\">;</span></span><br><span class=\"line\">cTextView.setText(<span class=\"string\">\"欢迎大家看我说了这么久，大家辛苦了！\"</span>,<span class=\"string\">\"大家\"</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"结果如下：\"><a href=\"#结果如下：\" class=\"headerlink\" title=\"结果如下：\"></a>结果如下：</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/img_20160310202020.png\" alt=\"result ctextview\"></p>"},{"title":"Android,iOS打开手机QQ与指定聊天界面","date":"2016-04-15T02:45:20.000Z","_content":"\n ### Android，iOS打开手机QQ与指定聊天界面\n \n > 在浏览器中可以通过JS代码打开QQ并弹出聊天界面，一般作为客服QQ使用。\n > 在移动端可以使用schema模式来启动手机QQ。\n \n <!-- more -->\n \n#### Android:\n\n```\nString url=\"mqqwpa://im/chat?chat_type=wpa&uin=123456\";  \nstartActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));  \n```\n\n#### iOS:\n\n```\nUIWebView *webView = [[UIWebView alloc] initWithFrame:CGRectZero];  \nNSURL *url = [NSURL URLWithString:@\"mqq://im/chat?chat_type=wpa&uin=123456&version=1&src_type=web\"];  \nNSURLRequest *request = [NSURLRequest requestWithURL:url];  \nwebView.delegate = self;  \n[webView loadRequest:request];  \n[self.view addSubview:webView];  \n\n```\n \n#### 浏览器：\n\n```\n<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin=123456&site=qq&menu=yes\">click here</a>  \n``` \n \n","source":"_posts/Android-iOS打开手机QQ与指定聊天界面.md","raw":"---\ntitle: 'Android,iOS打开手机QQ与指定聊天界面'\ndate: 2016-04-15 10:45:20\ntags: [android, qq, intent]\ncategories: android\n---\n\n ### Android，iOS打开手机QQ与指定聊天界面\n \n > 在浏览器中可以通过JS代码打开QQ并弹出聊天界面，一般作为客服QQ使用。\n > 在移动端可以使用schema模式来启动手机QQ。\n \n <!-- more -->\n \n#### Android:\n\n```\nString url=\"mqqwpa://im/chat?chat_type=wpa&uin=123456\";  \nstartActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(url)));  \n```\n\n#### iOS:\n\n```\nUIWebView *webView = [[UIWebView alloc] initWithFrame:CGRectZero];  \nNSURL *url = [NSURL URLWithString:@\"mqq://im/chat?chat_type=wpa&uin=123456&version=1&src_type=web\"];  \nNSURLRequest *request = [NSURLRequest requestWithURL:url];  \nwebView.delegate = self;  \n[webView loadRequest:request];  \n[self.view addSubview:webView];  \n\n```\n \n#### 浏览器：\n\n```\n<a target=\"_blank\" href=\"http://wpa.qq.com/msgrd?v=3&uin=123456&site=qq&menu=yes\">click here</a>  \n``` \n \n","slug":"Android-iOS打开手机QQ与指定聊天界面","published":1,"updated":"2016-04-15T02:50:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujd0002pev294y2l1jm","content":"<h3 id=\"Android，iOS打开手机QQ与指定聊天界面\"><a href=\"#Android，iOS打开手机QQ与指定聊天界面\" class=\"headerlink\" title=\"Android，iOS打开手机QQ与指定聊天界面\"></a>Android，iOS打开手机QQ与指定聊天界面</h3><blockquote>\n<p>在浏览器中可以通过JS代码打开QQ并弹出聊天界面，一般作为客服QQ使用。<br>在移动端可以使用schema模式来启动手机QQ。</p>\n</blockquote>\n <a id=\"more\"></a>\n<h4 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android:\"></a>Android:</h4><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String url=<span class=\"string\">\"mqqwpa://im/chat?chat_type=wpa&amp;uin=123456\"</span><span class=\"comment\">;  </span></span><br><span class=\"line\">startActivity(<span class=\"name\">new</span> Intent(<span class=\"name\">Intent</span>.ACTION_VIEW, Uri.parse(<span class=\"name\">url</span>)))<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"iOS\"><a href=\"#iOS\" class=\"headerlink\" title=\"iOS:\"></a>iOS:</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIWebView</span> *webView = [[<span class=\"built_in\">UIWebView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectZero</span>];  </span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"mqq://im/chat?chat_type=wpa&amp;uin=123456&amp;version=1&amp;src_type=web\"</span>];  </span><br><span class=\"line\"><span class=\"built_in\">NSURLRequest</span> *request = [<span class=\"built_in\">NSURLRequest</span> requestWithURL:url];  </span><br><span class=\"line\">webView.delegate = <span class=\"keyword\">self</span>;  </span><br><span class=\"line\">[webView loadRequest:request];  </span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:webView];</span><br></pre></td></tr></table></figure>\n<h4 id=\"浏览器：\"><a href=\"#浏览器：\" class=\"headerlink\" title=\"浏览器：\"></a>浏览器：</h4><pre><code>&lt;a target=&quot;_blank&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=123456&amp;site=qq&amp;menu=yes&quot;&gt;click here&lt;/a&gt;\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"Android，iOS打开手机QQ与指定聊天界面\"><a href=\"#Android，iOS打开手机QQ与指定聊天界面\" class=\"headerlink\" title=\"Android，iOS打开手机QQ与指定聊天界面\"></a>Android，iOS打开手机QQ与指定聊天界面</h3><blockquote>\n<p>在浏览器中可以通过JS代码打开QQ并弹出聊天界面，一般作为客服QQ使用。<br>在移动端可以使用schema模式来启动手机QQ。</p>\n</blockquote>","more":"<h4 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android:\"></a>Android:</h4><figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String url=<span class=\"string\">\"mqqwpa://im/chat?chat_type=wpa&amp;uin=123456\"</span><span class=\"comment\">;  </span></span><br><span class=\"line\">startActivity(<span class=\"name\">new</span> Intent(<span class=\"name\">Intent</span>.ACTION_VIEW, Uri.parse(<span class=\"name\">url</span>)))<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"iOS\"><a href=\"#iOS\" class=\"headerlink\" title=\"iOS:\"></a>iOS:</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIWebView</span> *webView = [[<span class=\"built_in\">UIWebView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectZero</span>];  </span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"mqq://im/chat?chat_type=wpa&amp;uin=123456&amp;version=1&amp;src_type=web\"</span>];  </span><br><span class=\"line\"><span class=\"built_in\">NSURLRequest</span> *request = [<span class=\"built_in\">NSURLRequest</span> requestWithURL:url];  </span><br><span class=\"line\">webView.delegate = <span class=\"keyword\">self</span>;  </span><br><span class=\"line\">[webView loadRequest:request];  </span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:webView];</span><br></pre></td></tr></table></figure>\n<h4 id=\"浏览器：\"><a href=\"#浏览器：\" class=\"headerlink\" title=\"浏览器：\"></a>浏览器：</h4><pre><code>&lt;a target=&quot;_blank&quot; href=&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=123456&amp;site=qq&amp;menu=yes&quot;&gt;click here&lt;/a&gt;\n</code></pre>"},{"title":"Android.mk、Application.mk","date":"2016-03-14T03:42:27.000Z","_content":"\n# Android.mk、Application.mk\n\n### Application.mk\nApplication.mk 目的是描述在你的应用程序中所需要的模块(即静态库或动态库)，如下是表示编译出所有对应的平台。\n\n`````\nAPP_ABI := all\n`````\n### Android.mk\nAndroid.mk是Android提供的一种makefile文件，用来指定诸如编译生成so库名、引用的头文件目录、需要编译的.c/.cpp文件和.a静态库文件等\n\n`````\nLOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := hello-jni\nLOCAL_SRC_FILES := hello-jni.c\n\ninclude $(BUILD_SHARED_LIBRARY)\n`````\n<!-- more -->\n\n#### LOCAL_PATH := $(call my-dir)\n每个Android.mk文件必须以定义LOCAL_PATH为开始。它用于在开发tree中查找源文件。\n宏 my-dir 则由Build System提供。返回包含Android.mk的目录路径。\n\n#### include $(CLEAR_VARS)\nCLEAR_VARS 变量由Build System提供。并指向一个指定的GNU Makefile，由它负责清理很多LOCAL_xxx.\n例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES等等。但不清理LOCAL_PATH.\n这个清理动作是必须的，因为所有的编译控制文件由同一个GNU Make解析和执行，其变量是全局的。所以清理后才能避免相互影响。\n\n#### LOCAL_MODULE := hello-jni\nLOCAL_MODULE 模块必须定义，以表示Android.mk中的每一个模块。名字必须唯一且不包含空格。\nBuild System会自动添加适当的前缀和后缀。例如, foo, 要产生动态库，则生成libfoo.so。但请注意：如果模块名被定为：libfoo。则生成libfoo.so。不再加前缀。\n\n#### LOCAL_SRC_FILES := hello-jni.c\nLOCAL_SRC_FILES变量必须包含将要打包入模块的C/C++源码。\n不必列出头文件，Build System会自动帮我们找到依赖文件。\n缺省的C++源码的扩展名为.cpp。也可以修改，通过LOCAL_CPP_EXTENSION。\n\n#### include $(BUILD_SHARED_LIBRARY)\nBUILD_SHARED_LIBRARY: 是Build System提供的一个变量，指向一个GNU Makefile Script。\n它负责收集自从上次调用`include $(CLEAR_VARS)`后的所有LOCAL_xxx信息。并决定编译什么。\n\n##### BUILD_STATIC_LIBRARY: 编译为静态库。\n##### BUILD_SHARED_LIBRARY: 编译为动态库。\n##### BUILD_EXECUTABLE: 编译为Native C可执行程序\n\n### 多文件编译\n\n`````\nLOCAL_PATH:= $(call my-dir)\n\n# first lib, which will be built statically\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE    := libtwolib-first\nLOCAL_SRC_FILES := first.c\n\ninclude $(BUILD_STATIC_LIBRARY)\n\n# second lib, which will depend on and include the first one\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE    := libtwolib-second\nLOCAL_SRC_FILES := second.c\n\nLOCAL_STATIC_LIBRARIES := libtwolib-first\n\ninclude $(BUILD_SHARED_LIBRARY)\n`````\n\n### 语法详解\n\n[android.mk](http://android.mk/)\n\n> 作者：ben_speed \n> 文章源自：http://www.jianshu.com/p/46089c2276f3\n\n","source":"_posts/Android-mk、Application-mk.md","raw":"---\ntitle: Android.mk、Application.mk\ndate: 2016-03-14 11:42:27\ntags: [ndk, android]\ncategories: android\n---\n\n# Android.mk、Application.mk\n\n### Application.mk\nApplication.mk 目的是描述在你的应用程序中所需要的模块(即静态库或动态库)，如下是表示编译出所有对应的平台。\n\n`````\nAPP_ABI := all\n`````\n### Android.mk\nAndroid.mk是Android提供的一种makefile文件，用来指定诸如编译生成so库名、引用的头文件目录、需要编译的.c/.cpp文件和.a静态库文件等\n\n`````\nLOCAL_PATH := $(call my-dir)\n\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE := hello-jni\nLOCAL_SRC_FILES := hello-jni.c\n\ninclude $(BUILD_SHARED_LIBRARY)\n`````\n<!-- more -->\n\n#### LOCAL_PATH := $(call my-dir)\n每个Android.mk文件必须以定义LOCAL_PATH为开始。它用于在开发tree中查找源文件。\n宏 my-dir 则由Build System提供。返回包含Android.mk的目录路径。\n\n#### include $(CLEAR_VARS)\nCLEAR_VARS 变量由Build System提供。并指向一个指定的GNU Makefile，由它负责清理很多LOCAL_xxx.\n例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES等等。但不清理LOCAL_PATH.\n这个清理动作是必须的，因为所有的编译控制文件由同一个GNU Make解析和执行，其变量是全局的。所以清理后才能避免相互影响。\n\n#### LOCAL_MODULE := hello-jni\nLOCAL_MODULE 模块必须定义，以表示Android.mk中的每一个模块。名字必须唯一且不包含空格。\nBuild System会自动添加适当的前缀和后缀。例如, foo, 要产生动态库，则生成libfoo.so。但请注意：如果模块名被定为：libfoo。则生成libfoo.so。不再加前缀。\n\n#### LOCAL_SRC_FILES := hello-jni.c\nLOCAL_SRC_FILES变量必须包含将要打包入模块的C/C++源码。\n不必列出头文件，Build System会自动帮我们找到依赖文件。\n缺省的C++源码的扩展名为.cpp。也可以修改，通过LOCAL_CPP_EXTENSION。\n\n#### include $(BUILD_SHARED_LIBRARY)\nBUILD_SHARED_LIBRARY: 是Build System提供的一个变量，指向一个GNU Makefile Script。\n它负责收集自从上次调用`include $(CLEAR_VARS)`后的所有LOCAL_xxx信息。并决定编译什么。\n\n##### BUILD_STATIC_LIBRARY: 编译为静态库。\n##### BUILD_SHARED_LIBRARY: 编译为动态库。\n##### BUILD_EXECUTABLE: 编译为Native C可执行程序\n\n### 多文件编译\n\n`````\nLOCAL_PATH:= $(call my-dir)\n\n# first lib, which will be built statically\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE    := libtwolib-first\nLOCAL_SRC_FILES := first.c\n\ninclude $(BUILD_STATIC_LIBRARY)\n\n# second lib, which will depend on and include the first one\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE    := libtwolib-second\nLOCAL_SRC_FILES := second.c\n\nLOCAL_STATIC_LIBRARIES := libtwolib-first\n\ninclude $(BUILD_SHARED_LIBRARY)\n`````\n\n### 语法详解\n\n[android.mk](http://android.mk/)\n\n> 作者：ben_speed \n> 文章源自：http://www.jianshu.com/p/46089c2276f3\n\n","slug":"Android-mk、Application-mk","published":1,"updated":"2016-04-22T06:41:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuji0006pev2sropmlqy","content":"<h1 id=\"Android-mk、Application-mk\"><a href=\"#Android-mk、Application-mk\" class=\"headerlink\" title=\"Android.mk、Application.mk\"></a>Android.mk、Application.mk</h1><h3 id=\"Application-mk\"><a href=\"#Application-mk\" class=\"headerlink\" title=\"Application.mk\"></a>Application.mk</h3><p>Application.mk 目的是描述在你的应用程序中所需要的模块(即静态库或动态库)，如下是表示编译出所有对应的平台。</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">APP_ABI := all</span><br></pre></td></tr></table></figure>\n<h3 id=\"Android-mk\"><a href=\"#Android-mk\" class=\"headerlink\" title=\"Android.mk\"></a>Android.mk</h3><p>Android.mk是Android提供的一种makefile文件，用来指定诸如编译生成so库名、引用的头文件目录、需要编译的.c/.cpp文件和.a静态库文件等</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCAL_PATH := <span class=\"variable\">$(<span class=\"built_in\">call</span> my-<span class=\"built_in\">dir</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE := hello-jni</span><br><span class=\"line\">LOCAL_SRC_FILES := hello-jni.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"LOCAL-PATH-call-my-dir\"><a href=\"#LOCAL-PATH-call-my-dir\" class=\"headerlink\" title=\"LOCAL_PATH := $(call my-dir)\"></a>LOCAL_PATH := $(call my-dir)</h4><p>每个Android.mk文件必须以定义LOCAL_PATH为开始。它用于在开发tree中查找源文件。<br>宏 my-dir 则由Build System提供。返回包含Android.mk的目录路径。</p>\n<h4 id=\"include-CLEAR-VARS\"><a href=\"#include-CLEAR-VARS\" class=\"headerlink\" title=\"include $(CLEAR_VARS)\"></a>include $(CLEAR_VARS)</h4><p>CLEAR_VARS 变量由Build System提供。并指向一个指定的GNU Makefile，由它负责清理很多LOCAL_xxx.<br>例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES等等。但不清理LOCAL_PATH.<br>这个清理动作是必须的，因为所有的编译控制文件由同一个GNU Make解析和执行，其变量是全局的。所以清理后才能避免相互影响。</p>\n<h4 id=\"LOCAL-MODULE-hello-jni\"><a href=\"#LOCAL-MODULE-hello-jni\" class=\"headerlink\" title=\"LOCAL_MODULE := hello-jni\"></a>LOCAL_MODULE := hello-jni</h4><p>LOCAL_MODULE 模块必须定义，以表示Android.mk中的每一个模块。名字必须唯一且不包含空格。<br>Build System会自动添加适当的前缀和后缀。例如, foo, 要产生动态库，则生成libfoo.so。但请注意：如果模块名被定为：libfoo。则生成libfoo.so。不再加前缀。</p>\n<h4 id=\"LOCAL-SRC-FILES-hello-jni-c\"><a href=\"#LOCAL-SRC-FILES-hello-jni-c\" class=\"headerlink\" title=\"LOCAL_SRC_FILES := hello-jni.c\"></a>LOCAL_SRC_FILES := hello-jni.c</h4><p>LOCAL_SRC_FILES变量必须包含将要打包入模块的C/C++源码。<br>不必列出头文件，Build System会自动帮我们找到依赖文件。<br>缺省的C++源码的扩展名为.cpp。也可以修改，通过LOCAL_CPP_EXTENSION。</p>\n<h4 id=\"include-BUILD-SHARED-LIBRARY\"><a href=\"#include-BUILD-SHARED-LIBRARY\" class=\"headerlink\" title=\"include $(BUILD_SHARED_LIBRARY)\"></a>include $(BUILD_SHARED_LIBRARY)</h4><p>BUILD_SHARED_LIBRARY: 是Build System提供的一个变量，指向一个GNU Makefile Script。<br>它负责收集自从上次调用<code>include $(CLEAR_VARS)</code>后的所有LOCAL_xxx信息。并决定编译什么。</p>\n<h5 id=\"BUILD-STATIC-LIBRARY-编译为静态库。\"><a href=\"#BUILD-STATIC-LIBRARY-编译为静态库。\" class=\"headerlink\" title=\"BUILD_STATIC_LIBRARY: 编译为静态库。\"></a>BUILD_STATIC_LIBRARY: 编译为静态库。</h5><h5 id=\"BUILD-SHARED-LIBRARY-编译为动态库。\"><a href=\"#BUILD-SHARED-LIBRARY-编译为动态库。\" class=\"headerlink\" title=\"BUILD_SHARED_LIBRARY: 编译为动态库。\"></a>BUILD_SHARED_LIBRARY: 编译为动态库。</h5><h5 id=\"BUILD-EXECUTABLE-编译为Native-C可执行程序\"><a href=\"#BUILD-EXECUTABLE-编译为Native-C可执行程序\" class=\"headerlink\" title=\"BUILD_EXECUTABLE: 编译为Native C可执行程序\"></a>BUILD_EXECUTABLE: 编译为Native C可执行程序</h5><h3 id=\"多文件编译\"><a href=\"#多文件编译\" class=\"headerlink\" title=\"多文件编译\"></a>多文件编译</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCAL_PATH:= <span class=\"variable\">$(<span class=\"built_in\">call</span> my-<span class=\"built_in\">dir</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># first lib, which will be built statically</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE    := libtwolib-first</span><br><span class=\"line\">LOCAL_SRC_FILES := first.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_STATIC_LIBRARY)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># second lib, which will depend on and include the first one</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE    := libtwolib-second</span><br><span class=\"line\">LOCAL_SRC_FILES := second.c</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_STATIC_LIBRARIES := libtwolib-first</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"语法详解\"><a href=\"#语法详解\" class=\"headerlink\" title=\"语法详解\"></a>语法详解</h3><p><a href=\"http://android.mk/\" target=\"_blank\" rel=\"noopener\">android.mk</a></p>\n<blockquote>\n<p>作者：ben_speed<br>文章源自：<a href=\"http://www.jianshu.com/p/46089c2276f3\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/46089c2276f3</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"Android-mk、Application-mk\"><a href=\"#Android-mk、Application-mk\" class=\"headerlink\" title=\"Android.mk、Application.mk\"></a>Android.mk、Application.mk</h1><h3 id=\"Application-mk\"><a href=\"#Application-mk\" class=\"headerlink\" title=\"Application.mk\"></a>Application.mk</h3><p>Application.mk 目的是描述在你的应用程序中所需要的模块(即静态库或动态库)，如下是表示编译出所有对应的平台。</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">APP_ABI := all</span><br></pre></td></tr></table></figure>\n<h3 id=\"Android-mk\"><a href=\"#Android-mk\" class=\"headerlink\" title=\"Android.mk\"></a>Android.mk</h3><p>Android.mk是Android提供的一种makefile文件，用来指定诸如编译生成so库名、引用的头文件目录、需要编译的.c/.cpp文件和.a静态库文件等</p>\n<figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCAL_PATH := <span class=\"variable\">$(<span class=\"built_in\">call</span> my-<span class=\"built_in\">dir</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE := hello-jni</span><br><span class=\"line\">LOCAL_SRC_FILES := hello-jni.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure>","more":"<h4 id=\"LOCAL-PATH-call-my-dir\"><a href=\"#LOCAL-PATH-call-my-dir\" class=\"headerlink\" title=\"LOCAL_PATH := $(call my-dir)\"></a>LOCAL_PATH := $(call my-dir)</h4><p>每个Android.mk文件必须以定义LOCAL_PATH为开始。它用于在开发tree中查找源文件。<br>宏 my-dir 则由Build System提供。返回包含Android.mk的目录路径。</p>\n<h4 id=\"include-CLEAR-VARS\"><a href=\"#include-CLEAR-VARS\" class=\"headerlink\" title=\"include $(CLEAR_VARS)\"></a>include $(CLEAR_VARS)</h4><p>CLEAR_VARS 变量由Build System提供。并指向一个指定的GNU Makefile，由它负责清理很多LOCAL_xxx.<br>例如：LOCAL_MODULE, LOCAL_SRC_FILES, LOCAL_STATIC_LIBRARIES等等。但不清理LOCAL_PATH.<br>这个清理动作是必须的，因为所有的编译控制文件由同一个GNU Make解析和执行，其变量是全局的。所以清理后才能避免相互影响。</p>\n<h4 id=\"LOCAL-MODULE-hello-jni\"><a href=\"#LOCAL-MODULE-hello-jni\" class=\"headerlink\" title=\"LOCAL_MODULE := hello-jni\"></a>LOCAL_MODULE := hello-jni</h4><p>LOCAL_MODULE 模块必须定义，以表示Android.mk中的每一个模块。名字必须唯一且不包含空格。<br>Build System会自动添加适当的前缀和后缀。例如, foo, 要产生动态库，则生成libfoo.so。但请注意：如果模块名被定为：libfoo。则生成libfoo.so。不再加前缀。</p>\n<h4 id=\"LOCAL-SRC-FILES-hello-jni-c\"><a href=\"#LOCAL-SRC-FILES-hello-jni-c\" class=\"headerlink\" title=\"LOCAL_SRC_FILES := hello-jni.c\"></a>LOCAL_SRC_FILES := hello-jni.c</h4><p>LOCAL_SRC_FILES变量必须包含将要打包入模块的C/C++源码。<br>不必列出头文件，Build System会自动帮我们找到依赖文件。<br>缺省的C++源码的扩展名为.cpp。也可以修改，通过LOCAL_CPP_EXTENSION。</p>\n<h4 id=\"include-BUILD-SHARED-LIBRARY\"><a href=\"#include-BUILD-SHARED-LIBRARY\" class=\"headerlink\" title=\"include $(BUILD_SHARED_LIBRARY)\"></a>include $(BUILD_SHARED_LIBRARY)</h4><p>BUILD_SHARED_LIBRARY: 是Build System提供的一个变量，指向一个GNU Makefile Script。<br>它负责收集自从上次调用<code>include $(CLEAR_VARS)</code>后的所有LOCAL_xxx信息。并决定编译什么。</p>\n<h5 id=\"BUILD-STATIC-LIBRARY-编译为静态库。\"><a href=\"#BUILD-STATIC-LIBRARY-编译为静态库。\" class=\"headerlink\" title=\"BUILD_STATIC_LIBRARY: 编译为静态库。\"></a>BUILD_STATIC_LIBRARY: 编译为静态库。</h5><h5 id=\"BUILD-SHARED-LIBRARY-编译为动态库。\"><a href=\"#BUILD-SHARED-LIBRARY-编译为动态库。\" class=\"headerlink\" title=\"BUILD_SHARED_LIBRARY: 编译为动态库。\"></a>BUILD_SHARED_LIBRARY: 编译为动态库。</h5><h5 id=\"BUILD-EXECUTABLE-编译为Native-C可执行程序\"><a href=\"#BUILD-EXECUTABLE-编译为Native-C可执行程序\" class=\"headerlink\" title=\"BUILD_EXECUTABLE: 编译为Native C可执行程序\"></a>BUILD_EXECUTABLE: 编译为Native C可执行程序</h5><h3 id=\"多文件编译\"><a href=\"#多文件编译\" class=\"headerlink\" title=\"多文件编译\"></a>多文件编译</h3><figure class=\"highlight makefile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCAL_PATH:= <span class=\"variable\">$(<span class=\"built_in\">call</span> my-<span class=\"built_in\">dir</span>)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># first lib, which will be built statically</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE    := libtwolib-first</span><br><span class=\"line\">LOCAL_SRC_FILES := first.c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_STATIC_LIBRARY)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># second lib, which will depend on and include the first one</span></span><br><span class=\"line\"><span class=\"comment\">#</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(CLEAR_VARS)</span></span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE    := libtwolib-second</span><br><span class=\"line\">LOCAL_SRC_FILES := second.c</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_STATIC_LIBRARIES := libtwolib-first</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"variable\">$(BUILD_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"语法详解\"><a href=\"#语法详解\" class=\"headerlink\" title=\"语法详解\"></a>语法详解</h3><p><a href=\"http://android.mk/\" target=\"_blank\" rel=\"noopener\">android.mk</a></p>\n<blockquote>\n<p>作者：ben_speed<br>文章源自：<a href=\"http://www.jianshu.com/p/46089c2276f3\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/46089c2276f3</a></p>\n</blockquote>"},{"title":"Android中通过反射获取资源ID","date":"2017-12-05T09:19:32.000Z","_content":"\n某些时候，自己把代码打包成工具jar包，但jar包中可能引用到res中的资源，这时候不能将资源一起打包，只能通过反射机制动态获取\n\n```\n/**\n * 通过反射获取组件的id号\n */\npublic static int getCompentID(String packageName, String className,String idName) {\n\tint id = 0;\n\ttry {\n\t\tClass<?> cls = Class.forName(packageName + \".R$\" + className);\n\t\tid = cls.getField(idName).getInt(cls);\n\t} catch (Exception e) {\n\t\tLogUtil.LogPrint(LogUtil.LOG_ERROR, \"缺少\" + idName + \"文件!\");\n\t\te.printStackTrace();\n\t}\n\treturn id;\n}\n\n```","source":"_posts/Android中通过反射获取资源ID.md","raw":"---\ntitle: Android中通过反射获取资源ID\ndate: 2017-12-05 17:19:32\ntags: [android]\ncategories: android\n---\n\n某些时候，自己把代码打包成工具jar包，但jar包中可能引用到res中的资源，这时候不能将资源一起打包，只能通过反射机制动态获取\n\n```\n/**\n * 通过反射获取组件的id号\n */\npublic static int getCompentID(String packageName, String className,String idName) {\n\tint id = 0;\n\ttry {\n\t\tClass<?> cls = Class.forName(packageName + \".R$\" + className);\n\t\tid = cls.getField(idName).getInt(cls);\n\t} catch (Exception e) {\n\t\tLogUtil.LogPrint(LogUtil.LOG_ERROR, \"缺少\" + idName + \"文件!\");\n\t\te.printStackTrace();\n\t}\n\treturn id;\n}\n\n```","slug":"Android中通过反射获取资源ID","published":1,"updated":"2017-12-05T09:22:16.770Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujl0008pev2y8tytetr","content":"<p>某些时候，自己把代码打包成工具jar包，但jar包中可能引用到res中的资源，这时候不能将资源一起打包，只能通过反射机制动态获取</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过反射获取组件的id号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> getCompentID(<span class=\"keyword\">String</span> packageName, <span class=\"keyword\">String</span> className,<span class=\"keyword\">String</span> idName) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> id = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">\t\tClass&lt;?&gt; cls = Class.forName(packageName + <span class=\"string\">\".R$\"</span> + className);</span><br><span class=\"line\">\t\tid = cls.getField(idName).getInt(cls);</span><br><span class=\"line\">\t&#125; <span class=\"built_in\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\tLogUtil.LogPrint(LogUtil.LOG_ERROR, <span class=\"string\">\"缺少\"</span> + idName + <span class=\"string\">\"文件!\"</span>);</span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>某些时候，自己把代码打包成工具jar包，但jar包中可能引用到res中的资源，这时候不能将资源一起打包，只能通过反射机制动态获取</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 通过反射获取组件的id号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> getCompentID(<span class=\"keyword\">String</span> packageName, <span class=\"keyword\">String</span> className,<span class=\"keyword\">String</span> idName) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> id = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">try</span> &#123;</span><br><span class=\"line\">\t\tClass&lt;?&gt; cls = Class.forName(packageName + <span class=\"string\">\".R$\"</span> + className);</span><br><span class=\"line\">\t\tid = cls.getField(idName).getInt(cls);</span><br><span class=\"line\">\t&#125; <span class=\"built_in\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">\t\tLogUtil.LogPrint(LogUtil.LOG_ERROR, <span class=\"string\">\"缺少\"</span> + idName + <span class=\"string\">\"文件!\"</span>);</span><br><span class=\"line\">\t\te.printStackTrace();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">return</span> id;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Atom 编辑器快捷键列表汇总整理","date":"2016-03-28T04:00:27.000Z","_content":"# Atom 编辑器快捷键列表汇总整理\n来自Github的Atom 编辑器已经更新到1.0版本了，由于有着 Github  的光环，很多人都在用，下面是网友总结的一些**Atom 快捷键列表**，喜欢高效键盘操作的朋友可以看下。\n\n<!-- more -->\n\n## 文件切换\n\nctrl-shift-s 保存所有打开的文件\nctrl-shift-o 打开目录\ncmd-\\ 显示或隐藏目录树\nctrl-0 焦点移到目录树\n目录树下，使用a, m, delete来增加，修改和删除\ncmd-t或cmd-p 查找文件\ncmd-b 在打开的文件之间切换\ncmd-shift-b 只搜索从上次git commit 修改或者新增的文件\n\n## 导航\n\n(等价于上下左右)\nctrl-p 前一行\nctrl-n 后一行\nctrl-f 前一个字符\nctrl-b 后一个字符\n\nalt-B, alt-left 移动到单词开始\nalt-F, alt-right 移动到单词末尾\n\ncmd-right, ctrl-E 移动到一行结束\ncmd-left, ctrl-A 移动到一行开始\n\ncmd-up 移动到文件开始\ncmd-down 移动到文件结束\n\nctrl-g 移到到指定行 row:column 处\n\ncmd-r 在方法之间跳转\n\n## 书签\n\ncmd-F2 在本行增加书签\nF2 跳到当前文件的下一条书签\nshift-F2 跳到当前文件的上一条书签\nctrl-F2 列出当前工程所有书签\n\n## 选取\n\n大部分和导航一致，只不过加上shift\nctrl-shift-P 选取至上一行\nctrl-shift-N 选取至下一行\nctrl-shift-B 选取至前一个字符\nctrl-shift-F 选取至后一个字符\n\nalt-shift-B, alt-shift-left 选取至字符开始\nalt-shift-F, alt-shift-right 选取至字符结束\nctrl-shift-E, cmd-shift-right 选取至本行结束\nctrl-shift-A, cmd-shift-left 选取至本行开始\n\ncmd-shift-up 选取至文本开始\ncmd-shift-down 选取至文件结尾\n\ncmd-A 全选\ncmd-L 选取一行， 继续按回选取下一行\nctrl-shift-W 选取当前单词\n\n## 编辑和删除文本\n\n> 基本操作\n---\n\nctrl-T 使光标前后字符交换\ncmd-J 将下一行与当前行合并\nctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动\ncmd-shift-D 复制当前行到下一行\ncmd-K, cmd-U 使当前字符大写\ncmd-K, cmd-L 使当前字符小写\n\n\n>删除和剪切\n---\n\nctrl-shift-K 删除当前行\ncmd-backspace 删除到当前行开始\ncmd-fn-backspace 删除到当前行结束\nctrl-K 剪切到当前行结束\nalt-backspace 或 alt-H 删除到当前单词开始\nalt-delete 或 alt-D 删除到当前单词结束\n\n>多光标和多处选取\n---\n\ncmd-click 增加新光标\ncmd-shift-L 将多行选取改为多行光标\nctrl-shift-up, ctrl-shift-down 增加上（下）一行光标\ncmd-D 选取文档中和当前单词相同的下一处\nctrl-cmd-G 选取文档中所有和当前光标单词相同的位置\n\n>括号跳转\n---\n\nctrl-m 相应括号之间， html tag 之间等跳转\nctrl-cmd-m 括号(tag)之间文件选取\nalt-cmd-. 关闭当前XML/HTML tag\n\n>编码方式\n---\n\nctrl-shift-U 调出切换编码选项\n\n## 查找和切换\n\ncmd-F 在 buffer 中查找\ncmd-shift-f 在整个工程中查找\n\n## 代码片段\n\nalt-shift-S 查看当前可用代码片段\n在~/.atom 目录下snippets.cson文件中存放了你定制的snippets\n[定制说明](http://flight-manual.atom.io)\n\n## 自动补全\n\nctrl-space 提示补全信息\n\n## 折叠\n\nalt-cmd-[ 折叠\nalt-cmd-] 展开\nalt-cmd-shift-{ 折叠全部\nalt-cmd-shift-} 展开全部\ncmd-k cmd-N 指定折叠层级 N为层级数\n\n## 文件语法高亮\n\nctrl-shift-L 选择文本类型\n\n## 使用Atom进行写作\n\nctrl-shift-M Markdown预览\n可用代码片段 b, legal, img, l, i, code, t, table\n\n\n\n\n","source":"_posts/Atom-编辑器快捷键列表汇总整理.md","raw":"---\ntitle: Atom 编辑器快捷键列表汇总整理\ndate: 2016-03-28 12:00:27\ntags: [atom, tools, mac, RAML]\ncategories: [mac, atom]\n---\n# Atom 编辑器快捷键列表汇总整理\n来自Github的Atom 编辑器已经更新到1.0版本了，由于有着 Github  的光环，很多人都在用，下面是网友总结的一些**Atom 快捷键列表**，喜欢高效键盘操作的朋友可以看下。\n\n<!-- more -->\n\n## 文件切换\n\nctrl-shift-s 保存所有打开的文件\nctrl-shift-o 打开目录\ncmd-\\ 显示或隐藏目录树\nctrl-0 焦点移到目录树\n目录树下，使用a, m, delete来增加，修改和删除\ncmd-t或cmd-p 查找文件\ncmd-b 在打开的文件之间切换\ncmd-shift-b 只搜索从上次git commit 修改或者新增的文件\n\n## 导航\n\n(等价于上下左右)\nctrl-p 前一行\nctrl-n 后一行\nctrl-f 前一个字符\nctrl-b 后一个字符\n\nalt-B, alt-left 移动到单词开始\nalt-F, alt-right 移动到单词末尾\n\ncmd-right, ctrl-E 移动到一行结束\ncmd-left, ctrl-A 移动到一行开始\n\ncmd-up 移动到文件开始\ncmd-down 移动到文件结束\n\nctrl-g 移到到指定行 row:column 处\n\ncmd-r 在方法之间跳转\n\n## 书签\n\ncmd-F2 在本行增加书签\nF2 跳到当前文件的下一条书签\nshift-F2 跳到当前文件的上一条书签\nctrl-F2 列出当前工程所有书签\n\n## 选取\n\n大部分和导航一致，只不过加上shift\nctrl-shift-P 选取至上一行\nctrl-shift-N 选取至下一行\nctrl-shift-B 选取至前一个字符\nctrl-shift-F 选取至后一个字符\n\nalt-shift-B, alt-shift-left 选取至字符开始\nalt-shift-F, alt-shift-right 选取至字符结束\nctrl-shift-E, cmd-shift-right 选取至本行结束\nctrl-shift-A, cmd-shift-left 选取至本行开始\n\ncmd-shift-up 选取至文本开始\ncmd-shift-down 选取至文件结尾\n\ncmd-A 全选\ncmd-L 选取一行， 继续按回选取下一行\nctrl-shift-W 选取当前单词\n\n## 编辑和删除文本\n\n> 基本操作\n---\n\nctrl-T 使光标前后字符交换\ncmd-J 将下一行与当前行合并\nctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动\ncmd-shift-D 复制当前行到下一行\ncmd-K, cmd-U 使当前字符大写\ncmd-K, cmd-L 使当前字符小写\n\n\n>删除和剪切\n---\n\nctrl-shift-K 删除当前行\ncmd-backspace 删除到当前行开始\ncmd-fn-backspace 删除到当前行结束\nctrl-K 剪切到当前行结束\nalt-backspace 或 alt-H 删除到当前单词开始\nalt-delete 或 alt-D 删除到当前单词结束\n\n>多光标和多处选取\n---\n\ncmd-click 增加新光标\ncmd-shift-L 将多行选取改为多行光标\nctrl-shift-up, ctrl-shift-down 增加上（下）一行光标\ncmd-D 选取文档中和当前单词相同的下一处\nctrl-cmd-G 选取文档中所有和当前光标单词相同的位置\n\n>括号跳转\n---\n\nctrl-m 相应括号之间， html tag 之间等跳转\nctrl-cmd-m 括号(tag)之间文件选取\nalt-cmd-. 关闭当前XML/HTML tag\n\n>编码方式\n---\n\nctrl-shift-U 调出切换编码选项\n\n## 查找和切换\n\ncmd-F 在 buffer 中查找\ncmd-shift-f 在整个工程中查找\n\n## 代码片段\n\nalt-shift-S 查看当前可用代码片段\n在~/.atom 目录下snippets.cson文件中存放了你定制的snippets\n[定制说明](http://flight-manual.atom.io)\n\n## 自动补全\n\nctrl-space 提示补全信息\n\n## 折叠\n\nalt-cmd-[ 折叠\nalt-cmd-] 展开\nalt-cmd-shift-{ 折叠全部\nalt-cmd-shift-} 展开全部\ncmd-k cmd-N 指定折叠层级 N为层级数\n\n## 文件语法高亮\n\nctrl-shift-L 选择文本类型\n\n## 使用Atom进行写作\n\nctrl-shift-M Markdown预览\n可用代码片段 b, legal, img, l, i, code, t, table\n\n\n\n\n","slug":"Atom-编辑器快捷键列表汇总整理","published":1,"updated":"2016-03-28T04:02:03.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujm0009pev2e1s6xeqt","content":"<h1 id=\"Atom-编辑器快捷键列表汇总整理\"><a href=\"#Atom-编辑器快捷键列表汇总整理\" class=\"headerlink\" title=\"Atom 编辑器快捷键列表汇总整理\"></a>Atom 编辑器快捷键列表汇总整理</h1><p>来自Github的Atom 编辑器已经更新到1.0版本了，由于有着 Github  的光环，很多人都在用，下面是网友总结的一些<strong>Atom 快捷键列表</strong>，喜欢高效键盘操作的朋友可以看下。</p>\n<a id=\"more\"></a>\n<h2 id=\"文件切换\"><a href=\"#文件切换\" class=\"headerlink\" title=\"文件切换\"></a>文件切换</h2><p>ctrl-shift-s 保存所有打开的文件<br>ctrl-shift-o 打开目录<br>cmd-\\ 显示或隐藏目录树<br>ctrl-0 焦点移到目录树<br>目录树下，使用a, m, delete来增加，修改和删除<br>cmd-t或cmd-p 查找文件<br>cmd-b 在打开的文件之间切换<br>cmd-shift-b 只搜索从上次git commit 修改或者新增的文件</p>\n<h2 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h2><p>(等价于上下左右)<br>ctrl-p 前一行<br>ctrl-n 后一行<br>ctrl-f 前一个字符<br>ctrl-b 后一个字符</p>\n<p>alt-B, alt-left 移动到单词开始<br>alt-F, alt-right 移动到单词末尾</p>\n<p>cmd-right, ctrl-E 移动到一行结束<br>cmd-left, ctrl-A 移动到一行开始</p>\n<p>cmd-up 移动到文件开始<br>cmd-down 移动到文件结束</p>\n<p>ctrl-g 移到到指定行 row:column 处</p>\n<p>cmd-r 在方法之间跳转</p>\n<h2 id=\"书签\"><a href=\"#书签\" class=\"headerlink\" title=\"书签\"></a>书签</h2><p>cmd-F2 在本行增加书签<br>F2 跳到当前文件的下一条书签<br>shift-F2 跳到当前文件的上一条书签<br>ctrl-F2 列出当前工程所有书签</p>\n<h2 id=\"选取\"><a href=\"#选取\" class=\"headerlink\" title=\"选取\"></a>选取</h2><p>大部分和导航一致，只不过加上shift<br>ctrl-shift-P 选取至上一行<br>ctrl-shift-N 选取至下一行<br>ctrl-shift-B 选取至前一个字符<br>ctrl-shift-F 选取至后一个字符</p>\n<p>alt-shift-B, alt-shift-left 选取至字符开始<br>alt-shift-F, alt-shift-right 选取至字符结束<br>ctrl-shift-E, cmd-shift-right 选取至本行结束<br>ctrl-shift-A, cmd-shift-left 选取至本行开始</p>\n<p>cmd-shift-up 选取至文本开始<br>cmd-shift-down 选取至文件结尾</p>\n<p>cmd-A 全选<br>cmd-L 选取一行， 继续按回选取下一行<br>ctrl-shift-W 选取当前单词</p>\n<h2 id=\"编辑和删除文本\"><a href=\"#编辑和删除文本\" class=\"headerlink\" title=\"编辑和删除文本\"></a>编辑和删除文本</h2><h2 id=\"gt-基本操作\"><a href=\"#gt-基本操作\" class=\"headerlink\" title=\"&gt; 基本操作\"></a>&gt; 基本操作</h2><p>ctrl-T 使光标前后字符交换<br>cmd-J 将下一行与当前行合并<br>ctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动<br>cmd-shift-D 复制当前行到下一行<br>cmd-K, cmd-U 使当前字符大写<br>cmd-K, cmd-L 使当前字符小写</p>\n<h2 id=\"gt-删除和剪切\"><a href=\"#gt-删除和剪切\" class=\"headerlink\" title=\"&gt;删除和剪切\"></a>&gt;删除和剪切</h2><p>ctrl-shift-K 删除当前行<br>cmd-backspace 删除到当前行开始<br>cmd-fn-backspace 删除到当前行结束<br>ctrl-K 剪切到当前行结束<br>alt-backspace 或 alt-H 删除到当前单词开始<br>alt-delete 或 alt-D 删除到当前单词结束</p>\n<h2 id=\"gt-多光标和多处选取\"><a href=\"#gt-多光标和多处选取\" class=\"headerlink\" title=\"&gt;多光标和多处选取\"></a>&gt;多光标和多处选取</h2><p>cmd-click 增加新光标<br>cmd-shift-L 将多行选取改为多行光标<br>ctrl-shift-up, ctrl-shift-down 增加上（下）一行光标<br>cmd-D 选取文档中和当前单词相同的下一处<br>ctrl-cmd-G 选取文档中所有和当前光标单词相同的位置</p>\n<h2 id=\"gt-括号跳转\"><a href=\"#gt-括号跳转\" class=\"headerlink\" title=\"&gt;括号跳转\"></a>&gt;括号跳转</h2><p>ctrl-m 相应括号之间， html tag 之间等跳转<br>ctrl-cmd-m 括号(tag)之间文件选取<br>alt-cmd-. 关闭当前XML/HTML tag</p>\n<h2 id=\"gt-编码方式\"><a href=\"#gt-编码方式\" class=\"headerlink\" title=\"&gt;编码方式\"></a>&gt;编码方式</h2><p>ctrl-shift-U 调出切换编码选项</p>\n<h2 id=\"查找和切换\"><a href=\"#查找和切换\" class=\"headerlink\" title=\"查找和切换\"></a>查找和切换</h2><p>cmd-F 在 buffer 中查找<br>cmd-shift-f 在整个工程中查找</p>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><p>alt-shift-S 查看当前可用代码片段<br>在~/.atom 目录下snippets.cson文件中存放了你定制的snippets<br><a href=\"http://flight-manual.atom.io\" target=\"_blank\" rel=\"noopener\">定制说明</a></p>\n<h2 id=\"自动补全\"><a href=\"#自动补全\" class=\"headerlink\" title=\"自动补全\"></a>自动补全</h2><p>ctrl-space 提示补全信息</p>\n<h2 id=\"折叠\"><a href=\"#折叠\" class=\"headerlink\" title=\"折叠\"></a>折叠</h2><p>alt-cmd-[ 折叠<br>alt-cmd-] 展开<br>alt-cmd-shift-{ 折叠全部<br>alt-cmd-shift-} 展开全部<br>cmd-k cmd-N 指定折叠层级 N为层级数</p>\n<h2 id=\"文件语法高亮\"><a href=\"#文件语法高亮\" class=\"headerlink\" title=\"文件语法高亮\"></a>文件语法高亮</h2><p>ctrl-shift-L 选择文本类型</p>\n<h2 id=\"使用Atom进行写作\"><a href=\"#使用Atom进行写作\" class=\"headerlink\" title=\"使用Atom进行写作\"></a>使用Atom进行写作</h2><p>ctrl-shift-M Markdown预览<br>可用代码片段 b, legal, img, l, i, code, t, table</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Atom-编辑器快捷键列表汇总整理\"><a href=\"#Atom-编辑器快捷键列表汇总整理\" class=\"headerlink\" title=\"Atom 编辑器快捷键列表汇总整理\"></a>Atom 编辑器快捷键列表汇总整理</h1><p>来自Github的Atom 编辑器已经更新到1.0版本了，由于有着 Github  的光环，很多人都在用，下面是网友总结的一些<strong>Atom 快捷键列表</strong>，喜欢高效键盘操作的朋友可以看下。</p>","more":"<h2 id=\"文件切换\"><a href=\"#文件切换\" class=\"headerlink\" title=\"文件切换\"></a>文件切换</h2><p>ctrl-shift-s 保存所有打开的文件<br>ctrl-shift-o 打开目录<br>cmd-\\ 显示或隐藏目录树<br>ctrl-0 焦点移到目录树<br>目录树下，使用a, m, delete来增加，修改和删除<br>cmd-t或cmd-p 查找文件<br>cmd-b 在打开的文件之间切换<br>cmd-shift-b 只搜索从上次git commit 修改或者新增的文件</p>\n<h2 id=\"导航\"><a href=\"#导航\" class=\"headerlink\" title=\"导航\"></a>导航</h2><p>(等价于上下左右)<br>ctrl-p 前一行<br>ctrl-n 后一行<br>ctrl-f 前一个字符<br>ctrl-b 后一个字符</p>\n<p>alt-B, alt-left 移动到单词开始<br>alt-F, alt-right 移动到单词末尾</p>\n<p>cmd-right, ctrl-E 移动到一行结束<br>cmd-left, ctrl-A 移动到一行开始</p>\n<p>cmd-up 移动到文件开始<br>cmd-down 移动到文件结束</p>\n<p>ctrl-g 移到到指定行 row:column 处</p>\n<p>cmd-r 在方法之间跳转</p>\n<h2 id=\"书签\"><a href=\"#书签\" class=\"headerlink\" title=\"书签\"></a>书签</h2><p>cmd-F2 在本行增加书签<br>F2 跳到当前文件的下一条书签<br>shift-F2 跳到当前文件的上一条书签<br>ctrl-F2 列出当前工程所有书签</p>\n<h2 id=\"选取\"><a href=\"#选取\" class=\"headerlink\" title=\"选取\"></a>选取</h2><p>大部分和导航一致，只不过加上shift<br>ctrl-shift-P 选取至上一行<br>ctrl-shift-N 选取至下一行<br>ctrl-shift-B 选取至前一个字符<br>ctrl-shift-F 选取至后一个字符</p>\n<p>alt-shift-B, alt-shift-left 选取至字符开始<br>alt-shift-F, alt-shift-right 选取至字符结束<br>ctrl-shift-E, cmd-shift-right 选取至本行结束<br>ctrl-shift-A, cmd-shift-left 选取至本行开始</p>\n<p>cmd-shift-up 选取至文本开始<br>cmd-shift-down 选取至文件结尾</p>\n<p>cmd-A 全选<br>cmd-L 选取一行， 继续按回选取下一行<br>ctrl-shift-W 选取当前单词</p>\n<h2 id=\"编辑和删除文本\"><a href=\"#编辑和删除文本\" class=\"headerlink\" title=\"编辑和删除文本\"></a>编辑和删除文本</h2><h2 id=\"gt-基本操作\"><a href=\"#gt-基本操作\" class=\"headerlink\" title=\"&gt; 基本操作\"></a>&gt; 基本操作</h2><p>ctrl-T 使光标前后字符交换<br>cmd-J 将下一行与当前行合并<br>ctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动<br>cmd-shift-D 复制当前行到下一行<br>cmd-K, cmd-U 使当前字符大写<br>cmd-K, cmd-L 使当前字符小写</p>\n<h2 id=\"gt-删除和剪切\"><a href=\"#gt-删除和剪切\" class=\"headerlink\" title=\"&gt;删除和剪切\"></a>&gt;删除和剪切</h2><p>ctrl-shift-K 删除当前行<br>cmd-backspace 删除到当前行开始<br>cmd-fn-backspace 删除到当前行结束<br>ctrl-K 剪切到当前行结束<br>alt-backspace 或 alt-H 删除到当前单词开始<br>alt-delete 或 alt-D 删除到当前单词结束</p>\n<h2 id=\"gt-多光标和多处选取\"><a href=\"#gt-多光标和多处选取\" class=\"headerlink\" title=\"&gt;多光标和多处选取\"></a>&gt;多光标和多处选取</h2><p>cmd-click 增加新光标<br>cmd-shift-L 将多行选取改为多行光标<br>ctrl-shift-up, ctrl-shift-down 增加上（下）一行光标<br>cmd-D 选取文档中和当前单词相同的下一处<br>ctrl-cmd-G 选取文档中所有和当前光标单词相同的位置</p>\n<h2 id=\"gt-括号跳转\"><a href=\"#gt-括号跳转\" class=\"headerlink\" title=\"&gt;括号跳转\"></a>&gt;括号跳转</h2><p>ctrl-m 相应括号之间， html tag 之间等跳转<br>ctrl-cmd-m 括号(tag)之间文件选取<br>alt-cmd-. 关闭当前XML/HTML tag</p>\n<h2 id=\"gt-编码方式\"><a href=\"#gt-编码方式\" class=\"headerlink\" title=\"&gt;编码方式\"></a>&gt;编码方式</h2><p>ctrl-shift-U 调出切换编码选项</p>\n<h2 id=\"查找和切换\"><a href=\"#查找和切换\" class=\"headerlink\" title=\"查找和切换\"></a>查找和切换</h2><p>cmd-F 在 buffer 中查找<br>cmd-shift-f 在整个工程中查找</p>\n<h2 id=\"代码片段\"><a href=\"#代码片段\" class=\"headerlink\" title=\"代码片段\"></a>代码片段</h2><p>alt-shift-S 查看当前可用代码片段<br>在~/.atom 目录下snippets.cson文件中存放了你定制的snippets<br><a href=\"http://flight-manual.atom.io\" target=\"_blank\" rel=\"noopener\">定制说明</a></p>\n<h2 id=\"自动补全\"><a href=\"#自动补全\" class=\"headerlink\" title=\"自动补全\"></a>自动补全</h2><p>ctrl-space 提示补全信息</p>\n<h2 id=\"折叠\"><a href=\"#折叠\" class=\"headerlink\" title=\"折叠\"></a>折叠</h2><p>alt-cmd-[ 折叠<br>alt-cmd-] 展开<br>alt-cmd-shift-{ 折叠全部<br>alt-cmd-shift-} 展开全部<br>cmd-k cmd-N 指定折叠层级 N为层级数</p>\n<h2 id=\"文件语法高亮\"><a href=\"#文件语法高亮\" class=\"headerlink\" title=\"文件语法高亮\"></a>文件语法高亮</h2><p>ctrl-shift-L 选择文本类型</p>\n<h2 id=\"使用Atom进行写作\"><a href=\"#使用Atom进行写作\" class=\"headerlink\" title=\"使用Atom进行写作\"></a>使用Atom进行写作</h2><p>ctrl-shift-M Markdown预览<br>可用代码片段 b, legal, img, l, i, code, t, table</p>"},{"title":"EditText 的使用及值得注意的地方","date":"2016-09-01T04:54:29.000Z","_content":"\n>来源：http://www.jianshu.com/p/1f05bb1fde3e\n作者：张明云（@UperOne）\n\nAndroid上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。\n\n<!-- more -->\n### 设置默认输入法  \n有时候为了提高用户体验，在弹出输入法时需要设置默认的输入状态，比如单词应用弹出输入法时，输入法最好是在英文输入状态下。如果是字典应用，弹出输入法时最好是在中文输入状态下，Android并没有提供设置默认的输入状态的接口，但我们可以通过如下方法一样能够达到想要的效果：\n\n#### 默认中文：\n```\nmEditText.setInputType(EditorInfo.TYPE_CLASS_TEXT);\n```\n\n#### 默认英文：\n```\nmEditText.setInputType(EditorInfo.TYPE_TEXT_VARIATION_URI);\n```\n\n### 打开和关闭输入法\n手动控制输入法的开关状态也能提升用户体验，比如：\n- 有的搜索框会有一个清除按钮，点击清除按钮时就应该弹出输入法，因为用户清除搜索内容的目的多数时候是需要输入新的内容；\n- 执行搜索时应该隐藏输入法，因为显示输入法时会遮挡搜索结果，用户体验不太好；\n- 闹钟来时或者有其它window弹出时应该隐藏输入法，因为输入法也是window，如果不隐藏可能导致输入法遮挡住了其它window等用户体验不太友好的问题。\n\n#### 打开输入法：\n```\nprivate void open(Context context, View editText){\n    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n    inputMethodManager.showSoftInput(editText, 0);\n}\n```\n#### 关闭输入法：\n```\nprivate void close(Context context, View editText){\n    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n    inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), 0);\n}\n```\n### 监听EditText的输入状态\n- 类似新浪微博，在输入内容时会提示还可以输入多少字；\n- 有的搜索引擎，输入内容时实时显示搜索结果；\n- 有的输入框有输入长度限制，输入内容超过长度限制时弹出提示信息。\n\n上面这些都可以通过监听EditText的输入状态来实现，具体实现方式如下：\n```\nmInputEditTxt.addTextChangedListener(new TextWatcher() {\n        @Override\n        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n        }\n        @Override\n        public void onTextChanged(CharSequence s, int start, int before, int count) {\n            System.out.println(\"监听EditText输入内容的变化，在这里可以监听输入内容的长度。\");\n        }\n        @Override\n        public void afterTextChanged(Editable s) {\n            System.out.println(\"这里可以实现所输即所得，用户输入的同时可以立即在这里根据输入内容执行操作，显示搜索结果！\");\n        }\n    });\n```\n\n#### 监听输入法中的回车按钮\n\n比如搜狗输入法的右下角有一个回车按钮，我们希望用户点击它时也执行确认功能，可以通过监听EditText的按键点击事件来实现：\n\n```\n/**\n   * 监听输入法按键\n     *\n     * */\n    mInputEditTxt.setOnKeyListener(new OnKeyListener() {\n        @Override\n        public boolean onKey(View v, int keyCode, KeyEvent event) {\n            if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_UP) {\n                System.out.println(\"手指弹起时执行确认功能\");\n                return true;\n            }\n\n            return false;\n        }\n    });\n\n```\n\n#### 改变输入法中回车按钮的显示内容\n\n如果回车按钮是执行搜索功能，则回车按钮上显示”搜索”，如果是执行发送功能，则显示”发送”,如果是下一步，则显示”下一步”。\n\n实现这个功能需要调用EditText的setImeOptions方法：\n```\n/**\n*\n* IME_ACTION_SEARCH 搜索\n* IME_ACTION_SEND 发送\n* IME_ACTION_NEXT 下一步\n* IME_ACTION_DONE 完成\n*/\nmInputEditTxt.setImeOptions(EditorInfo.IME_ACTION_SEARCH);\n```\n\n#### 限制输入内容\n\n有时候我们根本就不想用户输入一些杂七杂八的内容，因为这需要程序针对输入的内容做各种处理，如果处理不当还会有好多不可预见的问题，索性在输入内容时就禁止用户输入一些非法字符，这可以通过下面的方式实现，新建一个类InputTxtFilter：\n\n```\npublic class InputTxtFilter{\n    public static final int INPUT_TYPE_EN = 0x01;\n    public static final int INPUT_TYPE_CH = 0x02;\n    private static final String[] SPELL = new String[]{\n        \"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\n        \"ā\",\"á\",\"ǎ\",\"à\",\"ō\",\"ó\",\"ǒ\",\"ò\",\"ē\",\"é\",\"ě\",\"è\",\"ī\",\"í\",\"ǐ\",\"ì\",\"ū\",\"ú\",\"ǔ\",\"ù\",\"ǖ\",\"ǘ\",\"ǚ\",\"ǜ\",\"ü\"\n    };\n    private static char[] chineseParam = new char[]{'」','，','。','？','…','：','～','【','＃','、','％','＊','＆','＄','（','‘','’','“','”','『','〔','｛','【'\n        ,'￥','￡','‖','〖','《','「','》','〗','】','｝','〕','』','”','）','！','；','—'};\n\n    private InputTxtFilter( ){\n\n    }\n\n    public static void inputFilter( final Context context, final EditText editText, final int type, final int inputLimit){\n        InputFilter[] filters = new InputFilter[1];\n        filters[0] = new InputFilter.LengthFilter(inputLimit){\n            public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend){\n                boolean isRightCharater = false;\n                if(type == INPUT_TYPE_EN){\n                    isRightCharater = isLetter(source.toString());\n                }else if(type == INPUT_TYPE_CH){\n                    isRightCharater = isChineseWord(source.toString());\n                }\n\n                if ( !isRightCharater|| dest.toString( ).length( )>=inputLimit ){\n                    return \"\";\n                }\n\n                return source;\n            }\n        };\n        editText.setFilters(filters);\n    }\n\n    /**\n     * 检测String是否全是中文\n     *\n     */\n    public static boolean isChineseWord( String name ){\n        boolean res=true;\n        char[] cTemp = name.toCharArray( );\n\n        for( int i = 0; i < name.length( ); i++ ){\n            if( !isChinese( cTemp[ i ] ) ){\n                res=false;\n                break;\n            }\n        }\n\n        return res;\n    }\n\n    /**\n     * 是否为英文字母\n     *\n     * */\n    public static boolean isLetter( String inputStr ){\n        char[] inputArray = inputStr.toCharArray( );\n        List<String> spellList = Arrays.asList( SPELL );\n\n        for( char input : inputArray ){\n            if( !spellList.contains( input + \"\" ) ){\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * 判定输入汉字\n     * @param c\n     */\n    public static boolean isChinese( char c ){\n        for( char param : chineseParam ){\n            if( param == c ){\n                return false;\n            }\n        }\n\n        Character.UnicodeBlock ub = Character.UnicodeBlock.of( c );\n        if ( ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS ){\n            return true;\n        }\n\n        return false;\n    }\n}\n\n```\n在初始化EditText时，调用InputTxtFilter的inputFilter方法，传入输入长度限制、输入内容的类型限制等即可，eg：\n\n```\nInputTxtFilter.inputFilter(this, mInputEditTxt, InputTxtFilter.INPUT_TYPE_EN, 5);\n```\n\n### 屏蔽EditText的复制、粘贴功能\n在低版本的Android SDK中，如果对EditText的输入长度有限制时，长按EditText并将选中的内容拖动到EditText输入框中，如果这时候的长度超过了EditText的输入长度限制，程序会直接崩溃掉，在高版本的Android SDK中这个问题已经改了，如果出现上面的情况会直接清空输入框中的内容，为了避免这种讨厌的问题，我们可以屏蔽EditText的复制和粘贴功能，只需要屏蔽EditText的长按响应即可：\n\n```\n/**\n     * 屏蔽复制、粘贴功能\n     *\n     * */\n    mInputEditTxt.setCustomSelectionActionModeCallback(new ActionMode.Callback() {\n        public boolean onCreateActionMode(ActionMode actionMode, Menu menu) {\n            return false;\n        }\n\n        public boolean onPrepareActionMode(ActionMode actionMode, Menu menu) {\n            return false;\n        }\n\n        public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem) {\n            return false;\n        }\n\n        @Override\n        public void onDestroyActionMode(ActionMode mode) {\n\n        }\n    });\n\n    mInputEditTxt.setLongClickable(false);\n\n```\n","source":"_posts/EditText-的使用及值得注意的地方.md","raw":"---\ntitle: EditText 的使用及值得注意的地方\ndate: 2016-09-01 12:54:29\ntags: [EditText]\ncategories: android\n---\n\n>来源：http://www.jianshu.com/p/1f05bb1fde3e\n作者：张明云（@UperOne）\n\nAndroid上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。\n\n<!-- more -->\n### 设置默认输入法  \n有时候为了提高用户体验，在弹出输入法时需要设置默认的输入状态，比如单词应用弹出输入法时，输入法最好是在英文输入状态下。如果是字典应用，弹出输入法时最好是在中文输入状态下，Android并没有提供设置默认的输入状态的接口，但我们可以通过如下方法一样能够达到想要的效果：\n\n#### 默认中文：\n```\nmEditText.setInputType(EditorInfo.TYPE_CLASS_TEXT);\n```\n\n#### 默认英文：\n```\nmEditText.setInputType(EditorInfo.TYPE_TEXT_VARIATION_URI);\n```\n\n### 打开和关闭输入法\n手动控制输入法的开关状态也能提升用户体验，比如：\n- 有的搜索框会有一个清除按钮，点击清除按钮时就应该弹出输入法，因为用户清除搜索内容的目的多数时候是需要输入新的内容；\n- 执行搜索时应该隐藏输入法，因为显示输入法时会遮挡搜索结果，用户体验不太好；\n- 闹钟来时或者有其它window弹出时应该隐藏输入法，因为输入法也是window，如果不隐藏可能导致输入法遮挡住了其它window等用户体验不太友好的问题。\n\n#### 打开输入法：\n```\nprivate void open(Context context, View editText){\n    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n    inputMethodManager.showSoftInput(editText, 0);\n}\n```\n#### 关闭输入法：\n```\nprivate void close(Context context, View editText){\n    InputMethodManager inputMethodManager = (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n    inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), 0);\n}\n```\n### 监听EditText的输入状态\n- 类似新浪微博，在输入内容时会提示还可以输入多少字；\n- 有的搜索引擎，输入内容时实时显示搜索结果；\n- 有的输入框有输入长度限制，输入内容超过长度限制时弹出提示信息。\n\n上面这些都可以通过监听EditText的输入状态来实现，具体实现方式如下：\n```\nmInputEditTxt.addTextChangedListener(new TextWatcher() {\n        @Override\n        public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n        }\n        @Override\n        public void onTextChanged(CharSequence s, int start, int before, int count) {\n            System.out.println(\"监听EditText输入内容的变化，在这里可以监听输入内容的长度。\");\n        }\n        @Override\n        public void afterTextChanged(Editable s) {\n            System.out.println(\"这里可以实现所输即所得，用户输入的同时可以立即在这里根据输入内容执行操作，显示搜索结果！\");\n        }\n    });\n```\n\n#### 监听输入法中的回车按钮\n\n比如搜狗输入法的右下角有一个回车按钮，我们希望用户点击它时也执行确认功能，可以通过监听EditText的按键点击事件来实现：\n\n```\n/**\n   * 监听输入法按键\n     *\n     * */\n    mInputEditTxt.setOnKeyListener(new OnKeyListener() {\n        @Override\n        public boolean onKey(View v, int keyCode, KeyEvent event) {\n            if (keyCode == KeyEvent.KEYCODE_ENTER && event.getAction() == KeyEvent.ACTION_UP) {\n                System.out.println(\"手指弹起时执行确认功能\");\n                return true;\n            }\n\n            return false;\n        }\n    });\n\n```\n\n#### 改变输入法中回车按钮的显示内容\n\n如果回车按钮是执行搜索功能，则回车按钮上显示”搜索”，如果是执行发送功能，则显示”发送”,如果是下一步，则显示”下一步”。\n\n实现这个功能需要调用EditText的setImeOptions方法：\n```\n/**\n*\n* IME_ACTION_SEARCH 搜索\n* IME_ACTION_SEND 发送\n* IME_ACTION_NEXT 下一步\n* IME_ACTION_DONE 完成\n*/\nmInputEditTxt.setImeOptions(EditorInfo.IME_ACTION_SEARCH);\n```\n\n#### 限制输入内容\n\n有时候我们根本就不想用户输入一些杂七杂八的内容，因为这需要程序针对输入的内容做各种处理，如果处理不当还会有好多不可预见的问题，索性在输入内容时就禁止用户输入一些非法字符，这可以通过下面的方式实现，新建一个类InputTxtFilter：\n\n```\npublic class InputTxtFilter{\n    public static final int INPUT_TYPE_EN = 0x01;\n    public static final int INPUT_TYPE_CH = 0x02;\n    private static final String[] SPELL = new String[]{\n        \"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\",\n        \"ā\",\"á\",\"ǎ\",\"à\",\"ō\",\"ó\",\"ǒ\",\"ò\",\"ē\",\"é\",\"ě\",\"è\",\"ī\",\"í\",\"ǐ\",\"ì\",\"ū\",\"ú\",\"ǔ\",\"ù\",\"ǖ\",\"ǘ\",\"ǚ\",\"ǜ\",\"ü\"\n    };\n    private static char[] chineseParam = new char[]{'」','，','。','？','…','：','～','【','＃','、','％','＊','＆','＄','（','‘','’','“','”','『','〔','｛','【'\n        ,'￥','￡','‖','〖','《','「','》','〗','】','｝','〕','』','”','）','！','；','—'};\n\n    private InputTxtFilter( ){\n\n    }\n\n    public static void inputFilter( final Context context, final EditText editText, final int type, final int inputLimit){\n        InputFilter[] filters = new InputFilter[1];\n        filters[0] = new InputFilter.LengthFilter(inputLimit){\n            public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend){\n                boolean isRightCharater = false;\n                if(type == INPUT_TYPE_EN){\n                    isRightCharater = isLetter(source.toString());\n                }else if(type == INPUT_TYPE_CH){\n                    isRightCharater = isChineseWord(source.toString());\n                }\n\n                if ( !isRightCharater|| dest.toString( ).length( )>=inputLimit ){\n                    return \"\";\n                }\n\n                return source;\n            }\n        };\n        editText.setFilters(filters);\n    }\n\n    /**\n     * 检测String是否全是中文\n     *\n     */\n    public static boolean isChineseWord( String name ){\n        boolean res=true;\n        char[] cTemp = name.toCharArray( );\n\n        for( int i = 0; i < name.length( ); i++ ){\n            if( !isChinese( cTemp[ i ] ) ){\n                res=false;\n                break;\n            }\n        }\n\n        return res;\n    }\n\n    /**\n     * 是否为英文字母\n     *\n     * */\n    public static boolean isLetter( String inputStr ){\n        char[] inputArray = inputStr.toCharArray( );\n        List<String> spellList = Arrays.asList( SPELL );\n\n        for( char input : inputArray ){\n            if( !spellList.contains( input + \"\" ) ){\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * 判定输入汉字\n     * @param c\n     */\n    public static boolean isChinese( char c ){\n        for( char param : chineseParam ){\n            if( param == c ){\n                return false;\n            }\n        }\n\n        Character.UnicodeBlock ub = Character.UnicodeBlock.of( c );\n        if ( ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS\n            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS\n            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A\n            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION\n            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION\n            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS ){\n            return true;\n        }\n\n        return false;\n    }\n}\n\n```\n在初始化EditText时，调用InputTxtFilter的inputFilter方法，传入输入长度限制、输入内容的类型限制等即可，eg：\n\n```\nInputTxtFilter.inputFilter(this, mInputEditTxt, InputTxtFilter.INPUT_TYPE_EN, 5);\n```\n\n### 屏蔽EditText的复制、粘贴功能\n在低版本的Android SDK中，如果对EditText的输入长度有限制时，长按EditText并将选中的内容拖动到EditText输入框中，如果这时候的长度超过了EditText的输入长度限制，程序会直接崩溃掉，在高版本的Android SDK中这个问题已经改了，如果出现上面的情况会直接清空输入框中的内容，为了避免这种讨厌的问题，我们可以屏蔽EditText的复制和粘贴功能，只需要屏蔽EditText的长按响应即可：\n\n```\n/**\n     * 屏蔽复制、粘贴功能\n     *\n     * */\n    mInputEditTxt.setCustomSelectionActionModeCallback(new ActionMode.Callback() {\n        public boolean onCreateActionMode(ActionMode actionMode, Menu menu) {\n            return false;\n        }\n\n        public boolean onPrepareActionMode(ActionMode actionMode, Menu menu) {\n            return false;\n        }\n\n        public boolean onActionItemClicked(ActionMode actionMode, MenuItem menuItem) {\n            return false;\n        }\n\n        @Override\n        public void onDestroyActionMode(ActionMode mode) {\n\n        }\n    });\n\n    mInputEditTxt.setLongClickable(false);\n\n```\n","slug":"EditText-的使用及值得注意的地方","published":1,"updated":"2016-09-01T05:05:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujp000dpev21wmianjk","content":"<blockquote>\n<p>来源：<a href=\"http://www.jianshu.com/p/1f05bb1fde3e\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/1f05bb1fde3e</a><br>作者：张明云（@UperOne）</p>\n</blockquote>\n<p>Android上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。</p>\n<a id=\"more\"></a>\n<h3 id=\"设置默认输入法\"><a href=\"#设置默认输入法\" class=\"headerlink\" title=\"设置默认输入法\"></a>设置默认输入法</h3><p>有时候为了提高用户体验，在弹出输入法时需要设置默认的输入状态，比如单词应用弹出输入法时，输入法最好是在英文输入状态下。如果是字典应用，弹出输入法时最好是在中文输入状态下，Android并没有提供设置默认的输入状态的接口，但我们可以通过如下方法一样能够达到想要的效果：</p>\n<h4 id=\"默认中文：\"><a href=\"#默认中文：\" class=\"headerlink\" title=\"默认中文：\"></a>默认中文：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mEditText</span><span class=\"selector-class\">.setInputType</span>(<span class=\"selector-tag\">EditorInfo</span><span class=\"selector-class\">.TYPE_CLASS_TEXT</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"默认英文：\"><a href=\"#默认英文：\" class=\"headerlink\" title=\"默认英文：\"></a>默认英文：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mEditText</span><span class=\"selector-class\">.setInputType</span>(<span class=\"selector-tag\">EditorInfo</span><span class=\"selector-class\">.TYPE_TEXT_VARIATION_URI</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"打开和关闭输入法\"><a href=\"#打开和关闭输入法\" class=\"headerlink\" title=\"打开和关闭输入法\"></a>打开和关闭输入法</h3><p>手动控制输入法的开关状态也能提升用户体验，比如：</p>\n<ul>\n<li>有的搜索框会有一个清除按钮，点击清除按钮时就应该弹出输入法，因为用户清除搜索内容的目的多数时候是需要输入新的内容；</li>\n<li>执行搜索时应该隐藏输入法，因为显示输入法时会遮挡搜索结果，用户体验不太好；</li>\n<li>闹钟来时或者有其它window弹出时应该隐藏输入法，因为输入法也是window，如果不隐藏可能导致输入法遮挡住了其它window等用户体验不太友好的问题。</li>\n</ul>\n<h4 id=\"打开输入法：\"><a href=\"#打开输入法：\" class=\"headerlink\" title=\"打开输入法：\"></a>打开输入法：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void open(<span class=\"built_in\">Context</span> <span class=\"built_in\">context</span>, View editText)&#123;</span><br><span class=\"line\">    InputMethodManager inputMethodManager = (InputMethodManager) <span class=\"built_in\">context</span>.getSystemService(<span class=\"built_in\">Context</span>.INPUT_METHOD_SERVICE)<span class=\"comment\">;</span></span><br><span class=\"line\">    inputMethodManager.<span class=\"keyword\">showSoftInput(editText, </span><span class=\"number\">0</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"关闭输入法：\"><a href=\"#关闭输入法：\" class=\"headerlink\" title=\"关闭输入法：\"></a>关闭输入法：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void <span class=\"keyword\">close(Context </span><span class=\"built_in\">context</span>, View editText)&#123;</span><br><span class=\"line\">    InputMethodManager inputMethodManager = (InputMethodManager) <span class=\"built_in\">context</span>.getSystemService(<span class=\"built_in\">Context</span>.INPUT_METHOD_SERVICE)<span class=\"comment\">;</span></span><br><span class=\"line\">    inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), <span class=\"number\">0</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听EditText的输入状态\"><a href=\"#监听EditText的输入状态\" class=\"headerlink\" title=\"监听EditText的输入状态\"></a>监听EditText的输入状态</h3><ul>\n<li>类似新浪微博，在输入内容时会提示还可以输入多少字；</li>\n<li>有的搜索引擎，输入内容时实时显示搜索结果；</li>\n<li>有的输入框有输入长度限制，输入内容超过长度限制时弹出提示信息。</li>\n</ul>\n<p>上面这些都可以通过监听EditText的输入状态来实现，具体实现方式如下：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mInputEditTxt.addTextChangedListener(<span class=\"keyword\">new</span> TextWatcher() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">beforeTextChanged</span><span class=\"params\">(CharSequence s, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> count, <span class=\"keyword\">int</span> after)</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onTextChanged</span><span class=\"params\">(CharSequence s, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> before, <span class=\"keyword\">int</span> count)</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"监听EditText输入内容的变化，在这里可以监听输入内容的长度。\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">afterTextChanged</span><span class=\"params\">(Editable s)</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"这里可以实现所输即所得，用户输入的同时可以立即在这里根据输入内容执行操作，显示搜索结果！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"监听输入法中的回车按钮\"><a href=\"#监听输入法中的回车按钮\" class=\"headerlink\" title=\"监听输入法中的回车按钮\"></a>监听输入法中的回车按钮</h4><p>比如搜狗输入法的右下角有一个回车按钮，我们希望用户点击它时也执行确认功能，可以通过监听EditText的按键点击事件来实现：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 监听输入法按键</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    mInputEditTxt.setOnKeyListener(<span class=\"keyword\">new</span> OnKeyListener() &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">onKey</span>(<span class=\"params\">View v, <span class=\"keyword\">int</span> keyCode, KeyEvent <span class=\"keyword\">event</span></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_ENTER &amp;&amp; <span class=\"keyword\">event</span>.getAction() == KeyEvent.ACTION_UP) &#123;</span><br><span class=\"line\">                System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"手指弹起时执行确认功能\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"改变输入法中回车按钮的显示内容\"><a href=\"#改变输入法中回车按钮的显示内容\" class=\"headerlink\" title=\"改变输入法中回车按钮的显示内容\"></a>改变输入法中回车按钮的显示内容</h4><p>如果回车按钮是执行搜索功能，则回车按钮上显示”搜索”，如果是执行发送功能，则显示”发送”,如果是下一步，则显示”下一步”。</p>\n<p>实现这个功能需要调用EditText的setImeOptions方法：<br><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>SEARCH 搜索</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>SEND 发送</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>NEXT 下一步</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>DONE 完成</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">*/</span></span></span><br><span class=\"line\">mInputEditTxt.setImeOptions(EditorInfo.IME_ACTION_SEARCH);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"限制输入内容\"><a href=\"#限制输入内容\" class=\"headerlink\" title=\"限制输入内容\"></a>限制输入内容</h4><p>有时候我们根本就不想用户输入一些杂七杂八的内容，因为这需要程序针对输入的内容做各种处理，如果处理不当还会有好多不可预见的问题，索性在输入内容时就禁止用户输入一些非法字符，这可以通过下面的方式实现，新建一个类InputTxtFilter：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> InputTxtFilter&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> INPUT_TYPE_EN = <span class=\"number\">0</span>x01;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> INPUT_TYPE_CH = <span class=\"number\">0</span>x02;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] SPELL = <span class=\"keyword\">new</span> String[]&#123;</span><br><span class=\"line\">        <span class=\"string\">\"a\"</span>,<span class=\"string\">\"b\"</span>,<span class=\"string\">\"c\"</span>,<span class=\"string\">\"d\"</span>,<span class=\"string\">\"e\"</span>,<span class=\"string\">\"f\"</span>,<span class=\"string\">\"g\"</span>,<span class=\"string\">\"h\"</span>,<span class=\"string\">\"i\"</span>,<span class=\"string\">\"j\"</span>,<span class=\"string\">\"k\"</span>,<span class=\"string\">\"l\"</span>,<span class=\"string\">\"m\"</span>,<span class=\"string\">\"n\"</span>,<span class=\"string\">\"o\"</span>,<span class=\"string\">\"p\"</span>,<span class=\"string\">\"q\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"string\">\"s\"</span>,<span class=\"string\">\"t\"</span>,<span class=\"string\">\"u\"</span>,<span class=\"string\">\"v\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"string\">\"x\"</span>,<span class=\"string\">\"y\"</span>,<span class=\"string\">\"z\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"ā\"</span>,<span class=\"string\">\"á\"</span>,<span class=\"string\">\"ǎ\"</span>,<span class=\"string\">\"à\"</span>,<span class=\"string\">\"ō\"</span>,<span class=\"string\">\"ó\"</span>,<span class=\"string\">\"ǒ\"</span>,<span class=\"string\">\"ò\"</span>,<span class=\"string\">\"ē\"</span>,<span class=\"string\">\"é\"</span>,<span class=\"string\">\"ě\"</span>,<span class=\"string\">\"è\"</span>,<span class=\"string\">\"ī\"</span>,<span class=\"string\">\"í\"</span>,<span class=\"string\">\"ǐ\"</span>,<span class=\"string\">\"ì\"</span>,<span class=\"string\">\"ū\"</span>,<span class=\"string\">\"ú\"</span>,<span class=\"string\">\"ǔ\"</span>,<span class=\"string\">\"ù\"</span>,<span class=\"string\">\"ǖ\"</span>,<span class=\"string\">\"ǘ\"</span>,<span class=\"string\">\"ǚ\"</span>,<span class=\"string\">\"ǜ\"</span>,<span class=\"string\">\"ü\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">char</span>[] chineseParam = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[]&#123;<span class=\"string\">'」'</span>,<span class=\"string\">'，'</span>,<span class=\"string\">'。'</span>,<span class=\"string\">'？'</span>,<span class=\"string\">'…'</span>,<span class=\"string\">'：'</span>,<span class=\"string\">'～'</span>,<span class=\"string\">'【'</span>,<span class=\"string\">'＃'</span>,<span class=\"string\">'、'</span>,<span class=\"string\">'％'</span>,<span class=\"string\">'＊'</span>,<span class=\"string\">'＆'</span>,<span class=\"string\">'＄'</span>,<span class=\"string\">'（'</span>,<span class=\"string\">'‘'</span>,<span class=\"string\">'’'</span>,<span class=\"string\">'“'</span>,<span class=\"string\">'”'</span>,<span class=\"string\">'『'</span>,<span class=\"string\">'〔'</span>,<span class=\"string\">'｛'</span>,<span class=\"string\">'【'</span></span><br><span class=\"line\">        ,<span class=\"string\">'￥'</span>,<span class=\"string\">'￡'</span>,<span class=\"string\">'‖'</span>,<span class=\"string\">'〖'</span>,<span class=\"string\">'《'</span>,<span class=\"string\">'「'</span>,<span class=\"string\">'》'</span>,<span class=\"string\">'〗'</span>,<span class=\"string\">'】'</span>,<span class=\"string\">'｝'</span>,<span class=\"string\">'〕'</span>,<span class=\"string\">'』'</span>,<span class=\"string\">'”'</span>,<span class=\"string\">'）'</span>,<span class=\"string\">'！'</span>,<span class=\"string\">'；'</span>,<span class=\"string\">'—'</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InputTxtFilter( )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> inputFilter( <span class=\"keyword\">final</span> Context context, <span class=\"keyword\">final</span> EditText editText, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> type, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> inputLimit)&#123;</span><br><span class=\"line\">        InputFilter[] filters = <span class=\"keyword\">new</span> InputFilter[<span class=\"number\">1</span>];</span><br><span class=\"line\">        filters[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> InputFilter.LengthFilter(inputLimit)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> CharSequence filter(CharSequence <span class=\"keyword\">source</span>, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end, Spanned dest, <span class=\"keyword\">int</span> dstart, <span class=\"keyword\">int</span> dend)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> isRightCharater = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type == INPUT_TYPE_EN)&#123;</span><br><span class=\"line\">                    isRightCharater = isLetter(<span class=\"keyword\">source</span>.toString());</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type == INPUT_TYPE_CH)&#123;</span><br><span class=\"line\">                    isRightCharater = isChineseWord(<span class=\"keyword\">source</span>.toString());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( !isRightCharater|| dest.toString( ).length( )&gt;=inputLimit )&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">source</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        editText.setFilters(filters);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测String是否全是中文</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isChineseWord( String name )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> res=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] cTemp = name.toCharArray( );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length( ); i++ )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !isChinese( cTemp[ i ] ) )&#123;</span><br><span class=\"line\">                res=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否为英文字母</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isLetter( String inputStr )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] inputArray = inputStr.toCharArray( );</span><br><span class=\"line\">        List&lt;String&gt; spellList = Arrays.<span class=\"keyword\">asList</span>( SPELL );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">char</span> input : inputArray )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !spellList.contains( input + <span class=\"string\">\"\"</span> ) )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判定输入汉字</span></span><br><span class=\"line\"><span class=\"comment\">     * @param c</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isChinese( <span class=\"keyword\">char</span> c )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">char</span> param : chineseParam )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( param == c )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Character.UnicodeBlock ub = Character.UnicodeBlock.of( c );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在初始化EditText时，调用InputTxtFilter的inputFilter方法，传入输入长度限制、输入内容的类型限制等即可，eg：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">InputTxtFilter</span><span class=\"selector-class\">.inputFilter</span>(<span class=\"selector-tag\">this</span>, <span class=\"selector-tag\">mInputEditTxt</span>, <span class=\"selector-tag\">InputTxtFilter</span><span class=\"selector-class\">.INPUT_TYPE_EN</span>, 5);</span><br></pre></td></tr></table></figure>\n<h3 id=\"屏蔽EditText的复制、粘贴功能\"><a href=\"#屏蔽EditText的复制、粘贴功能\" class=\"headerlink\" title=\"屏蔽EditText的复制、粘贴功能\"></a>屏蔽EditText的复制、粘贴功能</h3><p>在低版本的Android SDK中，如果对EditText的输入长度有限制时，长按EditText并将选中的内容拖动到EditText输入框中，如果这时候的长度超过了EditText的输入长度限制，程序会直接崩溃掉，在高版本的Android SDK中这个问题已经改了，如果出现上面的情况会直接清空输入框中的内容，为了避免这种讨厌的问题，我们可以屏蔽EditText的复制和粘贴功能，只需要屏蔽EditText的长按响应即可：</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 屏蔽复制、粘贴功能</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    mInputEditTxt.setCustomSelectionActionModeCallback(<span class=\"keyword\">new</span> ActionMode.Callback() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onCreateActionMode</span><span class=\"params\">(ActionMode actionMode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareActionMode</span><span class=\"params\">(ActionMode actionMode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onActionItemClicked</span><span class=\"params\">(ActionMode actionMode, MenuItem menuItem)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onDestroyActionMode</span><span class=\"params\">(ActionMode mode)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    mInputEditTxt.setLongClickable(<span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>来源：<a href=\"http://www.jianshu.com/p/1f05bb1fde3e\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/1f05bb1fde3e</a><br>作者：张明云（@UperOne）</p>\n</blockquote>\n<p>Android上有很多输入法应用，每种输入法都有各自的特点，输入法多数时候是和EditText配合使用，结合我自己的亲身实践分享一下使用EditText过程中遇到的一些问题及解决方法。</p>","more":"<h3 id=\"设置默认输入法\"><a href=\"#设置默认输入法\" class=\"headerlink\" title=\"设置默认输入法\"></a>设置默认输入法</h3><p>有时候为了提高用户体验，在弹出输入法时需要设置默认的输入状态，比如单词应用弹出输入法时，输入法最好是在英文输入状态下。如果是字典应用，弹出输入法时最好是在中文输入状态下，Android并没有提供设置默认的输入状态的接口，但我们可以通过如下方法一样能够达到想要的效果：</p>\n<h4 id=\"默认中文：\"><a href=\"#默认中文：\" class=\"headerlink\" title=\"默认中文：\"></a>默认中文：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mEditText</span><span class=\"selector-class\">.setInputType</span>(<span class=\"selector-tag\">EditorInfo</span><span class=\"selector-class\">.TYPE_CLASS_TEXT</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"默认英文：\"><a href=\"#默认英文：\" class=\"headerlink\" title=\"默认英文：\"></a>默认英文：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mEditText</span><span class=\"selector-class\">.setInputType</span>(<span class=\"selector-tag\">EditorInfo</span><span class=\"selector-class\">.TYPE_TEXT_VARIATION_URI</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"打开和关闭输入法\"><a href=\"#打开和关闭输入法\" class=\"headerlink\" title=\"打开和关闭输入法\"></a>打开和关闭输入法</h3><p>手动控制输入法的开关状态也能提升用户体验，比如：</p>\n<ul>\n<li>有的搜索框会有一个清除按钮，点击清除按钮时就应该弹出输入法，因为用户清除搜索内容的目的多数时候是需要输入新的内容；</li>\n<li>执行搜索时应该隐藏输入法，因为显示输入法时会遮挡搜索结果，用户体验不太好；</li>\n<li>闹钟来时或者有其它window弹出时应该隐藏输入法，因为输入法也是window，如果不隐藏可能导致输入法遮挡住了其它window等用户体验不太友好的问题。</li>\n</ul>\n<h4 id=\"打开输入法：\"><a href=\"#打开输入法：\" class=\"headerlink\" title=\"打开输入法：\"></a>打开输入法：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void open(<span class=\"built_in\">Context</span> <span class=\"built_in\">context</span>, View editText)&#123;</span><br><span class=\"line\">    InputMethodManager inputMethodManager = (InputMethodManager) <span class=\"built_in\">context</span>.getSystemService(<span class=\"built_in\">Context</span>.INPUT_METHOD_SERVICE)<span class=\"comment\">;</span></span><br><span class=\"line\">    inputMethodManager.<span class=\"keyword\">showSoftInput(editText, </span><span class=\"number\">0</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"关闭输入法：\"><a href=\"#关闭输入法：\" class=\"headerlink\" title=\"关闭输入法：\"></a>关闭输入法：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private void <span class=\"keyword\">close(Context </span><span class=\"built_in\">context</span>, View editText)&#123;</span><br><span class=\"line\">    InputMethodManager inputMethodManager = (InputMethodManager) <span class=\"built_in\">context</span>.getSystemService(<span class=\"built_in\">Context</span>.INPUT_METHOD_SERVICE)<span class=\"comment\">;</span></span><br><span class=\"line\">    inputMethodManager.hideSoftInputFromWindow(editText.getWindowToken(), <span class=\"number\">0</span>)<span class=\"comment\">;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"监听EditText的输入状态\"><a href=\"#监听EditText的输入状态\" class=\"headerlink\" title=\"监听EditText的输入状态\"></a>监听EditText的输入状态</h3><ul>\n<li>类似新浪微博，在输入内容时会提示还可以输入多少字；</li>\n<li>有的搜索引擎，输入内容时实时显示搜索结果；</li>\n<li>有的输入框有输入长度限制，输入内容超过长度限制时弹出提示信息。</li>\n</ul>\n<p>上面这些都可以通过监听EditText的输入状态来实现，具体实现方式如下：<br><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mInputEditTxt.addTextChangedListener(<span class=\"keyword\">new</span> TextWatcher() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">beforeTextChanged</span><span class=\"params\">(CharSequence s, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> count, <span class=\"keyword\">int</span> after)</span> </span>&#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onTextChanged</span><span class=\"params\">(CharSequence s, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> before, <span class=\"keyword\">int</span> count)</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"监听EditText输入内容的变化，在这里可以监听输入内容的长度。\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">afterTextChanged</span><span class=\"params\">(Editable s)</span> </span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">\"这里可以实现所输即所得，用户输入的同时可以立即在这里根据输入内容执行操作，显示搜索结果！\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"监听输入法中的回车按钮\"><a href=\"#监听输入法中的回车按钮\" class=\"headerlink\" title=\"监听输入法中的回车按钮\"></a>监听输入法中的回车按钮</h4><p>比如搜狗输入法的右下角有一个回车按钮，我们希望用户点击它时也执行确认功能，可以通过监听EditText的按键点击事件来实现：</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * 监听输入法按键</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    mInputEditTxt.setOnKeyListener(<span class=\"keyword\">new</span> OnKeyListener() &#123;</span><br><span class=\"line\">        @Override</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> boolean <span class=\"title\">onKey</span>(<span class=\"params\">View v, <span class=\"keyword\">int</span> keyCode, KeyEvent <span class=\"keyword\">event</span></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_ENTER &amp;&amp; <span class=\"keyword\">event</span>.getAction() == KeyEvent.ACTION_UP) &#123;</span><br><span class=\"line\">                System.<span class=\"keyword\">out</span>.println(<span class=\"string\">\"手指弹起时执行确认功能\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br></pre></td></tr></table></figure>\n<h4 id=\"改变输入法中回车按钮的显示内容\"><a href=\"#改变输入法中回车按钮的显示内容\" class=\"headerlink\" title=\"改变输入法中回车按钮的显示内容\"></a>改变输入法中回车按钮的显示内容</h4><p>如果回车按钮是执行搜索功能，则回车按钮上显示”搜索”，如果是执行发送功能，则显示”发送”,如果是下一步，则显示”下一步”。</p>\n<p>实现这个功能需要调用EditText的setImeOptions方法：<br><figure class=\"highlight dart\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">/**</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">*</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>SEARCH 搜索</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>SEND 发送</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>NEXT 下一步</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\"><span class=\"bullet\">* </span>IME<span class=\"emphasis\">_ACTION_</span>DONE 完成</span></span></span><br><span class=\"line\"><span class=\"comment\"><span class=\"markdown\">*/</span></span></span><br><span class=\"line\">mInputEditTxt.setImeOptions(EditorInfo.IME_ACTION_SEARCH);</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"限制输入内容\"><a href=\"#限制输入内容\" class=\"headerlink\" title=\"限制输入内容\"></a>限制输入内容</h4><p>有时候我们根本就不想用户输入一些杂七杂八的内容，因为这需要程序针对输入的内容做各种处理，如果处理不当还会有好多不可预见的问题，索性在输入内容时就禁止用户输入一些非法字符，这可以通过下面的方式实现，新建一个类InputTxtFilter：</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> InputTxtFilter&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> INPUT_TYPE_EN = <span class=\"number\">0</span>x01;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> INPUT_TYPE_CH = <span class=\"number\">0</span>x02;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String[] SPELL = <span class=\"keyword\">new</span> String[]&#123;</span><br><span class=\"line\">        <span class=\"string\">\"a\"</span>,<span class=\"string\">\"b\"</span>,<span class=\"string\">\"c\"</span>,<span class=\"string\">\"d\"</span>,<span class=\"string\">\"e\"</span>,<span class=\"string\">\"f\"</span>,<span class=\"string\">\"g\"</span>,<span class=\"string\">\"h\"</span>,<span class=\"string\">\"i\"</span>,<span class=\"string\">\"j\"</span>,<span class=\"string\">\"k\"</span>,<span class=\"string\">\"l\"</span>,<span class=\"string\">\"m\"</span>,<span class=\"string\">\"n\"</span>,<span class=\"string\">\"o\"</span>,<span class=\"string\">\"p\"</span>,<span class=\"string\">\"q\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"string\">\"s\"</span>,<span class=\"string\">\"t\"</span>,<span class=\"string\">\"u\"</span>,<span class=\"string\">\"v\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"string\">\"x\"</span>,<span class=\"string\">\"y\"</span>,<span class=\"string\">\"z\"</span>,</span><br><span class=\"line\">        <span class=\"string\">\"ā\"</span>,<span class=\"string\">\"á\"</span>,<span class=\"string\">\"ǎ\"</span>,<span class=\"string\">\"à\"</span>,<span class=\"string\">\"ō\"</span>,<span class=\"string\">\"ó\"</span>,<span class=\"string\">\"ǒ\"</span>,<span class=\"string\">\"ò\"</span>,<span class=\"string\">\"ē\"</span>,<span class=\"string\">\"é\"</span>,<span class=\"string\">\"ě\"</span>,<span class=\"string\">\"è\"</span>,<span class=\"string\">\"ī\"</span>,<span class=\"string\">\"í\"</span>,<span class=\"string\">\"ǐ\"</span>,<span class=\"string\">\"ì\"</span>,<span class=\"string\">\"ū\"</span>,<span class=\"string\">\"ú\"</span>,<span class=\"string\">\"ǔ\"</span>,<span class=\"string\">\"ù\"</span>,<span class=\"string\">\"ǖ\"</span>,<span class=\"string\">\"ǘ\"</span>,<span class=\"string\">\"ǚ\"</span>,<span class=\"string\">\"ǜ\"</span>,<span class=\"string\">\"ü\"</span></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">char</span>[] chineseParam = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[]&#123;<span class=\"string\">'」'</span>,<span class=\"string\">'，'</span>,<span class=\"string\">'。'</span>,<span class=\"string\">'？'</span>,<span class=\"string\">'…'</span>,<span class=\"string\">'：'</span>,<span class=\"string\">'～'</span>,<span class=\"string\">'【'</span>,<span class=\"string\">'＃'</span>,<span class=\"string\">'、'</span>,<span class=\"string\">'％'</span>,<span class=\"string\">'＊'</span>,<span class=\"string\">'＆'</span>,<span class=\"string\">'＄'</span>,<span class=\"string\">'（'</span>,<span class=\"string\">'‘'</span>,<span class=\"string\">'’'</span>,<span class=\"string\">'“'</span>,<span class=\"string\">'”'</span>,<span class=\"string\">'『'</span>,<span class=\"string\">'〔'</span>,<span class=\"string\">'｛'</span>,<span class=\"string\">'【'</span></span><br><span class=\"line\">        ,<span class=\"string\">'￥'</span>,<span class=\"string\">'￡'</span>,<span class=\"string\">'‖'</span>,<span class=\"string\">'〖'</span>,<span class=\"string\">'《'</span>,<span class=\"string\">'「'</span>,<span class=\"string\">'》'</span>,<span class=\"string\">'〗'</span>,<span class=\"string\">'】'</span>,<span class=\"string\">'｝'</span>,<span class=\"string\">'〕'</span>,<span class=\"string\">'』'</span>,<span class=\"string\">'”'</span>,<span class=\"string\">'）'</span>,<span class=\"string\">'！'</span>,<span class=\"string\">'；'</span>,<span class=\"string\">'—'</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> InputTxtFilter( )&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> inputFilter( <span class=\"keyword\">final</span> Context context, <span class=\"keyword\">final</span> EditText editText, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> type, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> inputLimit)&#123;</span><br><span class=\"line\">        InputFilter[] filters = <span class=\"keyword\">new</span> InputFilter[<span class=\"number\">1</span>];</span><br><span class=\"line\">        filters[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> InputFilter.LengthFilter(inputLimit)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> CharSequence filter(CharSequence <span class=\"keyword\">source</span>, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end, Spanned dest, <span class=\"keyword\">int</span> dstart, <span class=\"keyword\">int</span> dend)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">boolean</span> isRightCharater = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(type == INPUT_TYPE_EN)&#123;</span><br><span class=\"line\">                    isRightCharater = isLetter(<span class=\"keyword\">source</span>.toString());</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(type == INPUT_TYPE_CH)&#123;</span><br><span class=\"line\">                    isRightCharater = isChineseWord(<span class=\"keyword\">source</span>.toString());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( !isRightCharater|| dest.toString( ).length( )&gt;=inputLimit )&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">source</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        editText.setFilters(filters);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 检测String是否全是中文</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isChineseWord( String name )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> res=<span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] cTemp = name.toCharArray( );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; name.length( ); i++ )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !isChinese( cTemp[ i ] ) )&#123;</span><br><span class=\"line\">                res=<span class=\"keyword\">false</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 是否为英文字母</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isLetter( String inputStr )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span>[] inputArray = inputStr.toCharArray( );</span><br><span class=\"line\">        List&lt;String&gt; spellList = Arrays.<span class=\"keyword\">asList</span>( SPELL );</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">char</span> input : inputArray )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( !spellList.contains( input + <span class=\"string\">\"\"</span> ) )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 判定输入汉字</span></span><br><span class=\"line\"><span class=\"comment\">     * @param c</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> isChinese( <span class=\"keyword\">char</span> c )&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>( <span class=\"keyword\">char</span> param : chineseParam )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>( param == c )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        Character.UnicodeBlock ub = Character.UnicodeBlock.of( c );</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_IDEOGRAPHS</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.GENERAL_PUNCTUATION</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION</span><br><span class=\"line\">            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS )&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在初始化EditText时，调用InputTxtFilter的inputFilter方法，传入输入长度限制、输入内容的类型限制等即可，eg：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">InputTxtFilter</span><span class=\"selector-class\">.inputFilter</span>(<span class=\"selector-tag\">this</span>, <span class=\"selector-tag\">mInputEditTxt</span>, <span class=\"selector-tag\">InputTxtFilter</span><span class=\"selector-class\">.INPUT_TYPE_EN</span>, 5);</span><br></pre></td></tr></table></figure>\n<h3 id=\"屏蔽EditText的复制、粘贴功能\"><a href=\"#屏蔽EditText的复制、粘贴功能\" class=\"headerlink\" title=\"屏蔽EditText的复制、粘贴功能\"></a>屏蔽EditText的复制、粘贴功能</h3><p>在低版本的Android SDK中，如果对EditText的输入长度有限制时，长按EditText并将选中的内容拖动到EditText输入框中，如果这时候的长度超过了EditText的输入长度限制，程序会直接崩溃掉，在高版本的Android SDK中这个问题已经改了，如果出现上面的情况会直接清空输入框中的内容，为了避免这种讨厌的问题，我们可以屏蔽EditText的复制和粘贴功能，只需要屏蔽EditText的长按响应即可：</p>\n<figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 屏蔽复制、粘贴功能</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * */</span></span><br><span class=\"line\">    mInputEditTxt.setCustomSelectionActionModeCallback(<span class=\"keyword\">new</span> ActionMode.Callback() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onCreateActionMode</span><span class=\"params\">(ActionMode actionMode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareActionMode</span><span class=\"params\">(ActionMode actionMode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onActionItemClicked</span><span class=\"params\">(ActionMode actionMode, MenuItem menuItem)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onDestroyActionMode</span><span class=\"params\">(ActionMode mode)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    mInputEditTxt.setLongClickable(<span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>"},{"title":"Github 安全类Repo收集整理[转载]","date":"2017-09-11T03:32:59.000Z","_content":"\n漏洞及渗透练习平台：\nWebGoat漏洞练习环境\nhttps://github.com/WebGoat/WebGoat\nhttps://github.com/WebGoat/WebGoat-Legacy\nDamn Vulnerable Web Application(漏洞练习平台)\nhttps://github.com/RandomStorm/DVWA\n数据库注入练习平台  \nhttps://github.com/Audi-1/sqli-labs\n用node编写的漏洞练习平台，like OWASP Node Goat\nhttps://github.com/cr0hn/vulnerable-node\n\n<!-- more -->\n花式扫描器 ：\n端口扫描器Nmap\nhttps://github.com/nmap/nmap\n本地网络扫描器\nhttps://github.com/SkyLined/LocalNetworkScanner\n子域名扫描器\nhttps://github.com/lijiejie/subDomainsBrute\n漏洞路由扫描器\nhttps://github.com/jh00nbr/Routerhunter-2.0\n迷你批量信息泄漏扫描脚本\nhttps://github.com/lijiejie/BBScan\nWaf类型检测工具\nhttps://github.com/EnableSecurity/wafw00f\n信息搜集工具 :\n社工插件，可查找以email、phone、username的注册的所有网站账号信息\nhttps://github.com/n0tr00t/Sreg\nGithub信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息\nhttps://github.com/sea-god/gitscan\ngithub Repo信息搜集工具\nhttps://github.com/metac0rtex/GitHarvester\nWEB：\nwebshell大合集\nhttps://github.com/tennc/webshell\n渗透以及web攻击脚本\nhttps://github.com/brianwrf/hackUtils\nweb渗透小工具大合集\nhttps://github.com/rootphantomer/hack_tools_for_me\nXSS数据接收平台\nhttps://github.com/firesunCN/BlueLotus_XSSReceiver\nXSS与CSRF工具\nhttps://github.com/evilcos/xssor\nShort for command injection exploiter，web向命令注入检测工具\nhttps://github.com/stasinopoulos/commix\n数据库注入工具\nhttps://github.com/sqlmapproject/sqlmap\nWeb代理，通过加载sqlmap api进行sqli实时检测\nhttps://github.com/zt2/sqli-hunter\n新版中国菜刀\nhttps://github.com/Chora10/Cknife\n.git泄露利用EXP\nhttps://github.com/lijiejie/GitHack\n浏览器攻击框架\nhttps://github.com/beefproject/beef\n自动化绕过WAF脚本\nhttps://github.com/khalilbijjou/WAFNinja\nhttp命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）\nhttps://github.com/jkbrzt/httpie\n浏览器调试利器\nhttps://github.com/firebug/firebug\n一款开源WAF\nhttps://github.com/SpiderLabs/ModSecurity\nwindows域渗透工具：\nwindows渗透神器\nhttps://github.com/gentilkiwi/mimikatz\nPowershell渗透库合集\nhttps://github.com/PowerShellMafia/PowerSploit\nPowershell tools合集\nhttps://github.com/clymb3r/PowerShell\nFuzz:\nWeb向Fuzz工具\nhttps://github.com/xmendez/wfuzz\nHTTP暴力破解，撞库攻击脚本\nhttps://github.com/lijiejie/htpwdScan\n漏洞利用及攻击框架：\nmsf\nhttps://github.com/rapid7/metasploit-framework\nPoc调用框架，可加载Pocsuite,Tangscan，Beebeeto等\nhttps://github.com/erevus-cn/pocscan\nPocsuite\nhttps://github.com/knownsec/Pocsuite\nBeebeeto\nhttps://github.com/n0tr00t/Beebeeto-framework\n漏洞POC&EXP:\nExploitDB官方git版本\nhttps://github.com/offensive-security/exploit-database\nphp漏洞代码分析\nhttps://github.com/80vul/phpcodz\nSimple test for CVE-2016-2107\nhttps://github.com/FiloSottile/CVE-2016-2107\nCVE-2015-7547 POC\nhttps://github.com/fjserna/CVE-2015-7547\nJAVA反序列化POC生成工具\nhttps://github.com/frohoff/ysoserial\nJAVA反序列化EXP\nhttps://github.com/foxglovesec/JavaUnserializeExploits\nJenkins CommonCollections EXP\nhttps://github.com/CaledoniaProject/jenkins-cli-exploit\nCVE-2015-2426 EXP (windows内核提权)\nhttps://github.com/vlad902/hacking-team-windows-kernel-lpe\nuse docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)\nhttps://github.com/hxer/vulnapp\nphp7缓存覆写漏洞Demo及相关工具\nhttps://github.com/GoSecure/php7-opcache-override\nXcodeGhost木马样本\nhttps://github.com/XcodeGhostSource/XcodeGhost\n中间人攻击及钓鱼\n中间人攻击框架\nhttps://github.com/secretsquirrel/the-backdoor-factory\nhttps://github.com/secretsquirrel/BDFProxy\nhttps://github.com/byt3bl33d3r/MITMf\nInject code, jam wifi, and spy on wifi users\nhttps://github.com/DanMcInerney/LANs.py\n可扩展的中间人代理工具\nhttps://github.com/intrepidusgroup/mallory\nwifi钓鱼\nhttps://github.com/sophron/wifiphisher\n密码破解：\n密码破解工具\nhttps://github.com/shinnok/johnny\n本地存储的各类密码提取利器\nhttps://github.com/AlessandroZ/LaZagne\n二进制及代码分析工具：\n二进制分析工具\nhttps://github.com/devttys0/binwalk\n系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息\nhttps://github.com/quarkslab/binmap\nrp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn't support the FAT binaries) x86/x64 binaries.\nhttps://github.com/0vercl0k/rp\nWindows Exploit Development工具\nhttps://github.com/lillypad/badger\n二进制静态分析工具（python）\nhttps://github.com/bdcht/amoco\nPython Exploit Development Assistance for GDB\nhttps://github.com/longld/peda\n对BillGates Linux Botnet系木马活动的监控工具\nhttps://github.com/ValdikSS/billgates-botnet-tracker\n木马配置参数提取工具\nhttps://github.com/kevthehermit/RATDecoders\nShellphish编写的二进制分析工具（CTF向）\nhttps://github.com/angr/angr\n针对python的静态代码分析工具\nhttps://github.com/yinwang0/pysonar2\n一个自动化的脚本（shell）分析工具，用来给出警告和建议\nhttps://github.com/koalaman/shellcheck\n基于AST变换的简易Javascript反混淆辅助工具\nhttps://github.com/ChiChou/etacsufbo\nEXP编写框架及工具：\n二进制EXP编写工具\nhttps://github.com/t00sh/rop-tool\nCTF Pwn 类题目脚本编写框架\nhttps://github.com/Gallopsled/pwntools\nan easy-to-use io library for pwning development\nhttps://github.com/zTrix/zio\n跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）\nhttps://github.com/frida/frida\n隐写：\n隐写检测工具\nhttps://github.com/abeluck/stegdetect\n各类安全资料:\n域渗透教程\nhttps://github.com/l3m0n/pentest_study\npython security教程（原文链接http://www.primalsecurity.net/tutorials/python-tutorials/）\nhttps://github.com/smartFlash/pySecurity\ndata_hacking合集\nhttps://github.com/ClickSecurity/data_hacking\nmobile-security-wiki\nhttps://github.com/exploitprotocol/mobile-security-wiki\n书籍《reverse-engineering-for-beginners》\nhttps://github.com/veficos/reverse-engineering-for-beginners\n一些信息安全标准及设备配置\nhttps://github.com/luyg24/IT_security\nAPT相关笔记\nhttps://github.com/kbandla/APTnotes\nKcon资料\nhttps://github.com/knownsec/KCon\nctf及黑客资源合集\nhttps://github.com/bt3gl/My-Gray-Hacker-Resources\nctf和安全工具大合集\nhttps://github.com/zardus/ctf-tools\n《DO NOT FUCK WITH A HACKER》\nhttps://github.com/citypw/DNFWAH\n各类CTF资源\n近年ctf writeup大全\nhttps://github.com/ctfs/write-ups-2016\nhttps://github.com/ctfs/write-ups-2015\nhttps://github.com/ctfs/write-ups-2014\nfbctf竞赛平台Demo\nhttps://github.com/facebook/fbctf\nctf Resources\nhttps://github.com/ctfs/resources\n各类编程资源:\n大礼包（什么都有）\nhttps://github.com/bayandin/awesome-awesomeness\nbash-handbook\nhttps://github.com/denysdovhan/bash-handbook\npython资源大全\nhttps://github.com/jobbole/awesome-python-cn\ngit学习资料\nhttps://github.com/xirong/my-git\n安卓开源代码解析\nhttps://github.com/android-cn/android-open-project-analysis\npython框架，库，资源大合集\nhttps://github.com/vinta/awesome-python\nJS 正则表达式库（用于简化构造复杂的JS正则表达式）\nhttps://github.com/VerbalExpressions/JSVerbalExpressions\nPython：\npython 正则表达式库（用于简化构造复杂的python正则表达式）\nhttps://github.com/VerbalExpressions/PythonVerbalExpressions\npython任务管理以及命令执行库\nhttps://github.com/pyinvoke/invoke\npython exe打包库\nhttps://github.com/pyinstaller/pyinstaller\npy3 爬虫框架\nhttps://github.com/orf/cyborg\n一个提供底层接口数据包编程和网络协议支持的python库\nhttps://github.com/CoreSecurity/impacket\npython requests 库\nhttps://github.com/kennethreitz/requests\npython 实用工具合集\nhttps://github.com/mahmoud/boltons\npython爬虫系统\nhttps://github.com/binux/pyspider\nctf向 python工具包\nhttps://github.com/P1kachu/v0lt\n科学上网：\n科学上网工具\nhttps://github.com/XX-net/XX-Net\n福利：\n微信自动抢红包动态库\nhttps://github.com/east520/AutoGetRedEnv\n微信抢红包插件（安卓版）\nhttps://github.com/geeeeeeeeek/WeChatLuckyMoney\n神器\nhttps://github.com/yangyangwithgnu/hardseed\n本文出自 RedFree's Blog，转载时请注明出处及相应链接。\n本文永久链接: http://py4.me/blog/?p=124\n","source":"_posts/Github-安全类Repo收集整理-转载.md","raw":"---\ntitle: 'Github 安全类Repo收集整理[转载]'\ndate: 2017-09-11 11:32:59\ntags: [\"github\",\"安全\"]\ncategories: \"github\"\n---\n\n漏洞及渗透练习平台：\nWebGoat漏洞练习环境\nhttps://github.com/WebGoat/WebGoat\nhttps://github.com/WebGoat/WebGoat-Legacy\nDamn Vulnerable Web Application(漏洞练习平台)\nhttps://github.com/RandomStorm/DVWA\n数据库注入练习平台  \nhttps://github.com/Audi-1/sqli-labs\n用node编写的漏洞练习平台，like OWASP Node Goat\nhttps://github.com/cr0hn/vulnerable-node\n\n<!-- more -->\n花式扫描器 ：\n端口扫描器Nmap\nhttps://github.com/nmap/nmap\n本地网络扫描器\nhttps://github.com/SkyLined/LocalNetworkScanner\n子域名扫描器\nhttps://github.com/lijiejie/subDomainsBrute\n漏洞路由扫描器\nhttps://github.com/jh00nbr/Routerhunter-2.0\n迷你批量信息泄漏扫描脚本\nhttps://github.com/lijiejie/BBScan\nWaf类型检测工具\nhttps://github.com/EnableSecurity/wafw00f\n信息搜集工具 :\n社工插件，可查找以email、phone、username的注册的所有网站账号信息\nhttps://github.com/n0tr00t/Sreg\nGithub信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息\nhttps://github.com/sea-god/gitscan\ngithub Repo信息搜集工具\nhttps://github.com/metac0rtex/GitHarvester\nWEB：\nwebshell大合集\nhttps://github.com/tennc/webshell\n渗透以及web攻击脚本\nhttps://github.com/brianwrf/hackUtils\nweb渗透小工具大合集\nhttps://github.com/rootphantomer/hack_tools_for_me\nXSS数据接收平台\nhttps://github.com/firesunCN/BlueLotus_XSSReceiver\nXSS与CSRF工具\nhttps://github.com/evilcos/xssor\nShort for command injection exploiter，web向命令注入检测工具\nhttps://github.com/stasinopoulos/commix\n数据库注入工具\nhttps://github.com/sqlmapproject/sqlmap\nWeb代理，通过加载sqlmap api进行sqli实时检测\nhttps://github.com/zt2/sqli-hunter\n新版中国菜刀\nhttps://github.com/Chora10/Cknife\n.git泄露利用EXP\nhttps://github.com/lijiejie/GitHack\n浏览器攻击框架\nhttps://github.com/beefproject/beef\n自动化绕过WAF脚本\nhttps://github.com/khalilbijjou/WAFNinja\nhttp命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）\nhttps://github.com/jkbrzt/httpie\n浏览器调试利器\nhttps://github.com/firebug/firebug\n一款开源WAF\nhttps://github.com/SpiderLabs/ModSecurity\nwindows域渗透工具：\nwindows渗透神器\nhttps://github.com/gentilkiwi/mimikatz\nPowershell渗透库合集\nhttps://github.com/PowerShellMafia/PowerSploit\nPowershell tools合集\nhttps://github.com/clymb3r/PowerShell\nFuzz:\nWeb向Fuzz工具\nhttps://github.com/xmendez/wfuzz\nHTTP暴力破解，撞库攻击脚本\nhttps://github.com/lijiejie/htpwdScan\n漏洞利用及攻击框架：\nmsf\nhttps://github.com/rapid7/metasploit-framework\nPoc调用框架，可加载Pocsuite,Tangscan，Beebeeto等\nhttps://github.com/erevus-cn/pocscan\nPocsuite\nhttps://github.com/knownsec/Pocsuite\nBeebeeto\nhttps://github.com/n0tr00t/Beebeeto-framework\n漏洞POC&EXP:\nExploitDB官方git版本\nhttps://github.com/offensive-security/exploit-database\nphp漏洞代码分析\nhttps://github.com/80vul/phpcodz\nSimple test for CVE-2016-2107\nhttps://github.com/FiloSottile/CVE-2016-2107\nCVE-2015-7547 POC\nhttps://github.com/fjserna/CVE-2015-7547\nJAVA反序列化POC生成工具\nhttps://github.com/frohoff/ysoserial\nJAVA反序列化EXP\nhttps://github.com/foxglovesec/JavaUnserializeExploits\nJenkins CommonCollections EXP\nhttps://github.com/CaledoniaProject/jenkins-cli-exploit\nCVE-2015-2426 EXP (windows内核提权)\nhttps://github.com/vlad902/hacking-team-windows-kernel-lpe\nuse docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)\nhttps://github.com/hxer/vulnapp\nphp7缓存覆写漏洞Demo及相关工具\nhttps://github.com/GoSecure/php7-opcache-override\nXcodeGhost木马样本\nhttps://github.com/XcodeGhostSource/XcodeGhost\n中间人攻击及钓鱼\n中间人攻击框架\nhttps://github.com/secretsquirrel/the-backdoor-factory\nhttps://github.com/secretsquirrel/BDFProxy\nhttps://github.com/byt3bl33d3r/MITMf\nInject code, jam wifi, and spy on wifi users\nhttps://github.com/DanMcInerney/LANs.py\n可扩展的中间人代理工具\nhttps://github.com/intrepidusgroup/mallory\nwifi钓鱼\nhttps://github.com/sophron/wifiphisher\n密码破解：\n密码破解工具\nhttps://github.com/shinnok/johnny\n本地存储的各类密码提取利器\nhttps://github.com/AlessandroZ/LaZagne\n二进制及代码分析工具：\n二进制分析工具\nhttps://github.com/devttys0/binwalk\n系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息\nhttps://github.com/quarkslab/binmap\nrp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn't support the FAT binaries) x86/x64 binaries.\nhttps://github.com/0vercl0k/rp\nWindows Exploit Development工具\nhttps://github.com/lillypad/badger\n二进制静态分析工具（python）\nhttps://github.com/bdcht/amoco\nPython Exploit Development Assistance for GDB\nhttps://github.com/longld/peda\n对BillGates Linux Botnet系木马活动的监控工具\nhttps://github.com/ValdikSS/billgates-botnet-tracker\n木马配置参数提取工具\nhttps://github.com/kevthehermit/RATDecoders\nShellphish编写的二进制分析工具（CTF向）\nhttps://github.com/angr/angr\n针对python的静态代码分析工具\nhttps://github.com/yinwang0/pysonar2\n一个自动化的脚本（shell）分析工具，用来给出警告和建议\nhttps://github.com/koalaman/shellcheck\n基于AST变换的简易Javascript反混淆辅助工具\nhttps://github.com/ChiChou/etacsufbo\nEXP编写框架及工具：\n二进制EXP编写工具\nhttps://github.com/t00sh/rop-tool\nCTF Pwn 类题目脚本编写框架\nhttps://github.com/Gallopsled/pwntools\nan easy-to-use io library for pwning development\nhttps://github.com/zTrix/zio\n跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）\nhttps://github.com/frida/frida\n隐写：\n隐写检测工具\nhttps://github.com/abeluck/stegdetect\n各类安全资料:\n域渗透教程\nhttps://github.com/l3m0n/pentest_study\npython security教程（原文链接http://www.primalsecurity.net/tutorials/python-tutorials/）\nhttps://github.com/smartFlash/pySecurity\ndata_hacking合集\nhttps://github.com/ClickSecurity/data_hacking\nmobile-security-wiki\nhttps://github.com/exploitprotocol/mobile-security-wiki\n书籍《reverse-engineering-for-beginners》\nhttps://github.com/veficos/reverse-engineering-for-beginners\n一些信息安全标准及设备配置\nhttps://github.com/luyg24/IT_security\nAPT相关笔记\nhttps://github.com/kbandla/APTnotes\nKcon资料\nhttps://github.com/knownsec/KCon\nctf及黑客资源合集\nhttps://github.com/bt3gl/My-Gray-Hacker-Resources\nctf和安全工具大合集\nhttps://github.com/zardus/ctf-tools\n《DO NOT FUCK WITH A HACKER》\nhttps://github.com/citypw/DNFWAH\n各类CTF资源\n近年ctf writeup大全\nhttps://github.com/ctfs/write-ups-2016\nhttps://github.com/ctfs/write-ups-2015\nhttps://github.com/ctfs/write-ups-2014\nfbctf竞赛平台Demo\nhttps://github.com/facebook/fbctf\nctf Resources\nhttps://github.com/ctfs/resources\n各类编程资源:\n大礼包（什么都有）\nhttps://github.com/bayandin/awesome-awesomeness\nbash-handbook\nhttps://github.com/denysdovhan/bash-handbook\npython资源大全\nhttps://github.com/jobbole/awesome-python-cn\ngit学习资料\nhttps://github.com/xirong/my-git\n安卓开源代码解析\nhttps://github.com/android-cn/android-open-project-analysis\npython框架，库，资源大合集\nhttps://github.com/vinta/awesome-python\nJS 正则表达式库（用于简化构造复杂的JS正则表达式）\nhttps://github.com/VerbalExpressions/JSVerbalExpressions\nPython：\npython 正则表达式库（用于简化构造复杂的python正则表达式）\nhttps://github.com/VerbalExpressions/PythonVerbalExpressions\npython任务管理以及命令执行库\nhttps://github.com/pyinvoke/invoke\npython exe打包库\nhttps://github.com/pyinstaller/pyinstaller\npy3 爬虫框架\nhttps://github.com/orf/cyborg\n一个提供底层接口数据包编程和网络协议支持的python库\nhttps://github.com/CoreSecurity/impacket\npython requests 库\nhttps://github.com/kennethreitz/requests\npython 实用工具合集\nhttps://github.com/mahmoud/boltons\npython爬虫系统\nhttps://github.com/binux/pyspider\nctf向 python工具包\nhttps://github.com/P1kachu/v0lt\n科学上网：\n科学上网工具\nhttps://github.com/XX-net/XX-Net\n福利：\n微信自动抢红包动态库\nhttps://github.com/east520/AutoGetRedEnv\n微信抢红包插件（安卓版）\nhttps://github.com/geeeeeeeeek/WeChatLuckyMoney\n神器\nhttps://github.com/yangyangwithgnu/hardseed\n本文出自 RedFree's Blog，转载时请注明出处及相应链接。\n本文永久链接: http://py4.me/blog/?p=124\n","slug":"Github-安全类Repo收集整理-转载","published":1,"updated":"2017-09-11T03:36:59.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujt000fpev2uvxfp9r2","content":"<p>漏洞及渗透练习平台：<br>WebGoat漏洞练习环境<br><a href=\"https://github.com/WebGoat/WebGoat\" target=\"_blank\" rel=\"noopener\">https://github.com/WebGoat/WebGoat</a><br><a href=\"https://github.com/WebGoat/WebGoat-Legacy\" target=\"_blank\" rel=\"noopener\">https://github.com/WebGoat/WebGoat-Legacy</a><br>Damn Vulnerable Web Application(漏洞练习平台)<br><a href=\"https://github.com/RandomStorm/DVWA\" target=\"_blank\" rel=\"noopener\">https://github.com/RandomStorm/DVWA</a><br>数据库注入练习平台<br><a href=\"https://github.com/Audi-1/sqli-labs\" target=\"_blank\" rel=\"noopener\">https://github.com/Audi-1/sqli-labs</a><br>用node编写的漏洞练习平台，like OWASP Node Goat<br><a href=\"https://github.com/cr0hn/vulnerable-node\" target=\"_blank\" rel=\"noopener\">https://github.com/cr0hn/vulnerable-node</a></p>\n<a id=\"more\"></a>\n<p>花式扫描器 ：<br>端口扫描器Nmap<br><a href=\"https://github.com/nmap/nmap\" target=\"_blank\" rel=\"noopener\">https://github.com/nmap/nmap</a><br>本地网络扫描器<br><a href=\"https://github.com/SkyLined/LocalNetworkScanner\" target=\"_blank\" rel=\"noopener\">https://github.com/SkyLined/LocalNetworkScanner</a><br>子域名扫描器<br><a href=\"https://github.com/lijiejie/subDomainsBrute\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/subDomainsBrute</a><br>漏洞路由扫描器<br><a href=\"https://github.com/jh00nbr/Routerhunter-2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/jh00nbr/Routerhunter-2.0</a><br>迷你批量信息泄漏扫描脚本<br><a href=\"https://github.com/lijiejie/BBScan\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/BBScan</a><br>Waf类型检测工具<br><a href=\"https://github.com/EnableSecurity/wafw00f\" target=\"_blank\" rel=\"noopener\">https://github.com/EnableSecurity/wafw00f</a><br>信息搜集工具 :<br>社工插件，可查找以email、phone、username的注册的所有网站账号信息<br><a href=\"https://github.com/n0tr00t/Sreg\" target=\"_blank\" rel=\"noopener\">https://github.com/n0tr00t/Sreg</a><br>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息<br><a href=\"https://github.com/sea-god/gitscan\" target=\"_blank\" rel=\"noopener\">https://github.com/sea-god/gitscan</a><br>github Repo信息搜集工具<br><a href=\"https://github.com/metac0rtex/GitHarvester\" target=\"_blank\" rel=\"noopener\">https://github.com/metac0rtex/GitHarvester</a><br>WEB：<br>webshell大合集<br><a href=\"https://github.com/tennc/webshell\" target=\"_blank\" rel=\"noopener\">https://github.com/tennc/webshell</a><br>渗透以及web攻击脚本<br><a href=\"https://github.com/brianwrf/hackUtils\" target=\"_blank\" rel=\"noopener\">https://github.com/brianwrf/hackUtils</a><br>web渗透小工具大合集<br><a href=\"https://github.com/rootphantomer/hack_tools_for_me\" target=\"_blank\" rel=\"noopener\">https://github.com/rootphantomer/hack_tools_for_me</a><br>XSS数据接收平台<br><a href=\"https://github.com/firesunCN/BlueLotus_XSSReceiver\" target=\"_blank\" rel=\"noopener\">https://github.com/firesunCN/BlueLotus_XSSReceiver</a><br>XSS与CSRF工具<br><a href=\"https://github.com/evilcos/xssor\" target=\"_blank\" rel=\"noopener\">https://github.com/evilcos/xssor</a><br>Short for command injection exploiter，web向命令注入检测工具<br><a href=\"https://github.com/stasinopoulos/commix\" target=\"_blank\" rel=\"noopener\">https://github.com/stasinopoulos/commix</a><br>数据库注入工具<br><a href=\"https://github.com/sqlmapproject/sqlmap\" target=\"_blank\" rel=\"noopener\">https://github.com/sqlmapproject/sqlmap</a><br>Web代理，通过加载sqlmap api进行sqli实时检测<br><a href=\"https://github.com/zt2/sqli-hunter\" target=\"_blank\" rel=\"noopener\">https://github.com/zt2/sqli-hunter</a><br>新版中国菜刀<br><a href=\"https://github.com/Chora10/Cknife\" target=\"_blank\" rel=\"noopener\">https://github.com/Chora10/Cknife</a><br>.git泄露利用EXP<br><a href=\"https://github.com/lijiejie/GitHack\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/GitHack</a><br>浏览器攻击框架<br><a href=\"https://github.com/beefproject/beef\" target=\"_blank\" rel=\"noopener\">https://github.com/beefproject/beef</a><br>自动化绕过WAF脚本<br><a href=\"https://github.com/khalilbijjou/WAFNinja\" target=\"_blank\" rel=\"noopener\">https://github.com/khalilbijjou/WAFNinja</a><br>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）<br><a href=\"https://github.com/jkbrzt/httpie\" target=\"_blank\" rel=\"noopener\">https://github.com/jkbrzt/httpie</a><br>浏览器调试利器<br><a href=\"https://github.com/firebug/firebug\" target=\"_blank\" rel=\"noopener\">https://github.com/firebug/firebug</a><br>一款开源WAF<br><a href=\"https://github.com/SpiderLabs/ModSecurity\" target=\"_blank\" rel=\"noopener\">https://github.com/SpiderLabs/ModSecurity</a><br>windows域渗透工具：<br>windows渗透神器<br><a href=\"https://github.com/gentilkiwi/mimikatz\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/mimikatz</a><br>Powershell渗透库合集<br><a href=\"https://github.com/PowerShellMafia/PowerSploit\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit</a><br>Powershell tools合集<br><a href=\"https://github.com/clymb3r/PowerShell\" target=\"_blank\" rel=\"noopener\">https://github.com/clymb3r/PowerShell</a><br>Fuzz:<br>Web向Fuzz工具<br><a href=\"https://github.com/xmendez/wfuzz\" target=\"_blank\" rel=\"noopener\">https://github.com/xmendez/wfuzz</a><br>HTTP暴力破解，撞库攻击脚本<br><a href=\"https://github.com/lijiejie/htpwdScan\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/htpwdScan</a><br>漏洞利用及攻击框架：<br>msf<br><a href=\"https://github.com/rapid7/metasploit-framework\" target=\"_blank\" rel=\"noopener\">https://github.com/rapid7/metasploit-framework</a><br>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等<br><a href=\"https://github.com/erevus-cn/pocscan\" target=\"_blank\" rel=\"noopener\">https://github.com/erevus-cn/pocscan</a><br>Pocsuite<br><a href=\"https://github.com/knownsec/Pocsuite\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/Pocsuite</a><br>Beebeeto<br><a href=\"https://github.com/n0tr00t/Beebeeto-framework\" target=\"_blank\" rel=\"noopener\">https://github.com/n0tr00t/Beebeeto-framework</a><br>漏洞POC&amp;EXP:<br>ExploitDB官方git版本<br><a href=\"https://github.com/offensive-security/exploit-database\" target=\"_blank\" rel=\"noopener\">https://github.com/offensive-security/exploit-database</a><br>php漏洞代码分析<br><a href=\"https://github.com/80vul/phpcodz\" target=\"_blank\" rel=\"noopener\">https://github.com/80vul/phpcodz</a><br>Simple test for CVE-2016-2107<br><a href=\"https://github.com/FiloSottile/CVE-2016-2107\" target=\"_blank\" rel=\"noopener\">https://github.com/FiloSottile/CVE-2016-2107</a><br>CVE-2015-7547 POC<br><a href=\"https://github.com/fjserna/CVE-2015-7547\" target=\"_blank\" rel=\"noopener\">https://github.com/fjserna/CVE-2015-7547</a><br>JAVA反序列化POC生成工具<br><a href=\"https://github.com/frohoff/ysoserial\" target=\"_blank\" rel=\"noopener\">https://github.com/frohoff/ysoserial</a><br>JAVA反序列化EXP<br><a href=\"https://github.com/foxglovesec/JavaUnserializeExploits\" target=\"_blank\" rel=\"noopener\">https://github.com/foxglovesec/JavaUnserializeExploits</a><br>Jenkins CommonCollections EXP<br><a href=\"https://github.com/CaledoniaProject/jenkins-cli-exploit\" target=\"_blank\" rel=\"noopener\">https://github.com/CaledoniaProject/jenkins-cli-exploit</a><br>CVE-2015-2426 EXP (windows内核提权)<br><a href=\"https://github.com/vlad902/hacking-team-windows-kernel-lpe\" target=\"_blank\" rel=\"noopener\">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a><br>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)<br><a href=\"https://github.com/hxer/vulnapp\" target=\"_blank\" rel=\"noopener\">https://github.com/hxer/vulnapp</a><br>php7缓存覆写漏洞Demo及相关工具<br><a href=\"https://github.com/GoSecure/php7-opcache-override\" target=\"_blank\" rel=\"noopener\">https://github.com/GoSecure/php7-opcache-override</a><br>XcodeGhost木马样本<br><a href=\"https://github.com/XcodeGhostSource/XcodeGhost\" target=\"_blank\" rel=\"noopener\">https://github.com/XcodeGhostSource/XcodeGhost</a><br>中间人攻击及钓鱼<br>中间人攻击框架<br><a href=\"https://github.com/secretsquirrel/the-backdoor-factory\" target=\"_blank\" rel=\"noopener\">https://github.com/secretsquirrel/the-backdoor-factory</a><br><a href=\"https://github.com/secretsquirrel/BDFProxy\" target=\"_blank\" rel=\"noopener\">https://github.com/secretsquirrel/BDFProxy</a><br><a href=\"https://github.com/byt3bl33d3r/MITMf\" target=\"_blank\" rel=\"noopener\">https://github.com/byt3bl33d3r/MITMf</a><br>Inject code, jam wifi, and spy on wifi users<br><a href=\"https://github.com/DanMcInerney/LANs.py\" target=\"_blank\" rel=\"noopener\">https://github.com/DanMcInerney/LANs.py</a><br>可扩展的中间人代理工具<br><a href=\"https://github.com/intrepidusgroup/mallory\" target=\"_blank\" rel=\"noopener\">https://github.com/intrepidusgroup/mallory</a><br>wifi钓鱼<br><a href=\"https://github.com/sophron/wifiphisher\" target=\"_blank\" rel=\"noopener\">https://github.com/sophron/wifiphisher</a><br>密码破解：<br>密码破解工具<br><a href=\"https://github.com/shinnok/johnny\" target=\"_blank\" rel=\"noopener\">https://github.com/shinnok/johnny</a><br>本地存储的各类密码提取利器<br><a href=\"https://github.com/AlessandroZ/LaZagne\" target=\"_blank\" rel=\"noopener\">https://github.com/AlessandroZ/LaZagne</a><br>二进制及代码分析工具：<br>二进制分析工具<br><a href=\"https://github.com/devttys0/binwalk\" target=\"_blank\" rel=\"noopener\">https://github.com/devttys0/binwalk</a><br>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息<br><a href=\"https://github.com/quarkslab/binmap\" target=\"_blank\" rel=\"noopener\">https://github.com/quarkslab/binmap</a><br>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.<br><a href=\"https://github.com/0vercl0k/rp\" target=\"_blank\" rel=\"noopener\">https://github.com/0vercl0k/rp</a><br>Windows Exploit Development工具<br><a href=\"https://github.com/lillypad/badger\" target=\"_blank\" rel=\"noopener\">https://github.com/lillypad/badger</a><br>二进制静态分析工具（python）<br><a href=\"https://github.com/bdcht/amoco\" target=\"_blank\" rel=\"noopener\">https://github.com/bdcht/amoco</a><br>Python Exploit Development Assistance for GDB<br><a href=\"https://github.com/longld/peda\" target=\"_blank\" rel=\"noopener\">https://github.com/longld/peda</a><br>对BillGates Linux Botnet系木马活动的监控工具<br><a href=\"https://github.com/ValdikSS/billgates-botnet-tracker\" target=\"_blank\" rel=\"noopener\">https://github.com/ValdikSS/billgates-botnet-tracker</a><br>木马配置参数提取工具<br><a href=\"https://github.com/kevthehermit/RATDecoders\" target=\"_blank\" rel=\"noopener\">https://github.com/kevthehermit/RATDecoders</a><br>Shellphish编写的二进制分析工具（CTF向）<br><a href=\"https://github.com/angr/angr\" target=\"_blank\" rel=\"noopener\">https://github.com/angr/angr</a><br>针对python的静态代码分析工具<br><a href=\"https://github.com/yinwang0/pysonar2\" target=\"_blank\" rel=\"noopener\">https://github.com/yinwang0/pysonar2</a><br>一个自动化的脚本（shell）分析工具，用来给出警告和建议<br><a href=\"https://github.com/koalaman/shellcheck\" target=\"_blank\" rel=\"noopener\">https://github.com/koalaman/shellcheck</a><br>基于AST变换的简易Javascript反混淆辅助工具<br><a href=\"https://github.com/ChiChou/etacsufbo\" target=\"_blank\" rel=\"noopener\">https://github.com/ChiChou/etacsufbo</a><br>EXP编写框架及工具：<br>二进制EXP编写工具<br><a href=\"https://github.com/t00sh/rop-tool\" target=\"_blank\" rel=\"noopener\">https://github.com/t00sh/rop-tool</a><br>CTF Pwn 类题目脚本编写框架<br><a href=\"https://github.com/Gallopsled/pwntools\" target=\"_blank\" rel=\"noopener\">https://github.com/Gallopsled/pwntools</a><br>an easy-to-use io library for pwning development<br><a href=\"https://github.com/zTrix/zio\" target=\"_blank\" rel=\"noopener\">https://github.com/zTrix/zio</a><br>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）<br><a href=\"https://github.com/frida/frida\" target=\"_blank\" rel=\"noopener\">https://github.com/frida/frida</a><br>隐写：<br>隐写检测工具<br><a href=\"https://github.com/abeluck/stegdetect\" target=\"_blank\" rel=\"noopener\">https://github.com/abeluck/stegdetect</a><br>各类安全资料:<br>域渗透教程<br><a href=\"https://github.com/l3m0n/pentest_study\" target=\"_blank\" rel=\"noopener\">https://github.com/l3m0n/pentest_study</a><br>python security教程（原文链接<a href=\"http://www.primalsecurity.net/tutorials/python-tutorials/）\" target=\"_blank\" rel=\"noopener\">http://www.primalsecurity.net/tutorials/python-tutorials/）</a><br><a href=\"https://github.com/smartFlash/pySecurity\" target=\"_blank\" rel=\"noopener\">https://github.com/smartFlash/pySecurity</a><br>data_hacking合集<br><a href=\"https://github.com/ClickSecurity/data_hacking\" target=\"_blank\" rel=\"noopener\">https://github.com/ClickSecurity/data_hacking</a><br>mobile-security-wiki<br><a href=\"https://github.com/exploitprotocol/mobile-security-wiki\" target=\"_blank\" rel=\"noopener\">https://github.com/exploitprotocol/mobile-security-wiki</a><br>书籍《reverse-engineering-for-beginners》<br><a href=\"https://github.com/veficos/reverse-engineering-for-beginners\" target=\"_blank\" rel=\"noopener\">https://github.com/veficos/reverse-engineering-for-beginners</a><br>一些信息安全标准及设备配置<br><a href=\"https://github.com/luyg24/IT_security\" target=\"_blank\" rel=\"noopener\">https://github.com/luyg24/IT_security</a><br>APT相关笔记<br><a href=\"https://github.com/kbandla/APTnotes\" target=\"_blank\" rel=\"noopener\">https://github.com/kbandla/APTnotes</a><br>Kcon资料<br><a href=\"https://github.com/knownsec/KCon\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/KCon</a><br>ctf及黑客资源合集<br><a href=\"https://github.com/bt3gl/My-Gray-Hacker-Resources\" target=\"_blank\" rel=\"noopener\">https://github.com/bt3gl/My-Gray-Hacker-Resources</a><br>ctf和安全工具大合集<br><a href=\"https://github.com/zardus/ctf-tools\" target=\"_blank\" rel=\"noopener\">https://github.com/zardus/ctf-tools</a><br>《DO NOT FUCK WITH A HACKER》<br><a href=\"https://github.com/citypw/DNFWAH\" target=\"_blank\" rel=\"noopener\">https://github.com/citypw/DNFWAH</a><br>各类CTF资源<br>近年ctf writeup大全<br><a href=\"https://github.com/ctfs/write-ups-2016\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2016</a><br><a href=\"https://github.com/ctfs/write-ups-2015\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2015</a><br><a href=\"https://github.com/ctfs/write-ups-2014\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2014</a><br>fbctf竞赛平台Demo<br><a href=\"https://github.com/facebook/fbctf\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/fbctf</a><br>ctf Resources<br><a href=\"https://github.com/ctfs/resources\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/resources</a><br>各类编程资源:<br>大礼包（什么都有）<br><a href=\"https://github.com/bayandin/awesome-awesomeness\" target=\"_blank\" rel=\"noopener\">https://github.com/bayandin/awesome-awesomeness</a><br>bash-handbook<br><a href=\"https://github.com/denysdovhan/bash-handbook\" target=\"_blank\" rel=\"noopener\">https://github.com/denysdovhan/bash-handbook</a><br>python资源大全<br><a href=\"https://github.com/jobbole/awesome-python-cn\" target=\"_blank\" rel=\"noopener\">https://github.com/jobbole/awesome-python-cn</a><br>git学习资料<br><a href=\"https://github.com/xirong/my-git\" target=\"_blank\" rel=\"noopener\">https://github.com/xirong/my-git</a><br>安卓开源代码解析<br><a href=\"https://github.com/android-cn/android-open-project-analysis\" target=\"_blank\" rel=\"noopener\">https://github.com/android-cn/android-open-project-analysis</a><br>python框架，库，资源大合集<br><a href=\"https://github.com/vinta/awesome-python\" target=\"_blank\" rel=\"noopener\">https://github.com/vinta/awesome-python</a><br>JS 正则表达式库（用于简化构造复杂的JS正则表达式）<br><a href=\"https://github.com/VerbalExpressions/JSVerbalExpressions\" target=\"_blank\" rel=\"noopener\">https://github.com/VerbalExpressions/JSVerbalExpressions</a><br>Python：<br>python 正则表达式库（用于简化构造复杂的python正则表达式）<br><a href=\"https://github.com/VerbalExpressions/PythonVerbalExpressions\" target=\"_blank\" rel=\"noopener\">https://github.com/VerbalExpressions/PythonVerbalExpressions</a><br>python任务管理以及命令执行库<br><a href=\"https://github.com/pyinvoke/invoke\" target=\"_blank\" rel=\"noopener\">https://github.com/pyinvoke/invoke</a><br>python exe打包库<br><a href=\"https://github.com/pyinstaller/pyinstaller\" target=\"_blank\" rel=\"noopener\">https://github.com/pyinstaller/pyinstaller</a><br>py3 爬虫框架<br><a href=\"https://github.com/orf/cyborg\" target=\"_blank\" rel=\"noopener\">https://github.com/orf/cyborg</a><br>一个提供底层接口数据包编程和网络协议支持的python库<br><a href=\"https://github.com/CoreSecurity/impacket\" target=\"_blank\" rel=\"noopener\">https://github.com/CoreSecurity/impacket</a><br>python requests 库<br><a href=\"https://github.com/kennethreitz/requests\" target=\"_blank\" rel=\"noopener\">https://github.com/kennethreitz/requests</a><br>python 实用工具合集<br><a href=\"https://github.com/mahmoud/boltons\" target=\"_blank\" rel=\"noopener\">https://github.com/mahmoud/boltons</a><br>python爬虫系统<br><a href=\"https://github.com/binux/pyspider\" target=\"_blank\" rel=\"noopener\">https://github.com/binux/pyspider</a><br>ctf向 python工具包<br><a href=\"https://github.com/P1kachu/v0lt\" target=\"_blank\" rel=\"noopener\">https://github.com/P1kachu/v0lt</a><br>科学上网：<br>科学上网工具<br><a href=\"https://github.com/XX-net/XX-Net\" target=\"_blank\" rel=\"noopener\">https://github.com/XX-net/XX-Net</a><br>福利：<br>微信自动抢红包动态库<br><a href=\"https://github.com/east520/AutoGetRedEnv\" target=\"_blank\" rel=\"noopener\">https://github.com/east520/AutoGetRedEnv</a><br>微信抢红包插件（安卓版）<br><a href=\"https://github.com/geeeeeeeeek/WeChatLuckyMoney\" target=\"_blank\" rel=\"noopener\">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a><br>神器<br><a href=\"https://github.com/yangyangwithgnu/hardseed\" target=\"_blank\" rel=\"noopener\">https://github.com/yangyangwithgnu/hardseed</a><br>本文出自 RedFree’s Blog，转载时请注明出处及相应链接。<br>本文永久链接: <a href=\"http://py4.me/blog/?p=124\" target=\"_blank\" rel=\"noopener\">http://py4.me/blog/?p=124</a></p>\n","site":{"data":{}},"excerpt":"<p>漏洞及渗透练习平台：<br>WebGoat漏洞练习环境<br><a href=\"https://github.com/WebGoat/WebGoat\" target=\"_blank\" rel=\"noopener\">https://github.com/WebGoat/WebGoat</a><br><a href=\"https://github.com/WebGoat/WebGoat-Legacy\" target=\"_blank\" rel=\"noopener\">https://github.com/WebGoat/WebGoat-Legacy</a><br>Damn Vulnerable Web Application(漏洞练习平台)<br><a href=\"https://github.com/RandomStorm/DVWA\" target=\"_blank\" rel=\"noopener\">https://github.com/RandomStorm/DVWA</a><br>数据库注入练习平台<br><a href=\"https://github.com/Audi-1/sqli-labs\" target=\"_blank\" rel=\"noopener\">https://github.com/Audi-1/sqli-labs</a><br>用node编写的漏洞练习平台，like OWASP Node Goat<br><a href=\"https://github.com/cr0hn/vulnerable-node\" target=\"_blank\" rel=\"noopener\">https://github.com/cr0hn/vulnerable-node</a></p>","more":"<p>花式扫描器 ：<br>端口扫描器Nmap<br><a href=\"https://github.com/nmap/nmap\" target=\"_blank\" rel=\"noopener\">https://github.com/nmap/nmap</a><br>本地网络扫描器<br><a href=\"https://github.com/SkyLined/LocalNetworkScanner\" target=\"_blank\" rel=\"noopener\">https://github.com/SkyLined/LocalNetworkScanner</a><br>子域名扫描器<br><a href=\"https://github.com/lijiejie/subDomainsBrute\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/subDomainsBrute</a><br>漏洞路由扫描器<br><a href=\"https://github.com/jh00nbr/Routerhunter-2.0\" target=\"_blank\" rel=\"noopener\">https://github.com/jh00nbr/Routerhunter-2.0</a><br>迷你批量信息泄漏扫描脚本<br><a href=\"https://github.com/lijiejie/BBScan\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/BBScan</a><br>Waf类型检测工具<br><a href=\"https://github.com/EnableSecurity/wafw00f\" target=\"_blank\" rel=\"noopener\">https://github.com/EnableSecurity/wafw00f</a><br>信息搜集工具 :<br>社工插件，可查找以email、phone、username的注册的所有网站账号信息<br><a href=\"https://github.com/n0tr00t/Sreg\" target=\"_blank\" rel=\"noopener\">https://github.com/n0tr00t/Sreg</a><br>Github信息搜集，可实时扫描查询git最新上传有关邮箱账号密码信息<br><a href=\"https://github.com/sea-god/gitscan\" target=\"_blank\" rel=\"noopener\">https://github.com/sea-god/gitscan</a><br>github Repo信息搜集工具<br><a href=\"https://github.com/metac0rtex/GitHarvester\" target=\"_blank\" rel=\"noopener\">https://github.com/metac0rtex/GitHarvester</a><br>WEB：<br>webshell大合集<br><a href=\"https://github.com/tennc/webshell\" target=\"_blank\" rel=\"noopener\">https://github.com/tennc/webshell</a><br>渗透以及web攻击脚本<br><a href=\"https://github.com/brianwrf/hackUtils\" target=\"_blank\" rel=\"noopener\">https://github.com/brianwrf/hackUtils</a><br>web渗透小工具大合集<br><a href=\"https://github.com/rootphantomer/hack_tools_for_me\" target=\"_blank\" rel=\"noopener\">https://github.com/rootphantomer/hack_tools_for_me</a><br>XSS数据接收平台<br><a href=\"https://github.com/firesunCN/BlueLotus_XSSReceiver\" target=\"_blank\" rel=\"noopener\">https://github.com/firesunCN/BlueLotus_XSSReceiver</a><br>XSS与CSRF工具<br><a href=\"https://github.com/evilcos/xssor\" target=\"_blank\" rel=\"noopener\">https://github.com/evilcos/xssor</a><br>Short for command injection exploiter，web向命令注入检测工具<br><a href=\"https://github.com/stasinopoulos/commix\" target=\"_blank\" rel=\"noopener\">https://github.com/stasinopoulos/commix</a><br>数据库注入工具<br><a href=\"https://github.com/sqlmapproject/sqlmap\" target=\"_blank\" rel=\"noopener\">https://github.com/sqlmapproject/sqlmap</a><br>Web代理，通过加载sqlmap api进行sqli实时检测<br><a href=\"https://github.com/zt2/sqli-hunter\" target=\"_blank\" rel=\"noopener\">https://github.com/zt2/sqli-hunter</a><br>新版中国菜刀<br><a href=\"https://github.com/Chora10/Cknife\" target=\"_blank\" rel=\"noopener\">https://github.com/Chora10/Cknife</a><br>.git泄露利用EXP<br><a href=\"https://github.com/lijiejie/GitHack\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/GitHack</a><br>浏览器攻击框架<br><a href=\"https://github.com/beefproject/beef\" target=\"_blank\" rel=\"noopener\">https://github.com/beefproject/beef</a><br>自动化绕过WAF脚本<br><a href=\"https://github.com/khalilbijjou/WAFNinja\" target=\"_blank\" rel=\"noopener\">https://github.com/khalilbijjou/WAFNinja</a><br>http命令行客户端，可以从命令行构造发送各种http请求（类似于Curl）<br><a href=\"https://github.com/jkbrzt/httpie\" target=\"_blank\" rel=\"noopener\">https://github.com/jkbrzt/httpie</a><br>浏览器调试利器<br><a href=\"https://github.com/firebug/firebug\" target=\"_blank\" rel=\"noopener\">https://github.com/firebug/firebug</a><br>一款开源WAF<br><a href=\"https://github.com/SpiderLabs/ModSecurity\" target=\"_blank\" rel=\"noopener\">https://github.com/SpiderLabs/ModSecurity</a><br>windows域渗透工具：<br>windows渗透神器<br><a href=\"https://github.com/gentilkiwi/mimikatz\" target=\"_blank\" rel=\"noopener\">https://github.com/gentilkiwi/mimikatz</a><br>Powershell渗透库合集<br><a href=\"https://github.com/PowerShellMafia/PowerSploit\" target=\"_blank\" rel=\"noopener\">https://github.com/PowerShellMafia/PowerSploit</a><br>Powershell tools合集<br><a href=\"https://github.com/clymb3r/PowerShell\" target=\"_blank\" rel=\"noopener\">https://github.com/clymb3r/PowerShell</a><br>Fuzz:<br>Web向Fuzz工具<br><a href=\"https://github.com/xmendez/wfuzz\" target=\"_blank\" rel=\"noopener\">https://github.com/xmendez/wfuzz</a><br>HTTP暴力破解，撞库攻击脚本<br><a href=\"https://github.com/lijiejie/htpwdScan\" target=\"_blank\" rel=\"noopener\">https://github.com/lijiejie/htpwdScan</a><br>漏洞利用及攻击框架：<br>msf<br><a href=\"https://github.com/rapid7/metasploit-framework\" target=\"_blank\" rel=\"noopener\">https://github.com/rapid7/metasploit-framework</a><br>Poc调用框架，可加载Pocsuite,Tangscan，Beebeeto等<br><a href=\"https://github.com/erevus-cn/pocscan\" target=\"_blank\" rel=\"noopener\">https://github.com/erevus-cn/pocscan</a><br>Pocsuite<br><a href=\"https://github.com/knownsec/Pocsuite\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/Pocsuite</a><br>Beebeeto<br><a href=\"https://github.com/n0tr00t/Beebeeto-framework\" target=\"_blank\" rel=\"noopener\">https://github.com/n0tr00t/Beebeeto-framework</a><br>漏洞POC&amp;EXP:<br>ExploitDB官方git版本<br><a href=\"https://github.com/offensive-security/exploit-database\" target=\"_blank\" rel=\"noopener\">https://github.com/offensive-security/exploit-database</a><br>php漏洞代码分析<br><a href=\"https://github.com/80vul/phpcodz\" target=\"_blank\" rel=\"noopener\">https://github.com/80vul/phpcodz</a><br>Simple test for CVE-2016-2107<br><a href=\"https://github.com/FiloSottile/CVE-2016-2107\" target=\"_blank\" rel=\"noopener\">https://github.com/FiloSottile/CVE-2016-2107</a><br>CVE-2015-7547 POC<br><a href=\"https://github.com/fjserna/CVE-2015-7547\" target=\"_blank\" rel=\"noopener\">https://github.com/fjserna/CVE-2015-7547</a><br>JAVA反序列化POC生成工具<br><a href=\"https://github.com/frohoff/ysoserial\" target=\"_blank\" rel=\"noopener\">https://github.com/frohoff/ysoserial</a><br>JAVA反序列化EXP<br><a href=\"https://github.com/foxglovesec/JavaUnserializeExploits\" target=\"_blank\" rel=\"noopener\">https://github.com/foxglovesec/JavaUnserializeExploits</a><br>Jenkins CommonCollections EXP<br><a href=\"https://github.com/CaledoniaProject/jenkins-cli-exploit\" target=\"_blank\" rel=\"noopener\">https://github.com/CaledoniaProject/jenkins-cli-exploit</a><br>CVE-2015-2426 EXP (windows内核提权)<br><a href=\"https://github.com/vlad902/hacking-team-windows-kernel-lpe\" target=\"_blank\" rel=\"noopener\">https://github.com/vlad902/hacking-team-windows-kernel-lpe</a><br>use docker to show web attack(php本地文件包含结合phpinfo getshell 以及ssrf结合curl的利用演示)<br><a href=\"https://github.com/hxer/vulnapp\" target=\"_blank\" rel=\"noopener\">https://github.com/hxer/vulnapp</a><br>php7缓存覆写漏洞Demo及相关工具<br><a href=\"https://github.com/GoSecure/php7-opcache-override\" target=\"_blank\" rel=\"noopener\">https://github.com/GoSecure/php7-opcache-override</a><br>XcodeGhost木马样本<br><a href=\"https://github.com/XcodeGhostSource/XcodeGhost\" target=\"_blank\" rel=\"noopener\">https://github.com/XcodeGhostSource/XcodeGhost</a><br>中间人攻击及钓鱼<br>中间人攻击框架<br><a href=\"https://github.com/secretsquirrel/the-backdoor-factory\" target=\"_blank\" rel=\"noopener\">https://github.com/secretsquirrel/the-backdoor-factory</a><br><a href=\"https://github.com/secretsquirrel/BDFProxy\" target=\"_blank\" rel=\"noopener\">https://github.com/secretsquirrel/BDFProxy</a><br><a href=\"https://github.com/byt3bl33d3r/MITMf\" target=\"_blank\" rel=\"noopener\">https://github.com/byt3bl33d3r/MITMf</a><br>Inject code, jam wifi, and spy on wifi users<br><a href=\"https://github.com/DanMcInerney/LANs.py\" target=\"_blank\" rel=\"noopener\">https://github.com/DanMcInerney/LANs.py</a><br>可扩展的中间人代理工具<br><a href=\"https://github.com/intrepidusgroup/mallory\" target=\"_blank\" rel=\"noopener\">https://github.com/intrepidusgroup/mallory</a><br>wifi钓鱼<br><a href=\"https://github.com/sophron/wifiphisher\" target=\"_blank\" rel=\"noopener\">https://github.com/sophron/wifiphisher</a><br>密码破解：<br>密码破解工具<br><a href=\"https://github.com/shinnok/johnny\" target=\"_blank\" rel=\"noopener\">https://github.com/shinnok/johnny</a><br>本地存储的各类密码提取利器<br><a href=\"https://github.com/AlessandroZ/LaZagne\" target=\"_blank\" rel=\"noopener\">https://github.com/AlessandroZ/LaZagne</a><br>二进制及代码分析工具：<br>二进制分析工具<br><a href=\"https://github.com/devttys0/binwalk\" target=\"_blank\" rel=\"noopener\">https://github.com/devttys0/binwalk</a><br>系统扫描器，用于寻找程序和库然后收集他们的依赖关系，链接等信息<br><a href=\"https://github.com/quarkslab/binmap\" target=\"_blank\" rel=\"noopener\">https://github.com/quarkslab/binmap</a><br>rp++ is a full-cpp written tool that aims to find ROP sequences in PE/Elf/Mach-O (doesn’t support the FAT binaries) x86/x64 binaries.<br><a href=\"https://github.com/0vercl0k/rp\" target=\"_blank\" rel=\"noopener\">https://github.com/0vercl0k/rp</a><br>Windows Exploit Development工具<br><a href=\"https://github.com/lillypad/badger\" target=\"_blank\" rel=\"noopener\">https://github.com/lillypad/badger</a><br>二进制静态分析工具（python）<br><a href=\"https://github.com/bdcht/amoco\" target=\"_blank\" rel=\"noopener\">https://github.com/bdcht/amoco</a><br>Python Exploit Development Assistance for GDB<br><a href=\"https://github.com/longld/peda\" target=\"_blank\" rel=\"noopener\">https://github.com/longld/peda</a><br>对BillGates Linux Botnet系木马活动的监控工具<br><a href=\"https://github.com/ValdikSS/billgates-botnet-tracker\" target=\"_blank\" rel=\"noopener\">https://github.com/ValdikSS/billgates-botnet-tracker</a><br>木马配置参数提取工具<br><a href=\"https://github.com/kevthehermit/RATDecoders\" target=\"_blank\" rel=\"noopener\">https://github.com/kevthehermit/RATDecoders</a><br>Shellphish编写的二进制分析工具（CTF向）<br><a href=\"https://github.com/angr/angr\" target=\"_blank\" rel=\"noopener\">https://github.com/angr/angr</a><br>针对python的静态代码分析工具<br><a href=\"https://github.com/yinwang0/pysonar2\" target=\"_blank\" rel=\"noopener\">https://github.com/yinwang0/pysonar2</a><br>一个自动化的脚本（shell）分析工具，用来给出警告和建议<br><a href=\"https://github.com/koalaman/shellcheck\" target=\"_blank\" rel=\"noopener\">https://github.com/koalaman/shellcheck</a><br>基于AST变换的简易Javascript反混淆辅助工具<br><a href=\"https://github.com/ChiChou/etacsufbo\" target=\"_blank\" rel=\"noopener\">https://github.com/ChiChou/etacsufbo</a><br>EXP编写框架及工具：<br>二进制EXP编写工具<br><a href=\"https://github.com/t00sh/rop-tool\" target=\"_blank\" rel=\"noopener\">https://github.com/t00sh/rop-tool</a><br>CTF Pwn 类题目脚本编写框架<br><a href=\"https://github.com/Gallopsled/pwntools\" target=\"_blank\" rel=\"noopener\">https://github.com/Gallopsled/pwntools</a><br>an easy-to-use io library for pwning development<br><a href=\"https://github.com/zTrix/zio\" target=\"_blank\" rel=\"noopener\">https://github.com/zTrix/zio</a><br>跨平台注入工具（ Inject JavaScript to explore native apps on Windows, Mac, Linux, iOS and Android.）<br><a href=\"https://github.com/frida/frida\" target=\"_blank\" rel=\"noopener\">https://github.com/frida/frida</a><br>隐写：<br>隐写检测工具<br><a href=\"https://github.com/abeluck/stegdetect\" target=\"_blank\" rel=\"noopener\">https://github.com/abeluck/stegdetect</a><br>各类安全资料:<br>域渗透教程<br><a href=\"https://github.com/l3m0n/pentest_study\" target=\"_blank\" rel=\"noopener\">https://github.com/l3m0n/pentest_study</a><br>python security教程（原文链接<a href=\"http://www.primalsecurity.net/tutorials/python-tutorials/）\" target=\"_blank\" rel=\"noopener\">http://www.primalsecurity.net/tutorials/python-tutorials/）</a><br><a href=\"https://github.com/smartFlash/pySecurity\" target=\"_blank\" rel=\"noopener\">https://github.com/smartFlash/pySecurity</a><br>data_hacking合集<br><a href=\"https://github.com/ClickSecurity/data_hacking\" target=\"_blank\" rel=\"noopener\">https://github.com/ClickSecurity/data_hacking</a><br>mobile-security-wiki<br><a href=\"https://github.com/exploitprotocol/mobile-security-wiki\" target=\"_blank\" rel=\"noopener\">https://github.com/exploitprotocol/mobile-security-wiki</a><br>书籍《reverse-engineering-for-beginners》<br><a href=\"https://github.com/veficos/reverse-engineering-for-beginners\" target=\"_blank\" rel=\"noopener\">https://github.com/veficos/reverse-engineering-for-beginners</a><br>一些信息安全标准及设备配置<br><a href=\"https://github.com/luyg24/IT_security\" target=\"_blank\" rel=\"noopener\">https://github.com/luyg24/IT_security</a><br>APT相关笔记<br><a href=\"https://github.com/kbandla/APTnotes\" target=\"_blank\" rel=\"noopener\">https://github.com/kbandla/APTnotes</a><br>Kcon资料<br><a href=\"https://github.com/knownsec/KCon\" target=\"_blank\" rel=\"noopener\">https://github.com/knownsec/KCon</a><br>ctf及黑客资源合集<br><a href=\"https://github.com/bt3gl/My-Gray-Hacker-Resources\" target=\"_blank\" rel=\"noopener\">https://github.com/bt3gl/My-Gray-Hacker-Resources</a><br>ctf和安全工具大合集<br><a href=\"https://github.com/zardus/ctf-tools\" target=\"_blank\" rel=\"noopener\">https://github.com/zardus/ctf-tools</a><br>《DO NOT FUCK WITH A HACKER》<br><a href=\"https://github.com/citypw/DNFWAH\" target=\"_blank\" rel=\"noopener\">https://github.com/citypw/DNFWAH</a><br>各类CTF资源<br>近年ctf writeup大全<br><a href=\"https://github.com/ctfs/write-ups-2016\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2016</a><br><a href=\"https://github.com/ctfs/write-ups-2015\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2015</a><br><a href=\"https://github.com/ctfs/write-ups-2014\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/write-ups-2014</a><br>fbctf竞赛平台Demo<br><a href=\"https://github.com/facebook/fbctf\" target=\"_blank\" rel=\"noopener\">https://github.com/facebook/fbctf</a><br>ctf Resources<br><a href=\"https://github.com/ctfs/resources\" target=\"_blank\" rel=\"noopener\">https://github.com/ctfs/resources</a><br>各类编程资源:<br>大礼包（什么都有）<br><a href=\"https://github.com/bayandin/awesome-awesomeness\" target=\"_blank\" rel=\"noopener\">https://github.com/bayandin/awesome-awesomeness</a><br>bash-handbook<br><a href=\"https://github.com/denysdovhan/bash-handbook\" target=\"_blank\" rel=\"noopener\">https://github.com/denysdovhan/bash-handbook</a><br>python资源大全<br><a href=\"https://github.com/jobbole/awesome-python-cn\" target=\"_blank\" rel=\"noopener\">https://github.com/jobbole/awesome-python-cn</a><br>git学习资料<br><a href=\"https://github.com/xirong/my-git\" target=\"_blank\" rel=\"noopener\">https://github.com/xirong/my-git</a><br>安卓开源代码解析<br><a href=\"https://github.com/android-cn/android-open-project-analysis\" target=\"_blank\" rel=\"noopener\">https://github.com/android-cn/android-open-project-analysis</a><br>python框架，库，资源大合集<br><a href=\"https://github.com/vinta/awesome-python\" target=\"_blank\" rel=\"noopener\">https://github.com/vinta/awesome-python</a><br>JS 正则表达式库（用于简化构造复杂的JS正则表达式）<br><a href=\"https://github.com/VerbalExpressions/JSVerbalExpressions\" target=\"_blank\" rel=\"noopener\">https://github.com/VerbalExpressions/JSVerbalExpressions</a><br>Python：<br>python 正则表达式库（用于简化构造复杂的python正则表达式）<br><a href=\"https://github.com/VerbalExpressions/PythonVerbalExpressions\" target=\"_blank\" rel=\"noopener\">https://github.com/VerbalExpressions/PythonVerbalExpressions</a><br>python任务管理以及命令执行库<br><a href=\"https://github.com/pyinvoke/invoke\" target=\"_blank\" rel=\"noopener\">https://github.com/pyinvoke/invoke</a><br>python exe打包库<br><a href=\"https://github.com/pyinstaller/pyinstaller\" target=\"_blank\" rel=\"noopener\">https://github.com/pyinstaller/pyinstaller</a><br>py3 爬虫框架<br><a href=\"https://github.com/orf/cyborg\" target=\"_blank\" rel=\"noopener\">https://github.com/orf/cyborg</a><br>一个提供底层接口数据包编程和网络协议支持的python库<br><a href=\"https://github.com/CoreSecurity/impacket\" target=\"_blank\" rel=\"noopener\">https://github.com/CoreSecurity/impacket</a><br>python requests 库<br><a href=\"https://github.com/kennethreitz/requests\" target=\"_blank\" rel=\"noopener\">https://github.com/kennethreitz/requests</a><br>python 实用工具合集<br><a href=\"https://github.com/mahmoud/boltons\" target=\"_blank\" rel=\"noopener\">https://github.com/mahmoud/boltons</a><br>python爬虫系统<br><a href=\"https://github.com/binux/pyspider\" target=\"_blank\" rel=\"noopener\">https://github.com/binux/pyspider</a><br>ctf向 python工具包<br><a href=\"https://github.com/P1kachu/v0lt\" target=\"_blank\" rel=\"noopener\">https://github.com/P1kachu/v0lt</a><br>科学上网：<br>科学上网工具<br><a href=\"https://github.com/XX-net/XX-Net\" target=\"_blank\" rel=\"noopener\">https://github.com/XX-net/XX-Net</a><br>福利：<br>微信自动抢红包动态库<br><a href=\"https://github.com/east520/AutoGetRedEnv\" target=\"_blank\" rel=\"noopener\">https://github.com/east520/AutoGetRedEnv</a><br>微信抢红包插件（安卓版）<br><a href=\"https://github.com/geeeeeeeeek/WeChatLuckyMoney\" target=\"_blank\" rel=\"noopener\">https://github.com/geeeeeeeeek/WeChatLuckyMoney</a><br>神器<br><a href=\"https://github.com/yangyangwithgnu/hardseed\" target=\"_blank\" rel=\"noopener\">https://github.com/yangyangwithgnu/hardseed</a><br>本文出自 RedFree’s Blog，转载时请注明出处及相应链接。<br>本文永久链接: <a href=\"http://py4.me/blog/?p=124\" target=\"_blank\" rel=\"noopener\">http://py4.me/blog/?p=124</a></p>"},{"title":"Git忽略文件.ignore模板（Android Studio）","date":"2016-08-29T12:06:21.000Z","_content":"\n#### Git忽略文件.ignore模板（Android Studio）\n<!-- more -->\n````\n#built application files  \n    *.apk  \n    *.ap_  \n\n    # files for the dex VM  \n    *.dex  \n\n    # Java class files  \n    *.class  \n\n    # generated files  \n    bin/  \n    gen/  \n    out/  \n    build/  \n    #  build/  忽略所有的 build/ 目录下文件  \n    #  /build  只忽略此目录下build文件，子目录的build不忽略  \n\n    # Local configuration file (sdk path, etc)  \n    local.properties  \n\n    # Windows thumbnail db  \n    Thumbs.db  \n    # OSX files  \n    .DS_Store  \n\n    # Eclipse project files  \n    .classpath  \n    .project  \n\n    # Android Studio  \n    *.iml  \n    .idea  \n\n    # Local IDEA workspace  \n    .idea/workspace.xml  \n\n    # Gradle cache  \n    .gradle  \n\n    #NDK  \n    obj/  \n\n    .settings/  \n    *.properties  \n\n    # Log Files\n    *.log\n\n````\n","source":"_posts/Git忽略文件-ignore模板（Android-Studio）.md","raw":"---\ntitle: Git忽略文件.ignore模板（Android Studio）\ndate: 2016-08-29 20:06:21\ntags: [git]\ncategories: git\n---\n\n#### Git忽略文件.ignore模板（Android Studio）\n<!-- more -->\n````\n#built application files  \n    *.apk  \n    *.ap_  \n\n    # files for the dex VM  \n    *.dex  \n\n    # Java class files  \n    *.class  \n\n    # generated files  \n    bin/  \n    gen/  \n    out/  \n    build/  \n    #  build/  忽略所有的 build/ 目录下文件  \n    #  /build  只忽略此目录下build文件，子目录的build不忽略  \n\n    # Local configuration file (sdk path, etc)  \n    local.properties  \n\n    # Windows thumbnail db  \n    Thumbs.db  \n    # OSX files  \n    .DS_Store  \n\n    # Eclipse project files  \n    .classpath  \n    .project  \n\n    # Android Studio  \n    *.iml  \n    .idea  \n\n    # Local IDEA workspace  \n    .idea/workspace.xml  \n\n    # Gradle cache  \n    .gradle  \n\n    #NDK  \n    obj/  \n\n    .settings/  \n    *.properties  \n\n    # Log Files\n    *.log\n\n````\n","slug":"Git忽略文件-ignore模板（Android-Studio）","published":1,"updated":"2016-08-29T12:12:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujx000jpev266sh2imn","content":"<h4 id=\"Git忽略文件-ignore模板（Android-Studio）\"><a href=\"#Git忽略文件-ignore模板（Android-Studio）\" class=\"headerlink\" title=\"Git忽略文件.ignore模板（Android Studio）\"></a>Git忽略文件.ignore模板（Android Studio）</h4><a id=\"more\"></a>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#built application files  </span></span><br><span class=\"line\">    *<span class=\"string\">.apk</span>  </span><br><span class=\"line\">    *<span class=\"string\">.ap_</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># files for the dex VM  </span></span><br><span class=\"line\">    *<span class=\"string\">.dex</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Java class files  </span></span><br><span class=\"line\">    *<span class=\"string\">.class</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># generated files  </span></span><br><span class=\"line\">    bin/  </span><br><span class=\"line\">    gen/  </span><br><span class=\"line\">    out/  </span><br><span class=\"line\">    build/  </span><br><span class=\"line\">    <span class=\"comment\">#  build/  忽略所有的 build/ 目录下文件  </span></span><br><span class=\"line\">    <span class=\"comment\">#  /build  只忽略此目录下build文件，子目录的build不忽略  </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Local configuration file (sdk path, etc)  </span></span><br><span class=\"line\">    local.properties  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Windows thumbnail db  </span></span><br><span class=\"line\">    Thumbs.db  </span><br><span class=\"line\">    <span class=\"comment\"># OSX files  </span></span><br><span class=\"line\">    <span class=\"string\">.DS_Store</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Eclipse project files  </span></span><br><span class=\"line\">    <span class=\"string\">.classpath</span>  </span><br><span class=\"line\">    <span class=\"string\">.project</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Android Studio  </span></span><br><span class=\"line\">    *<span class=\"string\">.iml</span>  </span><br><span class=\"line\">    <span class=\"string\">.idea</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Local IDEA workspace  </span></span><br><span class=\"line\">    <span class=\"string\">.idea/workspace.xml</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Gradle cache  </span></span><br><span class=\"line\">    <span class=\"string\">.gradle</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#NDK  </span></span><br><span class=\"line\">    obj/  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">.settings/</span>  </span><br><span class=\"line\">    *<span class=\"string\">.properties</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Log Files</span></span><br><span class=\"line\">    *<span class=\"string\">.log</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h4 id=\"Git忽略文件-ignore模板（Android-Studio）\"><a href=\"#Git忽略文件-ignore模板（Android-Studio）\" class=\"headerlink\" title=\"Git忽略文件.ignore模板（Android Studio）\"></a>Git忽略文件.ignore模板（Android Studio）</h4>","more":"<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#built application files  </span></span><br><span class=\"line\">    *<span class=\"string\">.apk</span>  </span><br><span class=\"line\">    *<span class=\"string\">.ap_</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># files for the dex VM  </span></span><br><span class=\"line\">    *<span class=\"string\">.dex</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Java class files  </span></span><br><span class=\"line\">    *<span class=\"string\">.class</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># generated files  </span></span><br><span class=\"line\">    bin/  </span><br><span class=\"line\">    gen/  </span><br><span class=\"line\">    out/  </span><br><span class=\"line\">    build/  </span><br><span class=\"line\">    <span class=\"comment\">#  build/  忽略所有的 build/ 目录下文件  </span></span><br><span class=\"line\">    <span class=\"comment\">#  /build  只忽略此目录下build文件，子目录的build不忽略  </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Local configuration file (sdk path, etc)  </span></span><br><span class=\"line\">    local.properties  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Windows thumbnail db  </span></span><br><span class=\"line\">    Thumbs.db  </span><br><span class=\"line\">    <span class=\"comment\"># OSX files  </span></span><br><span class=\"line\">    <span class=\"string\">.DS_Store</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Eclipse project files  </span></span><br><span class=\"line\">    <span class=\"string\">.classpath</span>  </span><br><span class=\"line\">    <span class=\"string\">.project</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Android Studio  </span></span><br><span class=\"line\">    *<span class=\"string\">.iml</span>  </span><br><span class=\"line\">    <span class=\"string\">.idea</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Local IDEA workspace  </span></span><br><span class=\"line\">    <span class=\"string\">.idea/workspace.xml</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Gradle cache  </span></span><br><span class=\"line\">    <span class=\"string\">.gradle</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#NDK  </span></span><br><span class=\"line\">    obj/  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">.settings/</span>  </span><br><span class=\"line\">    *<span class=\"string\">.properties</span>  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Log Files</span></span><br><span class=\"line\">    *<span class=\"string\">.log</span></span><br></pre></td></tr></table></figure>"},{"title":"Hexo常用命令记录","date":"2016-05-18T10:24:43.000Z","_content":"\n# Hexo常用命令记录\n\n由于博客是用的hexo, 方便以后忘记来此查询\n\n```\n  hexo new \"postName\" #新建文章\n  hexo new page \"pageName\" #新建页面\n  hexo new draft \"draftName\" #新建草稿\n  hexo publish draft \"draftName\" #草稿变成正文\n  hexo generate #生成静态页面至public目录\n  hexo server #开启预览(可以访问localhost:4000)\n  hexo deploy #部署到github, gitcafe等\n\n```\n\n简写命令\n\n```\n\n  hexo n #新生成\n  hexo g #生成静态页面至public目录\n  hexo s #开启预览(可以访问localhost:4000)\n  hexo d #部署\n\n  hexo d -g #重新生成并发布\n\n```\n[Hexo官方文档](http://hexo.io/zh-cn/)\n","source":"_posts/Hexo常用命令记录.md","raw":"---\ntitle: Hexo常用命令记录\ndate: 2016-05-18 18:24:43\ntags: [hexo]\ncategories: hexo\n---\n\n# Hexo常用命令记录\n\n由于博客是用的hexo, 方便以后忘记来此查询\n\n```\n  hexo new \"postName\" #新建文章\n  hexo new page \"pageName\" #新建页面\n  hexo new draft \"draftName\" #新建草稿\n  hexo publish draft \"draftName\" #草稿变成正文\n  hexo generate #生成静态页面至public目录\n  hexo server #开启预览(可以访问localhost:4000)\n  hexo deploy #部署到github, gitcafe等\n\n```\n\n简写命令\n\n```\n\n  hexo n #新生成\n  hexo g #生成静态页面至public目录\n  hexo s #开启预览(可以访问localhost:4000)\n  hexo d #部署\n\n  hexo d -g #重新生成并发布\n\n```\n[Hexo官方文档](http://hexo.io/zh-cn/)\n","slug":"Hexo常用命令记录","published":1,"updated":"2016-05-18T10:26:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uujy000lpev2uabk8q2r","content":"<h1 id=\"Hexo常用命令记录\"><a href=\"#Hexo常用命令记录\" class=\"headerlink\" title=\"Hexo常用命令记录\"></a>Hexo常用命令记录</h1><p>由于博客是用的hexo, 方便以后忘记来此查询</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new<span class=\"built_in\"> page </span><span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo new draft <span class=\"string\">\"draftName\"</span> #新建草稿</span><br><span class=\"line\">hexo publish draft <span class=\"string\">\"draftName\"</span> #草稿变成正文</span><br><span class=\"line\">hexo generate #生成静态页面至public目录</span><br><span class=\"line\">hexo<span class=\"built_in\"> server </span>#开启预览(可以访问localhost:4000)</span><br><span class=\"line\">hexo deploy #部署到github, gitcafe等</span><br></pre></td></tr></table></figure>\n<p>简写命令</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">hexo</span> n <span class=\"comment\">#新生成</span></span><br><span class=\"line\">hexo g <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#开启预览(可以访问localhost:4000)</span></span><br><span class=\"line\">hexo d <span class=\"comment\">#部署</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo d -g <span class=\"comment\">#重新生成并发布</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Hexo常用命令记录\"><a href=\"#Hexo常用命令记录\" class=\"headerlink\" title=\"Hexo常用命令记录\"></a>Hexo常用命令记录</h1><p>由于博客是用的hexo, 方便以后忘记来此查询</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new <span class=\"string\">\"postName\"</span> #新建文章</span><br><span class=\"line\">hexo new<span class=\"built_in\"> page </span><span class=\"string\">\"pageName\"</span> #新建页面</span><br><span class=\"line\">hexo new draft <span class=\"string\">\"draftName\"</span> #新建草稿</span><br><span class=\"line\">hexo publish draft <span class=\"string\">\"draftName\"</span> #草稿变成正文</span><br><span class=\"line\">hexo generate #生成静态页面至public目录</span><br><span class=\"line\">hexo<span class=\"built_in\"> server </span>#开启预览(可以访问localhost:4000)</span><br><span class=\"line\">hexo deploy #部署到github, gitcafe等</span><br></pre></td></tr></table></figure>\n<p>简写命令</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"attribute\">hexo</span> n <span class=\"comment\">#新生成</span></span><br><span class=\"line\">hexo g <span class=\"comment\">#生成静态页面至public目录</span></span><br><span class=\"line\">hexo s <span class=\"comment\">#开启预览(可以访问localhost:4000)</span></span><br><span class=\"line\">hexo d <span class=\"comment\">#部署</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo d -g <span class=\"comment\">#重新生成并发布</span></span><br></pre></td></tr></table></figure>\n<p><a href=\"http://hexo.io/zh-cn/\" target=\"_blank\" rel=\"noopener\">Hexo官方文档</a></p>\n"},{"title":"Linux命令wc的详细用法","date":"2016-08-29T08:59:48.000Z","_content":"\nwc命令用来打印文件的文本行数、单词数、字节数等（print the number of newlines, words, and bytes in files）。在Windows的Word中有个“字数统计”的工具，可以帮我们把选中范围的字数、字符数统计出来。Linux下的wc命令可以实现这个 功能。使用vi打开文件的时候，底下的信息也会显示行数和字节数。\n\n<!-- more -->\n\n## 常用参数\n\n格式：wc -l <file>\n打印指定文件的文本行数。（l=小写L）\n以下参数可组合使用。\n参数：-c, --bytes\n打印字节数（print the byte counts）\n\n参数：-m, --chars\n打印字符数（print the character counts）\n\n参数：-l, --lines\n打印行数（print the newline counts）\n\n参数：-L, --max-line-length\n打印最长行的长度（print the length of the longest line）\n\n参数：-w, --words\n打印单词数（print the word counts）\n\n## 使用示例\n### 示例一\n[root@jfht ~]# wc /etc/passwd\n  46   66 2027 /etc/passwd\n行数 单词数 字节数 文件名\n[root@jfht ~]#\n[root@jfht ~]# wc -l /etc/passwd\n46 /etc/passwd\n[root@jfht ~]# wc -cmlwL /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]# wc -cmlLw /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]# wc -wcmlL /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]#\n问题来了：从上面的命令行执行结果来看，wc的输出数据的顺序与的几个参数的顺序好像没有关系？！\n### 示例二 用wc命令怎么做到只打印统计数字不打印文件名\n使用管道线。这在编写shell脚本时特别有用。\n[root@jfht ~]# wc -l /etc/passwd\n46 /etc/passwd\n[root@jfht ~]# cat /etc/passwd | wc -l\n46\n[root@jfht ~]#\n### 示例三 中文编码的问题\n执行环境是中文编码的。\n[root@jfht ~]# echo $LANG\nzh_CN.GB18030\n中文编码文件ehr_object.gv，UTF8编码的文件ehr_object_utf8.gv。\n[root@jfht ~]# file ehr_object.gv ehr_object_utf8.gv\nehr_object.gv:      ISO-8859 text\nehr_object_utf8.gv: UTF-8 Unicode text\n[root@jfht ~]#\n[root@jfht ~]# wc ehr_object.gv ehr_object_utf8.gv\n  11  105  830 ehr_object.gv\nwc: ehr_object_utf8.gv:4: 无效或不完整的多字节字符或宽字符\n  11  105  866 ehr_object_utf8.gv\n  22  210 1696 总计\n[root@jfht ~]#\n### 示例四 中文单词数的计算\n[root@jfht ~]# cat test.txt\n你好Word\nLinux\n\n[root@jfht ~]# wc test.txt\n 3  2 16 test.txt\n行数 单词数 字节数 文件名\n[root@jfht ~]#\n","source":"_posts/Linux命令wc的详细用法.md","raw":"---\ntitle: Linux命令wc的详细用法\ndate: 2016-08-29 16:59:48\ntags: [linux]\ncategories: linux\n---\n\nwc命令用来打印文件的文本行数、单词数、字节数等（print the number of newlines, words, and bytes in files）。在Windows的Word中有个“字数统计”的工具，可以帮我们把选中范围的字数、字符数统计出来。Linux下的wc命令可以实现这个 功能。使用vi打开文件的时候，底下的信息也会显示行数和字节数。\n\n<!-- more -->\n\n## 常用参数\n\n格式：wc -l <file>\n打印指定文件的文本行数。（l=小写L）\n以下参数可组合使用。\n参数：-c, --bytes\n打印字节数（print the byte counts）\n\n参数：-m, --chars\n打印字符数（print the character counts）\n\n参数：-l, --lines\n打印行数（print the newline counts）\n\n参数：-L, --max-line-length\n打印最长行的长度（print the length of the longest line）\n\n参数：-w, --words\n打印单词数（print the word counts）\n\n## 使用示例\n### 示例一\n[root@jfht ~]# wc /etc/passwd\n  46   66 2027 /etc/passwd\n行数 单词数 字节数 文件名\n[root@jfht ~]#\n[root@jfht ~]# wc -l /etc/passwd\n46 /etc/passwd\n[root@jfht ~]# wc -cmlwL /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]# wc -cmlLw /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]# wc -wcmlL /etc/passwd\n  46   66 2027 2027   74 /etc/passwd\n[root@jfht ~]#\n问题来了：从上面的命令行执行结果来看，wc的输出数据的顺序与的几个参数的顺序好像没有关系？！\n### 示例二 用wc命令怎么做到只打印统计数字不打印文件名\n使用管道线。这在编写shell脚本时特别有用。\n[root@jfht ~]# wc -l /etc/passwd\n46 /etc/passwd\n[root@jfht ~]# cat /etc/passwd | wc -l\n46\n[root@jfht ~]#\n### 示例三 中文编码的问题\n执行环境是中文编码的。\n[root@jfht ~]# echo $LANG\nzh_CN.GB18030\n中文编码文件ehr_object.gv，UTF8编码的文件ehr_object_utf8.gv。\n[root@jfht ~]# file ehr_object.gv ehr_object_utf8.gv\nehr_object.gv:      ISO-8859 text\nehr_object_utf8.gv: UTF-8 Unicode text\n[root@jfht ~]#\n[root@jfht ~]# wc ehr_object.gv ehr_object_utf8.gv\n  11  105  830 ehr_object.gv\nwc: ehr_object_utf8.gv:4: 无效或不完整的多字节字符或宽字符\n  11  105  866 ehr_object_utf8.gv\n  22  210 1696 总计\n[root@jfht ~]#\n### 示例四 中文单词数的计算\n[root@jfht ~]# cat test.txt\n你好Word\nLinux\n\n[root@jfht ~]# wc test.txt\n 3  2 16 test.txt\n行数 单词数 字节数 文件名\n[root@jfht ~]#\n","slug":"Linux命令wc的详细用法","published":1,"updated":"2016-08-29T09:06:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk0000ppev2nt77umdj","content":"<p>wc命令用来打印文件的文本行数、单词数、字节数等（print the number of newlines, words, and bytes in files）。在Windows的Word中有个“字数统计”的工具，可以帮我们把选中范围的字数、字符数统计出来。Linux下的wc命令可以实现这个 功能。使用vi打开文件的时候，底下的信息也会显示行数和字节数。</p>\n<a id=\"more\"></a>\n<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><p>格式：wc -l <file><br>打印指定文件的文本行数。（l=小写L）<br>以下参数可组合使用。<br>参数：-c, –bytes<br>打印字节数（print the byte counts）</file></p>\n<p>参数：-m, –chars<br>打印字符数（print the character counts）</p>\n<p>参数：-l, –lines<br>打印行数（print the newline counts）</p>\n<p>参数：-L, –max-line-length<br>打印最长行的长度（print the length of the longest line）</p>\n<p>参数：-w, –words<br>打印单词数（print the word counts）</p>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><h3 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h3><p>[root@jfht ~]# wc /etc/passwd<br>  46   66 2027 /etc/passwd<br>行数 单词数 字节数 文件名<br>[root@jfht ~]#<br>[root@jfht ~]# wc -l /etc/passwd<br>46 /etc/passwd<br>[root@jfht ~]# wc -cmlwL /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]# wc -cmlLw /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]# wc -wcmlL /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]#<br>问题来了：从上面的命令行执行结果来看，wc的输出数据的顺序与的几个参数的顺序好像没有关系？！</p>\n<h3 id=\"示例二-用wc命令怎么做到只打印统计数字不打印文件名\"><a href=\"#示例二-用wc命令怎么做到只打印统计数字不打印文件名\" class=\"headerlink\" title=\"示例二 用wc命令怎么做到只打印统计数字不打印文件名\"></a>示例二 用wc命令怎么做到只打印统计数字不打印文件名</h3><p>使用管道线。这在编写shell脚本时特别有用。<br>[root@jfht ~]# wc -l /etc/passwd<br>46 /etc/passwd<br>[root@jfht ~]# cat /etc/passwd | wc -l<br>46<br>[root@jfht ~]#</p>\n<h3 id=\"示例三-中文编码的问题\"><a href=\"#示例三-中文编码的问题\" class=\"headerlink\" title=\"示例三 中文编码的问题\"></a>示例三 中文编码的问题</h3><p>执行环境是中文编码的。<br>[root@jfht ~]# echo $LANG<br>zh_CN.GB18030<br>中文编码文件ehr_object.gv，UTF8编码的文件ehr_object_utf8.gv。<br>[root@jfht ~]# file ehr_object.gv ehr_object_utf8.gv<br>ehr_object.gv:      ISO-8859 text<br>ehr_object_utf8.gv: UTF-8 Unicode text<br>[root@jfht ~]#<br>[root@jfht ~]# wc ehr_object.gv ehr_object_utf8.gv<br>  11  105  830 ehr_object.gv<br>wc: ehr_object_utf8.gv:4: 无效或不完整的多字节字符或宽字符<br>  11  105  866 ehr_object_utf8.gv<br>  22  210 1696 总计<br>[root@jfht ~]#</p>\n<h3 id=\"示例四-中文单词数的计算\"><a href=\"#示例四-中文单词数的计算\" class=\"headerlink\" title=\"示例四 中文单词数的计算\"></a>示例四 中文单词数的计算</h3><p>[root@jfht ~]# cat test.txt<br>你好Word<br>Linux</p>\n<p>[root@jfht ~]# wc test.txt<br> 3  2 16 test.txt<br>行数 单词数 字节数 文件名<br>[root@jfht ~]#</p>\n","site":{"data":{}},"excerpt":"<p>wc命令用来打印文件的文本行数、单词数、字节数等（print the number of newlines, words, and bytes in files）。在Windows的Word中有个“字数统计”的工具，可以帮我们把选中范围的字数、字符数统计出来。Linux下的wc命令可以实现这个 功能。使用vi打开文件的时候，底下的信息也会显示行数和字节数。</p>","more":"<h2 id=\"常用参数\"><a href=\"#常用参数\" class=\"headerlink\" title=\"常用参数\"></a>常用参数</h2><p>格式：wc -l <file><br>打印指定文件的文本行数。（l=小写L）<br>以下参数可组合使用。<br>参数：-c, –bytes<br>打印字节数（print the byte counts）</file></p>\n<p>参数：-m, –chars<br>打印字符数（print the character counts）</p>\n<p>参数：-l, –lines<br>打印行数（print the newline counts）</p>\n<p>参数：-L, –max-line-length<br>打印最长行的长度（print the length of the longest line）</p>\n<p>参数：-w, –words<br>打印单词数（print the word counts）</p>\n<h2 id=\"使用示例\"><a href=\"#使用示例\" class=\"headerlink\" title=\"使用示例\"></a>使用示例</h2><h3 id=\"示例一\"><a href=\"#示例一\" class=\"headerlink\" title=\"示例一\"></a>示例一</h3><p>[root@jfht ~]# wc /etc/passwd<br>  46   66 2027 /etc/passwd<br>行数 单词数 字节数 文件名<br>[root@jfht ~]#<br>[root@jfht ~]# wc -l /etc/passwd<br>46 /etc/passwd<br>[root@jfht ~]# wc -cmlwL /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]# wc -cmlLw /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]# wc -wcmlL /etc/passwd<br>  46   66 2027 2027   74 /etc/passwd<br>[root@jfht ~]#<br>问题来了：从上面的命令行执行结果来看，wc的输出数据的顺序与的几个参数的顺序好像没有关系？！</p>\n<h3 id=\"示例二-用wc命令怎么做到只打印统计数字不打印文件名\"><a href=\"#示例二-用wc命令怎么做到只打印统计数字不打印文件名\" class=\"headerlink\" title=\"示例二 用wc命令怎么做到只打印统计数字不打印文件名\"></a>示例二 用wc命令怎么做到只打印统计数字不打印文件名</h3><p>使用管道线。这在编写shell脚本时特别有用。<br>[root@jfht ~]# wc -l /etc/passwd<br>46 /etc/passwd<br>[root@jfht ~]# cat /etc/passwd | wc -l<br>46<br>[root@jfht ~]#</p>\n<h3 id=\"示例三-中文编码的问题\"><a href=\"#示例三-中文编码的问题\" class=\"headerlink\" title=\"示例三 中文编码的问题\"></a>示例三 中文编码的问题</h3><p>执行环境是中文编码的。<br>[root@jfht ~]# echo $LANG<br>zh_CN.GB18030<br>中文编码文件ehr_object.gv，UTF8编码的文件ehr_object_utf8.gv。<br>[root@jfht ~]# file ehr_object.gv ehr_object_utf8.gv<br>ehr_object.gv:      ISO-8859 text<br>ehr_object_utf8.gv: UTF-8 Unicode text<br>[root@jfht ~]#<br>[root@jfht ~]# wc ehr_object.gv ehr_object_utf8.gv<br>  11  105  830 ehr_object.gv<br>wc: ehr_object_utf8.gv:4: 无效或不完整的多字节字符或宽字符<br>  11  105  866 ehr_object_utf8.gv<br>  22  210 1696 总计<br>[root@jfht ~]#</p>\n<h3 id=\"示例四-中文单词数的计算\"><a href=\"#示例四-中文单词数的计算\" class=\"headerlink\" title=\"示例四 中文单词数的计算\"></a>示例四 中文单词数的计算</h3><p>[root@jfht ~]# cat test.txt<br>你好Word<br>Linux</p>\n<p>[root@jfht ~]# wc test.txt<br> 3  2 16 test.txt<br>行数 单词数 字节数 文件名<br>[root@jfht ~]#</p>"},{"title":"Java中Math类的一些常用方法","date":"2016-03-30T11:55:31.000Z","_content":"# Java中Math类的一些常用方法\n\n<!-- more -->\n```\npublic class MathTest{\n  public static void main(String args[]){\n\n            /** \n             * abs求绝对值 \n             */  \n            System.out.println(Math.abs(-10.4));    //10.4  \n            System.out.println(Math.abs(10.1));     //10.1  \n              \n            /** \n             * ceil天花板的意思，就是返回大的值，注意一些特殊值 \n             */  \n            System.out.println(Math.ceil(-10.1));   //-10.0  \n            System.out.println(Math.ceil(10.7));    //11.0  \n            System.out.println(Math.ceil(-0.7));    //-0.0  \n            System.out.println(Math.ceil(0.0));     //0.0  \n            System.out.println(Math.ceil(-0.0));    //-0.0  \n              \n            /** \n             * floor地板的意思，就是返回小的值 \n             */  \n            System.out.println(Math.floor(-10.1));  //-11.0  \n            System.out.println(Math.floor(10.7));   //10.0  \n            System.out.println(Math.floor(-0.7));   //-1.0  \n            System.out.println(Math.floor(0.0));    //0.0  \n            System.out.println(Math.floor(-0.0));   //-0.0  \n              \n            /** \n             * max 两个中返回大的值,min和它相反，就不举例了 \n             */  \n            System.out.println(Math.max(-10.1, -10));   //-10.0  \n            System.out.println(Math.max(10.7, 10));     //10.7  \n            System.out.println(Math.max(0.0, -0.0));    //0.0  \n              \n            /** \n             * random 取得一个大于或者等于0.0小于不等于1.0的随机数 \n             */  \n            System.out.println(Math.random());  //0.08417657924317234  \n            System.out.println(Math.random());  //0.43527904004403717  \n              \n            /** \n             * rint 四舍五入，返回double值 \n             * 注意.5的时候会取偶数 \n             */  \n            System.out.println(Math.rint(10.1));    //10.0  \n            System.out.println(Math.rint(10.7));    //11.0  \n            System.out.println(Math.rint(11.5));    //12.0  \n            System.out.println(Math.rint(10.5));    //10.0  \n            System.out.println(Math.rint(10.51));   //11.0  \n            System.out.println(Math.rint(-10.5));   //-10.0  \n            System.out.println(Math.rint(-11.5));   //-12.0  \n            System.out.println(Math.rint(-10.51));  //-11.0  \n            System.out.println(Math.rint(-10.6));   //-11.0  \n            System.out.println(Math.rint(-10.2));   //-10.0  \n              \n            /** \n             * round 四舍五入，float时返回int值，double时返回long值 \n             */  \n            System.out.println(Math.round(10.1));   //10  \n            System.out.println(Math.round(10.7));   //11  \n            System.out.println(Math.round(10.5));   //11  \n            System.out.println(Math.round(10.51));  //11  \n            System.out.println(Math.round(-10.5));  //-10  \n            System.out.println(Math.round(-10.51)); //-11  \n            System.out.println(Math.round(-10.6));  //-11  \n            System.out.println(Math.round(-10.2));  //-10  \n  }\n\n}\n\n```","source":"_posts/Java中Math类的一些常用方法.md","raw":"---\ntitle: Java中Math类的一些常用方法\ndate: 2016-03-30 19:55:31\ntags: [java, math, round]\ncategories: java\n\n---\n# Java中Math类的一些常用方法\n\n<!-- more -->\n```\npublic class MathTest{\n  public static void main(String args[]){\n\n            /** \n             * abs求绝对值 \n             */  \n            System.out.println(Math.abs(-10.4));    //10.4  \n            System.out.println(Math.abs(10.1));     //10.1  \n              \n            /** \n             * ceil天花板的意思，就是返回大的值，注意一些特殊值 \n             */  \n            System.out.println(Math.ceil(-10.1));   //-10.0  \n            System.out.println(Math.ceil(10.7));    //11.0  \n            System.out.println(Math.ceil(-0.7));    //-0.0  \n            System.out.println(Math.ceil(0.0));     //0.0  \n            System.out.println(Math.ceil(-0.0));    //-0.0  \n              \n            /** \n             * floor地板的意思，就是返回小的值 \n             */  \n            System.out.println(Math.floor(-10.1));  //-11.0  \n            System.out.println(Math.floor(10.7));   //10.0  \n            System.out.println(Math.floor(-0.7));   //-1.0  \n            System.out.println(Math.floor(0.0));    //0.0  \n            System.out.println(Math.floor(-0.0));   //-0.0  \n              \n            /** \n             * max 两个中返回大的值,min和它相反，就不举例了 \n             */  \n            System.out.println(Math.max(-10.1, -10));   //-10.0  \n            System.out.println(Math.max(10.7, 10));     //10.7  \n            System.out.println(Math.max(0.0, -0.0));    //0.0  \n              \n            /** \n             * random 取得一个大于或者等于0.0小于不等于1.0的随机数 \n             */  \n            System.out.println(Math.random());  //0.08417657924317234  \n            System.out.println(Math.random());  //0.43527904004403717  \n              \n            /** \n             * rint 四舍五入，返回double值 \n             * 注意.5的时候会取偶数 \n             */  \n            System.out.println(Math.rint(10.1));    //10.0  \n            System.out.println(Math.rint(10.7));    //11.0  \n            System.out.println(Math.rint(11.5));    //12.0  \n            System.out.println(Math.rint(10.5));    //10.0  \n            System.out.println(Math.rint(10.51));   //11.0  \n            System.out.println(Math.rint(-10.5));   //-10.0  \n            System.out.println(Math.rint(-11.5));   //-12.0  \n            System.out.println(Math.rint(-10.51));  //-11.0  \n            System.out.println(Math.rint(-10.6));   //-11.0  \n            System.out.println(Math.rint(-10.2));   //-10.0  \n              \n            /** \n             * round 四舍五入，float时返回int值，double时返回long值 \n             */  \n            System.out.println(Math.round(10.1));   //10  \n            System.out.println(Math.round(10.7));   //11  \n            System.out.println(Math.round(10.5));   //11  \n            System.out.println(Math.round(10.51));  //11  \n            System.out.println(Math.round(-10.5));  //-10  \n            System.out.println(Math.round(-10.51)); //-11  \n            System.out.println(Math.round(-10.6));  //-11  \n            System.out.println(Math.round(-10.2));  //-10  \n  }\n\n}\n\n```","slug":"Java中Math类的一些常用方法","published":1,"updated":"2016-03-30T11:57:43.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk1000rpev2fmvn0xom","content":"<h1 id=\"Java中Math类的一些常用方法\"><a href=\"#Java中Math类的一些常用方法\" class=\"headerlink\" title=\"Java中Math类的一些常用方法\"></a>Java中Math类的一些常用方法</h1><a id=\"more\"></a>\n<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class MathTest&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(<span class=\"keyword\">String</span> args[])&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * abs求绝对值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">abs</span>(<span class=\"number\">-10.4</span>));    <span class=\"comment\">//10.4  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">abs</span>(<span class=\"number\">10.1</span>));     <span class=\"comment\">//10.1  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * ceil天花板的意思，就是返回大的值，注意一些特殊值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-10.1</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">10.7</span>));    <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-0.7</span>));    <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">0.0</span>));     <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-0.0</span>));    <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * floor地板的意思，就是返回小的值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-10.1</span>));  <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">10.7</span>));   <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-0.7</span>));   <span class=\"comment\">//-1.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">0.0</span>));    <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-0.0</span>));   <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * max 两个中返回大的值,min和它相反，就不举例了 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">-10.1</span>, <span class=\"number\">-10</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">10.7</span>, <span class=\"number\">10</span>));     <span class=\"comment\">//10.7  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">0.0</span>, <span class=\"number\">-0.0</span>));    <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * random 取得一个大于或者等于0.0小于不等于1.0的随机数 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">random</span>());  <span class=\"comment\">//0.08417657924317234  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">random</span>());  <span class=\"comment\">//0.43527904004403717  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * rint 四舍五入，返回double值 </span></span><br><span class=\"line\"><span class=\"comment\">             * 注意.5的时候会取偶数 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.1</span>));    <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.7</span>));    <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">11.5</span>));    <span class=\"comment\">//12.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.5</span>));    <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.51</span>));   <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.5</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-11.5</span>));   <span class=\"comment\">//-12.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.51</span>));  <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.6</span>));   <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.2</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * round 四舍五入，float时返回int值，double时返回long值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.1</span>));   <span class=\"comment\">//10  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.7</span>));   <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.5</span>));   <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.51</span>));  <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.5</span>));  <span class=\"comment\">//-10  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.51</span>)); <span class=\"comment\">//-11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.6</span>));  <span class=\"comment\">//-11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.2</span>));  <span class=\"comment\">//-10  </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h1 id=\"Java中Math类的一些常用方法\"><a href=\"#Java中Math类的一些常用方法\" class=\"headerlink\" title=\"Java中Math类的一些常用方法\"></a>Java中Math类的一些常用方法</h1>","more":"<figure class=\"highlight processing\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> class MathTest&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> main(<span class=\"keyword\">String</span> args[])&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * abs求绝对值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">abs</span>(<span class=\"number\">-10.4</span>));    <span class=\"comment\">//10.4  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">abs</span>(<span class=\"number\">10.1</span>));     <span class=\"comment\">//10.1  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * ceil天花板的意思，就是返回大的值，注意一些特殊值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-10.1</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">10.7</span>));    <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-0.7</span>));    <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">0.0</span>));     <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">ceil</span>(<span class=\"number\">-0.0</span>));    <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * floor地板的意思，就是返回小的值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-10.1</span>));  <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">10.7</span>));   <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-0.7</span>));   <span class=\"comment\">//-1.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">0.0</span>));    <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">floor</span>(<span class=\"number\">-0.0</span>));   <span class=\"comment\">//-0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * max 两个中返回大的值,min和它相反，就不举例了 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">-10.1</span>, <span class=\"number\">-10</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">10.7</span>, <span class=\"number\">10</span>));     <span class=\"comment\">//10.7  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">max</span>(<span class=\"number\">0.0</span>, <span class=\"number\">-0.0</span>));    <span class=\"comment\">//0.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * random 取得一个大于或者等于0.0小于不等于1.0的随机数 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">random</span>());  <span class=\"comment\">//0.08417657924317234  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">random</span>());  <span class=\"comment\">//0.43527904004403717  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * rint 四舍五入，返回double值 </span></span><br><span class=\"line\"><span class=\"comment\">             * 注意.5的时候会取偶数 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.1</span>));    <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.7</span>));    <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">11.5</span>));    <span class=\"comment\">//12.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.5</span>));    <span class=\"comment\">//10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">10.51</span>));   <span class=\"comment\">//11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.5</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-11.5</span>));   <span class=\"comment\">//-12.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.51</span>));  <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.6</span>));   <span class=\"comment\">//-11.0  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.rint(<span class=\"number\">-10.2</span>));   <span class=\"comment\">//-10.0  </span></span><br><span class=\"line\">              </span><br><span class=\"line\">            <span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\">             * round 四舍五入，float时返回int值，double时返回long值 </span></span><br><span class=\"line\"><span class=\"comment\">             */</span>  </span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.1</span>));   <span class=\"comment\">//10  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.7</span>));   <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.5</span>));   <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">10.51</span>));  <span class=\"comment\">//11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.5</span>));  <span class=\"comment\">//-10  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.51</span>)); <span class=\"comment\">//-11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.6</span>));  <span class=\"comment\">//-11  </span></span><br><span class=\"line\">            System.out.<span class=\"built_in\">println</span>(Math.<span class=\"built_in\">round</span>(<span class=\"number\">-10.2</span>));  <span class=\"comment\">//-10  </span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Gyp-学习记录","date":"2017-12-25T12:12:20.000Z","_content":"Gyp 学习记录\n\nGYP(Generate Your Projects)是由 Chromium 团队开发的跨平台自动化项目构建工具。\n\n##### gyp简述\nGYP的输入是.gyp和.gypi文件，.gypi文件是用于.gyp文件include使用的。.gyp文件就是符合特定格式的json文件。\n\ngyp文件中包含target，Visual C++下，gyp生成sln，target生成vcproj或vxcproj。\n\n<!-- more -->\n\n##### 1.1 设计目标\ngyp设计针对目标就是为了解决chromium浏览器构建问题，最重要的就是支持多平台的构建。因为Chromium内部都是c/c++文件，因此主要考虑方便c/c++程序的构建。设计时候还考虑到下面这些问题：\n\n* debug vs release\n* cross compile\n* toolchain interface\n\n##### 1.2 构建文件\n构建文件名字不固定，但是后缀通常是.gyp和.gypi(gyp included).构建文件内容就是python的一个数据结构.\nexample:\n\n```\n\t{ \n\t\t'target_defaults':{\n\t\t\t'defines':['DEBUG'],\n\t\t},\n\t\t'targets':[\n\t\t\t{\n\t\t\t\t'target_name':'test', #生成的文件.\n\t\t\t\t'type':'executable', #可执行程序.\n\t\t\t\t'sources':['test.cc'],\n\t\t\t\t'defines':['FOO']\n\t\t\t}\n\t\t]\n\t}\n```\n##### 1.3 .gyp文件剖析\n整个构建文件最顶层是一个字典，包含了下面这些key:\n\n- conditions //条件判断\n- includes // 包含的构建文件\n- target <sub>defualt</sub> //构建目标默认属性\n- targets // 构建目标列表\n- variables // 构建文件使用的变量\n\n###### 1.3.1 conditions\nconditions分两种行为。 普通的conditions就在load构建文件之后立即计算，另外一种是target(conditions)是在计算完成依赖之后然后来进行计算的，两个过程分别就是early and late phases阶段。对于conditions写法非常简单\n\n```\n\t'conditions':[\n\t\t['OS==Linux', {'sources':['linux_interface.cc']}]\n\t]\n```\n对于condition的判断，主要还是为了能够修改一些描述属性。从文档上来看，默认提供的条件就是OS判断，其他判断应该都是变量的判断。\n\n###### 1.3.2 targets\n\ntarget部分的话对target(default)里面设定的内容默认进行merge。比如上面例子的话，对于target/test来说，使用的define就会是-DDEBUG -DFOO.当然对于这种东西是可以进行其他策略选择的，比如如果修改成下面格式，那么就是直接替换：\n\n```\n'defines=':['FOO']\n```\n生成的defines就是-DFOO了。或者是可以剔除掉：\n\n```\n'defines!':['DEBUG']\n```\n生成的defines就没有任何内容了。通过在选项key后面添加操作符号来达到自定义目的(相对于全局环境).\n对于一个target包括了下面这些重要属性：\n\n- actions(list) //执行命令\n- all<sub>dependentsettings</sub>(dict) //如果依赖这个target的话，需要使用的设置\n- configurations(dict) 配置\n- defines(list) //对于C/C++的defines\n- dependencies(list) //依赖对象。如果是本文件的话那么直接引用，如果是其他文件的话，使用path/xxx.gyp:target.\n- direct<sub>dependentsetting</sub>(dict) //直接依赖这个target的话，需要使用的设置\n- include<sub>dirs</sub>(list) // 头文件目录\n- libraries(list)//目标需要链接的库\n- link<sub>settings</sub> //依赖这个target,需要使用的链接参数\n- sources(list) //源文件\n- target<sub>conditions</sub>(list) // 和conditions类似，但是是在完全计算之后然后来判断\n- target<sub>name</sub>(string) //名字\n- type //目标类型，现在只是支持static<sub>library</sub>,shared<sub>library</sub>,executable和none\n\n###### 1.3.3 includes\ngyp倾向的组织就是在toplevel上面存在一个gyp文件，可以存在子目录下面，但是子目录下面并不存放一个完整的构建文件， 通常只是存放构建文件的片段。为了区分，后缀为gypi。本身来说，这个gypi并不可以直接被gyp所接受生成native构建系统文件， 唯一的作用就是被toplevel的gyp文件进行include。如果对于Linux系统来说，最终生成的Makefile应该是一份大Makefile并且没有递归make的操作。 关于构造一个没有递归的Makefile是非常有价值的，不管是对于调试还是提升编译速度方面。可以参考文章Recusive Make Considered Harmful.\n一旦我们允许include子目录的gypi文件进来，我们就必须规定哪些字段应该是文件。原因是假设存在src目录下面有src/BUILD.gypi这样一个文件，sources内容如下:\n\n```\n'sources':['src.cc']\n```\n而在上层BUILD.gyp文件里面，使用includes语法：\n\n```\n'includes':['./src/BUILD.gypi']\n```\n那么在生成大Makefile的时候，我们必须清楚'sources'字段里面内容都是文件，不应该直接使用src.cc， 相反应该加上目录前缀src，\n最终应该使用src/src.cc这样一个文件。关于哪些字段里面内容是路径， 这个在gyp里面有详细规定，在后面小节里面我们也会提到。\n\n###### 1.3.4 actions\nactions是targets里面的一个特殊属性，主要是用来进行target的自定义操作的.\n每个action是一个dict，主要包含4个属性：\n\n- action<sub>name</sub>(string). //操作名称\n- input(list) //输入文件\n- outputs (list) //输出文件\n- actions(list) //命令\n\n有了这些属性就可以做一个完整的操作抽象。\n###### 1.3.5 variable\nvariables这个小节里面是进行变量的定义，格式是dict。下面是一个例子：\n\n```\n'variables':{\n    'common_files':['src/common.cc','src/interface.cc'],\n}\n```\n为了引用变量，我们可以这样写：\n\n```\n<(common_files)\n<@(common_files)\n>(common_files)\n>@(common_files)\n```\n\n总之引用变量必须加上(),同时在前面加上<,<@,>,>@的4种中一种前缀符号。关于前缀符号的含义， 会在后面的operator小节里面说明。\n对于变量类型，一共分为3类：\n\n- predefined variables //预定义变量\n- user-defined variables //用户定义变量\n- automatic variables //自动变量\n\n预定义变量比如OS(系统环境),EXECUTABLE<sub>SUFFIX</sub>(可执行文件后缀).用户自定义变量就不再赘述。\n自动变量类似于Makefile里面的$@,$这样的变量，好比反射。比如在target<sub>conditions</sub>部门的话，我们根据不同类型程序来做不同的condition:\n\n```\n'target_conditions':[\n\t['_type==static_library',{'source':['func.cc']}]\n]\n```\n这样对于target为static<sub>library</sub>都会联编func.cc这个文件了，自动变量就是属性名称之前加上构成的。\n存在自动变量非常必要。有时候我们在全局环境中，希望根据不同的条件来定义不同的行为，并且是在计算的同时在来做条件判断的。 这样就提出一个要求就是，条件判断部分必须有能力知道，当前到底在计算什么东西(反射)。\n##### 1.4 early and late phases\n对于变量展开和条件判断有两个不同的阶段：\n载入文件之后进行，就是early phase。\n计算完成之后进行，就是late phase。\n对于两个阶段允许不同操作是非常必要的。对于early phase这个肯定需要，而对于late phase的话， 有时候我们是希望了解到gyp处理完成某个target之后所有信息，然后进行判断的。\nps:comake2在设计的时候，就没有考虑late phase这个功能。造成没有办法在应用层添加延迟计算这样一个特性。 最终只能够是修改comake2代码来完成需求。\n\n##### 1.5 operator\n关于每个操作符号的含义：\n\n* x= //字段内容进行覆盖\n* x? //如果字段没有定义，那么就进行覆盖\n* x+ //字段内容进行merge\n* < (x) //early phase计算变量x，并且以string类型返回结果\n* > (x) //late phase计算变量x，并且以string类型返回结果\n* < @(x) //early phase计算变量x，并且以list类型返回结果\n* > @(x) //late phase计算变量x，并且以list类型返回结果\n* x! //从已有的x字段中排除部分\n* x/ //操作允许使用include/exclude，内容是一个正则表达式来进行包含和排除列表里面内容\n* < !(x) //认为x是一个shell command，得到执行结果作为string类型返回\n* < !@(x) //认为x是一个shell command，得到执行结果作为list类型返回\n\n##### 1.6 路径内容属性\n在includes这个小节提到了，gyp规定了某些属性的内容必须为路径。这些属性是：\n\n* files.\n* include<sub>dirs</sub>.\n* inputs.\n* libraries.\n* outputs.\n* sources.\n\n但是gyp对于里面的内容也做了一些特殊处理。对于内容来说，如果以下面这些字符开头：\n\n* / //绝对路径\n* $ //变量\n* - //链接参数比如-lm\n* < ,>,! //operator\n* 其他作为相对路径\n\n##### 1.7 在Ubuntu下使用gyp\n>安装工具： sudo apt-get install gyp\n\n###### 1.7.1 简单实例\nhello.c\n\n```\n#include <stdio.h>  \n  \nint main(){  \n    printf(\"hello gyp\\n\");  \n    return 0;  \n} \n```\n\nmain.gyp\n\n```\n{    \n   'targets': [    \n     {    \n       'target_name': 'hello',    \n       'type': 'executable',    \n       'sources': [    \n         'hello.c',    \n       ],    \n     },    \n   ],    \n }  \n```\n\n构建：\n\n```\ngyp --depth=./ main.gyp\n```\n编译\n``` \nmake\n```\n运行\n```\n./hello\n```\n\n###### 1.7.2 改进\n把上面的构建命令做成脚本 genPrj.sh\n\n```\n#!/bin/bash\ngyp --depth=./ --generator-output=./build main.gyp\n\nif [ -d build ]; then\n\tcd build\n\tmake\nfi\n\n```\n\n所有生成非源码文件都生成到了build目录下，看起来比较干净，在做一个清除脚本，清除就更省事了。do_clean.sh:\n\n```\n#!/bin/bash\nrm -rf build\n```\n\n###### 1.7.3 c++实例\n目录结构\n\n```\n|-- do_clean.sh\n|-- genPrj.sh\n|---src\n     |-- hello.cc\n     |-- main.gyp\n     |-- my_class\n           |-- my_class.cc\n           |-- my_class.h\n\n\n```\n\ngenPrj.sh\n\n```\n#!/bin/bash\ngyp --depth=. --generator-output=build src/main.gyp\n\nif [ -d build ]; then\n\tcd bulid\n\tmake\nfi\n```\n\nhello.cc\n\n```\n#include <stdio.h>\n#include \"my_class/my_class.h\"\nint main(int argc, char** argv){\n\tprintf(\"Hello world\\n\");\n\tMyClass my_class(100);\n\tmy_class.Fun1();\n}\n```\nmain.gyp\n\n```\n{    \n   'targets': [    \n     {    \n       'target_name': 'my_class',    \n       'type': 'executable',    \n       'sources': [    \n         'hello.cc',    \n         'my_class/my_class.h',    \n         'my_class/my_class.cc',    \n       ],    \n     },    \n   ],    \n } \n```\nmy_class.cc\n\n```\n#include \"my_class.h\"    \n#include <stdio.h>    \nvoid MyClass::Fun1() {    \n  printf(\"the value is %d\\n\", value_);    \n}  \n```\n\nmy_class.h\n\n```\nclass MyClass {    \npublic:    \n  MyClass(int value) : value_(value) {}    \n  void Fun1();    \nprivate:    \n  int value_;    \n}; \n```\n\n##### 1.8 ninja\n\ngyp是google为chromium项目开发的管理工具，功能类似于cmake。gyp只能产生编译脚本，真正的编译工作还有靠其他工具，例如: ninja。\n###### 1.8.1 安装gyp和ninja\n\n```\nsudo apt-get install gyp\nsudo apt-get install ninja-build\n```\n###### 1.8.2 一个简单的例子\n1. 首先准备一个源文件，我写了template_sample.cpp,代码如下：\n\n\t```\n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\ttemplate<typename T>  \n\t\tT add(T a, T b){ return a+b; }  \n\t\t  \n\t\tint main()  \n\t\t{  \n\t\t     cout<< add<int>(5,6)<<endl;  \n\t\t     cout<< add<double>(3.4,4.0)<<endl;  \n\t\t     return 0;  \n\t\t}   \t\n\t```\n2. 编写gyp使用的文件，build.gyp（后缀是.gyp即可，名字随意）\n\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'template_sample.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n3. 生成ninja脚本，命令如下：\n\n\t```\n\tgyp -depth=. -format=ninja ./build.gyp\n\t```\n\t\n\t其中`-depth=.` 表示在当前文件夹下寻找开始的gyp脚本，必须显示的指出gyp没有默认设置。 `-format=ninja` 表示要生成ninja的脚本，默认生成的是Makefile\n\t执行后，会在当前目录下生成一个out目录。其结构如下：\n\t\n\t```\n\t\tout\n\t\t|-- Default\n\t\t\t\t|-- an\n\t\t\t\t|-- build.ninja\n\t\t\t\t|-- obj\n\t\t\t\t\t  |-- an.ninja\n\t\t\t\t\t  |-- an.template_sample.o\n\t```\n\n4. 编译，执行如下命令：\n\t\n\t```\n\t\tninja -C out/Default\n\t```\n\t\n\t**注意**: -C是大写，执行成功后会在out/Default目录下生成一个叫做an的可执行文件，这个an就是在target_name字段指定的名字。\n\t\n5. clean整个工程重新编译\n\t\n\t目前，gyp没有提供clean的方案，所以只能手动删除out目录。\n\t\n###### 1.8.3 gyp脚本的编写\n\n1. 如何增加编译、链接参数\n\t编译参数一般增加在conditions字段，根据系统的不同增加cflags和ldflags,如下：\n\t\n\t```\n\t{  \n\t   'targets':[  \n\t        {  \n\t            'target_name':'an',  \n\t            'type':'executable',  \n\t            'dependencies':[],  \n\t            'defines':[],  \n\t            'include_dirs':[],  \n\t            'sources':[  \n\t                'template_sample.cpp',  \n\t            ],  \n\t            'conditions':[  \n\t              ['OS==\"win\"',{  \n\t                             'cflags':[],  \n\t                             'ldflags':[]  \n\t                         },{  \n\t                              'cflags':[  \n\t                                   '--std=c++11',  \n\t                               ],  \n\t                              'ldflags':[]  \n\t                         }  \n\t              ],  \n\t            ]  \n\t        }  \n\t    ],  \n\t}  \n\t\n\t```\n\t\n\t注意conditions字段的变化：`'OS=\"win\"'`是条件语句的后要有`,`号，第一个括号内表示条件为真时的参数，第二个括号表示条件为假时的参数。上面的例子中，我在不是win的系统上增加了`--std=c++11`这个参数。\n\t另外，这里有必要提一下链接顺序问题。在链接的时候，链接器对符号表的寻找是按照你输入的命令的顺序进行的，比如a.o需要libm.so的函数，那么libm.so在链接命令里就必须写在a.o的后面，因为链接器发现a.o有函数没有找到，就只会去他后面的库里找，如果你把libm.so写在前面，自然就找不到。所以在增加链接库的时候，不要在ldflags里增加-l类的参数，这类参数要加到libraries字段里 如：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'template_sample.cpp',  \n\t\t            ],  \n\t\t            'conditions':[  \n\t\t              ['OS==\"win\"',{  \n\t\t                             'cflags':[],  \n\t\t                             'ldflags':[]  \n\t\t                         },{  \n\t\t                              'cflags':[  \n\t\t                                   '--std=c++11',  \n\t\t                               ],  \n\t\t                              'ldflags':[]，  \n\t\t                              'libraries':[  \n\t\t                                  '-lm'  \n\t\t                              ]  \n\t\t                         }  \n\t\t              ],  \n\t\t            ]  \n\t\t        }  \n\t\t    ],  \n\t\t}  \n\t```\n\t\n2. 头文件路径设定 --include_dirs字段的使用\n\t有如下工程目录结构\n\t\n\t```\n\t\t|-- build.gyp\n\t\t|-- include\n\t\t|\t\t|-- define.h\n\t\t|-- main.cpp\n\t```\n\t\n\tmain.cpp的代码如下\n\t\n\t```\n\t\t#include \"defines.h\"  \n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\tint main(){  \n\t\t    cout<< MY_NUMBER <<endl;  \n\t\t    return 1;  \n\t\t}  \n\t```\n\t可见main.cpp文件引用了defines.h这个头文件，所以在编译的时候需要告诉编译系统到哪里去寻找这个defines.h文件。为此buid.gyp如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[  \n\t\t                'include'  \n\t\t            ],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n\t可以看出头文件的位置include在include_dirs字段中被指出。这里需要注意，两个单引号之间一定是文件的路径，不要包含不必要的空格等其他字符。\n\t\n3. 编译参数增加宏定义 --defines字段使用\n\t测试程序的源码如下：\n\t\n\t```\n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\t#ifdef BIG_NUMBER  \n\t\tint out_number = 10;   \n\t\t#else  \n\t\tint out_number = 1;  \n\t\t#endif  \n\t\tint main(){  \n\t\t    cout<< out_number <<endl;  \n\t\t    return 1;  \n\t\t}  \n\t```\n\t可以看出，如果BIG_NUMBER宏被定义，则输出为10 ，否则为1。在使用Makefile的时候，我们可以通过为gcc增加-DBIG_NUBMER参数的方式来定义这个宏。那在gyp管理的时候，我们就要使用defines字段，代码如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[  \n\t\t                 'BIG_NUMBER'  \n\t\t            ],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n4. 编译静态库(动态库)\n\t\n\t有时我们不是要输出一个可执行文件，而是要编译一个静态库或动态库。这就要修改type字段，上文中type字段使用了executable，实际还可以设置为`static_library`,修改后的gyp脚本如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'static_library',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t```\n这样在out/Default/obj的目录下就会生成一个liban.a的静态库。\n\t\n\t动态库的方式类似，只需把type字段设置为shared_library即可。\n\t另外还有一种使用变量的方法，在这里提前介绍一下。就是将type字段设置为`<(library)`,完整的代码如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'<(library)',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\n\t```\n\t然后在使用gyp工具的时候指定这个library的值，如：\n\t\n\t```\n\t\tgyp -depth=. -format=ninja -Dlibrary=static_library ./build.gyp\n\t```\n\t\n\t这样生成ninja脚本后，也可以生成静态库，这样做的好处是你可以在真正输出时再决定输出静态库还是动态库。尤其对于要一次生成多个库的情况下，这种方法尤其好用。\n\n##### 1.9 更多功能介绍\n\n###### 设计准则：\n- 关键字一致性：所有的关键字都和平台项目的配置字段相同\n- 通过前缀表明配置属于的特定平台。比如：`msvs_disabled_warnings`,`xcode_framework_dirs`\n\n**样例：**\n\n```\n\t{\n    \"target_defaults\": {\n        \"defines\": [\n            \"U_STATIC_IMPLEMENTATION\",\n            [\n                \"LOGFILE\",\n                \"foo.log\"\n            ]\n        ],\n        \"include_dirs\": [\n            \"..\"\n        ]\n    },\n    \"targets\": [\n        {\n            \"target_name\": \"foo\",\n            \"type\": \"static_library\",\n            \"sources\": [\n                \"foo/src/foo.cc\",\n                \"foo/src/foo_main.cc\"\n            ],\n            \"include_dirs\": [\n                \"foo\",\n                \"foo/include\"\n            ],\n            \"conditions\": [\n                [\n                    \"OS==mac\",\n                    {\n                        \"sources\": [\n                            \"platform_test_mac.mm\"\n                        ]\n                    }\n                ]\n            ],\n            \"direct_dependent_settings\": {\n                \"defines\": [\n                    \"UNIT_TEST\"\n                ],\n                \"include_dirs\": [\n                    \"foo\",\n                    \"foo/include\"\n                ]\n            }\n        }\n    ]\n}\n```\n\n**结构元素**\n\n.gyp文件中定义了一些targets和构建规则。\n\n下面的关键字可以定义在最顶层：\n\n- conditions:条件定义。 \n- includes:包含.gypi文件的列表\n\t\n\t```\n\t\t{\n\t\t\t\"targets\": [\n\t\t\t  {\n\t\t\t\t\"target_name\": \"Thread\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"includes\": [\n\t\t\t\t\"../common.gypi\",\n\t\t\t\t\"./thread.gypi\"\n\t\t\t\t]\n\t\t\t\t...\n\t\t\t  }\n\t\t\t]\n\t\t}\n\t```\n- target_defaults:默认的项目配置，每个项目(targets)的配置都需要从这个配置继承\n- targets:项目列表\n\n\t```\n\t\t{\n\t\t\t\"targets\": [\n\t\t\t{\n\t\t\t\t\"target_name\": \"hello1\",\n\t\t\t\t\"product_extension\": \"stuff\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"sources\": [\n\t\t\t\t\"hello.c\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"target_name\": \"hello2\",\n\t\t\t\t\"target_extension\": \"stuff\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"sources\": [\n\t\t\t\t\"hello.c\"\n\t\t\t\t]\n\t\t\t}\n\t\t\t]\n\t\t}\n\t```\n- variable: 定义了键值对，可以被其他地方以`<(varname)`的方式引用\n\n\t```\n\t\t{\n\t\t  'variables': {\n\t\t    'pi': 'import math; print math.pi',\n\t\t    'third_letters': \"<(other_letters)HIJK\",\n\t\t    'letters_list': 'ABCD',\n\t\t    'other_letters': '<(letters_list)EFG',\n\t\t    'check_included': '<(included_variable)',\n\t\t    'check_lists': [\n\t\t      '<(included_variable)',\n\t\t      '<(third_letters)',\n\t\t      \n\t\t    ],\n\t\t    'check_int': 5,\n\t\t    'check_str_int': '6',\n\t\t    'check_list_int': [\n\t\t      7,\n\t\t      '8',\n\t\t      9,\n\t\t      \n\t\t    ],\n\t\t    'not_int_1': ' 10',\n\t\t    'not_int_2': '11 ',\n\t\t    'not_int_3': '012',\n\t\t    'not_int_4': '13.0',\n\t\t    'not_int_5': '+14',\n\t\t    'negative_int': '-15',\n\t\t    'zero_int': '0',\n\t\t    \n\t\t  },\n\t\t  ...\n\t\t}\n\t```\n\t\n**项目(targets)**\n\n.gyp文件定义的一套构建项目的规则。targets中也可以包含`includes`,`conditions`和`variables`。下面的是一些targets中的专有字段：\n\n- target_name: 指定定义的target的名称\n- type: target的类型。支持`executable`、`static_library`、`shared_library`和`none`.其中`none`类型也很有用，可以作为处理资源、文档等特别项目的类型。例如，在Windows中,`none`将作为工具集类型的项目存在\n- product_extension:指定target生成目标的扩展名，不包含'.'\n- product_name: 指定tareget生成目标的文件名，与 `product_extension` 组成一个文件全名\n- dependencies:指定target依赖的其他target\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'a',\n\t\t      'type': 'static_library',\n\t\t      'dependencies': [\n\t\t        'b/b.gyp:b',\n\t\t        'c/c.gyp:*'\n\t\t      ],\n\t\t      'sources': [\n\t\t        'a.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ],\n\t\t  \n\t\t}\n\t\t}\n\t```\n\t\n- defines: 定义了预处理宏。类似于C/C++命令行编译中的-D或者/D选项\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'defines',\n\t\t      'type': 'executable',\n\t\t      'defines': [\n\t\t        'FOO',\n\t\t        'VALUE=1',\n\t\t        'PAREN_VALUE=(1+2+3)',\n\t\t        'HASH_VALUE=\"a#1\"',\n\t\t        \n\t\t      ],\n\t\t      'sources': [\n\t\t        'defines.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ]\n\t\t}\n\t\n\t```\n\t\n- include_dirs: 指定了包含文件的查找目录。类似于C/C++命令行编译中的-I或/I选项\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'includes',\n\t\t      'type': 'executable',\n\t\t      'dependencies': [\n\t\t        'subdir/subdir_includes.gyp:subdir_includes',\n\t\t        \n\t\t      ],\n\t\t      'cflags': [\n\t\t        '-Ishadow1',\n\t\t        \n\t\t      ],\n\t\t      'include_dirs': [\n\t\t        '.',\n\t\t        'inc1',\n\t\t        'shadow2',\n\t\t        'subdir/inc2',\n\t\t        \n\t\t      ],\n\t\t      'sources': [\n\t\t        'includes.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ],\n\t\t  \n\t\t}\n\t\n\t```\n- sources:列出了项目中的代码文件和一些项目相关的文件.`sources!`段中可以指定被排除的文件\n- configurations:为targets定义的一套构建配置。\n- link\\_settings:指定target需要链接的库。`executable`和`shared_library` 类型的target需要指定链接库。这个段内可以指定target中可包含的除了`configurations`、`target_name`和`type`的所有配置。可以与`all_dependent_settings`、`direct_dependent_setting`做对比\n- direct\\_dependent\\_settings:指定依赖本target的target设置。这个段内可以指定target中可包含的除了`configurations`、`target_name`和`type`的所有属性。可以与`all_dependent_settings`、`link_settings`做对比\n- all\\_dependent\\_settings:\n- libraries:指定target依赖的库，见`link_settings>libraries`\n\n\t```\n\t\t...\n\n\t\t'link_settings': {\n\t\t\n\t\t'libraries': [\n\t\t\n\t\t'libiconv.dylib',\n\t\t\n\t\t'<(ZLIB_DIR)contrib/minizip/libminizip.a',\n\t\t\n\t\t'libcurl.dylib',],\n\t\t\n\t\t},\n\t\t\n\t\t...\n\n\t\n\t```\n- actions:针对输入的文件，定义了一组自定义的构建动作。\n- copies:定义了一套拷贝动作。\n- rules:\n- target\\_conditions:类似于conditions,但是起左右的时间比conditions晚\n- msvs\\_precompiled\\_header:指定预编译头文件。只能用于Visual Studio\n- msvs\\_precompiled\\_source:指定预编译源文件。只能用于Visual Studio\n- msvs\\_prebuild:生成之前事件。只能用于Visual Studio\n- msvs\\_postbuild:生成之后事件。只能用于Visual Studio\n\n\t```\n\t\t'msvs_postbuild':r'copy \"${OutDir}${TargetName}\" \"C:\\${TargetName}\"'\n\t```\n\t\n- msvs\\_props:指定target的属性页文件(.vsprops)。只能用于Visual Studio\n- msvs\\_cygwin\\_shell:指定action运行在cygwin下。只能用于Visual Studio\n- msvs\\_cygwin\\_dirs:指定cygwin的目录。只能用于Visual Studio\n- xcode\\_config\\_file:在xcode中，指定target的配置文件(.xcconfig)。只能用于xcode\n- xcode\\_framework\\_dirs:在xcode中，指定框架的目录。只能用于xcode\n","source":"_posts/Gyp-学习记录.md","raw":"---\ntitle: Gyp-学习记录\ndate: 2017-12-25 20:12:20\ntags: [gyp]\ncategories: c++\n---\nGyp 学习记录\n\nGYP(Generate Your Projects)是由 Chromium 团队开发的跨平台自动化项目构建工具。\n\n##### gyp简述\nGYP的输入是.gyp和.gypi文件，.gypi文件是用于.gyp文件include使用的。.gyp文件就是符合特定格式的json文件。\n\ngyp文件中包含target，Visual C++下，gyp生成sln，target生成vcproj或vxcproj。\n\n<!-- more -->\n\n##### 1.1 设计目标\ngyp设计针对目标就是为了解决chromium浏览器构建问题，最重要的就是支持多平台的构建。因为Chromium内部都是c/c++文件，因此主要考虑方便c/c++程序的构建。设计时候还考虑到下面这些问题：\n\n* debug vs release\n* cross compile\n* toolchain interface\n\n##### 1.2 构建文件\n构建文件名字不固定，但是后缀通常是.gyp和.gypi(gyp included).构建文件内容就是python的一个数据结构.\nexample:\n\n```\n\t{ \n\t\t'target_defaults':{\n\t\t\t'defines':['DEBUG'],\n\t\t},\n\t\t'targets':[\n\t\t\t{\n\t\t\t\t'target_name':'test', #生成的文件.\n\t\t\t\t'type':'executable', #可执行程序.\n\t\t\t\t'sources':['test.cc'],\n\t\t\t\t'defines':['FOO']\n\t\t\t}\n\t\t]\n\t}\n```\n##### 1.3 .gyp文件剖析\n整个构建文件最顶层是一个字典，包含了下面这些key:\n\n- conditions //条件判断\n- includes // 包含的构建文件\n- target <sub>defualt</sub> //构建目标默认属性\n- targets // 构建目标列表\n- variables // 构建文件使用的变量\n\n###### 1.3.1 conditions\nconditions分两种行为。 普通的conditions就在load构建文件之后立即计算，另外一种是target(conditions)是在计算完成依赖之后然后来进行计算的，两个过程分别就是early and late phases阶段。对于conditions写法非常简单\n\n```\n\t'conditions':[\n\t\t['OS==Linux', {'sources':['linux_interface.cc']}]\n\t]\n```\n对于condition的判断，主要还是为了能够修改一些描述属性。从文档上来看，默认提供的条件就是OS判断，其他判断应该都是变量的判断。\n\n###### 1.3.2 targets\n\ntarget部分的话对target(default)里面设定的内容默认进行merge。比如上面例子的话，对于target/test来说，使用的define就会是-DDEBUG -DFOO.当然对于这种东西是可以进行其他策略选择的，比如如果修改成下面格式，那么就是直接替换：\n\n```\n'defines=':['FOO']\n```\n生成的defines就是-DFOO了。或者是可以剔除掉：\n\n```\n'defines!':['DEBUG']\n```\n生成的defines就没有任何内容了。通过在选项key后面添加操作符号来达到自定义目的(相对于全局环境).\n对于一个target包括了下面这些重要属性：\n\n- actions(list) //执行命令\n- all<sub>dependentsettings</sub>(dict) //如果依赖这个target的话，需要使用的设置\n- configurations(dict) 配置\n- defines(list) //对于C/C++的defines\n- dependencies(list) //依赖对象。如果是本文件的话那么直接引用，如果是其他文件的话，使用path/xxx.gyp:target.\n- direct<sub>dependentsetting</sub>(dict) //直接依赖这个target的话，需要使用的设置\n- include<sub>dirs</sub>(list) // 头文件目录\n- libraries(list)//目标需要链接的库\n- link<sub>settings</sub> //依赖这个target,需要使用的链接参数\n- sources(list) //源文件\n- target<sub>conditions</sub>(list) // 和conditions类似，但是是在完全计算之后然后来判断\n- target<sub>name</sub>(string) //名字\n- type //目标类型，现在只是支持static<sub>library</sub>,shared<sub>library</sub>,executable和none\n\n###### 1.3.3 includes\ngyp倾向的组织就是在toplevel上面存在一个gyp文件，可以存在子目录下面，但是子目录下面并不存放一个完整的构建文件， 通常只是存放构建文件的片段。为了区分，后缀为gypi。本身来说，这个gypi并不可以直接被gyp所接受生成native构建系统文件， 唯一的作用就是被toplevel的gyp文件进行include。如果对于Linux系统来说，最终生成的Makefile应该是一份大Makefile并且没有递归make的操作。 关于构造一个没有递归的Makefile是非常有价值的，不管是对于调试还是提升编译速度方面。可以参考文章Recusive Make Considered Harmful.\n一旦我们允许include子目录的gypi文件进来，我们就必须规定哪些字段应该是文件。原因是假设存在src目录下面有src/BUILD.gypi这样一个文件，sources内容如下:\n\n```\n'sources':['src.cc']\n```\n而在上层BUILD.gyp文件里面，使用includes语法：\n\n```\n'includes':['./src/BUILD.gypi']\n```\n那么在生成大Makefile的时候，我们必须清楚'sources'字段里面内容都是文件，不应该直接使用src.cc， 相反应该加上目录前缀src，\n最终应该使用src/src.cc这样一个文件。关于哪些字段里面内容是路径， 这个在gyp里面有详细规定，在后面小节里面我们也会提到。\n\n###### 1.3.4 actions\nactions是targets里面的一个特殊属性，主要是用来进行target的自定义操作的.\n每个action是一个dict，主要包含4个属性：\n\n- action<sub>name</sub>(string). //操作名称\n- input(list) //输入文件\n- outputs (list) //输出文件\n- actions(list) //命令\n\n有了这些属性就可以做一个完整的操作抽象。\n###### 1.3.5 variable\nvariables这个小节里面是进行变量的定义，格式是dict。下面是一个例子：\n\n```\n'variables':{\n    'common_files':['src/common.cc','src/interface.cc'],\n}\n```\n为了引用变量，我们可以这样写：\n\n```\n<(common_files)\n<@(common_files)\n>(common_files)\n>@(common_files)\n```\n\n总之引用变量必须加上(),同时在前面加上<,<@,>,>@的4种中一种前缀符号。关于前缀符号的含义， 会在后面的operator小节里面说明。\n对于变量类型，一共分为3类：\n\n- predefined variables //预定义变量\n- user-defined variables //用户定义变量\n- automatic variables //自动变量\n\n预定义变量比如OS(系统环境),EXECUTABLE<sub>SUFFIX</sub>(可执行文件后缀).用户自定义变量就不再赘述。\n自动变量类似于Makefile里面的$@,$这样的变量，好比反射。比如在target<sub>conditions</sub>部门的话，我们根据不同类型程序来做不同的condition:\n\n```\n'target_conditions':[\n\t['_type==static_library',{'source':['func.cc']}]\n]\n```\n这样对于target为static<sub>library</sub>都会联编func.cc这个文件了，自动变量就是属性名称之前加上构成的。\n存在自动变量非常必要。有时候我们在全局环境中，希望根据不同的条件来定义不同的行为，并且是在计算的同时在来做条件判断的。 这样就提出一个要求就是，条件判断部分必须有能力知道，当前到底在计算什么东西(反射)。\n##### 1.4 early and late phases\n对于变量展开和条件判断有两个不同的阶段：\n载入文件之后进行，就是early phase。\n计算完成之后进行，就是late phase。\n对于两个阶段允许不同操作是非常必要的。对于early phase这个肯定需要，而对于late phase的话， 有时候我们是希望了解到gyp处理完成某个target之后所有信息，然后进行判断的。\nps:comake2在设计的时候，就没有考虑late phase这个功能。造成没有办法在应用层添加延迟计算这样一个特性。 最终只能够是修改comake2代码来完成需求。\n\n##### 1.5 operator\n关于每个操作符号的含义：\n\n* x= //字段内容进行覆盖\n* x? //如果字段没有定义，那么就进行覆盖\n* x+ //字段内容进行merge\n* < (x) //early phase计算变量x，并且以string类型返回结果\n* > (x) //late phase计算变量x，并且以string类型返回结果\n* < @(x) //early phase计算变量x，并且以list类型返回结果\n* > @(x) //late phase计算变量x，并且以list类型返回结果\n* x! //从已有的x字段中排除部分\n* x/ //操作允许使用include/exclude，内容是一个正则表达式来进行包含和排除列表里面内容\n* < !(x) //认为x是一个shell command，得到执行结果作为string类型返回\n* < !@(x) //认为x是一个shell command，得到执行结果作为list类型返回\n\n##### 1.6 路径内容属性\n在includes这个小节提到了，gyp规定了某些属性的内容必须为路径。这些属性是：\n\n* files.\n* include<sub>dirs</sub>.\n* inputs.\n* libraries.\n* outputs.\n* sources.\n\n但是gyp对于里面的内容也做了一些特殊处理。对于内容来说，如果以下面这些字符开头：\n\n* / //绝对路径\n* $ //变量\n* - //链接参数比如-lm\n* < ,>,! //operator\n* 其他作为相对路径\n\n##### 1.7 在Ubuntu下使用gyp\n>安装工具： sudo apt-get install gyp\n\n###### 1.7.1 简单实例\nhello.c\n\n```\n#include <stdio.h>  \n  \nint main(){  \n    printf(\"hello gyp\\n\");  \n    return 0;  \n} \n```\n\nmain.gyp\n\n```\n{    \n   'targets': [    \n     {    \n       'target_name': 'hello',    \n       'type': 'executable',    \n       'sources': [    \n         'hello.c',    \n       ],    \n     },    \n   ],    \n }  \n```\n\n构建：\n\n```\ngyp --depth=./ main.gyp\n```\n编译\n``` \nmake\n```\n运行\n```\n./hello\n```\n\n###### 1.7.2 改进\n把上面的构建命令做成脚本 genPrj.sh\n\n```\n#!/bin/bash\ngyp --depth=./ --generator-output=./build main.gyp\n\nif [ -d build ]; then\n\tcd build\n\tmake\nfi\n\n```\n\n所有生成非源码文件都生成到了build目录下，看起来比较干净，在做一个清除脚本，清除就更省事了。do_clean.sh:\n\n```\n#!/bin/bash\nrm -rf build\n```\n\n###### 1.7.3 c++实例\n目录结构\n\n```\n|-- do_clean.sh\n|-- genPrj.sh\n|---src\n     |-- hello.cc\n     |-- main.gyp\n     |-- my_class\n           |-- my_class.cc\n           |-- my_class.h\n\n\n```\n\ngenPrj.sh\n\n```\n#!/bin/bash\ngyp --depth=. --generator-output=build src/main.gyp\n\nif [ -d build ]; then\n\tcd bulid\n\tmake\nfi\n```\n\nhello.cc\n\n```\n#include <stdio.h>\n#include \"my_class/my_class.h\"\nint main(int argc, char** argv){\n\tprintf(\"Hello world\\n\");\n\tMyClass my_class(100);\n\tmy_class.Fun1();\n}\n```\nmain.gyp\n\n```\n{    \n   'targets': [    \n     {    \n       'target_name': 'my_class',    \n       'type': 'executable',    \n       'sources': [    \n         'hello.cc',    \n         'my_class/my_class.h',    \n         'my_class/my_class.cc',    \n       ],    \n     },    \n   ],    \n } \n```\nmy_class.cc\n\n```\n#include \"my_class.h\"    \n#include <stdio.h>    \nvoid MyClass::Fun1() {    \n  printf(\"the value is %d\\n\", value_);    \n}  \n```\n\nmy_class.h\n\n```\nclass MyClass {    \npublic:    \n  MyClass(int value) : value_(value) {}    \n  void Fun1();    \nprivate:    \n  int value_;    \n}; \n```\n\n##### 1.8 ninja\n\ngyp是google为chromium项目开发的管理工具，功能类似于cmake。gyp只能产生编译脚本，真正的编译工作还有靠其他工具，例如: ninja。\n###### 1.8.1 安装gyp和ninja\n\n```\nsudo apt-get install gyp\nsudo apt-get install ninja-build\n```\n###### 1.8.2 一个简单的例子\n1. 首先准备一个源文件，我写了template_sample.cpp,代码如下：\n\n\t```\n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\ttemplate<typename T>  \n\t\tT add(T a, T b){ return a+b; }  \n\t\t  \n\t\tint main()  \n\t\t{  \n\t\t     cout<< add<int>(5,6)<<endl;  \n\t\t     cout<< add<double>(3.4,4.0)<<endl;  \n\t\t     return 0;  \n\t\t}   \t\n\t```\n2. 编写gyp使用的文件，build.gyp（后缀是.gyp即可，名字随意）\n\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'template_sample.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n3. 生成ninja脚本，命令如下：\n\n\t```\n\tgyp -depth=. -format=ninja ./build.gyp\n\t```\n\t\n\t其中`-depth=.` 表示在当前文件夹下寻找开始的gyp脚本，必须显示的指出gyp没有默认设置。 `-format=ninja` 表示要生成ninja的脚本，默认生成的是Makefile\n\t执行后，会在当前目录下生成一个out目录。其结构如下：\n\t\n\t```\n\t\tout\n\t\t|-- Default\n\t\t\t\t|-- an\n\t\t\t\t|-- build.ninja\n\t\t\t\t|-- obj\n\t\t\t\t\t  |-- an.ninja\n\t\t\t\t\t  |-- an.template_sample.o\n\t```\n\n4. 编译，执行如下命令：\n\t\n\t```\n\t\tninja -C out/Default\n\t```\n\t\n\t**注意**: -C是大写，执行成功后会在out/Default目录下生成一个叫做an的可执行文件，这个an就是在target_name字段指定的名字。\n\t\n5. clean整个工程重新编译\n\t\n\t目前，gyp没有提供clean的方案，所以只能手动删除out目录。\n\t\n###### 1.8.3 gyp脚本的编写\n\n1. 如何增加编译、链接参数\n\t编译参数一般增加在conditions字段，根据系统的不同增加cflags和ldflags,如下：\n\t\n\t```\n\t{  \n\t   'targets':[  \n\t        {  \n\t            'target_name':'an',  \n\t            'type':'executable',  \n\t            'dependencies':[],  \n\t            'defines':[],  \n\t            'include_dirs':[],  \n\t            'sources':[  \n\t                'template_sample.cpp',  \n\t            ],  \n\t            'conditions':[  \n\t              ['OS==\"win\"',{  \n\t                             'cflags':[],  \n\t                             'ldflags':[]  \n\t                         },{  \n\t                              'cflags':[  \n\t                                   '--std=c++11',  \n\t                               ],  \n\t                              'ldflags':[]  \n\t                         }  \n\t              ],  \n\t            ]  \n\t        }  \n\t    ],  \n\t}  \n\t\n\t```\n\t\n\t注意conditions字段的变化：`'OS=\"win\"'`是条件语句的后要有`,`号，第一个括号内表示条件为真时的参数，第二个括号表示条件为假时的参数。上面的例子中，我在不是win的系统上增加了`--std=c++11`这个参数。\n\t另外，这里有必要提一下链接顺序问题。在链接的时候，链接器对符号表的寻找是按照你输入的命令的顺序进行的，比如a.o需要libm.so的函数，那么libm.so在链接命令里就必须写在a.o的后面，因为链接器发现a.o有函数没有找到，就只会去他后面的库里找，如果你把libm.so写在前面，自然就找不到。所以在增加链接库的时候，不要在ldflags里增加-l类的参数，这类参数要加到libraries字段里 如：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'template_sample.cpp',  \n\t\t            ],  \n\t\t            'conditions':[  \n\t\t              ['OS==\"win\"',{  \n\t\t                             'cflags':[],  \n\t\t                             'ldflags':[]  \n\t\t                         },{  \n\t\t                              'cflags':[  \n\t\t                                   '--std=c++11',  \n\t\t                               ],  \n\t\t                              'ldflags':[]，  \n\t\t                              'libraries':[  \n\t\t                                  '-lm'  \n\t\t                              ]  \n\t\t                         }  \n\t\t              ],  \n\t\t            ]  \n\t\t        }  \n\t\t    ],  \n\t\t}  \n\t```\n\t\n2. 头文件路径设定 --include_dirs字段的使用\n\t有如下工程目录结构\n\t\n\t```\n\t\t|-- build.gyp\n\t\t|-- include\n\t\t|\t\t|-- define.h\n\t\t|-- main.cpp\n\t```\n\t\n\tmain.cpp的代码如下\n\t\n\t```\n\t\t#include \"defines.h\"  \n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\tint main(){  \n\t\t    cout<< MY_NUMBER <<endl;  \n\t\t    return 1;  \n\t\t}  \n\t```\n\t可见main.cpp文件引用了defines.h这个头文件，所以在编译的时候需要告诉编译系统到哪里去寻找这个defines.h文件。为此buid.gyp如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[  \n\t\t                'include'  \n\t\t            ],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n\t可以看出头文件的位置include在include_dirs字段中被指出。这里需要注意，两个单引号之间一定是文件的路径，不要包含不必要的空格等其他字符。\n\t\n3. 编译参数增加宏定义 --defines字段使用\n\t测试程序的源码如下：\n\t\n\t```\n\t\t#include <iostream>  \n\t\tusing namespace std;  \n\t\t  \n\t\t#ifdef BIG_NUMBER  \n\t\tint out_number = 10;   \n\t\t#else  \n\t\tint out_number = 1;  \n\t\t#endif  \n\t\tint main(){  \n\t\t    cout<< out_number <<endl;  \n\t\t    return 1;  \n\t\t}  \n\t```\n\t可以看出，如果BIG_NUMBER宏被定义，则输出为10 ，否则为1。在使用Makefile的时候，我们可以通过为gcc增加-DBIG_NUBMER参数的方式来定义这个宏。那在gyp管理的时候，我们就要使用defines字段，代码如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'executable',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[  \n\t\t                 'BIG_NUMBER'  \n\t\t            ],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t\n\t```\n4. 编译静态库(动态库)\n\t\n\t有时我们不是要输出一个可执行文件，而是要编译一个静态库或动态库。这就要修改type字段，上文中type字段使用了executable，实际还可以设置为`static_library`,修改后的gyp脚本如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'static_library',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\t```\n这样在out/Default/obj的目录下就会生成一个liban.a的静态库。\n\t\n\t动态库的方式类似，只需把type字段设置为shared_library即可。\n\t另外还有一种使用变量的方法，在这里提前介绍一下。就是将type字段设置为`<(library)`,完整的代码如下：\n\t\n\t```\n\t\t{  \n\t\t   'targets':[  \n\t\t        {  \n\t\t            'target_name':'an',  \n\t\t            'type':'<(library)',  \n\t\t            'dependencies':[],  \n\t\t            'defines':[],  \n\t\t            'include_dirs':[],  \n\t\t            'sources':[  \n\t\t                'main.cpp',  \n\t\t            ],  \n\t\t            'conditions':[]  \n\t\t        }  \n\t\t    ],    \n\t\t}  \n\n\t```\n\t然后在使用gyp工具的时候指定这个library的值，如：\n\t\n\t```\n\t\tgyp -depth=. -format=ninja -Dlibrary=static_library ./build.gyp\n\t```\n\t\n\t这样生成ninja脚本后，也可以生成静态库，这样做的好处是你可以在真正输出时再决定输出静态库还是动态库。尤其对于要一次生成多个库的情况下，这种方法尤其好用。\n\n##### 1.9 更多功能介绍\n\n###### 设计准则：\n- 关键字一致性：所有的关键字都和平台项目的配置字段相同\n- 通过前缀表明配置属于的特定平台。比如：`msvs_disabled_warnings`,`xcode_framework_dirs`\n\n**样例：**\n\n```\n\t{\n    \"target_defaults\": {\n        \"defines\": [\n            \"U_STATIC_IMPLEMENTATION\",\n            [\n                \"LOGFILE\",\n                \"foo.log\"\n            ]\n        ],\n        \"include_dirs\": [\n            \"..\"\n        ]\n    },\n    \"targets\": [\n        {\n            \"target_name\": \"foo\",\n            \"type\": \"static_library\",\n            \"sources\": [\n                \"foo/src/foo.cc\",\n                \"foo/src/foo_main.cc\"\n            ],\n            \"include_dirs\": [\n                \"foo\",\n                \"foo/include\"\n            ],\n            \"conditions\": [\n                [\n                    \"OS==mac\",\n                    {\n                        \"sources\": [\n                            \"platform_test_mac.mm\"\n                        ]\n                    }\n                ]\n            ],\n            \"direct_dependent_settings\": {\n                \"defines\": [\n                    \"UNIT_TEST\"\n                ],\n                \"include_dirs\": [\n                    \"foo\",\n                    \"foo/include\"\n                ]\n            }\n        }\n    ]\n}\n```\n\n**结构元素**\n\n.gyp文件中定义了一些targets和构建规则。\n\n下面的关键字可以定义在最顶层：\n\n- conditions:条件定义。 \n- includes:包含.gypi文件的列表\n\t\n\t```\n\t\t{\n\t\t\t\"targets\": [\n\t\t\t  {\n\t\t\t\t\"target_name\": \"Thread\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"includes\": [\n\t\t\t\t\"../common.gypi\",\n\t\t\t\t\"./thread.gypi\"\n\t\t\t\t]\n\t\t\t\t...\n\t\t\t  }\n\t\t\t]\n\t\t}\n\t```\n- target_defaults:默认的项目配置，每个项目(targets)的配置都需要从这个配置继承\n- targets:项目列表\n\n\t```\n\t\t{\n\t\t\t\"targets\": [\n\t\t\t{\n\t\t\t\t\"target_name\": \"hello1\",\n\t\t\t\t\"product_extension\": \"stuff\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"sources\": [\n\t\t\t\t\"hello.c\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"target_name\": \"hello2\",\n\t\t\t\t\"target_extension\": \"stuff\",\n\t\t\t\t\"type\": \"executable\",\n\t\t\t\t\"sources\": [\n\t\t\t\t\"hello.c\"\n\t\t\t\t]\n\t\t\t}\n\t\t\t]\n\t\t}\n\t```\n- variable: 定义了键值对，可以被其他地方以`<(varname)`的方式引用\n\n\t```\n\t\t{\n\t\t  'variables': {\n\t\t    'pi': 'import math; print math.pi',\n\t\t    'third_letters': \"<(other_letters)HIJK\",\n\t\t    'letters_list': 'ABCD',\n\t\t    'other_letters': '<(letters_list)EFG',\n\t\t    'check_included': '<(included_variable)',\n\t\t    'check_lists': [\n\t\t      '<(included_variable)',\n\t\t      '<(third_letters)',\n\t\t      \n\t\t    ],\n\t\t    'check_int': 5,\n\t\t    'check_str_int': '6',\n\t\t    'check_list_int': [\n\t\t      7,\n\t\t      '8',\n\t\t      9,\n\t\t      \n\t\t    ],\n\t\t    'not_int_1': ' 10',\n\t\t    'not_int_2': '11 ',\n\t\t    'not_int_3': '012',\n\t\t    'not_int_4': '13.0',\n\t\t    'not_int_5': '+14',\n\t\t    'negative_int': '-15',\n\t\t    'zero_int': '0',\n\t\t    \n\t\t  },\n\t\t  ...\n\t\t}\n\t```\n\t\n**项目(targets)**\n\n.gyp文件定义的一套构建项目的规则。targets中也可以包含`includes`,`conditions`和`variables`。下面的是一些targets中的专有字段：\n\n- target_name: 指定定义的target的名称\n- type: target的类型。支持`executable`、`static_library`、`shared_library`和`none`.其中`none`类型也很有用，可以作为处理资源、文档等特别项目的类型。例如，在Windows中,`none`将作为工具集类型的项目存在\n- product_extension:指定target生成目标的扩展名，不包含'.'\n- product_name: 指定tareget生成目标的文件名，与 `product_extension` 组成一个文件全名\n- dependencies:指定target依赖的其他target\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'a',\n\t\t      'type': 'static_library',\n\t\t      'dependencies': [\n\t\t        'b/b.gyp:b',\n\t\t        'c/c.gyp:*'\n\t\t      ],\n\t\t      'sources': [\n\t\t        'a.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ],\n\t\t  \n\t\t}\n\t\t}\n\t```\n\t\n- defines: 定义了预处理宏。类似于C/C++命令行编译中的-D或者/D选项\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'defines',\n\t\t      'type': 'executable',\n\t\t      'defines': [\n\t\t        'FOO',\n\t\t        'VALUE=1',\n\t\t        'PAREN_VALUE=(1+2+3)',\n\t\t        'HASH_VALUE=\"a#1\"',\n\t\t        \n\t\t      ],\n\t\t      'sources': [\n\t\t        'defines.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ]\n\t\t}\n\t\n\t```\n\t\n- include_dirs: 指定了包含文件的查找目录。类似于C/C++命令行编译中的-I或/I选项\n\n\t```\n\t\t{\n\t\t  'targets': [\n\t\t    {\n\t\t      'target_name': 'includes',\n\t\t      'type': 'executable',\n\t\t      'dependencies': [\n\t\t        'subdir/subdir_includes.gyp:subdir_includes',\n\t\t        \n\t\t      ],\n\t\t      'cflags': [\n\t\t        '-Ishadow1',\n\t\t        \n\t\t      ],\n\t\t      'include_dirs': [\n\t\t        '.',\n\t\t        'inc1',\n\t\t        'shadow2',\n\t\t        'subdir/inc2',\n\t\t        \n\t\t      ],\n\t\t      'sources': [\n\t\t        'includes.c',\n\t\t        \n\t\t      ],\n\t\t      \n\t\t    },\n\t\t    \n\t\t  ],\n\t\t  \n\t\t}\n\t\n\t```\n- sources:列出了项目中的代码文件和一些项目相关的文件.`sources!`段中可以指定被排除的文件\n- configurations:为targets定义的一套构建配置。\n- link\\_settings:指定target需要链接的库。`executable`和`shared_library` 类型的target需要指定链接库。这个段内可以指定target中可包含的除了`configurations`、`target_name`和`type`的所有配置。可以与`all_dependent_settings`、`direct_dependent_setting`做对比\n- direct\\_dependent\\_settings:指定依赖本target的target设置。这个段内可以指定target中可包含的除了`configurations`、`target_name`和`type`的所有属性。可以与`all_dependent_settings`、`link_settings`做对比\n- all\\_dependent\\_settings:\n- libraries:指定target依赖的库，见`link_settings>libraries`\n\n\t```\n\t\t...\n\n\t\t'link_settings': {\n\t\t\n\t\t'libraries': [\n\t\t\n\t\t'libiconv.dylib',\n\t\t\n\t\t'<(ZLIB_DIR)contrib/minizip/libminizip.a',\n\t\t\n\t\t'libcurl.dylib',],\n\t\t\n\t\t},\n\t\t\n\t\t...\n\n\t\n\t```\n- actions:针对输入的文件，定义了一组自定义的构建动作。\n- copies:定义了一套拷贝动作。\n- rules:\n- target\\_conditions:类似于conditions,但是起左右的时间比conditions晚\n- msvs\\_precompiled\\_header:指定预编译头文件。只能用于Visual Studio\n- msvs\\_precompiled\\_source:指定预编译源文件。只能用于Visual Studio\n- msvs\\_prebuild:生成之前事件。只能用于Visual Studio\n- msvs\\_postbuild:生成之后事件。只能用于Visual Studio\n\n\t```\n\t\t'msvs_postbuild':r'copy \"${OutDir}${TargetName}\" \"C:\\${TargetName}\"'\n\t```\n\t\n- msvs\\_props:指定target的属性页文件(.vsprops)。只能用于Visual Studio\n- msvs\\_cygwin\\_shell:指定action运行在cygwin下。只能用于Visual Studio\n- msvs\\_cygwin\\_dirs:指定cygwin的目录。只能用于Visual Studio\n- xcode\\_config\\_file:在xcode中，指定target的配置文件(.xcconfig)。只能用于xcode\n- xcode\\_framework\\_dirs:在xcode中，指定框架的目录。只能用于xcode\n","slug":"Gyp-学习记录","published":1,"updated":"2017-12-25T12:14:03.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk2000vpev2ejeu9kji","content":"<p>Gyp 学习记录</p>\n<p>GYP(Generate Your Projects)是由 Chromium 团队开发的跨平台自动化项目构建工具。</p>\n<h5 id=\"gyp简述\"><a href=\"#gyp简述\" class=\"headerlink\" title=\"gyp简述\"></a>gyp简述</h5><p>GYP的输入是.gyp和.gypi文件，.gypi文件是用于.gyp文件include使用的。.gyp文件就是符合特定格式的json文件。</p>\n<p>gyp文件中包含target，Visual C++下，gyp生成sln，target生成vcproj或vxcproj。</p>\n<a id=\"more\"></a>\n<h5 id=\"1-1-设计目标\"><a href=\"#1-1-设计目标\" class=\"headerlink\" title=\"1.1 设计目标\"></a>1.1 设计目标</h5><p>gyp设计针对目标就是为了解决chromium浏览器构建问题，最重要的就是支持多平台的构建。因为Chromium内部都是c/c++文件，因此主要考虑方便c/c++程序的构建。设计时候还考虑到下面这些问题：</p>\n<ul>\n<li>debug vs release</li>\n<li>cross compile</li>\n<li>toolchain interface</li>\n</ul>\n<h5 id=\"1-2-构建文件\"><a href=\"#1-2-构建文件\" class=\"headerlink\" title=\"1.2 构建文件\"></a>1.2 构建文件</h5><p>构建文件名字不固定，但是后缀通常是.gyp和.gypi(gyp included).构建文件内容就是python的一个数据结构.<br>example:</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">\t<span class=\"string\">'target_defaults'</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">'defines'</span>:[<span class=\"string\">'DEBUG'</span>],</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">'targets'</span>:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">'target_name'</span>:<span class=\"string\">'test'</span>, #生成的文件.</span><br><span class=\"line\">\t\t\t<span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>, #可执行程序.</span><br><span class=\"line\">\t\t\t<span class=\"string\">'sources'</span>:[<span class=\"string\">'test.cc'</span>],</span><br><span class=\"line\">\t\t\t<span class=\"string\">'defines'</span>:[<span class=\"string\">'FOO'</span>]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-gyp文件剖析\"><a href=\"#1-3-gyp文件剖析\" class=\"headerlink\" title=\"1.3 .gyp文件剖析\"></a>1.3 .gyp文件剖析</h5><p>整个构建文件最顶层是一个字典，包含了下面这些key:</p>\n<ul>\n<li>conditions //条件判断</li>\n<li>includes // 包含的构建文件</li>\n<li>target <sub>defualt</sub> //构建目标默认属性</li>\n<li>targets // 构建目标列表</li>\n<li>variables // 构建文件使用的变量</li>\n</ul>\n<h6 id=\"1-3-1-conditions\"><a href=\"#1-3-1-conditions\" class=\"headerlink\" title=\"1.3.1 conditions\"></a>1.3.1 conditions</h6><p>conditions分两种行为。 普通的conditions就在load构建文件之后立即计算，另外一种是target(conditions)是在计算完成依赖之后然后来进行计算的，两个过程分别就是early and late phases阶段。对于conditions写法非常简单</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'conditions</span><span class=\"symbol\">':</span>[</span><br><span class=\"line\">\t[<span class=\"symbol\">'OS==Linux</span>', &#123;<span class=\"symbol\">'sources</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'linux_interface.cc</span>']&#125;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>对于condition的判断，主要还是为了能够修改一些描述属性。从文档上来看，默认提供的条件就是OS判断，其他判断应该都是变量的判断。</p>\n<h6 id=\"1-3-2-targets\"><a href=\"#1-3-2-targets\" class=\"headerlink\" title=\"1.3.2 targets\"></a>1.3.2 targets</h6><p>target部分的话对target(default)里面设定的内容默认进行merge。比如上面例子的话，对于target/test来说，使用的define就会是-DDEBUG -DFOO.当然对于这种东西是可以进行其他策略选择的，比如如果修改成下面格式，那么就是直接替换：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'defines=</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'FOO</span>']</span><br></pre></td></tr></table></figure>\n<p>生成的defines就是-DFOO了。或者是可以剔除掉：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'defines!</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'DEBUG</span>']</span><br></pre></td></tr></table></figure>\n<p>生成的defines就没有任何内容了。通过在选项key后面添加操作符号来达到自定义目的(相对于全局环境).<br>对于一个target包括了下面这些重要属性：</p>\n<ul>\n<li>actions(list) //执行命令</li>\n<li>all<sub>dependentsettings</sub>(dict) //如果依赖这个target的话，需要使用的设置</li>\n<li>configurations(dict) 配置</li>\n<li>defines(list) //对于C/C++的defines</li>\n<li>dependencies(list) //依赖对象。如果是本文件的话那么直接引用，如果是其他文件的话，使用path/xxx.gyp:target.</li>\n<li>direct<sub>dependentsetting</sub>(dict) //直接依赖这个target的话，需要使用的设置</li>\n<li>include<sub>dirs</sub>(list) // 头文件目录</li>\n<li>libraries(list)//目标需要链接的库</li>\n<li>link<sub>settings</sub> //依赖这个target,需要使用的链接参数</li>\n<li>sources(list) //源文件</li>\n<li>target<sub>conditions</sub>(list) // 和conditions类似，但是是在完全计算之后然后来判断</li>\n<li>target<sub>name</sub>(string) //名字</li>\n<li>type //目标类型，现在只是支持static<sub>library</sub>,shared<sub>library</sub>,executable和none</li>\n</ul>\n<h6 id=\"1-3-3-includes\"><a href=\"#1-3-3-includes\" class=\"headerlink\" title=\"1.3.3 includes\"></a>1.3.3 includes</h6><p>gyp倾向的组织就是在toplevel上面存在一个gyp文件，可以存在子目录下面，但是子目录下面并不存放一个完整的构建文件， 通常只是存放构建文件的片段。为了区分，后缀为gypi。本身来说，这个gypi并不可以直接被gyp所接受生成native构建系统文件， 唯一的作用就是被toplevel的gyp文件进行include。如果对于Linux系统来说，最终生成的Makefile应该是一份大Makefile并且没有递归make的操作。 关于构造一个没有递归的Makefile是非常有价值的，不管是对于调试还是提升编译速度方面。可以参考文章Recusive Make Considered Harmful.<br>一旦我们允许include子目录的gypi文件进来，我们就必须规定哪些字段应该是文件。原因是假设存在src目录下面有src/BUILD.gypi这样一个文件，sources内容如下:</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'sources</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'src.cc</span>']</span><br></pre></td></tr></table></figure>\n<p>而在上层BUILD.gyp文件里面，使用includes语法：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'includes</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'./src/BUILD.gypi</span>']</span><br></pre></td></tr></table></figure>\n<p>那么在生成大Makefile的时候，我们必须清楚’sources’字段里面内容都是文件，不应该直接使用src.cc， 相反应该加上目录前缀src，<br>最终应该使用src/src.cc这样一个文件。关于哪些字段里面内容是路径， 这个在gyp里面有详细规定，在后面小节里面我们也会提到。</p>\n<h6 id=\"1-3-4-actions\"><a href=\"#1-3-4-actions\" class=\"headerlink\" title=\"1.3.4 actions\"></a>1.3.4 actions</h6><p>actions是targets里面的一个特殊属性，主要是用来进行target的自定义操作的.<br>每个action是一个dict，主要包含4个属性：</p>\n<ul>\n<li>action<sub>name</sub>(string). //操作名称</li>\n<li>input(list) //输入文件</li>\n<li>outputs (list) //输出文件</li>\n<li>actions(list) //命令</li>\n</ul>\n<p>有了这些属性就可以做一个完整的操作抽象。</p>\n<h6 id=\"1-3-5-variable\"><a href=\"#1-3-5-variable\" class=\"headerlink\" title=\"1.3.5 variable\"></a>1.3.5 variable</h6><p>variables这个小节里面是进行变量的定义，格式是dict。下面是一个例子：</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'variables'</span>:&#123;</span><br><span class=\"line\">    <span class=\"symbol\">'common_files'</span>:[<span class=\"symbol\">'src</span>/common.cc',<span class=\"symbol\">'src</span>/interface.cc'],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了引用变量，我们可以这样写：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&lt;@<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&gt;<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&gt;@<span class=\"comment\">(common_files)</span></span><br></pre></td></tr></table></figure>\n<p>总之引用变量必须加上(),同时在前面加上<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#x2c;&#60;&#x40;&#x2c;\">&#x2c;&#60;&#x40;&#x2c;</a>,&gt;@的4种中一种前缀符号。关于前缀符号的含义， 会在后面的operator小节里面说明。<br>对于变量类型，一共分为3类：</p>\n<ul>\n<li>predefined variables //预定义变量</li>\n<li>user-defined variables //用户定义变量</li>\n<li>automatic variables //自动变量</li>\n</ul>\n<p>预定义变量比如OS(系统环境),EXECUTABLE<sub>SUFFIX</sub>(可执行文件后缀).用户自定义变量就不再赘述。<br>自动变量类似于Makefile里面的$@,$这样的变量，好比反射。比如在target<sub>conditions</sub>部门的话，我们根据不同类型程序来做不同的condition:</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'target_conditions</span><span class=\"symbol\">':</span>[</span><br><span class=\"line\">\t[<span class=\"symbol\">'_type==static_library</span>',&#123;<span class=\"symbol\">'source</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'func.cc</span>']&#125;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>这样对于target为static<sub>library</sub>都会联编func.cc这个文件了，自动变量就是属性名称之前加上构成的。<br>存在自动变量非常必要。有时候我们在全局环境中，希望根据不同的条件来定义不同的行为，并且是在计算的同时在来做条件判断的。 这样就提出一个要求就是，条件判断部分必须有能力知道，当前到底在计算什么东西(反射)。</p>\n<h5 id=\"1-4-early-and-late-phases\"><a href=\"#1-4-early-and-late-phases\" class=\"headerlink\" title=\"1.4 early and late phases\"></a>1.4 early and late phases</h5><p>对于变量展开和条件判断有两个不同的阶段：<br>载入文件之后进行，就是early phase。<br>计算完成之后进行，就是late phase。<br>对于两个阶段允许不同操作是非常必要的。对于early phase这个肯定需要，而对于late phase的话， 有时候我们是希望了解到gyp处理完成某个target之后所有信息，然后进行判断的。<br>ps:comake2在设计的时候，就没有考虑late phase这个功能。造成没有办法在应用层添加延迟计算这样一个特性。 最终只能够是修改comake2代码来完成需求。</p>\n<h5 id=\"1-5-operator\"><a href=\"#1-5-operator\" class=\"headerlink\" title=\"1.5 operator\"></a>1.5 operator</h5><p>关于每个操作符号的含义：</p>\n<ul>\n<li>x= //字段内容进行覆盖</li>\n<li>x? //如果字段没有定义，那么就进行覆盖</li>\n<li>x+ //字段内容进行merge</li>\n<li>&lt; (x) //early phase计算变量x，并且以string类型返回结果</li>\n<li><blockquote>\n<p>(x) //late phase计算变量x，并且以string类型返回结果</p>\n</blockquote>\n</li>\n<li>&lt; @(x) //early phase计算变量x，并且以list类型返回结果</li>\n<li><blockquote>\n<p>@(x) //late phase计算变量x，并且以list类型返回结果</p>\n</blockquote>\n</li>\n<li>x! //从已有的x字段中排除部分</li>\n<li>x/ //操作允许使用include/exclude，内容是一个正则表达式来进行包含和排除列表里面内容</li>\n<li>&lt; !(x) //认为x是一个shell command，得到执行结果作为string类型返回</li>\n<li>&lt; !@(x) //认为x是一个shell command，得到执行结果作为list类型返回</li>\n</ul>\n<h5 id=\"1-6-路径内容属性\"><a href=\"#1-6-路径内容属性\" class=\"headerlink\" title=\"1.6 路径内容属性\"></a>1.6 路径内容属性</h5><p>在includes这个小节提到了，gyp规定了某些属性的内容必须为路径。这些属性是：</p>\n<ul>\n<li>files.</li>\n<li>include<sub>dirs</sub>.</li>\n<li>inputs.</li>\n<li>libraries.</li>\n<li>outputs.</li>\n<li>sources.</li>\n</ul>\n<p>但是gyp对于里面的内容也做了一些特殊处理。对于内容来说，如果以下面这些字符开头：</p>\n<ul>\n<li>/ //绝对路径</li>\n<li>$ //变量</li>\n<li><ul>\n<li>//链接参数比如-lm</li>\n</ul>\n</li>\n<li>&lt; ,&gt;,! //operator</li>\n<li>其他作为相对路径</li>\n</ul>\n<h5 id=\"1-7-在Ubuntu下使用gyp\"><a href=\"#1-7-在Ubuntu下使用gyp\" class=\"headerlink\" title=\"1.7 在Ubuntu下使用gyp\"></a>1.7 在Ubuntu下使用gyp</h5><blockquote>\n<p>安装工具： sudo apt-get install gyp</p>\n</blockquote>\n<h6 id=\"1-7-1-简单实例\"><a href=\"#1-7-1-简单实例\" class=\"headerlink\" title=\"1.7.1 简单实例\"></a>1.7.1 简单实例</h6><p>hello.c</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"hello gyp\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.gyp</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;    </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>: [    </span><br><span class=\"line\">     &#123;    </span><br><span class=\"line\">       <span class=\"string\">'target_name'</span>: <span class=\"string\">'hello'</span>,    </span><br><span class=\"line\">       <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,    </span><br><span class=\"line\">       <span class=\"string\">'sources'</span>: [    </span><br><span class=\"line\">         <span class=\"string\">'hello.c'</span>,    </span><br><span class=\"line\">       ],    </span><br><span class=\"line\">     &#125;,    </span><br><span class=\"line\">   ],    </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>构建：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"params\">--depth=</span><span class=\"string\">./</span> main.gyp</span><br></pre></td></tr></table></figure>\n<p>编译<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">make</span></span><br></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">./hello</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"1-7-2-改进\"><a href=\"#1-7-2-改进\" class=\"headerlink\" title=\"1.7.2 改进\"></a>1.7.2 改进</h6><p>把上面的构建命令做成脚本 genPrj.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">gyp --depth=./ --generator-output=./build main.gyp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -d build ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> build</span><br><span class=\"line\">\tmake</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>所有生成非源码文件都生成到了build目录下，看起来比较干净，在做一个清除脚本，清除就更省事了。do_clean.sh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">rm -rf build</span><br></pre></td></tr></table></figure>\n<h6 id=\"1-7-3-c-实例\"><a href=\"#1-7-3-c-实例\" class=\"headerlink\" title=\"1.7.3 c++实例\"></a>1.7.3 c++实例</h6><p>目录结构</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">|-- do_clean.sh</span></span><br><span class=\"line\"><span class=\"string\">|-- genPrj.sh</span></span><br><span class=\"line\"><span class=\"string\">|---src</span></span><br><span class=\"line\">     <span class=\"string\">|-- hello.cc</span></span><br><span class=\"line\">     <span class=\"string\">|-- main.gyp</span></span><br><span class=\"line\">     <span class=\"string\">|-- my_class</span></span><br><span class=\"line\">           <span class=\"string\">|-- my_class.cc</span></span><br><span class=\"line\">           <span class=\"string\">|-- my_class.h</span></span><br></pre></td></tr></table></figure>\n<p>genPrj.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">gyp --depth=. --generator-output=build src/main.gyp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -d build ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> bulid</span><br><span class=\"line\">\tmake</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>hello.cc</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"my_class/my_class.h\"</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>** argv)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello world\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"function\">MyClass <span class=\"title\">my_class</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;</span><br><span class=\"line\">\tmy_class.Fun1();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.gyp</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;    </span><br><span class=\"line\">   <span class=\"symbol\">'targets'</span>: [    </span><br><span class=\"line\">     &#123;    </span><br><span class=\"line\">       <span class=\"symbol\">'target_name'</span>: <span class=\"symbol\">'my_class'</span>,    </span><br><span class=\"line\">       <span class=\"symbol\">'type'</span>: <span class=\"symbol\">'executable'</span>,    </span><br><span class=\"line\">       <span class=\"symbol\">'sources'</span>: [    </span><br><span class=\"line\">         <span class=\"symbol\">'hello</span>.cc',    </span><br><span class=\"line\">         <span class=\"symbol\">'my_class</span>/my_class.h',    </span><br><span class=\"line\">         <span class=\"symbol\">'my_class</span>/my_class.cc',    </span><br><span class=\"line\">       ],    </span><br><span class=\"line\">     &#125;,    </span><br><span class=\"line\">   ],    </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>my_class.cc</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"my_class.h\"</span>    </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;    </span></span></span><br><span class=\"line\"><span class=\"keyword\">void</span> MyClass::Fun1() &#123;    </span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"the value is %d\\n\"</span>, value_);    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>my_class.h</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> &#123;    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:    </span><br><span class=\"line\">  MyClass(<span class=\"keyword\">int</span> <span class=\"keyword\">value</span>) : value_(<span class=\"keyword\">value</span>) &#123;&#125;    </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Fun1</span>(<span class=\"params\"></span>)</span>;    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:    </span><br><span class=\"line\">  <span class=\"keyword\">int</span> value_;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-8-ninja\"><a href=\"#1-8-ninja\" class=\"headerlink\" title=\"1.8 ninja\"></a>1.8 ninja</h5><p>gyp是google为chromium项目开发的管理工具，功能类似于cmake。gyp只能产生编译脚本，真正的编译工作还有靠其他工具，例如: ninja。</p>\n<h6 id=\"1-8-1-安装gyp和ninja\"><a href=\"#1-8-1-安装gyp和ninja\" class=\"headerlink\" title=\"1.8.1 安装gyp和ninja\"></a>1.8.1 安装gyp和ninja</h6><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install gyp</span><br><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install ninja-build</span><br></pre></td></tr></table></figure>\n<h6 id=\"1-8-2-一个简单的例子\"><a href=\"#1-8-2-一个简单的例子\" class=\"headerlink\" title=\"1.8.2 一个简单的例子\"></a>1.8.2 一个简单的例子</h6><ol>\n<li><p>首先准备一个源文件，我写了template_sample.cpp,代码如下：</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;  </span><br><span class=\"line\"><span class=\"function\">T <span class=\"title\">add</span><span class=\"params\">(T a, T b)</span></span>&#123; <span class=\"keyword\">return</span> a+b; &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">     <span class=\"built_in\">cout</span>&lt;&lt; add&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">5</span>,<span class=\"number\">6</span>)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">     <span class=\"built_in\">cout</span>&lt;&lt; add&lt;<span class=\"keyword\">double</span>&gt;(<span class=\"number\">3.4</span>,<span class=\"number\">4.0</span>)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写gyp使用的文件，build.gyp（后缀是.gyp即可，名字随意）</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成ninja脚本，命令如下：</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"attribute\">-depth</span>=. <span class=\"attribute\">-format</span>=ninja ./build.gyp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>其中`-depth=.` 表示在当前文件夹下寻找开始的gyp脚本，必须显示的指出gyp没有默认设置。 `-format=ninja` 表示要生成ninja的脚本，默认生成的是Makefile\n执行后，会在当前目录下生成一个out目录。其结构如下：\n\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">out</span></span><br><span class=\"line\">|<span class=\"comment\">-- Default</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- an</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- build.ninja</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- obj</span></span><br><span class=\"line\">\t\t\t  |<span class=\"comment\">-- an.ninja</span></span><br><span class=\"line\">\t\t\t  |<span class=\"comment\">-- an.template_sample.o</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><p>编译，执行如下命令：</p>\n <figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ninja -C <span class=\"keyword\">out</span>/<span class=\"keyword\">Default</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>**注意**: -C是大写，执行成功后会在out/Default目录下生成一个叫做an的可执行文件，这个an就是在target_name字段指定的名字。\n</code></pre><ol>\n<li><p>clean整个工程重新编译</p>\n<p> 目前，gyp没有提供clean的方案，所以只能手动删除out目录。</p>\n</li>\n</ol>\n<h6 id=\"1-8-3-gyp脚本的编写\"><a href=\"#1-8-3-gyp脚本的编写\" class=\"headerlink\" title=\"1.8.3 gyp脚本的编写\"></a>1.8.3 gyp脚本的编写</h6><ol>\n<li><p>如何增加编译、链接参数<br> 编译参数一般增加在conditions字段，根据系统的不同增加cflags和ldflags,如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[  </span><br><span class=\"line\">              [<span class=\"string\">'OS==\"win\"'</span>,&#123;  </span><br><span class=\"line\">                             <span class=\"string\">'cflags'</span>:[],  </span><br><span class=\"line\">                             <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;,&#123;  </span><br><span class=\"line\">                              <span class=\"string\">'cflags'</span>:[  </span><br><span class=\"line\">                                   <span class=\"string\">'--std=c++11'</span>,  </span><br><span class=\"line\">                               ],  </span><br><span class=\"line\">                              <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;  </span><br><span class=\"line\">              ],  </span><br><span class=\"line\">            ]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>注意conditions字段的变化：`&apos;OS=&quot;win&quot;&apos;`是条件语句的后要有`,`号，第一个括号内表示条件为真时的参数，第二个括号表示条件为假时的参数。上面的例子中，我在不是win的系统上增加了`--std=c++11`这个参数。\n另外，这里有必要提一下链接顺序问题。在链接的时候，链接器对符号表的寻找是按照你输入的命令的顺序进行的，比如a.o需要libm.so的函数，那么libm.so在链接命令里就必须写在a.o的后面，因为链接器发现a.o有函数没有找到，就只会去他后面的库里找，如果你把libm.so写在前面，自然就找不到。所以在增加链接库的时候，不要在ldflags里增加-l类的参数，这类参数要加到libraries字段里 如：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[  </span><br><span class=\"line\">              [<span class=\"string\">'OS==\"win\"'</span>,&#123;  </span><br><span class=\"line\">                             <span class=\"string\">'cflags'</span>:[],  </span><br><span class=\"line\">                             <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;,&#123;  </span><br><span class=\"line\">                              <span class=\"string\">'cflags'</span>:[  </span><br><span class=\"line\">                                   <span class=\"string\">'--std=c++11'</span>,  </span><br><span class=\"line\">                               ],  </span><br><span class=\"line\">                              <span class=\"string\">'ldflags'</span>:[]，  </span><br><span class=\"line\">                              <span class=\"string\">'libraries'</span>:[  </span><br><span class=\"line\">                                  <span class=\"string\">'-lm'</span>  </span><br><span class=\"line\">                              ]  </span><br><span class=\"line\">                         &#125;  </span><br><span class=\"line\">              ],  </span><br><span class=\"line\">            ]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><p>头文件路径设定 –include_dirs字段的使用<br> 有如下工程目录结构</p>\n <figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|<span class=\"string\">-- build.gyp</span></span><br><span class=\"line\">|<span class=\"string\">-- include</span></span><br><span class=\"line\">|<span class=\"string\">\t\t</span>|<span class=\"string\">-- define.h</span></span><br><span class=\"line\">|<span class=\"string\">-- main.cpp</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>main.cpp的代码如下\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"defines.h\"</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt; MY_NUMBER &lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n可见main.cpp文件引用了defines.h这个头文件，所以在编译的时候需要告诉编译系统到哪里去寻找这个defines.h文件。为此buid.gyp如下：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'include'</span>  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n可以看出头文件的位置include在include_dirs字段中被指出。这里需要注意，两个单引号之间一定是文件的路径，不要包含不必要的空格等其他字符。\n</code></pre><ol>\n<li><p>编译参数增加宏定义 –defines字段使用<br> 测试程序的源码如下：</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> BIG_NUMBER  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> out_number = <span class=\"number\">10</span>;   </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> out_number = <span class=\"number\">1</span>;  </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span>  </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt; out_number &lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 可以看出，如果BIG_NUMBER宏被定义，则输出为10 ，否则为1。在使用Makefile的时候，我们可以通过为gcc增加-DBIG_NUBMER参数的方式来定义这个宏。那在gyp管理的时候，我们就要使用defines字段，代码如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[  </span><br><span class=\"line\">                 <span class=\"string\">'BIG_NUMBER'</span>  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译静态库(动态库)</p>\n<p> 有时我们不是要输出一个可执行文件，而是要编译一个静态库或动态库。这就要修改type字段，上文中type字段使用了executable，实际还可以设置为<code>static_library</code>,修改后的gyp脚本如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'static_library'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>这样在out/Default/obj的目录下就会生成一个liban.a的静态库。</p>\n<pre><code>动态库的方式类似，只需把type字段设置为shared_library即可。\n另外还有一种使用变量的方法，在这里提前介绍一下。就是将type字段设置为`&lt;(library)`,完整的代码如下：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'&lt;(library)'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n然后在使用gyp工具的时候指定这个library的值，如：\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"attribute\">-depth</span>=. <span class=\"attribute\">-format</span>=ninja <span class=\"attribute\">-Dlibrary</span>=static_library ./build.gyp</span><br></pre></td></tr></table></figure>\n\n\n这样生成ninja脚本后，也可以生成静态库，这样做的好处是你可以在真正输出时再决定输出静态库还是动态库。尤其对于要一次生成多个库的情况下，这种方法尤其好用。\n</code></pre><h5 id=\"1-9-更多功能介绍\"><a href=\"#1-9-更多功能介绍\" class=\"headerlink\" title=\"1.9 更多功能介绍\"></a>1.9 更多功能介绍</h5><h6 id=\"设计准则：\"><a href=\"#设计准则：\" class=\"headerlink\" title=\"设计准则：\"></a>设计准则：</h6><ul>\n<li>关键字一致性：所有的关键字都和平台项目的配置字段相同</li>\n<li>通过前缀表明配置属于的特定平台。比如：<code>msvs_disabled_warnings</code>,<code>xcode_framework_dirs</code></li>\n</ul>\n<p><strong>样例：</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"target_defaults\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"defines\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"U_STATIC_IMPLEMENTATION\"</span>,</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">\"LOGFILE\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo.log\"</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"..\"</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"static_library\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">                <span class=\"string\">\"foo/src/foo.cc\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo/src/foo_main.cc\"</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">                <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo/include\"</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"conditions\"</span>: [</span><br><span class=\"line\">                [</span><br><span class=\"line\">                    <span class=\"string\">\"OS==mac\"</span>,</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">                            <span class=\"string\">\"platform_test_mac.mm\"</span></span><br><span class=\"line\">                        ]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"direct_dependent_settings\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"defines\"</span>: [</span><br><span class=\"line\">                    <span class=\"string\">\"UNIT_TEST\"</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">                    <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">                    <span class=\"string\">\"foo/include\"</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>结构元素</strong></p>\n<p>.gyp文件中定义了一些targets和构建规则。</p>\n<p>下面的关键字可以定义在最顶层：</p>\n<ul>\n<li>conditions:条件定义。 </li>\n<li><p>includes:包含.gypi文件的列表</p>\n  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"Thread\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"includes\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"../common.gypi\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"./thread.gypi\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>target_defaults:默认的项目配置，每个项目(targets)的配置都需要从这个配置继承</p>\n</li>\n<li><p>targets:项目列表</p>\n  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"hello1\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"product_extension\"</span>: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"hello.c\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"hello2\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_extension\"</span>: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"hello.c\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>variable: 定义了键值对，可以被其他地方以<code>&lt;(varname)</code>的方式引用</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'variables'</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">'pi'</span>: <span class=\"string\">'import math; print math.pi'</span>,</span><br><span class=\"line\">    <span class=\"string\">'third_letters'</span>: <span class=\"string\">\"&lt;(other_letters)HIJK\"</span>,</span><br><span class=\"line\">    <span class=\"string\">'letters_list'</span>: <span class=\"string\">'ABCD'</span>,</span><br><span class=\"line\">    <span class=\"string\">'other_letters'</span>: <span class=\"string\">'&lt;(letters_list)EFG'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_included'</span>: <span class=\"string\">'&lt;(included_variable)'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_lists'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'&lt;(included_variable)'</span>,</span><br><span class=\"line\">      <span class=\"string\">'&lt;(third_letters)'</span>,</span><br><span class=\"line\">      </span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'check_int'</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_str_int'</span>: <span class=\"string\">'6'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_list_int'</span>: [</span><br><span class=\"line\">      <span class=\"number\">7</span>,</span><br><span class=\"line\">      <span class=\"string\">'8'</span>,</span><br><span class=\"line\">      <span class=\"number\">9</span>,</span><br><span class=\"line\">      </span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'not_int_1'</span>: <span class=\"string\">' 10'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_2'</span>: <span class=\"string\">'11 '</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_3'</span>: <span class=\"string\">'012'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_4'</span>: <span class=\"string\">'13.0'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_5'</span>: <span class=\"string\">'+14'</span>,</span><br><span class=\"line\">    <span class=\"string\">'negative_int'</span>: <span class=\"string\">'-15'</span>,</span><br><span class=\"line\">    <span class=\"string\">'zero_int'</span>: <span class=\"string\">'0'</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>项目(targets)</strong></p>\n<p>.gyp文件定义的一套构建项目的规则。targets中也可以包含<code>includes</code>,<code>conditions</code>和<code>variables</code>。下面的是一些targets中的专有字段：</p>\n<ul>\n<li>target_name: 指定定义的target的名称</li>\n<li>type: target的类型。支持<code>executable</code>、<code>static_library</code>、<code>shared_library</code>和<code>none</code>.其中<code>none</code>类型也很有用，可以作为处理资源、文档等特别项目的类型。例如，在Windows中,<code>none</code>将作为工具集类型的项目存在</li>\n<li>product_extension:指定target生成目标的扩展名，不包含’.’</li>\n<li>product_name: 指定tareget生成目标的文件名，与 <code>product_extension</code> 组成一个文件全名</li>\n<li><p>dependencies:指定target依赖的其他target</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'static_library'</span>,</span><br><span class=\"line\">      <span class=\"string\">'dependencies'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'b/b.gyp:b'</span>,</span><br><span class=\"line\">        <span class=\"string\">'c/c.gyp:*'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'a.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>defines: 定义了预处理宏。类似于C/C++命令行编译中的-D或者/D选项</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'defines'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,</span><br><span class=\"line\">      <span class=\"string\">'defines'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'FOO'</span>,</span><br><span class=\"line\">        <span class=\"string\">'VALUE=1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PAREN_VALUE=(1+2+3)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HASH_VALUE=\"a#1\"'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'defines.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>include_dirs: 指定了包含文件的查找目录。类似于C/C++命令行编译中的-I或/I选项</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'includes'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,</span><br><span class=\"line\">      <span class=\"string\">'dependencies'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'subdir/subdir_includes.gyp:subdir_includes'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'cflags'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'-Ishadow1'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'include_dirs'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'.'</span>,</span><br><span class=\"line\">        <span class=\"string\">'inc1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'shadow2'</span>,</span><br><span class=\"line\">        <span class=\"string\">'subdir/inc2'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'includes.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sources:列出了项目中的代码文件和一些项目相关的文件.<code>sources!</code>段中可以指定被排除的文件</p>\n</li>\n<li>configurations:为targets定义的一套构建配置。</li>\n<li>link_settings:指定target需要链接的库。<code>executable</code>和<code>shared_library</code> 类型的target需要指定链接库。这个段内可以指定target中可包含的除了<code>configurations</code>、<code>target_name</code>和<code>type</code>的所有配置。可以与<code>all_dependent_settings</code>、<code>direct_dependent_setting</code>做对比</li>\n<li>direct_dependent_settings:指定依赖本target的target设置。这个段内可以指定target中可包含的除了<code>configurations</code>、<code>target_name</code>和<code>type</code>的所有属性。可以与<code>all_dependent_settings</code>、<code>link_settings</code>做对比</li>\n<li>all_dependent_settings:</li>\n<li><p>libraries:指定target依赖的库，见<code>link_settings&gt;libraries</code></p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'link_settings'</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libraries'</span>: [</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libiconv.dylib'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'&lt;(ZLIB_DIR)contrib/minizip/libminizip.a'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libcurl.dylib'</span>,],</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>actions:针对输入的文件，定义了一组自定义的构建动作。</p>\n</li>\n<li>copies:定义了一套拷贝动作。</li>\n<li>rules:</li>\n<li>target_conditions:类似于conditions,但是起左右的时间比conditions晚</li>\n<li>msvs_precompiled_header:指定预编译头文件。只能用于Visual Studio</li>\n<li>msvs_precompiled_source:指定预编译源文件。只能用于Visual Studio</li>\n<li>msvs_prebuild:生成之前事件。只能用于Visual Studio</li>\n<li><p>msvs_postbuild:生成之后事件。只能用于Visual Studio</p>\n  <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'msvs_postbuild'</span>:<span class=\"string\">r'copy \"$&#123;OutDir&#125;$&#123;TargetName&#125;\" \"C:\\$&#123;TargetName&#125;\"'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>msvs_props:指定target的属性页文件(.vsprops)。只能用于Visual Studio</li>\n<li>msvs_cygwin_shell:指定action运行在cygwin下。只能用于Visual Studio</li>\n<li>msvs_cygwin_dirs:指定cygwin的目录。只能用于Visual Studio</li>\n<li>xcode_config_file:在xcode中，指定target的配置文件(.xcconfig)。只能用于xcode</li>\n<li>xcode_framework_dirs:在xcode中，指定框架的目录。只能用于xcode</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p>Gyp 学习记录</p>\n<p>GYP(Generate Your Projects)是由 Chromium 团队开发的跨平台自动化项目构建工具。</p>\n<h5 id=\"gyp简述\"><a href=\"#gyp简述\" class=\"headerlink\" title=\"gyp简述\"></a>gyp简述</h5><p>GYP的输入是.gyp和.gypi文件，.gypi文件是用于.gyp文件include使用的。.gyp文件就是符合特定格式的json文件。</p>\n<p>gyp文件中包含target，Visual C++下，gyp生成sln，target生成vcproj或vxcproj。</p>","more":"<h5 id=\"1-1-设计目标\"><a href=\"#1-1-设计目标\" class=\"headerlink\" title=\"1.1 设计目标\"></a>1.1 设计目标</h5><p>gyp设计针对目标就是为了解决chromium浏览器构建问题，最重要的就是支持多平台的构建。因为Chromium内部都是c/c++文件，因此主要考虑方便c/c++程序的构建。设计时候还考虑到下面这些问题：</p>\n<ul>\n<li>debug vs release</li>\n<li>cross compile</li>\n<li>toolchain interface</li>\n</ul>\n<h5 id=\"1-2-构建文件\"><a href=\"#1-2-构建文件\" class=\"headerlink\" title=\"1.2 构建文件\"></a>1.2 构建文件</h5><p>构建文件名字不固定，但是后缀通常是.gyp和.gypi(gyp included).构建文件内容就是python的一个数据结构.<br>example:</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123; </span><br><span class=\"line\">\t<span class=\"string\">'target_defaults'</span>:&#123;</span><br><span class=\"line\">\t\t<span class=\"string\">'defines'</span>:[<span class=\"string\">'DEBUG'</span>],</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t<span class=\"string\">'targets'</span>:[</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">'target_name'</span>:<span class=\"string\">'test'</span>, #生成的文件.</span><br><span class=\"line\">\t\t\t<span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>, #可执行程序.</span><br><span class=\"line\">\t\t\t<span class=\"string\">'sources'</span>:[<span class=\"string\">'test.cc'</span>],</span><br><span class=\"line\">\t\t\t<span class=\"string\">'defines'</span>:[<span class=\"string\">'FOO'</span>]</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-3-gyp文件剖析\"><a href=\"#1-3-gyp文件剖析\" class=\"headerlink\" title=\"1.3 .gyp文件剖析\"></a>1.3 .gyp文件剖析</h5><p>整个构建文件最顶层是一个字典，包含了下面这些key:</p>\n<ul>\n<li>conditions //条件判断</li>\n<li>includes // 包含的构建文件</li>\n<li>target <sub>defualt</sub> //构建目标默认属性</li>\n<li>targets // 构建目标列表</li>\n<li>variables // 构建文件使用的变量</li>\n</ul>\n<h6 id=\"1-3-1-conditions\"><a href=\"#1-3-1-conditions\" class=\"headerlink\" title=\"1.3.1 conditions\"></a>1.3.1 conditions</h6><p>conditions分两种行为。 普通的conditions就在load构建文件之后立即计算，另外一种是target(conditions)是在计算完成依赖之后然后来进行计算的，两个过程分别就是early and late phases阶段。对于conditions写法非常简单</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'conditions</span><span class=\"symbol\">':</span>[</span><br><span class=\"line\">\t[<span class=\"symbol\">'OS==Linux</span>', &#123;<span class=\"symbol\">'sources</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'linux_interface.cc</span>']&#125;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>对于condition的判断，主要还是为了能够修改一些描述属性。从文档上来看，默认提供的条件就是OS判断，其他判断应该都是变量的判断。</p>\n<h6 id=\"1-3-2-targets\"><a href=\"#1-3-2-targets\" class=\"headerlink\" title=\"1.3.2 targets\"></a>1.3.2 targets</h6><p>target部分的话对target(default)里面设定的内容默认进行merge。比如上面例子的话，对于target/test来说，使用的define就会是-DDEBUG -DFOO.当然对于这种东西是可以进行其他策略选择的，比如如果修改成下面格式，那么就是直接替换：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'defines=</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'FOO</span>']</span><br></pre></td></tr></table></figure>\n<p>生成的defines就是-DFOO了。或者是可以剔除掉：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'defines!</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'DEBUG</span>']</span><br></pre></td></tr></table></figure>\n<p>生成的defines就没有任何内容了。通过在选项key后面添加操作符号来达到自定义目的(相对于全局环境).<br>对于一个target包括了下面这些重要属性：</p>\n<ul>\n<li>actions(list) //执行命令</li>\n<li>all<sub>dependentsettings</sub>(dict) //如果依赖这个target的话，需要使用的设置</li>\n<li>configurations(dict) 配置</li>\n<li>defines(list) //对于C/C++的defines</li>\n<li>dependencies(list) //依赖对象。如果是本文件的话那么直接引用，如果是其他文件的话，使用path/xxx.gyp:target.</li>\n<li>direct<sub>dependentsetting</sub>(dict) //直接依赖这个target的话，需要使用的设置</li>\n<li>include<sub>dirs</sub>(list) // 头文件目录</li>\n<li>libraries(list)//目标需要链接的库</li>\n<li>link<sub>settings</sub> //依赖这个target,需要使用的链接参数</li>\n<li>sources(list) //源文件</li>\n<li>target<sub>conditions</sub>(list) // 和conditions类似，但是是在完全计算之后然后来判断</li>\n<li>target<sub>name</sub>(string) //名字</li>\n<li>type //目标类型，现在只是支持static<sub>library</sub>,shared<sub>library</sub>,executable和none</li>\n</ul>\n<h6 id=\"1-3-3-includes\"><a href=\"#1-3-3-includes\" class=\"headerlink\" title=\"1.3.3 includes\"></a>1.3.3 includes</h6><p>gyp倾向的组织就是在toplevel上面存在一个gyp文件，可以存在子目录下面，但是子目录下面并不存放一个完整的构建文件， 通常只是存放构建文件的片段。为了区分，后缀为gypi。本身来说，这个gypi并不可以直接被gyp所接受生成native构建系统文件， 唯一的作用就是被toplevel的gyp文件进行include。如果对于Linux系统来说，最终生成的Makefile应该是一份大Makefile并且没有递归make的操作。 关于构造一个没有递归的Makefile是非常有价值的，不管是对于调试还是提升编译速度方面。可以参考文章Recusive Make Considered Harmful.<br>一旦我们允许include子目录的gypi文件进来，我们就必须规定哪些字段应该是文件。原因是假设存在src目录下面有src/BUILD.gypi这样一个文件，sources内容如下:</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'sources</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'src.cc</span>']</span><br></pre></td></tr></table></figure>\n<p>而在上层BUILD.gyp文件里面，使用includes语法：</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'includes</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'./src/BUILD.gypi</span>']</span><br></pre></td></tr></table></figure>\n<p>那么在生成大Makefile的时候，我们必须清楚’sources’字段里面内容都是文件，不应该直接使用src.cc， 相反应该加上目录前缀src，<br>最终应该使用src/src.cc这样一个文件。关于哪些字段里面内容是路径， 这个在gyp里面有详细规定，在后面小节里面我们也会提到。</p>\n<h6 id=\"1-3-4-actions\"><a href=\"#1-3-4-actions\" class=\"headerlink\" title=\"1.3.4 actions\"></a>1.3.4 actions</h6><p>actions是targets里面的一个特殊属性，主要是用来进行target的自定义操作的.<br>每个action是一个dict，主要包含4个属性：</p>\n<ul>\n<li>action<sub>name</sub>(string). //操作名称</li>\n<li>input(list) //输入文件</li>\n<li>outputs (list) //输出文件</li>\n<li>actions(list) //命令</li>\n</ul>\n<p>有了这些属性就可以做一个完整的操作抽象。</p>\n<h6 id=\"1-3-5-variable\"><a href=\"#1-3-5-variable\" class=\"headerlink\" title=\"1.3.5 variable\"></a>1.3.5 variable</h6><p>variables这个小节里面是进行变量的定义，格式是dict。下面是一个例子：</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'variables'</span>:&#123;</span><br><span class=\"line\">    <span class=\"symbol\">'common_files'</span>:[<span class=\"symbol\">'src</span>/common.cc',<span class=\"symbol\">'src</span>/interface.cc'],</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了引用变量，我们可以这样写：</p>\n<figure class=\"highlight gcode\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&lt;@<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&gt;<span class=\"comment\">(common_files)</span></span><br><span class=\"line\">&gt;@<span class=\"comment\">(common_files)</span></span><br></pre></td></tr></table></figure>\n<p>总之引用变量必须加上(),同时在前面加上<a href=\"&#109;&#97;&#x69;&#x6c;&#x74;&#111;&#58;&#x2c;&#60;&#x40;&#x2c;\">&#x2c;&#60;&#x40;&#x2c;</a>,&gt;@的4种中一种前缀符号。关于前缀符号的含义， 会在后面的operator小节里面说明。<br>对于变量类型，一共分为3类：</p>\n<ul>\n<li>predefined variables //预定义变量</li>\n<li>user-defined variables //用户定义变量</li>\n<li>automatic variables //自动变量</li>\n</ul>\n<p>预定义变量比如OS(系统环境),EXECUTABLE<sub>SUFFIX</sub>(可执行文件后缀).用户自定义变量就不再赘述。<br>自动变量类似于Makefile里面的$@,$这样的变量，好比反射。比如在target<sub>conditions</sub>部门的话，我们根据不同类型程序来做不同的condition:</p>\n<figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">'target_conditions</span><span class=\"symbol\">':</span>[</span><br><span class=\"line\">\t[<span class=\"symbol\">'_type==static_library</span>',&#123;<span class=\"symbol\">'source</span><span class=\"symbol\">':</span>[<span class=\"symbol\">'func.cc</span>']&#125;]</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<p>这样对于target为static<sub>library</sub>都会联编func.cc这个文件了，自动变量就是属性名称之前加上构成的。<br>存在自动变量非常必要。有时候我们在全局环境中，希望根据不同的条件来定义不同的行为，并且是在计算的同时在来做条件判断的。 这样就提出一个要求就是，条件判断部分必须有能力知道，当前到底在计算什么东西(反射)。</p>\n<h5 id=\"1-4-early-and-late-phases\"><a href=\"#1-4-early-and-late-phases\" class=\"headerlink\" title=\"1.4 early and late phases\"></a>1.4 early and late phases</h5><p>对于变量展开和条件判断有两个不同的阶段：<br>载入文件之后进行，就是early phase。<br>计算完成之后进行，就是late phase。<br>对于两个阶段允许不同操作是非常必要的。对于early phase这个肯定需要，而对于late phase的话， 有时候我们是希望了解到gyp处理完成某个target之后所有信息，然后进行判断的。<br>ps:comake2在设计的时候，就没有考虑late phase这个功能。造成没有办法在应用层添加延迟计算这样一个特性。 最终只能够是修改comake2代码来完成需求。</p>\n<h5 id=\"1-5-operator\"><a href=\"#1-5-operator\" class=\"headerlink\" title=\"1.5 operator\"></a>1.5 operator</h5><p>关于每个操作符号的含义：</p>\n<ul>\n<li>x= //字段内容进行覆盖</li>\n<li>x? //如果字段没有定义，那么就进行覆盖</li>\n<li>x+ //字段内容进行merge</li>\n<li>&lt; (x) //early phase计算变量x，并且以string类型返回结果</li>\n<li><blockquote>\n<p>(x) //late phase计算变量x，并且以string类型返回结果</p>\n</blockquote>\n</li>\n<li>&lt; @(x) //early phase计算变量x，并且以list类型返回结果</li>\n<li><blockquote>\n<p>@(x) //late phase计算变量x，并且以list类型返回结果</p>\n</blockquote>\n</li>\n<li>x! //从已有的x字段中排除部分</li>\n<li>x/ //操作允许使用include/exclude，内容是一个正则表达式来进行包含和排除列表里面内容</li>\n<li>&lt; !(x) //认为x是一个shell command，得到执行结果作为string类型返回</li>\n<li>&lt; !@(x) //认为x是一个shell command，得到执行结果作为list类型返回</li>\n</ul>\n<h5 id=\"1-6-路径内容属性\"><a href=\"#1-6-路径内容属性\" class=\"headerlink\" title=\"1.6 路径内容属性\"></a>1.6 路径内容属性</h5><p>在includes这个小节提到了，gyp规定了某些属性的内容必须为路径。这些属性是：</p>\n<ul>\n<li>files.</li>\n<li>include<sub>dirs</sub>.</li>\n<li>inputs.</li>\n<li>libraries.</li>\n<li>outputs.</li>\n<li>sources.</li>\n</ul>\n<p>但是gyp对于里面的内容也做了一些特殊处理。对于内容来说，如果以下面这些字符开头：</p>\n<ul>\n<li>/ //绝对路径</li>\n<li>$ //变量</li>\n<li><ul>\n<li>//链接参数比如-lm</li>\n</ul>\n</li>\n<li>&lt; ,&gt;,! //operator</li>\n<li>其他作为相对路径</li>\n</ul>\n<h5 id=\"1-7-在Ubuntu下使用gyp\"><a href=\"#1-7-在Ubuntu下使用gyp\" class=\"headerlink\" title=\"1.7 在Ubuntu下使用gyp\"></a>1.7 在Ubuntu下使用gyp</h5><blockquote>\n<p>安装工具： sudo apt-get install gyp</p>\n</blockquote>\n<h6 id=\"1-7-1-简单实例\"><a href=\"#1-7-1-简单实例\" class=\"headerlink\" title=\"1.7.1 简单实例\"></a>1.7.1 简单实例</h6><p>hello.c</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;  </span></span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"hello gyp\\n\"</span>);  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.gyp</p>\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;    </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>: [    </span><br><span class=\"line\">     &#123;    </span><br><span class=\"line\">       <span class=\"string\">'target_name'</span>: <span class=\"string\">'hello'</span>,    </span><br><span class=\"line\">       <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,    </span><br><span class=\"line\">       <span class=\"string\">'sources'</span>: [    </span><br><span class=\"line\">         <span class=\"string\">'hello.c'</span>,    </span><br><span class=\"line\">       ],    </span><br><span class=\"line\">     &#125;,    </span><br><span class=\"line\">   ],    </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>构建：</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"params\">--depth=</span><span class=\"string\">./</span> main.gyp</span><br></pre></td></tr></table></figure>\n<p>编译<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">make</span></span><br></pre></td></tr></table></figure></p>\n<p>运行<br><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">./hello</span></span><br></pre></td></tr></table></figure></p>\n<h6 id=\"1-7-2-改进\"><a href=\"#1-7-2-改进\" class=\"headerlink\" title=\"1.7.2 改进\"></a>1.7.2 改进</h6><p>把上面的构建命令做成脚本 genPrj.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">gyp --depth=./ --generator-output=./build main.gyp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -d build ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> build</span><br><span class=\"line\">\tmake</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>所有生成非源码文件都生成到了build目录下，看起来比较干净，在做一个清除脚本，清除就更省事了。do_clean.sh:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">rm -rf build</span><br></pre></td></tr></table></figure>\n<h6 id=\"1-7-3-c-实例\"><a href=\"#1-7-3-c-实例\" class=\"headerlink\" title=\"1.7.3 c++实例\"></a>1.7.3 c++实例</h6><p>目录结构</p>\n<figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">|-- do_clean.sh</span></span><br><span class=\"line\"><span class=\"string\">|-- genPrj.sh</span></span><br><span class=\"line\"><span class=\"string\">|---src</span></span><br><span class=\"line\">     <span class=\"string\">|-- hello.cc</span></span><br><span class=\"line\">     <span class=\"string\">|-- main.gyp</span></span><br><span class=\"line\">     <span class=\"string\">|-- my_class</span></span><br><span class=\"line\">           <span class=\"string\">|-- my_class.cc</span></span><br><span class=\"line\">           <span class=\"string\">|-- my_class.h</span></span><br></pre></td></tr></table></figure>\n<p>genPrj.sh</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">gyp --depth=. --generator-output=build src/main.gyp</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -d build ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">cd</span> bulid</span><br><span class=\"line\">\tmake</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n<p>hello.cc</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"my_class/my_class.h\"</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span>** argv)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Hello world\\n\"</span>);</span><br><span class=\"line\">\t<span class=\"function\">MyClass <span class=\"title\">my_class</span><span class=\"params\">(<span class=\"number\">100</span>)</span></span>;</span><br><span class=\"line\">\tmy_class.Fun1();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>main.gyp</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;    </span><br><span class=\"line\">   <span class=\"symbol\">'targets'</span>: [    </span><br><span class=\"line\">     &#123;    </span><br><span class=\"line\">       <span class=\"symbol\">'target_name'</span>: <span class=\"symbol\">'my_class'</span>,    </span><br><span class=\"line\">       <span class=\"symbol\">'type'</span>: <span class=\"symbol\">'executable'</span>,    </span><br><span class=\"line\">       <span class=\"symbol\">'sources'</span>: [    </span><br><span class=\"line\">         <span class=\"symbol\">'hello</span>.cc',    </span><br><span class=\"line\">         <span class=\"symbol\">'my_class</span>/my_class.h',    </span><br><span class=\"line\">         <span class=\"symbol\">'my_class</span>/my_class.cc',    </span><br><span class=\"line\">       ],    </span><br><span class=\"line\">     &#125;,    </span><br><span class=\"line\">   ],    </span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<p>my_class.cc</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"my_class.h\"</span>    </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;    </span></span></span><br><span class=\"line\"><span class=\"keyword\">void</span> MyClass::Fun1() &#123;    </span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">\"the value is %d\\n\"</span>, value_);    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>my_class.h</p>\n<figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title\">MyClass</span> &#123;    </span><br><span class=\"line\"><span class=\"keyword\">public</span>:    </span><br><span class=\"line\">  MyClass(<span class=\"keyword\">int</span> <span class=\"keyword\">value</span>) : value_(<span class=\"keyword\">value</span>) &#123;&#125;    </span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Fun1</span>(<span class=\"params\"></span>)</span>;    </span><br><span class=\"line\"><span class=\"keyword\">private</span>:    </span><br><span class=\"line\">  <span class=\"keyword\">int</span> value_;    </span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h5 id=\"1-8-ninja\"><a href=\"#1-8-ninja\" class=\"headerlink\" title=\"1.8 ninja\"></a>1.8 ninja</h5><p>gyp是google为chromium项目开发的管理工具，功能类似于cmake。gyp只能产生编译脚本，真正的编译工作还有靠其他工具，例如: ninja。</p>\n<h6 id=\"1-8-1-安装gyp和ninja\"><a href=\"#1-8-1-安装gyp和ninja\" class=\"headerlink\" title=\"1.8.1 安装gyp和ninja\"></a>1.8.1 安装gyp和ninja</h6><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install gyp</span><br><span class=\"line\">sudo apt-<span class=\"builtin-name\">get</span> install ninja-build</span><br></pre></td></tr></table></figure>\n<h6 id=\"1-8-2-一个简单的例子\"><a href=\"#1-8-2-一个简单的例子\" class=\"headerlink\" title=\"1.8.2 一个简单的例子\"></a>1.8.2 一个简单的例子</h6><ol>\n<li><p>首先准备一个源文件，我写了template_sample.cpp,代码如下：</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">template</span>&lt;<span class=\"keyword\">typename</span> T&gt;  </span><br><span class=\"line\"><span class=\"function\">T <span class=\"title\">add</span><span class=\"params\">(T a, T b)</span></span>&#123; <span class=\"keyword\">return</span> a+b; &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">     <span class=\"built_in\">cout</span>&lt;&lt; add&lt;<span class=\"keyword\">int</span>&gt;(<span class=\"number\">5</span>,<span class=\"number\">6</span>)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">     <span class=\"built_in\">cout</span>&lt;&lt; add&lt;<span class=\"keyword\">double</span>&gt;(<span class=\"number\">3.4</span>,<span class=\"number\">4.0</span>)&lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写gyp使用的文件，build.gyp（后缀是.gyp即可，名字随意）</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>生成ninja脚本，命令如下：</p>\n <figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"attribute\">-depth</span>=. <span class=\"attribute\">-format</span>=ninja ./build.gyp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>其中`-depth=.` 表示在当前文件夹下寻找开始的gyp脚本，必须显示的指出gyp没有默认设置。 `-format=ninja` 表示要生成ninja的脚本，默认生成的是Makefile\n执行后，会在当前目录下生成一个out目录。其结构如下：\n\n<figure class=\"highlight ada\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">out</span></span><br><span class=\"line\">|<span class=\"comment\">-- Default</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- an</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- build.ninja</span></span><br><span class=\"line\">\t\t|<span class=\"comment\">-- obj</span></span><br><span class=\"line\">\t\t\t  |<span class=\"comment\">-- an.ninja</span></span><br><span class=\"line\">\t\t\t  |<span class=\"comment\">-- an.template_sample.o</span></span><br></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><p>编译，执行如下命令：</p>\n <figure class=\"highlight delphi\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ninja -C <span class=\"keyword\">out</span>/<span class=\"keyword\">Default</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>**注意**: -C是大写，执行成功后会在out/Default目录下生成一个叫做an的可执行文件，这个an就是在target_name字段指定的名字。\n</code></pre><ol>\n<li><p>clean整个工程重新编译</p>\n<p> 目前，gyp没有提供clean的方案，所以只能手动删除out目录。</p>\n</li>\n</ol>\n<h6 id=\"1-8-3-gyp脚本的编写\"><a href=\"#1-8-3-gyp脚本的编写\" class=\"headerlink\" title=\"1.8.3 gyp脚本的编写\"></a>1.8.3 gyp脚本的编写</h6><ol>\n<li><p>如何增加编译、链接参数<br> 编译参数一般增加在conditions字段，根据系统的不同增加cflags和ldflags,如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[  </span><br><span class=\"line\">              [<span class=\"string\">'OS==\"win\"'</span>,&#123;  </span><br><span class=\"line\">                             <span class=\"string\">'cflags'</span>:[],  </span><br><span class=\"line\">                             <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;,&#123;  </span><br><span class=\"line\">                              <span class=\"string\">'cflags'</span>:[  </span><br><span class=\"line\">                                   <span class=\"string\">'--std=c++11'</span>,  </span><br><span class=\"line\">                               ],  </span><br><span class=\"line\">                              <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;  </span><br><span class=\"line\">              ],  </span><br><span class=\"line\">            ]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>注意conditions字段的变化：`&apos;OS=&quot;win&quot;&apos;`是条件语句的后要有`,`号，第一个括号内表示条件为真时的参数，第二个括号表示条件为假时的参数。上面的例子中，我在不是win的系统上增加了`--std=c++11`这个参数。\n另外，这里有必要提一下链接顺序问题。在链接的时候，链接器对符号表的寻找是按照你输入的命令的顺序进行的，比如a.o需要libm.so的函数，那么libm.so在链接命令里就必须写在a.o的后面，因为链接器发现a.o有函数没有找到，就只会去他后面的库里找，如果你把libm.so写在前面，自然就找不到。所以在增加链接库的时候，不要在ldflags里增加-l类的参数，这类参数要加到libraries字段里 如：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'template_sample.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[  </span><br><span class=\"line\">              [<span class=\"string\">'OS==\"win\"'</span>,&#123;  </span><br><span class=\"line\">                             <span class=\"string\">'cflags'</span>:[],  </span><br><span class=\"line\">                             <span class=\"string\">'ldflags'</span>:[]  </span><br><span class=\"line\">                         &#125;,&#123;  </span><br><span class=\"line\">                              <span class=\"string\">'cflags'</span>:[  </span><br><span class=\"line\">                                   <span class=\"string\">'--std=c++11'</span>,  </span><br><span class=\"line\">                               ],  </span><br><span class=\"line\">                              <span class=\"string\">'ldflags'</span>:[]，  </span><br><span class=\"line\">                              <span class=\"string\">'libraries'</span>:[  </span><br><span class=\"line\">                                  <span class=\"string\">'-lm'</span>  </span><br><span class=\"line\">                              ]  </span><br><span class=\"line\">                         &#125;  </span><br><span class=\"line\">              ],  </span><br><span class=\"line\">            ]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</code></pre><ol>\n<li><p>头文件路径设定 –include_dirs字段的使用<br> 有如下工程目录结构</p>\n <figure class=\"highlight gherkin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|<span class=\"string\">-- build.gyp</span></span><br><span class=\"line\">|<span class=\"string\">-- include</span></span><br><span class=\"line\">|<span class=\"string\">\t\t</span>|<span class=\"string\">-- define.h</span></span><br><span class=\"line\">|<span class=\"string\">-- main.cpp</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<pre><code>main.cpp的代码如下\n\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"defines.h\"</span>  </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt; MY_NUMBER &lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n可见main.cpp文件引用了defines.h这个头文件，所以在编译的时候需要告诉编译系统到哪里去寻找这个defines.h文件。为此buid.gyp如下：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'include'</span>  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n可以看出头文件的位置include在include_dirs字段中被指出。这里需要注意，两个单引号之间一定是文件的路径，不要包含不必要的空格等其他字符。\n</code></pre><ol>\n<li><p>编译参数增加宏定义 –defines字段使用<br> 测试程序的源码如下：</p>\n <figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;  </span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span> BIG_NUMBER  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> out_number = <span class=\"number\">10</span>;   </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">else</span>  </span></span><br><span class=\"line\"><span class=\"keyword\">int</span> out_number = <span class=\"number\">1</span>;  </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span>  </span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">    <span class=\"built_in\">cout</span>&lt;&lt; out_number &lt;&lt;<span class=\"built_in\">endl</span>;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 可以看出，如果BIG_NUMBER宏被定义，则输出为10 ，否则为1。在使用Makefile的时候，我们可以通过为gcc增加-DBIG_NUBMER参数的方式来定义这个宏。那在gyp管理的时候，我们就要使用defines字段，代码如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'executable'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[  </span><br><span class=\"line\">                 <span class=\"string\">'BIG_NUMBER'</span>  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编译静态库(动态库)</p>\n<p> 有时我们不是要输出一个可执行文件，而是要编译一个静态库或动态库。这就要修改type字段，上文中type字段使用了executable，实际还可以设置为<code>static_library</code>,修改后的gyp脚本如下：</p>\n <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'static_library'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>这样在out/Default/obj的目录下就会生成一个liban.a的静态库。</p>\n<pre><code>动态库的方式类似，只需把type字段设置为shared_library即可。\n另外还有一种使用变量的方法，在这里提前介绍一下。就是将type字段设置为`&lt;(library)`,完整的代码如下：\n\n<figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;  </span><br><span class=\"line\">   <span class=\"string\">'targets'</span>:[  </span><br><span class=\"line\">        &#123;  </span><br><span class=\"line\">            <span class=\"string\">'target_name'</span>:<span class=\"string\">'an'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'type'</span>:<span class=\"string\">'&lt;(library)'</span>,  </span><br><span class=\"line\">            <span class=\"string\">'dependencies'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'defines'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'include_dirs'</span>:[],  </span><br><span class=\"line\">            <span class=\"string\">'sources'</span>:[  </span><br><span class=\"line\">                <span class=\"string\">'main.cpp'</span>,  </span><br><span class=\"line\">            ],  </span><br><span class=\"line\">            <span class=\"string\">'conditions'</span>:[]  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    ],    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n然后在使用gyp工具的时候指定这个library的值，如：\n\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gyp <span class=\"attribute\">-depth</span>=. <span class=\"attribute\">-format</span>=ninja <span class=\"attribute\">-Dlibrary</span>=static_library ./build.gyp</span><br></pre></td></tr></table></figure>\n\n\n这样生成ninja脚本后，也可以生成静态库，这样做的好处是你可以在真正输出时再决定输出静态库还是动态库。尤其对于要一次生成多个库的情况下，这种方法尤其好用。\n</code></pre><h5 id=\"1-9-更多功能介绍\"><a href=\"#1-9-更多功能介绍\" class=\"headerlink\" title=\"1.9 更多功能介绍\"></a>1.9 更多功能介绍</h5><h6 id=\"设计准则：\"><a href=\"#设计准则：\" class=\"headerlink\" title=\"设计准则：\"></a>设计准则：</h6><ul>\n<li>关键字一致性：所有的关键字都和平台项目的配置字段相同</li>\n<li>通过前缀表明配置属于的特定平台。比如：<code>msvs_disabled_warnings</code>,<code>xcode_framework_dirs</code></li>\n</ul>\n<p><strong>样例：</strong></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"target_defaults\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"defines\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"U_STATIC_IMPLEMENTATION\"</span>,</span><br><span class=\"line\">            [</span><br><span class=\"line\">                <span class=\"string\">\"LOGFILE\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo.log\"</span></span><br><span class=\"line\">            ]</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">            <span class=\"string\">\"..\"</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"static_library\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">                <span class=\"string\">\"foo/src/foo.cc\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo/src/foo_main.cc\"</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">                <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">                <span class=\"string\">\"foo/include\"</span></span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"conditions\"</span>: [</span><br><span class=\"line\">                [</span><br><span class=\"line\">                    <span class=\"string\">\"OS==mac\"</span>,</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        <span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">                            <span class=\"string\">\"platform_test_mac.mm\"</span></span><br><span class=\"line\">                        ]</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                ]</span><br><span class=\"line\">            ],</span><br><span class=\"line\">            <span class=\"attr\">\"direct_dependent_settings\"</span>: &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"defines\"</span>: [</span><br><span class=\"line\">                    <span class=\"string\">\"UNIT_TEST\"</span></span><br><span class=\"line\">                ],</span><br><span class=\"line\">                <span class=\"attr\">\"include_dirs\"</span>: [</span><br><span class=\"line\">                    <span class=\"string\">\"foo\"</span>,</span><br><span class=\"line\">                    <span class=\"string\">\"foo/include\"</span></span><br><span class=\"line\">                ]</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>结构元素</strong></p>\n<p>.gyp文件中定义了一些targets和构建规则。</p>\n<p>下面的关键字可以定义在最顶层：</p>\n<ul>\n<li>conditions:条件定义。 </li>\n<li><p>includes:包含.gypi文件的列表</p>\n  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">\t  &#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"Thread\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"includes\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"../common.gypi\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"./thread.gypi\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t\t...</span><br><span class=\"line\">\t  &#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>target_defaults:默认的项目配置，每个项目(targets)的配置都需要从这个配置继承</p>\n</li>\n<li><p>targets:项目列表</p>\n  <figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"attr\">\"targets\"</span>: [</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"hello1\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"product_extension\"</span>: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"hello.c\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_name\"</span>: <span class=\"string\">\"hello2\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"target_extension\"</span>: <span class=\"string\">\"stuff\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"type\"</span>: <span class=\"string\">\"executable\"</span>,</span><br><span class=\"line\">\t\t<span class=\"attr\">\"sources\"</span>: [</span><br><span class=\"line\">\t\t<span class=\"string\">\"hello.c\"</span></span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>variable: 定义了键值对，可以被其他地方以<code>&lt;(varname)</code>的方式引用</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'variables'</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">'pi'</span>: <span class=\"string\">'import math; print math.pi'</span>,</span><br><span class=\"line\">    <span class=\"string\">'third_letters'</span>: <span class=\"string\">\"&lt;(other_letters)HIJK\"</span>,</span><br><span class=\"line\">    <span class=\"string\">'letters_list'</span>: <span class=\"string\">'ABCD'</span>,</span><br><span class=\"line\">    <span class=\"string\">'other_letters'</span>: <span class=\"string\">'&lt;(letters_list)EFG'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_included'</span>: <span class=\"string\">'&lt;(included_variable)'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_lists'</span>: [</span><br><span class=\"line\">      <span class=\"string\">'&lt;(included_variable)'</span>,</span><br><span class=\"line\">      <span class=\"string\">'&lt;(third_letters)'</span>,</span><br><span class=\"line\">      </span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'check_int'</span>: <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_str_int'</span>: <span class=\"string\">'6'</span>,</span><br><span class=\"line\">    <span class=\"string\">'check_list_int'</span>: [</span><br><span class=\"line\">      <span class=\"number\">7</span>,</span><br><span class=\"line\">      <span class=\"string\">'8'</span>,</span><br><span class=\"line\">      <span class=\"number\">9</span>,</span><br><span class=\"line\">      </span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">'not_int_1'</span>: <span class=\"string\">' 10'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_2'</span>: <span class=\"string\">'11 '</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_3'</span>: <span class=\"string\">'012'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_4'</span>: <span class=\"string\">'13.0'</span>,</span><br><span class=\"line\">    <span class=\"string\">'not_int_5'</span>: <span class=\"string\">'+14'</span>,</span><br><span class=\"line\">    <span class=\"string\">'negative_int'</span>: <span class=\"string\">'-15'</span>,</span><br><span class=\"line\">    <span class=\"string\">'zero_int'</span>: <span class=\"string\">'0'</span>,</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>项目(targets)</strong></p>\n<p>.gyp文件定义的一套构建项目的规则。targets中也可以包含<code>includes</code>,<code>conditions</code>和<code>variables</code>。下面的是一些targets中的专有字段：</p>\n<ul>\n<li>target_name: 指定定义的target的名称</li>\n<li>type: target的类型。支持<code>executable</code>、<code>static_library</code>、<code>shared_library</code>和<code>none</code>.其中<code>none</code>类型也很有用，可以作为处理资源、文档等特别项目的类型。例如，在Windows中,<code>none</code>将作为工具集类型的项目存在</li>\n<li>product_extension:指定target生成目标的扩展名，不包含’.’</li>\n<li>product_name: 指定tareget生成目标的文件名，与 <code>product_extension</code> 组成一个文件全名</li>\n<li><p>dependencies:指定target依赖的其他target</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'a'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'static_library'</span>,</span><br><span class=\"line\">      <span class=\"string\">'dependencies'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'b/b.gyp:b'</span>,</span><br><span class=\"line\">        <span class=\"string\">'c/c.gyp:*'</span></span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'a.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>defines: 定义了预处理宏。类似于C/C++命令行编译中的-D或者/D选项</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'defines'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,</span><br><span class=\"line\">      <span class=\"string\">'defines'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'FOO'</span>,</span><br><span class=\"line\">        <span class=\"string\">'VALUE=1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'PAREN_VALUE=(1+2+3)'</span>,</span><br><span class=\"line\">        <span class=\"string\">'HASH_VALUE=\"a#1\"'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'defines.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li><p>include_dirs: 指定了包含文件的查找目录。类似于C/C++命令行编译中的-I或/I选项</p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">'targets'</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">'target_name'</span>: <span class=\"string\">'includes'</span>,</span><br><span class=\"line\">      <span class=\"string\">'type'</span>: <span class=\"string\">'executable'</span>,</span><br><span class=\"line\">      <span class=\"string\">'dependencies'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'subdir/subdir_includes.gyp:subdir_includes'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'cflags'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'-Ishadow1'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'include_dirs'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'.'</span>,</span><br><span class=\"line\">        <span class=\"string\">'inc1'</span>,</span><br><span class=\"line\">        <span class=\"string\">'shadow2'</span>,</span><br><span class=\"line\">        <span class=\"string\">'subdir/inc2'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      <span class=\"string\">'sources'</span>: [</span><br><span class=\"line\">        <span class=\"string\">'includes.c'</span>,</span><br><span class=\"line\">        </span><br><span class=\"line\">      ],</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    </span><br><span class=\"line\">  ],</span><br><span class=\"line\">  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>sources:列出了项目中的代码文件和一些项目相关的文件.<code>sources!</code>段中可以指定被排除的文件</p>\n</li>\n<li>configurations:为targets定义的一套构建配置。</li>\n<li>link_settings:指定target需要链接的库。<code>executable</code>和<code>shared_library</code> 类型的target需要指定链接库。这个段内可以指定target中可包含的除了<code>configurations</code>、<code>target_name</code>和<code>type</code>的所有配置。可以与<code>all_dependent_settings</code>、<code>direct_dependent_setting</code>做对比</li>\n<li>direct_dependent_settings:指定依赖本target的target设置。这个段内可以指定target中可包含的除了<code>configurations</code>、<code>target_name</code>和<code>type</code>的所有属性。可以与<code>all_dependent_settings</code>、<code>link_settings</code>做对比</li>\n<li>all_dependent_settings:</li>\n<li><p>libraries:指定target依赖的库，见<code>link_settings&gt;libraries</code></p>\n  <figure class=\"highlight prolog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'link_settings'</span>: &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libraries'</span>: [</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libiconv.dylib'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'&lt;(ZLIB_DIR)contrib/minizip/libminizip.a'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'libcurl.dylib'</span>,],</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>actions:针对输入的文件，定义了一组自定义的构建动作。</p>\n</li>\n<li>copies:定义了一套拷贝动作。</li>\n<li>rules:</li>\n<li>target_conditions:类似于conditions,但是起左右的时间比conditions晚</li>\n<li>msvs_precompiled_header:指定预编译头文件。只能用于Visual Studio</li>\n<li>msvs_precompiled_source:指定预编译源文件。只能用于Visual Studio</li>\n<li>msvs_prebuild:生成之前事件。只能用于Visual Studio</li>\n<li><p>msvs_postbuild:生成之后事件。只能用于Visual Studio</p>\n  <figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">'msvs_postbuild'</span>:<span class=\"string\">r'copy \"$&#123;OutDir&#125;$&#123;TargetName&#125;\" \"C:\\$&#123;TargetName&#125;\"'</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>msvs_props:指定target的属性页文件(.vsprops)。只能用于Visual Studio</li>\n<li>msvs_cygwin_shell:指定action运行在cygwin下。只能用于Visual Studio</li>\n<li>msvs_cygwin_dirs:指定cygwin的目录。只能用于Visual Studio</li>\n<li>xcode_config_file:在xcode中，指定target的配置文件(.xcconfig)。只能用于xcode</li>\n<li>xcode_framework_dirs:在xcode中，指定框架的目录。只能用于xcode</li>\n</ul>"},{"title":"Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7","date":"2016-03-20T04:15:20.000Z","_content":"\n# Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7\n\n### 与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:\n> 初始化方式改变，从`scripts/mysql_install_db --user=mysql` 初始化方式变成了`bin/mysqld --initialize --user=mysql`方式；\n> 初始密码生成改变, 5.6 的版本在 tar gz 方式初始化完成后默认 root 密码为空, 5.7 版本在初始化完成后会生成一个临时的 root 密码。\n\n<!-- more -->\n```\n系统环境: OS X El Capitan 10.11.1\n登录用户: wid (有 sudo 权限)\nMySQL 版本: 5.7.9 (mysql-5.7.9-osx10.10-x86_64.tar.gz)\nMySQL下载: http://dev.mysql.com/downloads/mysql/\n```\n### 和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:\n\n```\n# 解压\ncd /Users/<YourName>/Downloads\ntar zxvf mysql-5.7.9-osx10.10-x86_64.tar.gz\n\n# 移动解压后的二进制包到安装目录\nsudo mv mysql-5.7.9-osx10.10-x86_64 /usr/local/mysql\n\n# 更改 mysql 安装目录所属用户与用户组\ncd /usr/local\nsudo chown -R root:wheel mysql\n\n# 切换到 mysql 安装目录并执行初始化命令并记录生成的临时 root 密码\ncd /usr/local/mysql\nsudo bin/mysqld --initialize --user=mysql\n```\n **注意**:需要记录在初始化完成后命令行窗口中显示的临时 root 密码, 如图:\n ![mysql-pwd-pic](http://7xpj58.com1.z0.glb.clouddn.com/20160320mysql.png)\n\n### 测试启动、重启与停止:\n\n```\ncd /usr/local/mysql\n\n# 启动\nsudo support-files/mysql.server start\n\n# 重启\nsudo support-files/mysql.server restart\n\n# 停止\nsudo support-files/mysql.server stop\n\n# 检查 MySQL 运行状态\nsudo support-files/mysql.server status\n```\n### 修改 MySQL root 初始密码\n\n```\n# 需要 MySQL 服务在运行状态执行\ncd /usr/local/mysql/bin\n./mysqladmin -u root -p password 新密码\n输入生成的临时密码↵\n```\n\n\n","source":"_posts/Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7.md","raw":"---\ntitle: Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7\ndate: 2016-03-20 12:15:20\ntags: [mysql, 数据库, mac]\ncategories: mac\n---\n\n# Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7\n\n### 与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:\n> 初始化方式改变，从`scripts/mysql_install_db --user=mysql` 初始化方式变成了`bin/mysqld --initialize --user=mysql`方式；\n> 初始密码生成改变, 5.6 的版本在 tar gz 方式初始化完成后默认 root 密码为空, 5.7 版本在初始化完成后会生成一个临时的 root 密码。\n\n<!-- more -->\n```\n系统环境: OS X El Capitan 10.11.1\n登录用户: wid (有 sudo 权限)\nMySQL 版本: 5.7.9 (mysql-5.7.9-osx10.10-x86_64.tar.gz)\nMySQL下载: http://dev.mysql.com/downloads/mysql/\n```\n### 和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:\n\n```\n# 解压\ncd /Users/<YourName>/Downloads\ntar zxvf mysql-5.7.9-osx10.10-x86_64.tar.gz\n\n# 移动解压后的二进制包到安装目录\nsudo mv mysql-5.7.9-osx10.10-x86_64 /usr/local/mysql\n\n# 更改 mysql 安装目录所属用户与用户组\ncd /usr/local\nsudo chown -R root:wheel mysql\n\n# 切换到 mysql 安装目录并执行初始化命令并记录生成的临时 root 密码\ncd /usr/local/mysql\nsudo bin/mysqld --initialize --user=mysql\n```\n **注意**:需要记录在初始化完成后命令行窗口中显示的临时 root 密码, 如图:\n ![mysql-pwd-pic](http://7xpj58.com1.z0.glb.clouddn.com/20160320mysql.png)\n\n### 测试启动、重启与停止:\n\n```\ncd /usr/local/mysql\n\n# 启动\nsudo support-files/mysql.server start\n\n# 重启\nsudo support-files/mysql.server restart\n\n# 停止\nsudo support-files/mysql.server stop\n\n# 检查 MySQL 运行状态\nsudo support-files/mysql.server status\n```\n### 修改 MySQL root 初始密码\n\n```\n# 需要 MySQL 服务在运行状态执行\ncd /usr/local/mysql/bin\n./mysqladmin -u root -p password 新密码\n输入生成的临时密码↵\n```\n\n\n","slug":"Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7","published":1,"updated":"2016-03-20T04:22:13.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk4000xpev2riqioq31","content":"<h1 id=\"Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7\"><a href=\"#Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7\" class=\"headerlink\" title=\"Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7\"></a>Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7</h1><h3 id=\"与-MySQL-5-6-相比-5-7-版本在安装时有两处不同\"><a href=\"#与-MySQL-5-6-相比-5-7-版本在安装时有两处不同\" class=\"headerlink\" title=\"与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:\"></a>与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:</h3><blockquote>\n<p>初始化方式改变，从<code>scripts/mysql_install_db --user=mysql</code> 初始化方式变成了<code>bin/mysqld --initialize --user=mysql</code>方式；<br>初始密码生成改变, 5.6 的版本在 tar gz 方式初始化完成后默认 root 密码为空, 5.7 版本在初始化完成后会生成一个临时的 root 密码。</p>\n</blockquote>\n<a id=\"more\"></a>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统环境: OS X El Capitan <span class=\"number\">10.11</span>.<span class=\"number\">1</span></span><br><span class=\"line\">登录用户: wid (有 sudo 权限)</span><br><span class=\"line\">MySQL 版本: <span class=\"number\">5.7</span>.<span class=\"number\">9</span> (mysql-<span class=\"number\">5.7</span>.<span class=\"number\">9</span>-osx10.<span class=\"number\">10</span>-x86_64<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span>)</span><br><span class=\"line\">MySQL下载: http:<span class=\"comment\">//dev.mysql.com/downloads/mysql/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"和-MySQL-5-6-tar-gz-安装方式一样-解压并移动到指定安装目录中并执行初始化\"><a href=\"#和-MySQL-5-6-tar-gz-安装方式一样-解压并移动到指定安装目录中并执行初始化\" class=\"headerlink\" title=\"和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:\"></a>和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/Users/</span>&lt;YourName&gt;<span class=\"string\">/Downloads</span></span><br><span class=\"line\">tar zxvf mysql-5.7.9-osx10.10-x86_64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动解压后的二进制包到安装目录</span></span><br><span class=\"line\">sudo mv mysql-5.7.9-osx10.10-x86_64 <span class=\"string\">/usr/local/mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改 mysql 安装目录所属用户与用户组</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">sudo chown -R root<span class=\"function\">:wheel</span> mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到 mysql 安装目录并执行初始化命令并记录生成的临时 root 密码</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local/mysql</span></span><br><span class=\"line\">sudo bin/mysqld <span class=\"params\">--initialize</span> <span class=\"params\">--user=mysql</span></span><br></pre></td></tr></table></figure>\n<p> <strong>注意</strong>:需要记录在初始化完成后命令行窗口中显示的临时 root 密码, 如图:<br> <img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160320mysql.png\" alt=\"mysql-pwd-pic\"></p>\n<h3 id=\"测试启动、重启与停止\"><a href=\"#测试启动、重启与停止\" class=\"headerlink\" title=\"测试启动、重启与停止:\"></a>测试启动、重启与停止:</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/<span class=\"built_in\">local</span>/mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server <span class=\"built_in\">stop</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查 MySQL 运行状态</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server status</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-MySQL-root-初始密码\"><a href=\"#修改-MySQL-root-初始密码\" class=\"headerlink\" title=\"修改 MySQL root 初始密码\"></a>修改 MySQL root 初始密码</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要 MySQL 服务在运行状态执行</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local/mysql/bin</span></span><br><span class=\"line\"><span class=\"string\">./mysqladmin</span> -u root -p password 新密码</span><br><span class=\"line\">输入生成的临时密码↵</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h1 id=\"Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7\"><a href=\"#Mac-OS-X-下-TAR-GZ-方式安装-MySQL-5-7\" class=\"headerlink\" title=\"Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7\"></a>Mac OS X 下 TAR.GZ 方式安装 MySQL 5.7</h1><h3 id=\"与-MySQL-5-6-相比-5-7-版本在安装时有两处不同\"><a href=\"#与-MySQL-5-6-相比-5-7-版本在安装时有两处不同\" class=\"headerlink\" title=\"与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:\"></a>与 MySQL 5.6 相比, 5.7 版本在安装时有两处不同:</h3><blockquote>\n<p>初始化方式改变，从<code>scripts/mysql_install_db --user=mysql</code> 初始化方式变成了<code>bin/mysqld --initialize --user=mysql</code>方式；<br>初始密码生成改变, 5.6 的版本在 tar gz 方式初始化完成后默认 root 密码为空, 5.7 版本在初始化完成后会生成一个临时的 root 密码。</p>\n</blockquote>","more":"<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">系统环境: OS X El Capitan <span class=\"number\">10.11</span>.<span class=\"number\">1</span></span><br><span class=\"line\">登录用户: wid (有 sudo 权限)</span><br><span class=\"line\">MySQL 版本: <span class=\"number\">5.7</span>.<span class=\"number\">9</span> (mysql-<span class=\"number\">5.7</span>.<span class=\"number\">9</span>-osx10.<span class=\"number\">10</span>-x86_64<span class=\"selector-class\">.tar</span><span class=\"selector-class\">.gz</span>)</span><br><span class=\"line\">MySQL下载: http:<span class=\"comment\">//dev.mysql.com/downloads/mysql/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"和-MySQL-5-6-tar-gz-安装方式一样-解压并移动到指定安装目录中并执行初始化\"><a href=\"#和-MySQL-5-6-tar-gz-安装方式一样-解压并移动到指定安装目录中并执行初始化\" class=\"headerlink\" title=\"和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:\"></a>和 MySQL 5.6 tar gz 安装方式一样, 解压并移动到指定安装目录中并执行初始化:</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/Users/</span>&lt;YourName&gt;<span class=\"string\">/Downloads</span></span><br><span class=\"line\">tar zxvf mysql-5.7.9-osx10.10-x86_64.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 移动解压后的二进制包到安装目录</span></span><br><span class=\"line\">sudo mv mysql-5.7.9-osx10.10-x86_64 <span class=\"string\">/usr/local/mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改 mysql 安装目录所属用户与用户组</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local</span></span><br><span class=\"line\">sudo chown -R root<span class=\"function\">:wheel</span> mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 切换到 mysql 安装目录并执行初始化命令并记录生成的临时 root 密码</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local/mysql</span></span><br><span class=\"line\">sudo bin/mysqld <span class=\"params\">--initialize</span> <span class=\"params\">--user=mysql</span></span><br></pre></td></tr></table></figure>\n<p> <strong>注意</strong>:需要记录在初始化完成后命令行窗口中显示的临时 root 密码, 如图:<br> <img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160320mysql.png\" alt=\"mysql-pwd-pic\"></p>\n<h3 id=\"测试启动、重启与停止\"><a href=\"#测试启动、重启与停止\" class=\"headerlink\" title=\"测试启动、重启与停止:\"></a>测试启动、重启与停止:</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/<span class=\"built_in\">local</span>/mysql</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 启动</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server <span class=\"built_in\">start</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 重启</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 停止</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server <span class=\"built_in\">stop</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查 MySQL 运行状态</span></span><br><span class=\"line\">sudo support-<span class=\"built_in\">files</span>/mysql.server status</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改-MySQL-root-初始密码\"><a href=\"#修改-MySQL-root-初始密码\" class=\"headerlink\" title=\"修改 MySQL root 初始密码\"></a>修改 MySQL root 初始密码</h3><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 需要 MySQL 服务在运行状态执行</span></span><br><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/usr/local/mysql/bin</span></span><br><span class=\"line\"><span class=\"string\">./mysqladmin</span> -u root -p password 新密码</span><br><span class=\"line\">输入生成的临时密码↵</span><br></pre></td></tr></table></figure>"},{"title":"Mac 清除 DNS 缓存","date":"2016-03-18T11:28:30.000Z","_content":"\n# Mac 清除 DNS 缓存\n\n<!-- more -->\n打开 Terminal，根据你的系统版本运行对应的命令：\n\nMac OSX 10.11\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.10.4以上\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.10.0 - 10.10.3\n> sudo discoveryutil mdnsflushcache\n\nMac OSX 10.7 & 10.8 & 10.9\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.6\n> dscacheutil -flushcache\n\n\n","source":"_posts/Mac-清除-DNS-缓存.md","raw":"---\ntitle: Mac 清除 DNS 缓存\ndate: 2016-03-18 19:28:30\ntags: [mac, dns, 缓存]\ncategories: mac\n---\n\n# Mac 清除 DNS 缓存\n\n<!-- more -->\n打开 Terminal，根据你的系统版本运行对应的命令：\n\nMac OSX 10.11\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.10.4以上\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.10.0 - 10.10.3\n> sudo discoveryutil mdnsflushcache\n\nMac OSX 10.7 & 10.8 & 10.9\n> sudo killall -HUP mDNSResponder\n\nMac OSX 10.6\n> dscacheutil -flushcache\n\n\n","slug":"Mac-清除-DNS-缓存","published":1,"updated":"2016-03-18T11:33:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk60011pev2q6bo07f0","content":"<h1 id=\"Mac-清除-DNS-缓存\"><a href=\"#Mac-清除-DNS-缓存\" class=\"headerlink\" title=\"Mac 清除 DNS 缓存\"></a>Mac 清除 DNS 缓存</h1><a id=\"more\"></a>\n<p>打开 Terminal，根据你的系统版本运行对应的命令：</p>\n<p>Mac OSX 10.11</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.10.4以上</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.10.0 - 10.10.3</p>\n<blockquote>\n<p>sudo discoveryutil mdnsflushcache</p>\n</blockquote>\n<p>Mac OSX 10.7 &amp; 10.8 &amp; 10.9</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.6</p>\n<blockquote>\n<p>dscacheutil -flushcache</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"Mac-清除-DNS-缓存\"><a href=\"#Mac-清除-DNS-缓存\" class=\"headerlink\" title=\"Mac 清除 DNS 缓存\"></a>Mac 清除 DNS 缓存</h1>","more":"<p>打开 Terminal，根据你的系统版本运行对应的命令：</p>\n<p>Mac OSX 10.11</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.10.4以上</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.10.0 - 10.10.3</p>\n<blockquote>\n<p>sudo discoveryutil mdnsflushcache</p>\n</blockquote>\n<p>Mac OSX 10.7 &amp; 10.8 &amp; 10.9</p>\n<blockquote>\n<p>sudo killall -HUP mDNSResponder</p>\n</blockquote>\n<p>Mac OSX 10.6</p>\n<blockquote>\n<p>dscacheutil -flushcache</p>\n</blockquote>"},{"title":"Mac下，添加Android adb命令","date":"2016-03-09T15:58:48.000Z","_content":"\n1 在用户目录下 ~/.bash_profile 如果存在打开，不存在则创建\n\n``` \nvim ~/.bash_profile\n```\n2 加入我们需要的添加的环境变量，例如：Android需要添加platform-tools 和 tools\n\n<!--more-->\n``` \nexport PATH=${PATH}:/Users/user/android-sdks/platform-tools:/Users/user/android-sdks/tools \n\n或者\nexport PATH=/Users/user/android-sdks/platform-tools:$PATH \nexport PATH=/Users/user/android-sdks/tools:$PATH \n\n其中 :$PATH 不能少，表示加入系统的环境变量\n```\n\n3 进行验证 \n\n> 重新打开一个终端：输入adb,即可验证。\n\n\n\n","source":"_posts/Mac下，添加Android-adb命令.md","raw":"---\ntitle: Mac下，添加Android adb命令\ndate: 2016-03-09 23:58:48\ntags: [mac]\ncategories: mac\n---\n\n1 在用户目录下 ~/.bash_profile 如果存在打开，不存在则创建\n\n``` \nvim ~/.bash_profile\n```\n2 加入我们需要的添加的环境变量，例如：Android需要添加platform-tools 和 tools\n\n<!--more-->\n``` \nexport PATH=${PATH}:/Users/user/android-sdks/platform-tools:/Users/user/android-sdks/tools \n\n或者\nexport PATH=/Users/user/android-sdks/platform-tools:$PATH \nexport PATH=/Users/user/android-sdks/tools:$PATH \n\n其中 :$PATH 不能少，表示加入系统的环境变量\n```\n\n3 进行验证 \n\n> 重新打开一个终端：输入adb,即可验证。\n\n\n\n","slug":"Mac下，添加Android-adb命令","published":1,"updated":"2016-03-12T03:24:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuk80013pev2rtcvmljr","content":"<p>1 在用户目录下 ~/.bash_profile 如果存在打开，不存在则创建</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~<span class=\"string\">/.bash_profile</span></span><br></pre></td></tr></table></figure>\n<p>2 加入我们需要的添加的环境变量，例如：Android需要添加platform-tools 和 tools</p>\n<a id=\"more\"></a>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=<span class=\"variable\">$&#123;</span>PATH&#125;<span class=\"symbol\">:/Users/user/android-sdks/platform-tools</span><span class=\"symbol\">:/Users/user/android-sdks/tools</span> </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\">export PATH=<span class=\"regexp\">/Users/user</span><span class=\"regexp\">/android-sdks/platform</span>-<span class=\"symbol\">tools:</span><span class=\"variable\">$PATH</span> </span><br><span class=\"line\">export PATH=<span class=\"regexp\">/Users/user</span><span class=\"regexp\">/android-sdks/tools</span><span class=\"symbol\">:</span><span class=\"variable\">$PATH</span> </span><br><span class=\"line\"></span><br><span class=\"line\">其中 <span class=\"symbol\">:</span><span class=\"variable\">$PATH</span> 不能少，表示加入系统的环境变量</span><br></pre></td></tr></table></figure>\n<p>3 进行验证 </p>\n<blockquote>\n<p>重新打开一个终端：输入adb,即可验证。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>1 在用户目录下 ~/.bash_profile 如果存在打开，不存在则创建</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~<span class=\"string\">/.bash_profile</span></span><br></pre></td></tr></table></figure>\n<p>2 加入我们需要的添加的环境变量，例如：Android需要添加platform-tools 和 tools</p>","more":"<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=<span class=\"variable\">$&#123;</span>PATH&#125;<span class=\"symbol\">:/Users/user/android-sdks/platform-tools</span><span class=\"symbol\">:/Users/user/android-sdks/tools</span> </span><br><span class=\"line\"></span><br><span class=\"line\">或者</span><br><span class=\"line\">export PATH=<span class=\"regexp\">/Users/user</span><span class=\"regexp\">/android-sdks/platform</span>-<span class=\"symbol\">tools:</span><span class=\"variable\">$PATH</span> </span><br><span class=\"line\">export PATH=<span class=\"regexp\">/Users/user</span><span class=\"regexp\">/android-sdks/tools</span><span class=\"symbol\">:</span><span class=\"variable\">$PATH</span> </span><br><span class=\"line\"></span><br><span class=\"line\">其中 <span class=\"symbol\">:</span><span class=\"variable\">$PATH</span> 不能少，表示加入系统的环境变量</span><br></pre></td></tr></table></figure>\n<p>3 进行验证 </p>\n<blockquote>\n<p>重新打开一个终端：输入adb,即可验证。</p>\n</blockquote>"},{"title":"MySQL常用命令总结","date":"2017-11-16T04:41:35.000Z","_content":"\n### 一、连接MYSQL\n\n格式： mysql -h主机地址 -u用户名 －p用户密码\n或者： mysql -u 用户名 -p // 回车后要求输入密码，密码不可见\n\n<!-- more -->\n#### 1、连接到本机上的MYSQL\n首先打开DOS窗口，然后进入目录mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是如果-p后带有用户密码，那么-p与密码之间必须没有空格，否则让你重新输入密码.例如以下都是合法的登陆：(帐号：root   密码:123)\n```\nmysql -u root -p\nmysql -uroot -p\nmysql -uroot -p123\n```\n如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql>\n\n#### 2、连接到远程主机上的MYSQL\n假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：\nmysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）\n\n#### 3、退出MYSQL命令\n```\nexit （回车）\n```\n\n### 二、修改密码\n格式：mysqladmin -u用户名 -p旧密码 password 新密码\n\n#### 1、给root加个密码ab12\n首先在DOS下进入目录mysql\\bin，然后键入以下命令\nmysqladmin -u root -password ab12\n注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。\n\n#### 2、再将root的密码改为djg345\nmysqladmin -u root -p ab12 password djg345\n（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）\n\n#### 3、命令行修改root密码\n```\nmysql> UPDATE mysql.user SET password=PASSWORD(’新密码’) WHERE User=’root’;\nmysql> FLUSH PRIVILEGES;\n```\n\n#### 4、显示当前的user\n```\nmysql> SELECT USER();\n```\n\n### 三、增加新用户\n格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”\n#### 1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\n\n首先用root用户连入MYSQL，然后键入以下命令：\ngrant select,insert,update,delete on *.* to test1”%\" Identified by “abc”;\n但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。\n\n#### 2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\n\n这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。\n```\ngrant select,insert,update,delete on mydb.* to test2@localhost identifiedby \"abc\";\n```\n如果你不想test2有密码，可以再打一个命令将密码消掉。\n```\ngrant select,insert,update,delete on mydb.* to test2@localhost identified by \"\";\n```\n\n### 四、操作技巧\n1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。\n也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。\n2、你可以使用光标上下键调出以前的命令。\n\n### 五、对数据库的操作\n#### 1、显示当前数据库服务器中的数据库列表：\n```\nmysql> SHOW DATABASES;\n```\n**注意**:mysql库里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。\n\n#### 2、显示数据库中的数据表：\n```\nmysql> USE 库名；\nmysql> SHOW TABLES;\n```\n\n#### 3、显示use的数据库名：\n```\nmysql> SELECT DATABASE();\n```\n\n#### 4、建立数据库：\n```\nmysql> CREATE DATABASE 库名;\n```\n#### 5、删除数据库：\n```\nmysql> DROP DATABASE 库名;\n```\n#### 6、导入.sql文件命令：\n```\nmysql> USE 数据库名;\nmysql> SOURCE d:/mysql.sql;\n```\n也可以在DOS环境下键入以下命令进行导入：\n```\nmysql -uroot -proot databasename < databasename.sql\n```\n**注意**:导入前请保证mysql中必须有databasename这个数据库;\n\n### 六、备份数据库：\n注意，mysqldump命令在DOS的 mysql\\bin 目录下执行,不能在mysql环境下执行，因此，不能以分号“;”结尾。若已登陆mysql，请运行退出命令mysql> exit\n\n#### 1.导出整个数据库\n导出文件默认是存在mysql\\bin目录下\n```\nmysqldump -u用户名 -p数据库名 > 导出的文件名\nmysqldump -uroot -p123456 database_name > outfile_name.sql\n```\n\n#### 2.导出一个表\n```\nmysqldump -u 用户名 -p 数据库名 表名> 导出的文件名\nmysqldump -u user_name -p database_name table_name > outfile_name.sql\n```\n\n#### 3.导出一个数据库结构\n```\nmysqldump -u user_name -p -d –add-drop-table database_name > outfile_name.sql\n-d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table\n```\n#### 4.带语言参数导出\n```\nmysqldump -uroot -p –default-character-set=latin1 –set-charset=gbk –skip-opt database_name > outfile_name.sql\n```\n\n### 七、将文本数据转到数据库中\n#### 1、文本数据应符合的格式\n字段数据之间用tab键隔开，null值用\\n来代替.例：\n```\n3 rose 大连二中 1976-10-10\n4 mike 大连一中 1975-12-23\n```\n假设你把这两组数据存为school.txt文件，放在c盘根目录下。\n#### 2、数据传入命令\n```\nmysql> load data local infile \"c:\\school.txt\" into table 表名;\n```\n**注意**:你最好将文件复制到mysql\\bin目录下，并且要先用use命令打表所在的库。\n\n### 八、对表的操作\n#### 1、显示数据表的结构：\n```\nmysql> DESCRIBE 表名; （DESC 表名）\n```\n#### 2、建立数据表：\n```\nmysql> USE 库名; //进入数据库\nmysql> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));\n```\n\n#### 3、删除数据表：\n```\nmysql> DROP TABLE 表名；\n```\n\n#### 4、重命名数据表\n```\nalter table t1 rename t2;\n```\n\n#### 5、显示表中的记录：\n```\nmysql> SELECT * FROM 表名;\n```\n\n#### 6、往表中插入记录：\n```\nmysql> INSERT INTO 表名 VALUES (”hyq”,”M”);\n```\n\n#### 7、更新表中数据：\n```\nmysql-> UPDATE 表名 SET 字段名1=’a',字段名2=’b’ WHERE 字段名3=’c';\n```\n\n#### 8、将表中记录清空：\n```\nmysql> DELETE FROM 表名;\n```\n#### 9、用文本方式将数据装入数据表中：\n```\nmysql> LOAD DATA LOCAL INFILE “D:/mysql.txt” INTO TABLE 表名;\n```\n\n#### 10、 显示表的定义\n还可以看到表的约束，例如外键\n```\nmysql> SHOW CREATE TABLE yourtablename\n```\n还可以通过 mysqldump 将表的完整定义转储到文件中，当然包括外键定义。\n还可以通过下面的指令列出表 T 的外键约束：\n```\nmysql> SHOW TABLE STATUS FROM yourdatabasename LIKE 'T'  \n```\n外键约束将会在表注释中列出。\n\n### 存储过程\n#### 11、创建存储过程\n\n```\nCREATE PROCEDURE procedureName (in paramentName type, in paramentName type,……)\nBEGIN\nSQL sentences;\nEND\n```\n\n#### 12、调用存储过程\n```\nmysql> CALL procedureName(paramentList);\n例：mysql> CALL addMoney(12, 500);\n```\n\n#### 13、查看特定数据库的存储过程\n```\n方法一：mysql> SELECT `name` FROM mysql.proc WHERE db = 'your_db_name' AND `type` = 'PROCEDURE';\n方法二：mysql> show procedure status;\n```\n\n#### 14、删除存储过程\n```\nmysql> DROP PROCEDURE procedure_name;\nmysql> DROP PROCEDURE IF EXISTS procedure_name;\n```\n\n#### 15、查看指定的存储过程定义\n```\nmysql> SHOW CREATE PROCEDURE proc_name;\nmysql> SHOW CREATE FUNCTION func_name;\n---------- 示例一-----------\nmysql> DELIMITER\nmysql>USE‘dbname‘\n\n//选择数据库\nmysql> DROP PROCEDURE IF EXISTS `addMoney`\n//如果存在同名存储过程，则删除之mysql>CREATEDEFINER=‘root‘@‘localhost‘PROCEDURE‘addMoney‘(INxidINT(5),INxmoneyINT(6))mysql>BEGINmysql>UPDATEUSERuSETu.money=u.money+xmoneyWHEREu.id=xid;//分号\";\"不会导致语句执行，因为当前的分割符被定义为\n\nmysql> END$$   //终止\nmysql> DELIMITER ;    //把分割符改回分号\";\"\nmysql> call addMoney(5,1000); //执行存储过程\n---------- 示例二-----------\nmysql> delimiter //\nmysql> create procedure proc_name (in parameter integer)\nmysql> begin\nmysql> if parameter=0 then\nmysql> select * from user order by id asc;\nmysql> else\nmysql> select * from user order by id desc;\nmysql> end if;\nmysql> end;\nmysql> //        //此处“//”为终止符\nmysql> delimiter ;\nmysql> show warnings;\nmysql> call proc_name(1);\nmysql> call proc_name(0);\n\n```\n\n### 九、修改表的列属性的操作\n\n1. 为了改变列a，从INTEGER改为TINYINT NOT NULL(名字一样)，\n并且改变列b，从CHAR(10)改为CHAR(20)，同时重命名它，从b改为c:\n```\nmysql> ALTER TABLE t2 MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20);\n```\n2. 增加一个新TIMESTAMP列，名为d：\n```\nmysql> ALTER TABLE t2 ADD d TIMESTAMP;\n```\n3. 在列d上增加一个索引，并且使列a为主键：\n```\nmysql> ALTER TABLE t2 ADD INDEX (d), ADD PRIMARY KEY (a);\n```\n4. 删除列c：\n```\nmysql> ALTER TABLE t2 DROP COLUMN c;\n```\n5. 增加一个新的AUTO_INCREMENT整数列，命名为c：\n```\nmysql> ALTER TABLE t2 ADD c INT UNSIGNED NOT NULL AUTO_INCREMENT,ADD INDEX (c);\n```\n注意，我们索引了c，因为AUTO_INCREMENT柱必须被索引，并且另外我们声明c为NOT NULL，\n因为索引了的列不能是NULL\n\n### 十、一个建库和建表以及插入数据的实例\n\n```\ndrop database if exists school; //如果存在SCHOOL则删除\ncreate database school; //建立库SCHOOL\nuse school; //打开库SCHOOL\ncreate table teacher //建立表TEACHER\n(\nid int(3) auto_increment not null primary key,\nname char(10) not null,\naddress varchar(50) default ‘深圳’,\nyear date\n); //建表结束\n//以下为插入字段\ninsert into teacher values('','allen','大连一中','1976-10-10');\ninsert into teacher values('','jack','大连二中','1975-12-23');\n如果你在mysql提示符键入上面的命令也可以，但不方便调试。\n（1）你可以将以上命令原样写入一个文本文件中，假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：\nmysql -uroot -p密码 < c:\\school.sql\n如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。\n（2）或者进入命令行后使用 mysql> source c:\\school.sql; 也可以将school.sql文件导入数据库中。\n```\n","source":"_posts/MySQL常用命令总结.md","raw":"---\ntitle: MySQL常用命令总结\ndate: 2017-11-16 12:41:35\ntags: [mysql]\ncategories: mysql\n---\n\n### 一、连接MYSQL\n\n格式： mysql -h主机地址 -u用户名 －p用户密码\n或者： mysql -u 用户名 -p // 回车后要求输入密码，密码不可见\n\n<!-- more -->\n#### 1、连接到本机上的MYSQL\n首先打开DOS窗口，然后进入目录mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是如果-p后带有用户密码，那么-p与密码之间必须没有空格，否则让你重新输入密码.例如以下都是合法的登陆：(帐号：root   密码:123)\n```\nmysql -u root -p\nmysql -uroot -p\nmysql -uroot -p123\n```\n如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql>\n\n#### 2、连接到远程主机上的MYSQL\n假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：\nmysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）\n\n#### 3、退出MYSQL命令\n```\nexit （回车）\n```\n\n### 二、修改密码\n格式：mysqladmin -u用户名 -p旧密码 password 新密码\n\n#### 1、给root加个密码ab12\n首先在DOS下进入目录mysql\\bin，然后键入以下命令\nmysqladmin -u root -password ab12\n注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。\n\n#### 2、再将root的密码改为djg345\nmysqladmin -u root -p ab12 password djg345\n（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）\n\n#### 3、命令行修改root密码\n```\nmysql> UPDATE mysql.user SET password=PASSWORD(’新密码’) WHERE User=’root’;\nmysql> FLUSH PRIVILEGES;\n```\n\n#### 4、显示当前的user\n```\nmysql> SELECT USER();\n```\n\n### 三、增加新用户\n格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”\n#### 1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\n\n首先用root用户连入MYSQL，然后键入以下命令：\ngrant select,insert,update,delete on *.* to test1”%\" Identified by “abc”;\n但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。\n\n#### 2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\n\n这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。\n```\ngrant select,insert,update,delete on mydb.* to test2@localhost identifiedby \"abc\";\n```\n如果你不想test2有密码，可以再打一个命令将密码消掉。\n```\ngrant select,insert,update,delete on mydb.* to test2@localhost identified by \"\";\n```\n\n### 四、操作技巧\n1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。\n也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。\n2、你可以使用光标上下键调出以前的命令。\n\n### 五、对数据库的操作\n#### 1、显示当前数据库服务器中的数据库列表：\n```\nmysql> SHOW DATABASES;\n```\n**注意**:mysql库里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。\n\n#### 2、显示数据库中的数据表：\n```\nmysql> USE 库名；\nmysql> SHOW TABLES;\n```\n\n#### 3、显示use的数据库名：\n```\nmysql> SELECT DATABASE();\n```\n\n#### 4、建立数据库：\n```\nmysql> CREATE DATABASE 库名;\n```\n#### 5、删除数据库：\n```\nmysql> DROP DATABASE 库名;\n```\n#### 6、导入.sql文件命令：\n```\nmysql> USE 数据库名;\nmysql> SOURCE d:/mysql.sql;\n```\n也可以在DOS环境下键入以下命令进行导入：\n```\nmysql -uroot -proot databasename < databasename.sql\n```\n**注意**:导入前请保证mysql中必须有databasename这个数据库;\n\n### 六、备份数据库：\n注意，mysqldump命令在DOS的 mysql\\bin 目录下执行,不能在mysql环境下执行，因此，不能以分号“;”结尾。若已登陆mysql，请运行退出命令mysql> exit\n\n#### 1.导出整个数据库\n导出文件默认是存在mysql\\bin目录下\n```\nmysqldump -u用户名 -p数据库名 > 导出的文件名\nmysqldump -uroot -p123456 database_name > outfile_name.sql\n```\n\n#### 2.导出一个表\n```\nmysqldump -u 用户名 -p 数据库名 表名> 导出的文件名\nmysqldump -u user_name -p database_name table_name > outfile_name.sql\n```\n\n#### 3.导出一个数据库结构\n```\nmysqldump -u user_name -p -d –add-drop-table database_name > outfile_name.sql\n-d 没有数据 –add-drop-table 在每个create语句之前增加一个drop table\n```\n#### 4.带语言参数导出\n```\nmysqldump -uroot -p –default-character-set=latin1 –set-charset=gbk –skip-opt database_name > outfile_name.sql\n```\n\n### 七、将文本数据转到数据库中\n#### 1、文本数据应符合的格式\n字段数据之间用tab键隔开，null值用\\n来代替.例：\n```\n3 rose 大连二中 1976-10-10\n4 mike 大连一中 1975-12-23\n```\n假设你把这两组数据存为school.txt文件，放在c盘根目录下。\n#### 2、数据传入命令\n```\nmysql> load data local infile \"c:\\school.txt\" into table 表名;\n```\n**注意**:你最好将文件复制到mysql\\bin目录下，并且要先用use命令打表所在的库。\n\n### 八、对表的操作\n#### 1、显示数据表的结构：\n```\nmysql> DESCRIBE 表名; （DESC 表名）\n```\n#### 2、建立数据表：\n```\nmysql> USE 库名; //进入数据库\nmysql> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));\n```\n\n#### 3、删除数据表：\n```\nmysql> DROP TABLE 表名；\n```\n\n#### 4、重命名数据表\n```\nalter table t1 rename t2;\n```\n\n#### 5、显示表中的记录：\n```\nmysql> SELECT * FROM 表名;\n```\n\n#### 6、往表中插入记录：\n```\nmysql> INSERT INTO 表名 VALUES (”hyq”,”M”);\n```\n\n#### 7、更新表中数据：\n```\nmysql-> UPDATE 表名 SET 字段名1=’a',字段名2=’b’ WHERE 字段名3=’c';\n```\n\n#### 8、将表中记录清空：\n```\nmysql> DELETE FROM 表名;\n```\n#### 9、用文本方式将数据装入数据表中：\n```\nmysql> LOAD DATA LOCAL INFILE “D:/mysql.txt” INTO TABLE 表名;\n```\n\n#### 10、 显示表的定义\n还可以看到表的约束，例如外键\n```\nmysql> SHOW CREATE TABLE yourtablename\n```\n还可以通过 mysqldump 将表的完整定义转储到文件中，当然包括外键定义。\n还可以通过下面的指令列出表 T 的外键约束：\n```\nmysql> SHOW TABLE STATUS FROM yourdatabasename LIKE 'T'  \n```\n外键约束将会在表注释中列出。\n\n### 存储过程\n#### 11、创建存储过程\n\n```\nCREATE PROCEDURE procedureName (in paramentName type, in paramentName type,……)\nBEGIN\nSQL sentences;\nEND\n```\n\n#### 12、调用存储过程\n```\nmysql> CALL procedureName(paramentList);\n例：mysql> CALL addMoney(12, 500);\n```\n\n#### 13、查看特定数据库的存储过程\n```\n方法一：mysql> SELECT `name` FROM mysql.proc WHERE db = 'your_db_name' AND `type` = 'PROCEDURE';\n方法二：mysql> show procedure status;\n```\n\n#### 14、删除存储过程\n```\nmysql> DROP PROCEDURE procedure_name;\nmysql> DROP PROCEDURE IF EXISTS procedure_name;\n```\n\n#### 15、查看指定的存储过程定义\n```\nmysql> SHOW CREATE PROCEDURE proc_name;\nmysql> SHOW CREATE FUNCTION func_name;\n---------- 示例一-----------\nmysql> DELIMITER\nmysql>USE‘dbname‘\n\n//选择数据库\nmysql> DROP PROCEDURE IF EXISTS `addMoney`\n//如果存在同名存储过程，则删除之mysql>CREATEDEFINER=‘root‘@‘localhost‘PROCEDURE‘addMoney‘(INxidINT(5),INxmoneyINT(6))mysql>BEGINmysql>UPDATEUSERuSETu.money=u.money+xmoneyWHEREu.id=xid;//分号\";\"不会导致语句执行，因为当前的分割符被定义为\n\nmysql> END$$   //终止\nmysql> DELIMITER ;    //把分割符改回分号\";\"\nmysql> call addMoney(5,1000); //执行存储过程\n---------- 示例二-----------\nmysql> delimiter //\nmysql> create procedure proc_name (in parameter integer)\nmysql> begin\nmysql> if parameter=0 then\nmysql> select * from user order by id asc;\nmysql> else\nmysql> select * from user order by id desc;\nmysql> end if;\nmysql> end;\nmysql> //        //此处“//”为终止符\nmysql> delimiter ;\nmysql> show warnings;\nmysql> call proc_name(1);\nmysql> call proc_name(0);\n\n```\n\n### 九、修改表的列属性的操作\n\n1. 为了改变列a，从INTEGER改为TINYINT NOT NULL(名字一样)，\n并且改变列b，从CHAR(10)改为CHAR(20)，同时重命名它，从b改为c:\n```\nmysql> ALTER TABLE t2 MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20);\n```\n2. 增加一个新TIMESTAMP列，名为d：\n```\nmysql> ALTER TABLE t2 ADD d TIMESTAMP;\n```\n3. 在列d上增加一个索引，并且使列a为主键：\n```\nmysql> ALTER TABLE t2 ADD INDEX (d), ADD PRIMARY KEY (a);\n```\n4. 删除列c：\n```\nmysql> ALTER TABLE t2 DROP COLUMN c;\n```\n5. 增加一个新的AUTO_INCREMENT整数列，命名为c：\n```\nmysql> ALTER TABLE t2 ADD c INT UNSIGNED NOT NULL AUTO_INCREMENT,ADD INDEX (c);\n```\n注意，我们索引了c，因为AUTO_INCREMENT柱必须被索引，并且另外我们声明c为NOT NULL，\n因为索引了的列不能是NULL\n\n### 十、一个建库和建表以及插入数据的实例\n\n```\ndrop database if exists school; //如果存在SCHOOL则删除\ncreate database school; //建立库SCHOOL\nuse school; //打开库SCHOOL\ncreate table teacher //建立表TEACHER\n(\nid int(3) auto_increment not null primary key,\nname char(10) not null,\naddress varchar(50) default ‘深圳’,\nyear date\n); //建表结束\n//以下为插入字段\ninsert into teacher values('','allen','大连一中','1976-10-10');\ninsert into teacher values('','jack','大连二中','1975-12-23');\n如果你在mysql提示符键入上面的命令也可以，但不方便调试。\n（1）你可以将以上命令原样写入一个文本文件中，假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：\nmysql -uroot -p密码 < c:\\school.sql\n如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将//的注释去掉即可使用）。\n（2）或者进入命令行后使用 mysql> source c:\\school.sql; 也可以将school.sql文件导入数据库中。\n```\n","slug":"MySQL常用命令总结","published":1,"updated":"2017-12-05T09:38:57.730Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuka0017pev2glrszg3g","content":"<h3 id=\"一、连接MYSQL\"><a href=\"#一、连接MYSQL\" class=\"headerlink\" title=\"一、连接MYSQL\"></a>一、连接MYSQL</h3><p>格式： mysql -h主机地址 -u用户名 －p用户密码<br>或者： mysql -u 用户名 -p // 回车后要求输入密码，密码不可见</p>\n<a id=\"more\"></a>\n<h4 id=\"1、连接到本机上的MYSQL\"><a href=\"#1、连接到本机上的MYSQL\" class=\"headerlink\" title=\"1、连接到本机上的MYSQL\"></a>1、连接到本机上的MYSQL</h4><p>首先打开DOS窗口，然后进入目录mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是如果-p后带有用户密码，那么-p与密码之间必须没有空格，否则让你重新输入密码.例如以下都是合法的登陆：(帐号：root   密码:123)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">mysql -uroot -p123</span><br></pre></td></tr></table></figure></p>\n<p>如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql&gt;</p>\n<h4 id=\"2、连接到远程主机上的MYSQL\"><a href=\"#2、连接到远程主机上的MYSQL\" class=\"headerlink\" title=\"2、连接到远程主机上的MYSQL\"></a>2、连接到远程主机上的MYSQL</h4><p>假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：<br>mysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）</p>\n<h4 id=\"3、退出MYSQL命令\"><a href=\"#3、退出MYSQL命令\" class=\"headerlink\" title=\"3、退出MYSQL命令\"></a>3、退出MYSQL命令</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exit</span> （回车）</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、修改密码\"><a href=\"#二、修改密码\" class=\"headerlink\" title=\"二、修改密码\"></a>二、修改密码</h3><p>格式：mysqladmin -u用户名 -p旧密码 password 新密码</p>\n<h4 id=\"1、给root加个密码ab12\"><a href=\"#1、给root加个密码ab12\" class=\"headerlink\" title=\"1、给root加个密码ab12\"></a>1、给root加个密码ab12</h4><p>首先在DOS下进入目录mysql\\bin，然后键入以下命令<br>mysqladmin -u root -password ab12<br>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。</p>\n<h4 id=\"2、再将root的密码改为djg345\"><a href=\"#2、再将root的密码改为djg345\" class=\"headerlink\" title=\"2、再将root的密码改为djg345\"></a>2、再将root的密码改为djg345</h4><p>mysqladmin -u root -p ab12 password djg345<br>（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）</p>\n<h4 id=\"3、命令行修改root密码\"><a href=\"#3、命令行修改root密码\" class=\"headerlink\" title=\"3、命令行修改root密码\"></a>3、命令行修改root密码</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">UPDATE</span> mysql.<span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">password</span>=<span class=\"keyword\">PASSWORD</span>(’新密码’) <span class=\"keyword\">WHERE</span> <span class=\"keyword\">User</span>=’root’;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、显示当前的user\"><a href=\"#4、显示当前的user\" class=\"headerlink\" title=\"4、显示当前的user\"></a>4、显示当前的user</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> <span class=\"keyword\">USER</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、增加新用户\"><a href=\"#三、增加新用户\" class=\"headerlink\" title=\"三、增加新用户\"></a>三、增加新用户</h3><p>格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”</p>\n<h4 id=\"1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\"><a href=\"#1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\" class=\"headerlink\" title=\"1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\"></a>1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。</h4><p>首先用root用户连入MYSQL，然后键入以下命令：<br>grant select,insert,update,delete on <em>.</em> to test1”%” Identified by “abc”;<br>但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。</p>\n<h4 id=\"2、增加一个用户test2密码为abc-让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\"><a href=\"#2、增加一个用户test2密码为abc-让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\" class=\"headerlink\" title=\"2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\"></a>2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）</h4><p>这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span> <span class=\"keyword\">on</span> mydb.* <span class=\"keyword\">to</span> test2@localhost identifiedby <span class=\"string\">\"abc\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>如果你不想test2有密码，可以再打一个命令将密码消掉。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span> <span class=\"keyword\">on</span> mydb.* <span class=\"keyword\">to</span> test2@localhost <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">\"\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"四、操作技巧\"><a href=\"#四、操作技巧\" class=\"headerlink\" title=\"四、操作技巧\"></a>四、操作技巧</h3><p>1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。<br>也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。<br>2、你可以使用光标上下键调出以前的命令。</p>\n<h3 id=\"五、对数据库的操作\"><a href=\"#五、对数据库的操作\" class=\"headerlink\" title=\"五、对数据库的操作\"></a>五、对数据库的操作</h3><h4 id=\"1、显示当前数据库服务器中的数据库列表：\"><a href=\"#1、显示当前数据库服务器中的数据库列表：\" class=\"headerlink\" title=\"1、显示当前数据库服务器中的数据库列表：\"></a>1、显示当前数据库服务器中的数据库列表：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SHOW </span>DATABASES<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:mysql库里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</p>\n<h4 id=\"2、显示数据库中的数据表：\"><a href=\"#2、显示数据库中的数据表：\" class=\"headerlink\" title=\"2、显示数据库中的数据表：\"></a>2、显示数据库中的数据表：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 库名；</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> SHOW TABLES;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3、显示use的数据库名：\"><a href=\"#3、显示use的数据库名：\" class=\"headerlink\" title=\"3、显示use的数据库名：\"></a>3、显示use的数据库名：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DATABASE</span>();</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、建立数据库：\"><a href=\"#4、建立数据库：\" class=\"headerlink\" title=\"4、建立数据库：\"></a>4、建立数据库：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">CREATE</span> <span class=\"keyword\">DATABASE</span> 库名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、删除数据库：\"><a href=\"#5、删除数据库：\" class=\"headerlink\" title=\"5、删除数据库：\"></a>5、删除数据库：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">DROP</span> <span class=\"keyword\">DATABASE</span> 库名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、导入-sql文件命令：\"><a href=\"#6、导入-sql文件命令：\" class=\"headerlink\" title=\"6、导入.sql文件命令：\"></a>6、导入.sql文件命令：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 数据库名;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> SOURCE d:/mysql.sql;</span></span><br></pre></td></tr></table></figure>\n<p>也可以在DOS环境下键入以下命令进行导入：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mysql</span> <span class=\"selector-tag\">-uroot</span> <span class=\"selector-tag\">-proot</span> <span class=\"selector-tag\">databasename</span> &lt; <span class=\"selector-tag\">databasename</span><span class=\"selector-class\">.sql</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>:导入前请保证mysql中必须有databasename这个数据库;</p>\n<h3 id=\"六、备份数据库：\"><a href=\"#六、备份数据库：\" class=\"headerlink\" title=\"六、备份数据库：\"></a>六、备份数据库：</h3><p>注意，mysqldump命令在DOS的 mysql\\bin 目录下执行,不能在mysql环境下执行，因此，不能以分号“;”结尾。若已登陆mysql，请运行退出命令mysql&gt; exit</p>\n<h4 id=\"1-导出整个数据库\"><a href=\"#1-导出整个数据库\" class=\"headerlink\" title=\"1.导出整个数据库\"></a>1.导出整个数据库</h4><p>导出文件默认是存在mysql\\bin目录下<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mysqldump</span> <span class=\"selector-tag\">-u</span>用户名 <span class=\"selector-tag\">-p</span>数据库名 &gt; 导出的文件名</span><br><span class=\"line\"><span class=\"selector-tag\">mysqldump</span> <span class=\"selector-tag\">-uroot</span> <span class=\"selector-tag\">-p123456</span> <span class=\"selector-tag\">database_name</span> &gt; <span class=\"selector-tag\">outfile_name</span><span class=\"selector-class\">.sql</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-导出一个表\"><a href=\"#2-导出一个表\" class=\"headerlink\" title=\"2.导出一个表\"></a>2.导出一个表</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -u 用户名 -<span class=\"selector-tag\">p</span> 数据库名 表名&gt; 导出的文件名</span><br><span class=\"line\">mysqldump -u user_name -<span class=\"selector-tag\">p</span> database_name table_name &gt; outfile_name.sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-导出一个数据库结构\"><a href=\"#3-导出一个数据库结构\" class=\"headerlink\" title=\"3.导出一个数据库结构\"></a>3.导出一个数据库结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -u user_name -p -d –add-<span class=\"keyword\">drop</span>-<span class=\"keyword\">table</span> database_name &gt; outfile_name.sql</span><br><span class=\"line\">-d 没有数据 –<span class=\"keyword\">add</span>-<span class=\"keyword\">drop</span>-<span class=\"keyword\">table</span> 在每个<span class=\"keyword\">create</span>语句之前增加一个<span class=\"keyword\">drop</span> <span class=\"keyword\">table</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-带语言参数导出\"><a href=\"#4-带语言参数导出\" class=\"headerlink\" title=\"4.带语言参数导出\"></a>4.带语言参数导出</h4><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">mysqldump </span>-<span class=\"string\">uroot </span>-p –<span class=\"string\">default-character-</span><span class=\"string\">set=</span><span class=\"string\">latin1 </span>–<span class=\"built_in\">set-charset=gbk</span> –<span class=\"string\">skip-opt </span><span class=\"string\">database_name </span>&gt; <span class=\"string\">outfile_name.</span><span class=\"string\">sql</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七、将文本数据转到数据库中\"><a href=\"#七、将文本数据转到数据库中\" class=\"headerlink\" title=\"七、将文本数据转到数据库中\"></a>七、将文本数据转到数据库中</h3><h4 id=\"1、文本数据应符合的格式\"><a href=\"#1、文本数据应符合的格式\" class=\"headerlink\" title=\"1、文本数据应符合的格式\"></a>1、文本数据应符合的格式</h4><p>字段数据之间用tab键隔开，null值用\\n来代替.例：<br><figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">3 </span>rose 大连二中 <span class=\"number\">1976</span>-<span class=\"number\">10</span>-<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"symbol\">4 </span>mike 大连一中 <span class=\"number\">1975</span>-<span class=\"number\">12</span>-<span class=\"number\">23</span></span><br></pre></td></tr></table></figure></p>\n<p>假设你把这两组数据存为school.txt文件，放在c盘根目录下。</p>\n<h4 id=\"2、数据传入命令\"><a href=\"#2、数据传入命令\" class=\"headerlink\" title=\"2、数据传入命令\"></a>2、数据传入命令</h4><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; load <span class=\"built_in\">data</span> <span class=\"built_in\">local</span> infile <span class=\"string\">\"c:\\school.txt\"</span> <span class=\"keyword\">into</span> table 表名;</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:你最好将文件复制到mysql\\bin目录下，并且要先用use命令打表所在的库。</p>\n<h3 id=\"八、对表的操作\"><a href=\"#八、对表的操作\" class=\"headerlink\" title=\"八、对表的操作\"></a>八、对表的操作</h3><h4 id=\"1、显示数据表的结构：\"><a href=\"#1、显示数据表的结构：\" class=\"headerlink\" title=\"1、显示数据表的结构：\"></a>1、显示数据表的结构：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> DESCRIBE 表名; （DESC 表名）</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2、建立数据表：\"><a href=\"#2、建立数据表：\" class=\"headerlink\" title=\"2、建立数据表：\"></a>2、建立数据表：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 库名; //进入数据库</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3、删除数据表：\"><a href=\"#3、删除数据表：\" class=\"headerlink\" title=\"3、删除数据表：\"></a>3、删除数据表：</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP <span class=\"keyword\">TABLE</span> 表名；</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、重命名数据表\"><a href=\"#4、重命名数据表\" class=\"headerlink\" title=\"4、重命名数据表\"></a>4、重命名数据表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t1 <span class=\"keyword\">rename</span> t2;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、显示表中的记录：\"><a href=\"#5、显示表中的记录：\" class=\"headerlink\" title=\"5、显示表中的记录：\"></a>5、显示表中的记录：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、往表中插入记录：\"><a href=\"#6、往表中插入记录：\" class=\"headerlink\" title=\"6、往表中插入记录：\"></a>6、往表中插入记录：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> 表名 <span class=\"keyword\">VALUES</span> (”hyq”,”M”);</span><br></pre></td></tr></table></figure>\n<h4 id=\"7、更新表中数据：\"><a href=\"#7、更新表中数据：\" class=\"headerlink\" title=\"7、更新表中数据：\"></a>7、更新表中数据：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql-&gt; UPDATE 表名 <span class=\"builtin-name\">SET</span> 字段名<span class=\"attribute\">1</span>=’a',字段名2=’b’ WHERE 字段名<span class=\"attribute\">3</span>=’c';</span><br></pre></td></tr></table></figure>\n<h4 id=\"8、将表中记录清空：\"><a href=\"#8、将表中记录清空：\" class=\"headerlink\" title=\"8、将表中记录清空：\"></a>8、将表中记录清空：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"9、用文本方式将数据装入数据表中：\"><a href=\"#9、用文本方式将数据装入数据表中：\" class=\"headerlink\" title=\"9、用文本方式将数据装入数据表中：\"></a>9、用文本方式将数据装入数据表中：</h4><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; LOAD <span class=\"built_in\">DATA</span> <span class=\"built_in\">LOCAL</span> INFILE “D:/mysql.txt” <span class=\"keyword\">INTO</span> TABLE 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"10、-显示表的定义\"><a href=\"#10、-显示表的定义\" class=\"headerlink\" title=\"10、 显示表的定义\"></a>10、 显示表的定义</h4><p>还可以看到表的约束，例如外键<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW CREATE <span class=\"keyword\">TABLE</span> yourtablename</span><br></pre></td></tr></table></figure></p>\n<p>还可以通过 mysqldump 将表的完整定义转储到文件中，当然包括外键定义。<br>还可以通过下面的指令列出表 T 的外键约束：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">TABLE</span> STATUS <span class=\"comment\">FROM yourdatabasename LIKE</span> <span class=\"comment\">'T'</span></span><br></pre></td></tr></table></figure></p>\n<p>外键约束将会在表注释中列出。</p>\n<h3 id=\"存储过程\"><a href=\"#存储过程\" class=\"headerlink\" title=\"存储过程\"></a>存储过程</h3><h4 id=\"11、创建存储过程\"><a href=\"#11、创建存储过程\" class=\"headerlink\" title=\"11、创建存储过程\"></a>11、创建存储过程</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">procedureName</span> <span class=\"params\">(<span class=\"keyword\">in</span> paramentName <span class=\"keyword\">type</span>, <span class=\"keyword\">in</span> paramentName <span class=\"keyword\">type</span>,……)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">BEGIN</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">SQL</span> <span class=\"title\">sentences</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">END</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"12、调用存储过程\"><a href=\"#12、调用存储过程\" class=\"headerlink\" title=\"12、调用存储过程\"></a>12、调用存储过程</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CALL procedureName(paramentList)<span class=\"comment\">;</span></span><br><span class=\"line\">例：mysql&gt; CALL <span class=\"keyword\">addMoney(12, </span><span class=\"number\">500</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"13、查看特定数据库的存储过程\"><a href=\"#13、查看特定数据库的存储过程\" class=\"headerlink\" title=\"13、查看特定数据库的存储过程\"></a>13、查看特定数据库的存储过程</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法一：mysql&gt; <span class=\"keyword\">SELECT</span> `name` <span class=\"keyword\">FROM</span> mysql.proc <span class=\"keyword\">WHERE</span> db = <span class=\"string\">'your_db_name'</span> <span class=\"keyword\">AND</span> `<span class=\"keyword\">type</span>` = <span class=\"string\">'PROCEDURE'</span>;</span><br><span class=\"line\">方法二：mysql&gt; show <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">status</span>;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"14、删除存储过程\"><a href=\"#14、删除存储过程\" class=\"headerlink\" title=\"14、删除存储过程\"></a>14、删除存储过程</h4><figure class=\"highlight cal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">procedure_name</span>;</span></span><br><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">IF</span> <span class=\"title\">EXISTS</span> <span class=\"title\">procedure_name</span>;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"15、查看指定的存储过程定义\"><a href=\"#15、查看指定的存储过程定义\" class=\"headerlink\" title=\"15、查看指定的存储过程定义\"></a>15、查看指定的存储过程定义</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">proc_name</span>;</span></span><br><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">FUNCTION</span> <span class=\"title\">func_name</span>;</span></span><br><span class=\"line\">---------- 示例一-----------</span><br><span class=\"line\">mysql&gt; DELIMITER</span><br><span class=\"line\">mysql&gt;USE‘dbname‘</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//选择数据库</span></span><br><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">IF</span> <span class=\"title\">EXISTS</span> `<span class=\"title\">addMoney</span>`</span></span><br><span class=\"line\"><span class=\"function\">//如果存在同名存储过程，则删除之<span class=\"title\">mysql</span>&gt;<span class=\"title\">CREATEDEFINER</span>=‘<span class=\"title\">root</span>‘@‘<span class=\"title\">localhost</span>‘<span class=\"title\">PROCEDURE</span>‘<span class=\"title\">addMoney</span>‘<span class=\"params\">(INxidINT(5)</span>,<span class=\"title\">INxmoneyINT</span><span class=\"params\">(6)</span>)<span class=\"title\">mysql</span>&gt;<span class=\"title\">BEGINmysql</span>&gt;<span class=\"title\">UPDATEUSERuSETu</span>.<span class=\"title\">money</span>=<span class=\"title\">u</span>.<span class=\"title\">money</span>+<span class=\"title\">xmoneyWHEREu</span>.<span class=\"title\">id</span>=<span class=\"title\">xid</span>;</span><span class=\"comment\">//分号\";\"不会导致语句执行，因为当前的分割符被定义为</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">END</span>$$   <span class=\"comment\">//终止</span></span><br><span class=\"line\">mysql&gt; DELIMITER ;    <span class=\"comment\">//把分割符改回分号\";\"</span></span><br><span class=\"line\">mysql&gt; call addMoney(<span class=\"number\">5</span>,<span class=\"number\">1000</span>); <span class=\"comment\">//执行存储过程</span></span><br><span class=\"line\">---------- 示例二-----------</span><br><span class=\"line\">mysql&gt; delimiter <span class=\"comment\">//</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">create</span> <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">proc_name</span> <span class=\"params\">(<span class=\"keyword\">in</span> parameter integer)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">begin</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">if</span> <span class=\"title\">parameter</span>=0 <span class=\"title\">then</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">select</span> * <span class=\"title\">from</span> <span class=\"title\">user</span> <span class=\"title\">order</span> <span class=\"title\">by</span> <span class=\"title\">id</span> <span class=\"title\">asc</span>;</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">else</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> user <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> id <span class=\"keyword\">desc</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">end</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"comment\">//        //此处“//”为终止符</span></span><br><span class=\"line\">mysql&gt; delimiter ;</span><br><span class=\"line\">mysql&gt; show warnings;</span><br><span class=\"line\">mysql&gt; call proc_name(<span class=\"number\">1</span>);</span><br><span class=\"line\">mysql&gt; call proc_name(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"九、修改表的列属性的操作\"><a href=\"#九、修改表的列属性的操作\" class=\"headerlink\" title=\"九、修改表的列属性的操作\"></a>九、修改表的列属性的操作</h3><ol>\n<li><p>为了改变列a，从INTEGER改为TINYINT NOT NULL(名字一样)，<br>并且改变列b，从CHAR(10)改为CHAR(20)，同时重命名它，从b改为c:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20)</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加一个新TIMESTAMP列，名为d：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">ADD d TIMESTAMP</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在列d上增加一个索引，并且使列a为主键：</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE <span class=\"built_in\">t2</span> <span class=\"keyword\">ADD </span>INDEX (d), <span class=\"keyword\">ADD </span>PRIMARY KEY (a)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除列c：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">DROP COLUMN c</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加一个新的AUTO_INCREMENT整数列，命名为c：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE t2 <span class=\"builtin-name\">ADD</span> c INT UNSIGNED <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,<span class=\"builtin-name\">ADD</span> INDEX (c);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>注意，我们索引了c，因为AUTO_INCREMENT柱必须被索引，并且另外我们声明c为NOT NULL，<br>因为索引了的列不能是NULL</p>\n<h3 id=\"十、一个建库和建表以及插入数据的实例\"><a href=\"#十、一个建库和建表以及插入数据的实例\" class=\"headerlink\" title=\"十、一个建库和建表以及插入数据的实例\"></a>十、一个建库和建表以及插入数据的实例</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database <span class=\"keyword\">if</span> exists school; <span class=\"comment\">//如果存在SCHOOL则删除</span></span><br><span class=\"line\">create database school; <span class=\"comment\">//建立库SCHOOL</span></span><br><span class=\"line\">use school; <span class=\"comment\">//打开库SCHOOL</span></span><br><span class=\"line\">create table teacher <span class=\"comment\">//建立表TEACHER</span></span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"function\">id <span class=\"title\">int</span>(<span class=\"params\"><span class=\"number\">3</span></span>) auto_increment not <span class=\"literal\">null</span> primary key,</span></span><br><span class=\"line\"><span class=\"function\">name <span class=\"title\">char</span>(<span class=\"params\"><span class=\"number\">10</span></span>) not <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">address <span class=\"title\">varchar</span>(<span class=\"params\"><span class=\"number\">50</span></span>) <span class=\"keyword\">default</span> ‘深圳’,</span></span><br><span class=\"line\"><span class=\"function\">year date</span></span><br><span class=\"line\"><span class=\"function\">)</span>; <span class=\"comment\">//建表结束</span></span><br><span class=\"line\"><span class=\"comment\">//以下为插入字段</span></span><br><span class=\"line\"><span class=\"function\">insert <span class=\"keyword\">into</span> teacher <span class=\"title\">values</span>(<span class=\"params\"><span class=\"string\">''</span>,<span class=\"string\">'allen'</span>,<span class=\"string\">'大连一中'</span>,<span class=\"string\">'1976-10-10'</span></span>)</span>;</span><br><span class=\"line\"><span class=\"function\">insert <span class=\"keyword\">into</span> teacher <span class=\"title\">values</span>(<span class=\"params\"><span class=\"string\">''</span>,<span class=\"string\">'jack'</span>,<span class=\"string\">'大连二中'</span>,<span class=\"string\">'1975-12-23'</span></span>)</span>;</span><br><span class=\"line\">如果你在mysql提示符键入上面的命令也可以，但不方便调试。</span><br><span class=\"line\">（<span class=\"number\">1</span>）你可以将以上命令原样写入一个文本文件中，假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：</span><br><span class=\"line\">mysql -uroot -p密码 &lt; c:\\school.sql</span><br><span class=\"line\">如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将<span class=\"comment\">//的注释去掉即可使用）。</span></span><br><span class=\"line\">（<span class=\"number\">2</span>）或者进入命令行后使用 mysql&gt; source c:\\school.sql; 也可以将school.sql文件导入数据库中。</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"一、连接MYSQL\"><a href=\"#一、连接MYSQL\" class=\"headerlink\" title=\"一、连接MYSQL\"></a>一、连接MYSQL</h3><p>格式： mysql -h主机地址 -u用户名 －p用户密码<br>或者： mysql -u 用户名 -p // 回车后要求输入密码，密码不可见</p>","more":"<h4 id=\"1、连接到本机上的MYSQL\"><a href=\"#1、连接到本机上的MYSQL\" class=\"headerlink\" title=\"1、连接到本机上的MYSQL\"></a>1、连接到本机上的MYSQL</h4><p>首先打开DOS窗口，然后进入目录mysql\\bin，再键入命令mysql -u root -p，回车后提示你输密码.注意用户名前可以有空格也可以没有空格，但是如果-p后带有用户密码，那么-p与密码之间必须没有空格，否则让你重新输入密码.例如以下都是合法的登陆：(帐号：root   密码:123)<br><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">mysql -uroot -p</span><br><span class=\"line\">mysql -uroot -p123</span><br></pre></td></tr></table></figure></p>\n<p>如果刚安装好MYSQL，超级用户root是没有密码的，故直接回车即可进入到MYSQL中了，MYSQL的提示符是： mysql&gt;</p>\n<h4 id=\"2、连接到远程主机上的MYSQL\"><a href=\"#2、连接到远程主机上的MYSQL\" class=\"headerlink\" title=\"2、连接到远程主机上的MYSQL\"></a>2、连接到远程主机上的MYSQL</h4><p>假设远程主机的IP为：110.110.110.110，用户名为root,密码为abcd123。则键入以下命令：<br>mysql -h110.110.110.110 -u root -p 123;（注:u与root之间可以不用加空格，其它也一样）</p>\n<h4 id=\"3、退出MYSQL命令\"><a href=\"#3、退出MYSQL命令\" class=\"headerlink\" title=\"3、退出MYSQL命令\"></a>3、退出MYSQL命令</h4><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">exit</span> （回车）</span><br></pre></td></tr></table></figure>\n<h3 id=\"二、修改密码\"><a href=\"#二、修改密码\" class=\"headerlink\" title=\"二、修改密码\"></a>二、修改密码</h3><p>格式：mysqladmin -u用户名 -p旧密码 password 新密码</p>\n<h4 id=\"1、给root加个密码ab12\"><a href=\"#1、给root加个密码ab12\" class=\"headerlink\" title=\"1、给root加个密码ab12\"></a>1、给root加个密码ab12</h4><p>首先在DOS下进入目录mysql\\bin，然后键入以下命令<br>mysqladmin -u root -password ab12<br>注：因为开始时root没有密码，所以-p旧密码一项就可以省略了。</p>\n<h4 id=\"2、再将root的密码改为djg345\"><a href=\"#2、再将root的密码改为djg345\" class=\"headerlink\" title=\"2、再将root的密码改为djg345\"></a>2、再将root的密码改为djg345</h4><p>mysqladmin -u root -p ab12 password djg345<br>（注意：和上面不同，下面的因为是MYSQL环境中的命令，所以后面都带一个分号作为命令结束符）</p>\n<h4 id=\"3、命令行修改root密码\"><a href=\"#3、命令行修改root密码\" class=\"headerlink\" title=\"3、命令行修改root密码\"></a>3、命令行修改root密码</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">UPDATE</span> mysql.<span class=\"keyword\">user</span> <span class=\"keyword\">SET</span> <span class=\"keyword\">password</span>=<span class=\"keyword\">PASSWORD</span>(’新密码’) <span class=\"keyword\">WHERE</span> <span class=\"keyword\">User</span>=’root’;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、显示当前的user\"><a href=\"#4、显示当前的user\" class=\"headerlink\" title=\"4、显示当前的user\"></a>4、显示当前的user</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> <span class=\"keyword\">USER</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"三、增加新用户\"><a href=\"#三、增加新用户\" class=\"headerlink\" title=\"三、增加新用户\"></a>三、增加新用户</h3><p>格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”</p>\n<h4 id=\"1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\"><a href=\"#1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\" class=\"headerlink\" title=\"1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。\"></a>1、增加一个用户test1密码为abc，让他可以在任何主机上登录，并对所有数据库有查询、插入、修改、删除的权限。</h4><p>首先用root用户连入MYSQL，然后键入以下命令：<br>grant select,insert,update,delete on <em>.</em> to test1”%” Identified by “abc”;<br>但增加的用户是十分危险的，你想如某个人知道test1的密码，那么他就可以在internet上的任何一台电脑上登录你的mysql数据库并对你的数据可以为所欲为了，解决办法见2。</p>\n<h4 id=\"2、增加一个用户test2密码为abc-让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\"><a href=\"#2、增加一个用户test2密码为abc-让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\" class=\"headerlink\" title=\"2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）\"></a>2、增加一个用户test2密码为abc,让他只可以在localhost上登录，并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机，即MYSQL数据库所在的那台主机）</h4><p>这样用户即使用知道test2的密码，他也无法从internet上直接访问数据库，只能通过MYSQL主机上的web页来访问了。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span> <span class=\"keyword\">on</span> mydb.* <span class=\"keyword\">to</span> test2@localhost identifiedby <span class=\"string\">\"abc\"</span>;</span><br></pre></td></tr></table></figure></p>\n<p>如果你不想test2有密码，可以再打一个命令将密码消掉。<br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> <span class=\"keyword\">select</span>,<span class=\"keyword\">insert</span>,<span class=\"keyword\">update</span>,<span class=\"keyword\">delete</span> <span class=\"keyword\">on</span> mydb.* <span class=\"keyword\">to</span> test2@localhost <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> <span class=\"string\">\"\"</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"四、操作技巧\"><a href=\"#四、操作技巧\" class=\"headerlink\" title=\"四、操作技巧\"></a>四、操作技巧</h3><p>1、如果你打命令时，回车后发现忘记加分号，你无须重打一遍命令，只要打个分号回车就可以了。<br>也就是说你可以把一个完整的命令分成几行来打，完后用分号作结束标志就OK。<br>2、你可以使用光标上下键调出以前的命令。</p>\n<h3 id=\"五、对数据库的操作\"><a href=\"#五、对数据库的操作\" class=\"headerlink\" title=\"五、对数据库的操作\"></a>五、对数据库的操作</h3><h4 id=\"1、显示当前数据库服务器中的数据库列表：\"><a href=\"#1、显示当前数据库服务器中的数据库列表：\" class=\"headerlink\" title=\"1、显示当前数据库服务器中的数据库列表：\"></a>1、显示当前数据库服务器中的数据库列表：</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SHOW </span>DATABASES<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:mysql库里面有MYSQL的系统信息，我们改密码和新增用户，实际上就是用这个库进行操作。</p>\n<h4 id=\"2、显示数据库中的数据表：\"><a href=\"#2、显示数据库中的数据表：\" class=\"headerlink\" title=\"2、显示数据库中的数据表：\"></a>2、显示数据库中的数据表：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 库名；</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> SHOW TABLES;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3、显示use的数据库名：\"><a href=\"#3、显示use的数据库名：\" class=\"headerlink\" title=\"3、显示use的数据库名：\"></a>3、显示use的数据库名：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> <span class=\"keyword\">DATABASE</span>();</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、建立数据库：\"><a href=\"#4、建立数据库：\" class=\"headerlink\" title=\"4、建立数据库：\"></a>4、建立数据库：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">CREATE</span> <span class=\"keyword\">DATABASE</span> 库名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、删除数据库：\"><a href=\"#5、删除数据库：\" class=\"headerlink\" title=\"5、删除数据库：\"></a>5、删除数据库：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">DROP</span> <span class=\"keyword\">DATABASE</span> 库名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、导入-sql文件命令：\"><a href=\"#6、导入-sql文件命令：\" class=\"headerlink\" title=\"6、导入.sql文件命令：\"></a>6、导入.sql文件命令：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 数据库名;</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> SOURCE d:/mysql.sql;</span></span><br></pre></td></tr></table></figure>\n<p>也可以在DOS环境下键入以下命令进行导入：<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mysql</span> <span class=\"selector-tag\">-uroot</span> <span class=\"selector-tag\">-proot</span> <span class=\"selector-tag\">databasename</span> &lt; <span class=\"selector-tag\">databasename</span><span class=\"selector-class\">.sql</span></span><br></pre></td></tr></table></figure></p>\n<p><strong>注意</strong>:导入前请保证mysql中必须有databasename这个数据库;</p>\n<h3 id=\"六、备份数据库：\"><a href=\"#六、备份数据库：\" class=\"headerlink\" title=\"六、备份数据库：\"></a>六、备份数据库：</h3><p>注意，mysqldump命令在DOS的 mysql\\bin 目录下执行,不能在mysql环境下执行，因此，不能以分号“;”结尾。若已登陆mysql，请运行退出命令mysql&gt; exit</p>\n<h4 id=\"1-导出整个数据库\"><a href=\"#1-导出整个数据库\" class=\"headerlink\" title=\"1.导出整个数据库\"></a>1.导出整个数据库</h4><p>导出文件默认是存在mysql\\bin目录下<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">mysqldump</span> <span class=\"selector-tag\">-u</span>用户名 <span class=\"selector-tag\">-p</span>数据库名 &gt; 导出的文件名</span><br><span class=\"line\"><span class=\"selector-tag\">mysqldump</span> <span class=\"selector-tag\">-uroot</span> <span class=\"selector-tag\">-p123456</span> <span class=\"selector-tag\">database_name</span> &gt; <span class=\"selector-tag\">outfile_name</span><span class=\"selector-class\">.sql</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-导出一个表\"><a href=\"#2-导出一个表\" class=\"headerlink\" title=\"2.导出一个表\"></a>2.导出一个表</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -u 用户名 -<span class=\"selector-tag\">p</span> 数据库名 表名&gt; 导出的文件名</span><br><span class=\"line\">mysqldump -u user_name -<span class=\"selector-tag\">p</span> database_name table_name &gt; outfile_name.sql</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-导出一个数据库结构\"><a href=\"#3-导出一个数据库结构\" class=\"headerlink\" title=\"3.导出一个数据库结构\"></a>3.导出一个数据库结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqldump -u user_name -p -d –add-<span class=\"keyword\">drop</span>-<span class=\"keyword\">table</span> database_name &gt; outfile_name.sql</span><br><span class=\"line\">-d 没有数据 –<span class=\"keyword\">add</span>-<span class=\"keyword\">drop</span>-<span class=\"keyword\">table</span> 在每个<span class=\"keyword\">create</span>语句之前增加一个<span class=\"keyword\">drop</span> <span class=\"keyword\">table</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-带语言参数导出\"><a href=\"#4-带语言参数导出\" class=\"headerlink\" title=\"4.带语言参数导出\"></a>4.带语言参数导出</h4><figure class=\"highlight dsconfig\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">mysqldump </span>-<span class=\"string\">uroot </span>-p –<span class=\"string\">default-character-</span><span class=\"string\">set=</span><span class=\"string\">latin1 </span>–<span class=\"built_in\">set-charset=gbk</span> –<span class=\"string\">skip-opt </span><span class=\"string\">database_name </span>&gt; <span class=\"string\">outfile_name.</span><span class=\"string\">sql</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"七、将文本数据转到数据库中\"><a href=\"#七、将文本数据转到数据库中\" class=\"headerlink\" title=\"七、将文本数据转到数据库中\"></a>七、将文本数据转到数据库中</h3><h4 id=\"1、文本数据应符合的格式\"><a href=\"#1、文本数据应符合的格式\" class=\"headerlink\" title=\"1、文本数据应符合的格式\"></a>1、文本数据应符合的格式</h4><p>字段数据之间用tab键隔开，null值用\\n来代替.例：<br><figure class=\"highlight basic\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"symbol\">3 </span>rose 大连二中 <span class=\"number\">1976</span>-<span class=\"number\">10</span>-<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"symbol\">4 </span>mike 大连一中 <span class=\"number\">1975</span>-<span class=\"number\">12</span>-<span class=\"number\">23</span></span><br></pre></td></tr></table></figure></p>\n<p>假设你把这两组数据存为school.txt文件，放在c盘根目录下。</p>\n<h4 id=\"2、数据传入命令\"><a href=\"#2、数据传入命令\" class=\"headerlink\" title=\"2、数据传入命令\"></a>2、数据传入命令</h4><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; load <span class=\"built_in\">data</span> <span class=\"built_in\">local</span> infile <span class=\"string\">\"c:\\school.txt\"</span> <span class=\"keyword\">into</span> table 表名;</span><br></pre></td></tr></table></figure>\n<p><strong>注意</strong>:你最好将文件复制到mysql\\bin目录下，并且要先用use命令打表所在的库。</p>\n<h3 id=\"八、对表的操作\"><a href=\"#八、对表的操作\" class=\"headerlink\" title=\"八、对表的操作\"></a>八、对表的操作</h3><h4 id=\"1、显示数据表的结构：\"><a href=\"#1、显示数据表的结构：\" class=\"headerlink\" title=\"1、显示数据表的结构：\"></a>1、显示数据表的结构：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> DESCRIBE 表名; （DESC 表名）</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2、建立数据表：\"><a href=\"#2、建立数据表：\" class=\"headerlink\" title=\"2、建立数据表：\"></a>2、建立数据表：</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> USE 库名; //进入数据库</span></span><br><span class=\"line\"><span class=\"meta\">mysql&gt;</span><span class=\"bash\"> CREATE TABLE 表名 (字段名 VARCHAR(20), 字段名 CHAR(1));</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3、删除数据表：\"><a href=\"#3、删除数据表：\" class=\"headerlink\" title=\"3、删除数据表：\"></a>3、删除数据表：</h4><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP <span class=\"keyword\">TABLE</span> 表名；</span><br></pre></td></tr></table></figure>\n<h4 id=\"4、重命名数据表\"><a href=\"#4、重命名数据表\" class=\"headerlink\" title=\"4、重命名数据表\"></a>4、重命名数据表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t1 <span class=\"keyword\">rename</span> t2;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5、显示表中的记录：\"><a href=\"#5、显示表中的记录：\" class=\"headerlink\" title=\"5、显示表中的记录：\"></a>5、显示表中的记录：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"6、往表中插入记录：\"><a href=\"#6、往表中插入记录：\" class=\"headerlink\" title=\"6、往表中插入记录：\"></a>6、往表中插入记录：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> 表名 <span class=\"keyword\">VALUES</span> (”hyq”,”M”);</span><br></pre></td></tr></table></figure>\n<h4 id=\"7、更新表中数据：\"><a href=\"#7、更新表中数据：\" class=\"headerlink\" title=\"7、更新表中数据：\"></a>7、更新表中数据：</h4><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql-&gt; UPDATE 表名 <span class=\"builtin-name\">SET</span> 字段名<span class=\"attribute\">1</span>=’a',字段名2=’b’ WHERE 字段名<span class=\"attribute\">3</span>=’c';</span><br></pre></td></tr></table></figure>\n<h4 id=\"8、将表中记录清空：\"><a href=\"#8、将表中记录清空：\" class=\"headerlink\" title=\"8、将表中记录清空：\"></a>8、将表中记录清空：</h4><figure class=\"highlight n1ql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; <span class=\"keyword\">DELETE</span> <span class=\"keyword\">FROM</span> 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"9、用文本方式将数据装入数据表中：\"><a href=\"#9、用文本方式将数据装入数据表中：\" class=\"headerlink\" title=\"9、用文本方式将数据装入数据表中：\"></a>9、用文本方式将数据装入数据表中：</h4><figure class=\"highlight lasso\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; LOAD <span class=\"built_in\">DATA</span> <span class=\"built_in\">LOCAL</span> INFILE “D:/mysql.txt” <span class=\"keyword\">INTO</span> TABLE 表名;</span><br></pre></td></tr></table></figure>\n<h4 id=\"10、-显示表的定义\"><a href=\"#10、-显示表的定义\" class=\"headerlink\" title=\"10、 显示表的定义\"></a>10、 显示表的定义</h4><p>还可以看到表的约束，例如外键<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW CREATE <span class=\"keyword\">TABLE</span> yourtablename</span><br></pre></td></tr></table></figure></p>\n<p>还可以通过 mysqldump 将表的完整定义转储到文件中，当然包括外键定义。<br>还可以通过下面的指令列出表 T 的外键约束：<br><figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">TABLE</span> STATUS <span class=\"comment\">FROM yourdatabasename LIKE</span> <span class=\"comment\">'T'</span></span><br></pre></td></tr></table></figure></p>\n<p>外键约束将会在表注释中列出。</p>\n<h3 id=\"存储过程\"><a href=\"#存储过程\" class=\"headerlink\" title=\"存储过程\"></a>存储过程</h3><h4 id=\"11、创建存储过程\"><a href=\"#11、创建存储过程\" class=\"headerlink\" title=\"11、创建存储过程\"></a>11、创建存储过程</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">procedureName</span> <span class=\"params\">(<span class=\"keyword\">in</span> paramentName <span class=\"keyword\">type</span>, <span class=\"keyword\">in</span> paramentName <span class=\"keyword\">type</span>,……)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">BEGIN</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">SQL</span> <span class=\"title\">sentences</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">END</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"12、调用存储过程\"><a href=\"#12、调用存储过程\" class=\"headerlink\" title=\"12、调用存储过程\"></a>12、调用存储过程</h4><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CALL procedureName(paramentList)<span class=\"comment\">;</span></span><br><span class=\"line\">例：mysql&gt; CALL <span class=\"keyword\">addMoney(12, </span><span class=\"number\">500</span>)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"13、查看特定数据库的存储过程\"><a href=\"#13、查看特定数据库的存储过程\" class=\"headerlink\" title=\"13、查看特定数据库的存储过程\"></a>13、查看特定数据库的存储过程</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方法一：mysql&gt; <span class=\"keyword\">SELECT</span> `name` <span class=\"keyword\">FROM</span> mysql.proc <span class=\"keyword\">WHERE</span> db = <span class=\"string\">'your_db_name'</span> <span class=\"keyword\">AND</span> `<span class=\"keyword\">type</span>` = <span class=\"string\">'PROCEDURE'</span>;</span><br><span class=\"line\">方法二：mysql&gt; show <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">status</span>;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"14、删除存储过程\"><a href=\"#14、删除存储过程\" class=\"headerlink\" title=\"14、删除存储过程\"></a>14、删除存储过程</h4><figure class=\"highlight cal\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">procedure_name</span>;</span></span><br><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">IF</span> <span class=\"title\">EXISTS</span> <span class=\"title\">procedure_name</span>;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"15、查看指定的存储过程定义\"><a href=\"#15、查看指定的存储过程定义\" class=\"headerlink\" title=\"15、查看指定的存储过程定义\"></a>15、查看指定的存储过程定义</h4><figure class=\"highlight oxygene\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">proc_name</span>;</span></span><br><span class=\"line\">mysql&gt; SHOW <span class=\"keyword\">CREATE</span> <span class=\"function\"><span class=\"keyword\">FUNCTION</span> <span class=\"title\">func_name</span>;</span></span><br><span class=\"line\">---------- 示例一-----------</span><br><span class=\"line\">mysql&gt; DELIMITER</span><br><span class=\"line\">mysql&gt;USE‘dbname‘</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//选择数据库</span></span><br><span class=\"line\">mysql&gt; DROP <span class=\"function\"><span class=\"keyword\">PROCEDURE</span> <span class=\"title\">IF</span> <span class=\"title\">EXISTS</span> `<span class=\"title\">addMoney</span>`</span></span><br><span class=\"line\"><span class=\"function\">//如果存在同名存储过程，则删除之<span class=\"title\">mysql</span>&gt;<span class=\"title\">CREATEDEFINER</span>=‘<span class=\"title\">root</span>‘@‘<span class=\"title\">localhost</span>‘<span class=\"title\">PROCEDURE</span>‘<span class=\"title\">addMoney</span>‘<span class=\"params\">(INxidINT(5)</span>,<span class=\"title\">INxmoneyINT</span><span class=\"params\">(6)</span>)<span class=\"title\">mysql</span>&gt;<span class=\"title\">BEGINmysql</span>&gt;<span class=\"title\">UPDATEUSERuSETu</span>.<span class=\"title\">money</span>=<span class=\"title\">u</span>.<span class=\"title\">money</span>+<span class=\"title\">xmoneyWHEREu</span>.<span class=\"title\">id</span>=<span class=\"title\">xid</span>;</span><span class=\"comment\">//分号\";\"不会导致语句执行，因为当前的分割符被定义为</span></span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">END</span>$$   <span class=\"comment\">//终止</span></span><br><span class=\"line\">mysql&gt; DELIMITER ;    <span class=\"comment\">//把分割符改回分号\";\"</span></span><br><span class=\"line\">mysql&gt; call addMoney(<span class=\"number\">5</span>,<span class=\"number\">1000</span>); <span class=\"comment\">//执行存储过程</span></span><br><span class=\"line\">---------- 示例二-----------</span><br><span class=\"line\">mysql&gt; delimiter <span class=\"comment\">//</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">create</span> <span class=\"function\"><span class=\"keyword\">procedure</span> <span class=\"title\">proc_name</span> <span class=\"params\">(<span class=\"keyword\">in</span> parameter integer)</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">begin</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">if</span> <span class=\"title\">parameter</span>=0 <span class=\"title\">then</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">mysql</span>&gt; <span class=\"title\">select</span> * <span class=\"title\">from</span> <span class=\"title\">user</span> <span class=\"title\">order</span> <span class=\"title\">by</span> <span class=\"title\">id</span> <span class=\"title\">asc</span>;</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">else</span></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> user <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> id <span class=\"keyword\">desc</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">end</span> <span class=\"keyword\">if</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">end</span>;</span><br><span class=\"line\">mysql&gt; <span class=\"comment\">//        //此处“//”为终止符</span></span><br><span class=\"line\">mysql&gt; delimiter ;</span><br><span class=\"line\">mysql&gt; show warnings;</span><br><span class=\"line\">mysql&gt; call proc_name(<span class=\"number\">1</span>);</span><br><span class=\"line\">mysql&gt; call proc_name(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"九、修改表的列属性的操作\"><a href=\"#九、修改表的列属性的操作\" class=\"headerlink\" title=\"九、修改表的列属性的操作\"></a>九、修改表的列属性的操作</h3><ol>\n<li><p>为了改变列a，从INTEGER改为TINYINT NOT NULL(名字一样)，<br>并且改变列b，从CHAR(10)改为CHAR(20)，同时重命名它，从b改为c:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20)</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加一个新TIMESTAMP列，名为d：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">ADD d TIMESTAMP</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在列d上增加一个索引，并且使列a为主键：</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE <span class=\"built_in\">t2</span> <span class=\"keyword\">ADD </span>INDEX (d), <span class=\"keyword\">ADD </span>PRIMARY KEY (a)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>删除列c：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER <span class=\"keyword\">TABLE</span> t2 <span class=\"comment\">DROP COLUMN c</span>;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>增加一个新的AUTO_INCREMENT整数列，命名为c：</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE t2 <span class=\"builtin-name\">ADD</span> c INT UNSIGNED <span class=\"keyword\">NOT</span> <span class=\"literal\">NULL</span> AUTO_INCREMENT,<span class=\"builtin-name\">ADD</span> INDEX (c);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>注意，我们索引了c，因为AUTO_INCREMENT柱必须被索引，并且另外我们声明c为NOT NULL，<br>因为索引了的列不能是NULL</p>\n<h3 id=\"十、一个建库和建表以及插入数据的实例\"><a href=\"#十、一个建库和建表以及插入数据的实例\" class=\"headerlink\" title=\"十、一个建库和建表以及插入数据的实例\"></a>十、一个建库和建表以及插入数据的实例</h3><figure class=\"highlight cs\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop database <span class=\"keyword\">if</span> exists school; <span class=\"comment\">//如果存在SCHOOL则删除</span></span><br><span class=\"line\">create database school; <span class=\"comment\">//建立库SCHOOL</span></span><br><span class=\"line\">use school; <span class=\"comment\">//打开库SCHOOL</span></span><br><span class=\"line\">create table teacher <span class=\"comment\">//建立表TEACHER</span></span><br><span class=\"line\">(</span><br><span class=\"line\"><span class=\"function\">id <span class=\"title\">int</span>(<span class=\"params\"><span class=\"number\">3</span></span>) auto_increment not <span class=\"literal\">null</span> primary key,</span></span><br><span class=\"line\"><span class=\"function\">name <span class=\"title\">char</span>(<span class=\"params\"><span class=\"number\">10</span></span>) not <span class=\"literal\">null</span>,</span></span><br><span class=\"line\"><span class=\"function\">address <span class=\"title\">varchar</span>(<span class=\"params\"><span class=\"number\">50</span></span>) <span class=\"keyword\">default</span> ‘深圳’,</span></span><br><span class=\"line\"><span class=\"function\">year date</span></span><br><span class=\"line\"><span class=\"function\">)</span>; <span class=\"comment\">//建表结束</span></span><br><span class=\"line\"><span class=\"comment\">//以下为插入字段</span></span><br><span class=\"line\"><span class=\"function\">insert <span class=\"keyword\">into</span> teacher <span class=\"title\">values</span>(<span class=\"params\"><span class=\"string\">''</span>,<span class=\"string\">'allen'</span>,<span class=\"string\">'大连一中'</span>,<span class=\"string\">'1976-10-10'</span></span>)</span>;</span><br><span class=\"line\"><span class=\"function\">insert <span class=\"keyword\">into</span> teacher <span class=\"title\">values</span>(<span class=\"params\"><span class=\"string\">''</span>,<span class=\"string\">'jack'</span>,<span class=\"string\">'大连二中'</span>,<span class=\"string\">'1975-12-23'</span></span>)</span>;</span><br><span class=\"line\">如果你在mysql提示符键入上面的命令也可以，但不方便调试。</span><br><span class=\"line\">（<span class=\"number\">1</span>）你可以将以上命令原样写入一个文本文件中，假设为school.sql，然后复制到c:\\下，并在DOS状态进入目录\\mysql\\bin，然后键入以下命令：</span><br><span class=\"line\">mysql -uroot -p密码 &lt; c:\\school.sql</span><br><span class=\"line\">如果成功，空出一行无任何显示；如有错误，会有提示。（以上命令已经调试，你只要将<span class=\"comment\">//的注释去掉即可使用）。</span></span><br><span class=\"line\">（<span class=\"number\">2</span>）或者进入命令行后使用 mysql&gt; source c:\\school.sql; 也可以将school.sql文件导入数据库中。</span><br></pre></td></tr></table></figure>"},{"title":"Qt Creator常用快捷键","date":"2016-11-14T07:33:19.000Z","_content":"Qt Creator常用快捷键\n<!-- more -->\n1. Ctrl + / ：注释/取消注释选定内容。\n\n2. F4 ：在 头文件(.h) 和 实现文件(.cpp) 之间进行切换。\n\n3. Ctrl + i ：自动格式化选中代码。\n\n4. F2 ： 快速切换到 光标选中对象 的源码。\n\n5. 快速添加方法实体(.cpp)声明： 将光标移动到h文件中的方法声明。按Alt(按住)+ Enter,再按回车键将在cpp中添加该函数的声明。\n\n6. 按Alt +数字键(1-7)可以快速打开对应的输出窗口。\n\n7. 右键Refactor可以重构修改变量或函数名 。\n\n8. 书签： Ctrl + M 添加/删除书签,按Ctrl + . 查找并移动到下一个标签\n\n9. 分栏显示：:\n  - 先按Ctrl + e后松开再按2添加上下布局的分栏\n  - 先按Ctrl + e后松开再按3添加左右布局的分栏\n  - 先按Ctrl + e后松开再按1删除所有的分栏\n","source":"_posts/Qt-Creator常用快捷键.md","raw":"---\ntitle: Qt Creator常用快捷键\ndate: 2016-11-14 15:33:19\ntags: [qt]\ncategories: qt\n---\nQt Creator常用快捷键\n<!-- more -->\n1. Ctrl + / ：注释/取消注释选定内容。\n\n2. F4 ：在 头文件(.h) 和 实现文件(.cpp) 之间进行切换。\n\n3. Ctrl + i ：自动格式化选中代码。\n\n4. F2 ： 快速切换到 光标选中对象 的源码。\n\n5. 快速添加方法实体(.cpp)声明： 将光标移动到h文件中的方法声明。按Alt(按住)+ Enter,再按回车键将在cpp中添加该函数的声明。\n\n6. 按Alt +数字键(1-7)可以快速打开对应的输出窗口。\n\n7. 右键Refactor可以重构修改变量或函数名 。\n\n8. 书签： Ctrl + M 添加/删除书签,按Ctrl + . 查找并移动到下一个标签\n\n9. 分栏显示：:\n  - 先按Ctrl + e后松开再按2添加上下布局的分栏\n  - 先按Ctrl + e后松开再按3添加左右布局的分栏\n  - 先按Ctrl + e后松开再按1删除所有的分栏\n","slug":"Qt-Creator常用快捷键","published":1,"updated":"2016-11-15T04:54:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukb001apev2g7sfgqdv","content":"<p>Qt Creator常用快捷键<br><a id=\"more\"></a></p>\n<ol>\n<li><p>Ctrl + / ：注释/取消注释选定内容。</p>\n</li>\n<li><p>F4 ：在 头文件(.h) 和 实现文件(.cpp) 之间进行切换。</p>\n</li>\n<li><p>Ctrl + i ：自动格式化选中代码。</p>\n</li>\n<li><p>F2 ： 快速切换到 光标选中对象 的源码。</p>\n</li>\n<li><p>快速添加方法实体(.cpp)声明： 将光标移动到h文件中的方法声明。按Alt(按住)+ Enter,再按回车键将在cpp中添加该函数的声明。</p>\n</li>\n<li><p>按Alt +数字键(1-7)可以快速打开对应的输出窗口。</p>\n</li>\n<li><p>右键Refactor可以重构修改变量或函数名 。</p>\n</li>\n<li><p>书签： Ctrl + M 添加/删除书签,按Ctrl + . 查找并移动到下一个标签</p>\n</li>\n<li><p>分栏显示：:</p>\n<ul>\n<li>先按Ctrl + e后松开再按2添加上下布局的分栏</li>\n<li>先按Ctrl + e后松开再按3添加左右布局的分栏</li>\n<li>先按Ctrl + e后松开再按1删除所有的分栏</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>Qt Creator常用快捷键<br>","more":"</p>\n<ol>\n<li><p>Ctrl + / ：注释/取消注释选定内容。</p>\n</li>\n<li><p>F4 ：在 头文件(.h) 和 实现文件(.cpp) 之间进行切换。</p>\n</li>\n<li><p>Ctrl + i ：自动格式化选中代码。</p>\n</li>\n<li><p>F2 ： 快速切换到 光标选中对象 的源码。</p>\n</li>\n<li><p>快速添加方法实体(.cpp)声明： 将光标移动到h文件中的方法声明。按Alt(按住)+ Enter,再按回车键将在cpp中添加该函数的声明。</p>\n</li>\n<li><p>按Alt +数字键(1-7)可以快速打开对应的输出窗口。</p>\n</li>\n<li><p>右键Refactor可以重构修改变量或函数名 。</p>\n</li>\n<li><p>书签： Ctrl + M 添加/删除书签,按Ctrl + . 查找并移动到下一个标签</p>\n</li>\n<li><p>分栏显示：:</p>\n<ul>\n<li>先按Ctrl + e后松开再按2添加上下布局的分栏</li>\n<li>先按Ctrl + e后松开再按3添加左右布局的分栏</li>\n<li>先按Ctrl + e后松开再按1删除所有的分栏</li>\n</ul>\n</li>\n</ol>"},{"title":"WebView调用本地的图片选择","date":"2016-05-19T08:21:20.000Z","_content":"\n## Android中WebView调用本地图片选择器\n\n-----\n默认的情况下WebView是不能调用本地图片选择器的，Android的默认浏览器是支持的，因此我可以断定这是完全能做到的\n\n在做的过程中，确实遇到了一些问题，开始以为是特殊手机原因，后来调查才确定是AndroidSDK的版本问题\n\n* Android 3.0 以前的版本\n* Android 3.x 版本\n* Android 4.x 版本\n* Android 5.x 版本\n\n<!-- more -->\n> 主要区别：为 5.x版本以前为ValueCallback&lt;Uri&gt;\n> 从5.x版本返回的是ValueCallback&lt;Uri[]&gt;\n> 因此只用单独一种的话可能会有一些版本不能用，曾经我就犯过这样的错误\n\n具体实现方式，请看下面的代码部分：\n\n### MainActivity.java 代码如下：\n\n```\n\npublic class MainActivity extends Activity {\n\tpublic  ValueCallback<Uri> mUploadMessage;\n\tpublic ValueCallback<Uri[]> mUploadMessageForAndroid5;\n\tpublic final static int FILECHOOSER_RESULTCODE = 1;\n\tpublic final static int FILECHOOSER_RESULTCODE_FOR_ANDORID_5 = 2;\n\tProgressDialog progressBar;\n\tprivate WebView mWebView;\n\tprivate ImageButton btnBack;\n\n\tprivate static final String remoteUrl = \"http://kefu.easemob.com/webim/im.html?tenantId=35\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n    }\n\n    @SuppressLint(\"NewApi\") private void initView(){\n    \tmWebView = (WebView) findViewById(R.id.webview);\n    \tbtnBack = (ImageButton) findViewById(R.id.back);\n    \tbtnBack.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinish();\n\t\t\t}\n\t\t});\n    \tprogressBar = new ProgressDialog(this);\n    \tprogressBar.setProgressStyle(ProgressDialog.STYLE_SPINNER);\n    \tmWebView.getSettings().setJavaScriptEnabled(true);\n    \tmWebView.getSettings().setAppCacheEnabled(false);\n    \tmWebView.getSettings().setDomStorageEnabled(true);\n    \tmWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);\n    \tif(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){\n    \t\tmWebView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);\n    \t}\n    \tmWebView.loadUrl(remoteUrl);\n    \tmWebView.setWebViewClient(new WebViewClient(){\n    \t\t@Override\n    \t\tpublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n    \t\t\thandler.sendEmptyMessage(0);\n    \t\t\tview.loadUrl(url);\n    \t\t\treturn true;\n    \t\t}\n    \t});\n    \tmWebView.setWebChromeClient(new WebChromeClient(){\n    \t\t@Override\n    \t\tpublic void onProgressChanged(WebView view, int newProgress) {\n    \t\t\tif(newProgress == 100){\n    \t\t\t\thandler.sendEmptyMessage(1);//如果全部载入，隐藏进度对话框\n    \t\t\t}\n\n    \t\t\tsuper.onProgressChanged(view, newProgress);\n    \t\t}\n\n    \t\t//扩展支持alert事件\n    \t\t@Override\n    \t\tpublic boolean onJsAlert(WebView view, String url, String message,\n    \t\t\t\tJsResult result) {\n    \t\t\tAlertDialog.Builder builder = new AlertDialog.Builder(view.getContext());\n    \t\t\tbuilder.setTitle(\"提示\").setMessage(message).setPositiveButton(\"确定\", null);\n    \t\t\tbuilder.setCancelable(false);\n    \t\t\tbuilder.setIcon(R.drawable.ic_launcher);\n    \t\t\tAlertDialog dialog = builder.create();\n    \t\t\tdialog.show();\n    \t\t\tresult.confirm();\n    \t\t\treturn true;\n    \t\t}\n\n    \t\t//扩展浏览器上传文件\n    \t\t//3.0++版本\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n    \t\t//3.0--版本\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType, String capture){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n\n    \t\t// For Android > 5.0\n    \t\tpublic boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> uploadMsg, WebChromeClient.FileChooserParams fileChooserParams){\n    \t\t\topenFileChooserImplForAndroid5(uploadMsg);\n    \t\t\treturn true;\n    \t\t}\n\n    \t});\n    }\n\n    private void openFileChooserImpl(ValueCallback<Uri> uploadMsg){\n    \tmUploadMessage = uploadMsg;\n    \tIntent i = new Intent(Intent.ACTION_GET_CONTENT);\n    \ti.addCategory(Intent.CATEGORY_OPENABLE);\n    \ti.setType(\"image/*\");\n    \tstartActivityForResult(Intent.createChooser(i, \"File Chooser\"), FILECHOOSER_RESULTCODE);\n    }\n\n    private void openFileChooserImplForAndroid5(ValueCallback<Uri[]> uploadMsg){\n    \tmUploadMessageForAndroid5 = uploadMsg;\n    \tIntent contentSelectionIntent = new Intent(Intent.ACTION_GET_CONTENT);\n    \tcontentSelectionIntent.addCategory(Intent.CATEGORY_OPENABLE);\n    \tcontentSelectionIntent.setType(\"image/*\");\n\n    \tIntent chooserIntent = new Intent(Intent.ACTION_CHOOSER);\n    \tchooserIntent.putExtra(Intent.EXTRA_INTENT, contentSelectionIntent);\n    \tchooserIntent.putExtra(Intent.EXTRA_TITLE, \"Image Chooser\");\n    \tstartActivityForResult(chooserIntent, FILECHOOSER_RESULTCODE_FOR_ANDORID_5);\n    }\n\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n    \tif(mWebView.canGoBack() && event.getKeyCode() == KeyEvent.KEYCODE_BACK){\n    \t\t//获取历史列表\n    \t\tWebBackForwardList mWebBackForwardList = mWebView.copyBackForwardList();\n    \t\t//判断当前历史列表是否最顶端，其实canGoBack已经判断过\n    \t\tif(mWebBackForwardList.getCurrentIndex() > 0){\n    \t\t\tmWebView.goBack();\n    \t\t\treturn true;\n    \t\t}\n    \t}\n    \treturn super.onKeyDown(keyCode, event);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {\n    \tif(requestCode == FILECHOOSER_RESULTCODE){\n    \t\tif(null == mUploadMessage)\n    \t\t\treturn;\n    \t\tUri result = intent == null || resultCode != RESULT_OK ? null : intent.getData();\n    \t\tmUploadMessage.onReceiveValue(result);\n    \t\tmUploadMessage = null;\n    \t}else if(requestCode == FILECHOOSER_RESULTCODE_FOR_ANDORID_5){\n    \t\tif(null == mUploadMessageForAndroid5)\n    \t\t\treturn;\n    \t\tUri result = (intent == null || resultCode != RESULT_OK) ? null: intent.getData();\n    \t\tif(result != null){\n    \t\t\tmUploadMessageForAndroid5.onReceiveValue(new Uri[]{result});\n    \t\t}else{\n    \t\t\tmUploadMessageForAndroid5.onReceiveValue(new Uri[]{});\n    \t\t}\n    \t\tmUploadMessageForAndroid5 = null;\n    \t}\n    }\n\n    private Handler handler = new Handler(){\n    \tpublic void handleMessage(android.os.Message msg) {//定义一个Handler， 用于处理下载线程与UI间通讯\n    \t\tif(!Thread.currentThread().isInterrupted()){\n    \t\t\tswitch(msg.what){\n    \t\t\tcase 0:\n    \t\t\t\tprogressBar.show();//显示进度框\n    \t\t\t\tbreak;\n    \t\t\tcase 1:\n    \t\t\t\tprogressBar.hide();//隐藏进度对话框不可使用dismiss()、cancel()，否则再次调用show()时,显示的对话框小圆圈不会动\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n    \t\tsuper.handleMessage(msg);\n    \t};\n    };\n}\n\n```\n### activity_main.xml的代码\n\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"45dip\"\n        android:background=\"@android:color/darker_gray\"\n        >\n        <ImageButton\n            android:id=\"@+id/back\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@android:drawable/ic_delete\"\n            android:layout_centerVertical=\"true\"\n            />\n\n        <TextView\n            android:id=\"@+id/title\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"WebViewDemo\"\n            android:layout_centerVertical=\"true\"\n            android:layout_centerHorizontal=\"true\"\n            />\n    </RelativeLayout>\n    <WebView\n        android:id=\"@+id/webview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        />\n</LinearLayout>\n\n```\n\n### 最后在AndroidManifest.xml中不要忘记权限\n\n```\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>\n```\n什么？你告诉我你不喜欢自己写？好吧，我提供源码下载。\n\n[Demo源码下载](http://7xpj58.com1.z0.glb.clouddn.com/WebViewTest.zip)\n\n\n到此结束，欢迎提供bug和意见！\n","source":"_posts/WebView调用本地的图片选择.md","raw":"---\ntitle: WebView调用本地的图片选择\ndate: 2016-05-19 16:21:20\ntags: [android, WebView]\ncategories: android\n---\n\n## Android中WebView调用本地图片选择器\n\n-----\n默认的情况下WebView是不能调用本地图片选择器的，Android的默认浏览器是支持的，因此我可以断定这是完全能做到的\n\n在做的过程中，确实遇到了一些问题，开始以为是特殊手机原因，后来调查才确定是AndroidSDK的版本问题\n\n* Android 3.0 以前的版本\n* Android 3.x 版本\n* Android 4.x 版本\n* Android 5.x 版本\n\n<!-- more -->\n> 主要区别：为 5.x版本以前为ValueCallback&lt;Uri&gt;\n> 从5.x版本返回的是ValueCallback&lt;Uri[]&gt;\n> 因此只用单独一种的话可能会有一些版本不能用，曾经我就犯过这样的错误\n\n具体实现方式，请看下面的代码部分：\n\n### MainActivity.java 代码如下：\n\n```\n\npublic class MainActivity extends Activity {\n\tpublic  ValueCallback<Uri> mUploadMessage;\n\tpublic ValueCallback<Uri[]> mUploadMessageForAndroid5;\n\tpublic final static int FILECHOOSER_RESULTCODE = 1;\n\tpublic final static int FILECHOOSER_RESULTCODE_FOR_ANDORID_5 = 2;\n\tProgressDialog progressBar;\n\tprivate WebView mWebView;\n\tprivate ImageButton btnBack;\n\n\tprivate static final String remoteUrl = \"http://kefu.easemob.com/webim/im.html?tenantId=35\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initView();\n    }\n\n    @SuppressLint(\"NewApi\") private void initView(){\n    \tmWebView = (WebView) findViewById(R.id.webview);\n    \tbtnBack = (ImageButton) findViewById(R.id.back);\n    \tbtnBack.setOnClickListener(new View.OnClickListener() {\n\n\t\t\t@Override\n\t\t\tpublic void onClick(View v) {\n\t\t\t\tfinish();\n\t\t\t}\n\t\t});\n    \tprogressBar = new ProgressDialog(this);\n    \tprogressBar.setProgressStyle(ProgressDialog.STYLE_SPINNER);\n    \tmWebView.getSettings().setJavaScriptEnabled(true);\n    \tmWebView.getSettings().setAppCacheEnabled(false);\n    \tmWebView.getSettings().setDomStorageEnabled(true);\n    \tmWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);\n    \tif(Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT){\n    \t\tmWebView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);\n    \t}\n    \tmWebView.loadUrl(remoteUrl);\n    \tmWebView.setWebViewClient(new WebViewClient(){\n    \t\t@Override\n    \t\tpublic boolean shouldOverrideUrlLoading(WebView view, String url) {\n    \t\t\thandler.sendEmptyMessage(0);\n    \t\t\tview.loadUrl(url);\n    \t\t\treturn true;\n    \t\t}\n    \t});\n    \tmWebView.setWebChromeClient(new WebChromeClient(){\n    \t\t@Override\n    \t\tpublic void onProgressChanged(WebView view, int newProgress) {\n    \t\t\tif(newProgress == 100){\n    \t\t\t\thandler.sendEmptyMessage(1);//如果全部载入，隐藏进度对话框\n    \t\t\t}\n\n    \t\t\tsuper.onProgressChanged(view, newProgress);\n    \t\t}\n\n    \t\t//扩展支持alert事件\n    \t\t@Override\n    \t\tpublic boolean onJsAlert(WebView view, String url, String message,\n    \t\t\t\tJsResult result) {\n    \t\t\tAlertDialog.Builder builder = new AlertDialog.Builder(view.getContext());\n    \t\t\tbuilder.setTitle(\"提示\").setMessage(message).setPositiveButton(\"确定\", null);\n    \t\t\tbuilder.setCancelable(false);\n    \t\t\tbuilder.setIcon(R.drawable.ic_launcher);\n    \t\t\tAlertDialog dialog = builder.create();\n    \t\t\tdialog.show();\n    \t\t\tresult.confirm();\n    \t\t\treturn true;\n    \t\t}\n\n    \t\t//扩展浏览器上传文件\n    \t\t//3.0++版本\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n    \t\t//3.0--版本\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n\n    \t\tpublic void openFileChooser(ValueCallback<Uri> uploadMsg, String acceptType, String capture){\n    \t\t\topenFileChooserImpl(uploadMsg);\n    \t\t}\n\n    \t\t// For Android > 5.0\n    \t\tpublic boolean onShowFileChooser(WebView webView, ValueCallback<Uri[]> uploadMsg, WebChromeClient.FileChooserParams fileChooserParams){\n    \t\t\topenFileChooserImplForAndroid5(uploadMsg);\n    \t\t\treturn true;\n    \t\t}\n\n    \t});\n    }\n\n    private void openFileChooserImpl(ValueCallback<Uri> uploadMsg){\n    \tmUploadMessage = uploadMsg;\n    \tIntent i = new Intent(Intent.ACTION_GET_CONTENT);\n    \ti.addCategory(Intent.CATEGORY_OPENABLE);\n    \ti.setType(\"image/*\");\n    \tstartActivityForResult(Intent.createChooser(i, \"File Chooser\"), FILECHOOSER_RESULTCODE);\n    }\n\n    private void openFileChooserImplForAndroid5(ValueCallback<Uri[]> uploadMsg){\n    \tmUploadMessageForAndroid5 = uploadMsg;\n    \tIntent contentSelectionIntent = new Intent(Intent.ACTION_GET_CONTENT);\n    \tcontentSelectionIntent.addCategory(Intent.CATEGORY_OPENABLE);\n    \tcontentSelectionIntent.setType(\"image/*\");\n\n    \tIntent chooserIntent = new Intent(Intent.ACTION_CHOOSER);\n    \tchooserIntent.putExtra(Intent.EXTRA_INTENT, contentSelectionIntent);\n    \tchooserIntent.putExtra(Intent.EXTRA_TITLE, \"Image Chooser\");\n    \tstartActivityForResult(chooserIntent, FILECHOOSER_RESULTCODE_FOR_ANDORID_5);\n    }\n\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event) {\n    \tif(mWebView.canGoBack() && event.getKeyCode() == KeyEvent.KEYCODE_BACK){\n    \t\t//获取历史列表\n    \t\tWebBackForwardList mWebBackForwardList = mWebView.copyBackForwardList();\n    \t\t//判断当前历史列表是否最顶端，其实canGoBack已经判断过\n    \t\tif(mWebBackForwardList.getCurrentIndex() > 0){\n    \t\t\tmWebView.goBack();\n    \t\t\treturn true;\n    \t\t}\n    \t}\n    \treturn super.onKeyDown(keyCode, event);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent intent) {\n    \tif(requestCode == FILECHOOSER_RESULTCODE){\n    \t\tif(null == mUploadMessage)\n    \t\t\treturn;\n    \t\tUri result = intent == null || resultCode != RESULT_OK ? null : intent.getData();\n    \t\tmUploadMessage.onReceiveValue(result);\n    \t\tmUploadMessage = null;\n    \t}else if(requestCode == FILECHOOSER_RESULTCODE_FOR_ANDORID_5){\n    \t\tif(null == mUploadMessageForAndroid5)\n    \t\t\treturn;\n    \t\tUri result = (intent == null || resultCode != RESULT_OK) ? null: intent.getData();\n    \t\tif(result != null){\n    \t\t\tmUploadMessageForAndroid5.onReceiveValue(new Uri[]{result});\n    \t\t}else{\n    \t\t\tmUploadMessageForAndroid5.onReceiveValue(new Uri[]{});\n    \t\t}\n    \t\tmUploadMessageForAndroid5 = null;\n    \t}\n    }\n\n    private Handler handler = new Handler(){\n    \tpublic void handleMessage(android.os.Message msg) {//定义一个Handler， 用于处理下载线程与UI间通讯\n    \t\tif(!Thread.currentThread().isInterrupted()){\n    \t\t\tswitch(msg.what){\n    \t\t\tcase 0:\n    \t\t\t\tprogressBar.show();//显示进度框\n    \t\t\t\tbreak;\n    \t\t\tcase 1:\n    \t\t\t\tprogressBar.hide();//隐藏进度对话框不可使用dismiss()、cancel()，否则再次调用show()时,显示的对话框小圆圈不会动\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t}\n    \t\tsuper.handleMessage(msg);\n    \t};\n    };\n}\n\n```\n### activity_main.xml的代码\n\n```\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <RelativeLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"45dip\"\n        android:background=\"@android:color/darker_gray\"\n        >\n        <ImageButton\n            android:id=\"@+id/back\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:background=\"@android:drawable/ic_delete\"\n            android:layout_centerVertical=\"true\"\n            />\n\n        <TextView\n            android:id=\"@+id/title\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"WebViewDemo\"\n            android:layout_centerVertical=\"true\"\n            android:layout_centerHorizontal=\"true\"\n            />\n    </RelativeLayout>\n    <WebView\n        android:id=\"@+id/webview\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        />\n</LinearLayout>\n\n```\n\n### 最后在AndroidManifest.xml中不要忘记权限\n\n```\n    <uses-permission android:name=\"android.permission.INTERNET\"/>\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <uses-permission android:name=\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"/>\n```\n什么？你告诉我你不喜欢自己写？好吧，我提供源码下载。\n\n[Demo源码下载](http://7xpj58.com1.z0.glb.clouddn.com/WebViewTest.zip)\n\n\n到此结束，欢迎提供bug和意见！\n","slug":"WebView调用本地的图片选择","published":1,"updated":"2016-05-19T08:51:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukc001dpev23i4pcyhe","content":"<h2 id=\"Android中WebView调用本地图片选择器\"><a href=\"#Android中WebView调用本地图片选择器\" class=\"headerlink\" title=\"Android中WebView调用本地图片选择器\"></a>Android中WebView调用本地图片选择器</h2><hr>\n<p>默认的情况下WebView是不能调用本地图片选择器的，Android的默认浏览器是支持的，因此我可以断定这是完全能做到的</p>\n<p>在做的过程中，确实遇到了一些问题，开始以为是特殊手机原因，后来调查才确定是AndroidSDK的版本问题</p>\n<ul>\n<li>Android 3.0 以前的版本</li>\n<li>Android 3.x 版本</li>\n<li>Android 4.x 版本</li>\n<li>Android 5.x 版本</li>\n</ul>\n<a id=\"more\"></a>\n<blockquote>\n<p>主要区别：为 5.x版本以前为ValueCallback&lt;Uri&gt;<br>从5.x版本返回的是ValueCallback&lt;Uri[]&gt;<br>因此只用单独一种的话可能会有一些版本不能用，曾经我就犯过这样的错误</p>\n</blockquote>\n<p>具体实现方式，请看下面的代码部分：</p>\n<h3 id=\"MainActivity-java-代码如下：\"><a href=\"#MainActivity-java-代码如下：\" class=\"headerlink\" title=\"MainActivity.java 代码如下：\"></a>MainActivity.java 代码如下：</h3><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span>  ValueCallback&lt;Uri&gt; mUploadMessage;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> ValueCallback&lt;Uri[]&gt; mUploadMessageForAndroid5;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> FILECHOOSER_RESULTCODE = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> FILECHOOSER_RESULTCODE_FOR_ANDORID_5 = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tProgressDialog progressBar;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> WebView mWebView;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ImageButton btnBack;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String remoteUrl = <span class=\"string\">\"http://kefu.easemob.com/webim/im.html?tenantId=35\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressLint</span>(<span class=\"string\">\"NewApi\"</span>) <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    \tmWebView = (WebView) findViewById(R.id.webview);</span><br><span class=\"line\">    \tbtnBack = (ImageButton) findViewById(R.id.back);</span><br><span class=\"line\">    \tbtnBack.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\tfinish();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">    \tprogressBar = <span class=\"keyword\">new</span> ProgressDialog(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    \tprogressBar.setProgressStyle(ProgressDialog.STYLE_SPINNER);</span><br><span class=\"line\">    \tmWebView.getSettings().setJavaScriptEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setAppCacheEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setDomStorageEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT)&#123;</span><br><span class=\"line\">    \t\tmWebView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tmWebView.loadUrl(remoteUrl);</span><br><span class=\"line\">    \tmWebView.setWebViewClient(<span class=\"keyword\">new</span> WebViewClient()&#123;</span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">shouldOverrideUrlLoading</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">handler</span>.sendEmptyMessage(<span class=\"number\">0</span>);</span><br><span class=\"line\">    \t\t\tview.loadUrl(url);</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t&#125;);</span><br><span class=\"line\">    \tmWebView.setWebChromeClient(<span class=\"keyword\">new</span> WebChromeClient()&#123;</span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(WebView view, <span class=\"keyword\">int</span> newProgress)</span> </span>&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">if</span>(newProgress == <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">handler</span>.sendEmptyMessage(<span class=\"number\">1</span>);<span class=\"comment\">//如果全部载入，隐藏进度对话框</span></span><br><span class=\"line\">    \t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">super</span>.onProgressChanged(view, newProgress);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">//扩展支持alert事件</span></span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> onJsAlert(WebView view, String url, String message,</span><br><span class=\"line\">    \t\t\t\tJsResult result) &#123;</span><br><span class=\"line\">    \t\t\tAlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(view.getContext());</span><br><span class=\"line\">    \t\t\tbuilder.setTitle(<span class=\"string\">\"提示\"</span>).setMessage(message).setPositiveButton(<span class=\"string\">\"确定\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    \t\t\tbuilder.setCancelable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    \t\t\tbuilder.setIcon(R.drawable.ic_launcher);</span><br><span class=\"line\">    \t\t\tAlertDialog dialog = builder.create();</span><br><span class=\"line\">    \t\t\tdialog.show();</span><br><span class=\"line\">    \t\t\tresult.confirm();</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">//扩展浏览器上传文件</span></span><br><span class=\"line\">    \t\t<span class=\"comment\">//3.0++版本</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"comment\">//3.0--版本</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType, String capture)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">// For Android &gt; 5.0</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onShowFileChooser</span><span class=\"params\">(WebView webView, ValueCallback&lt;Uri[]&gt; uploadMsg, WebChromeClient.FileChooserParams fileChooserParams)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImplForAndroid5(uploadMsg);</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooserImpl</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \tmUploadMessage = uploadMsg;</span><br><span class=\"line\">    \tIntent i = <span class=\"keyword\">new</span> Intent(Intent.ACTION_GET_CONTENT);</span><br><span class=\"line\">    \ti.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class=\"line\">    \ti.setType(<span class=\"string\">\"image/*\"</span>);</span><br><span class=\"line\">    \tstartActivityForResult(Intent.createChooser(i, <span class=\"string\">\"File Chooser\"</span>), FILECHOOSER_RESULTCODE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooserImplForAndroid5</span><span class=\"params\">(ValueCallback&lt;Uri[]&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \tmUploadMessageForAndroid5 = uploadMsg;</span><br><span class=\"line\">    \tIntent contentSelectionIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_GET_CONTENT);</span><br><span class=\"line\">    \tcontentSelectionIntent.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class=\"line\">    \tcontentSelectionIntent.setType(<span class=\"string\">\"image/*\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    \tIntent chooserIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_CHOOSER);</span><br><span class=\"line\">    \tchooserIntent.putExtra(Intent.EXTRA_INTENT, contentSelectionIntent);</span><br><span class=\"line\">    \tchooserIntent.putExtra(Intent.EXTRA_TITLE, <span class=\"string\">\"Image Chooser\"</span>);</span><br><span class=\"line\">    \tstartActivityForResult(chooserIntent, FILECHOOSER_RESULTCODE_FOR_ANDORID_5);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(mWebView.canGoBack() &amp;&amp; event.getKeyCode() == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class=\"line\">    \t\t<span class=\"comment\">//获取历史列表</span></span><br><span class=\"line\">    \t\tWebBackForwardList mWebBackForwardList = mWebView.copyBackForwardList();</span><br><span class=\"line\">    \t\t<span class=\"comment\">//判断当前历史列表是否最顶端，其实canGoBack已经判断过</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(mWebBackForwardList.getCurrentIndex() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    \t\t\tmWebView.goBack();</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">onKeyDown</span><span class=\"params\">(keyCode, event)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onActivityResult</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode, <span class=\"keyword\">int</span> resultCode, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(requestCode == FILECHOOSER_RESULTCODE)&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> == mUploadMessage)</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    \t\tUri result = intent == <span class=\"keyword\">null</span> || resultCode != RESULT_OK ? <span class=\"keyword\">null</span> : intent.getData();</span><br><span class=\"line\">    \t\tmUploadMessage.onReceiveValue(result);</span><br><span class=\"line\">    \t\tmUploadMessage = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    \t&#125;<span class=\"function\"><span class=\"keyword\">else</span> <span class=\"title\">if</span><span class=\"params\">(requestCode == FILECHOOSER_RESULTCODE_FOR_ANDORID_5)</span></span>&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> == mUploadMessageForAndroid5)</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    \t\tUri result = (intent == <span class=\"keyword\">null</span> || resultCode != RESULT_OK) ? <span class=\"keyword\">null</span>: intent.getData();</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(result != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    \t\t\tmUploadMessageForAndroid5.onReceiveValue(<span class=\"keyword\">new</span> Uri[]&#123;result&#125;);</span><br><span class=\"line\">    \t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    \t\t\tmUploadMessageForAndroid5.onReceiveValue(<span class=\"keyword\">new</span> Uri[]&#123;&#125;);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\tmUploadMessageForAndroid5 = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Handler <span class=\"keyword\">handler</span> = <span class=\"keyword\">new</span> Handler()&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(android.os.Message msg)</span> </span>&#123;<span class=\"comment\">//定义一个Handler， 用于处理下载线程与UI间通讯</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(!Thread.currentThread().isInterrupted())&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">switch</span>(msg.what)&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">    \t\t\t\tprogressBar.show();<span class=\"comment\">//显示进度框</span></span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    \t\t\t\tprogressBar.hide();<span class=\"comment\">//隐藏进度对话框不可使用dismiss()、cancel()，否则再次调用show()时,显示的对话框小圆圈不会动</span></span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t\t&#125;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">super</span>.handleMessage(msg);</span><br><span class=\"line\">    \t&#125;;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"activity-main-xml的代码\"><a href=\"#activity-main-xml的代码\" class=\"headerlink\" title=\"activity_main.xml的代码\"></a>activity_main.xml的代码</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"45dip\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:color/darker_gray\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageButton</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/back\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:drawable/ic_delete\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"WebViewDemo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WebView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/webview\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"最后在AndroidManifest-xml中不要忘记权限\"><a href=\"#最后在AndroidManifest-xml中不要忘记权限\" class=\"headerlink\" title=\"最后在AndroidManifest.xml中不要忘记权限\"></a>最后在AndroidManifest.xml中不要忘记权限</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span><br><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.WRITE_EXTERNAL_STORAGE\"</span>/&gt;</span><br><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<p>什么？你告诉我你不喜欢自己写？好吧，我提供源码下载。</p>\n<p><a href=\"http://7xpj58.com1.z0.glb.clouddn.com/WebViewTest.zip\" target=\"_blank\" rel=\"noopener\">Demo源码下载</a></p>\n<p>到此结束，欢迎提供bug和意见！</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Android中WebView调用本地图片选择器\"><a href=\"#Android中WebView调用本地图片选择器\" class=\"headerlink\" title=\"Android中WebView调用本地图片选择器\"></a>Android中WebView调用本地图片选择器</h2><hr>\n<p>默认的情况下WebView是不能调用本地图片选择器的，Android的默认浏览器是支持的，因此我可以断定这是完全能做到的</p>\n<p>在做的过程中，确实遇到了一些问题，开始以为是特殊手机原因，后来调查才确定是AndroidSDK的版本问题</p>\n<ul>\n<li>Android 3.0 以前的版本</li>\n<li>Android 3.x 版本</li>\n<li>Android 4.x 版本</li>\n<li>Android 5.x 版本</li>\n</ul>","more":"<blockquote>\n<p>主要区别：为 5.x版本以前为ValueCallback&lt;Uri&gt;<br>从5.x版本返回的是ValueCallback&lt;Uri[]&gt;<br>因此只用单独一种的话可能会有一些版本不能用，曾经我就犯过这样的错误</p>\n</blockquote>\n<p>具体实现方式，请看下面的代码部分：</p>\n<h3 id=\"MainActivity-java-代码如下：\"><a href=\"#MainActivity-java-代码如下：\" class=\"headerlink\" title=\"MainActivity.java 代码如下：\"></a>MainActivity.java 代码如下：</h3><figure class=\"highlight aspectj\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">Activity</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span>  ValueCallback&lt;Uri&gt; mUploadMessage;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> ValueCallback&lt;Uri[]&gt; mUploadMessageForAndroid5;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> FILECHOOSER_RESULTCODE = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> FILECHOOSER_RESULTCODE_FOR_ANDORID_5 = <span class=\"number\">2</span>;</span><br><span class=\"line\">\tProgressDialog progressBar;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> WebView mWebView;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> ImageButton btnBack;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String remoteUrl = <span class=\"string\">\"http://kefu.easemob.com/webim/im.html?tenantId=35\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressLint</span>(<span class=\"string\">\"NewApi\"</span>) <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    \tmWebView = (WebView) findViewById(R.id.webview);</span><br><span class=\"line\">    \tbtnBack = (ImageButton) findViewById(R.id.back);</span><br><span class=\"line\">    \tbtnBack.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">\t\t\t\tfinish();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">    \tprogressBar = <span class=\"keyword\">new</span> ProgressDialog(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    \tprogressBar.setProgressStyle(ProgressDialog.STYLE_SPINNER);</span><br><span class=\"line\">    \tmWebView.getSettings().setJavaScriptEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setAppCacheEnabled(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setDomStorageEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    \tmWebView.getSettings().setCacheMode(WebSettings.LOAD_NO_CACHE);</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT)&#123;</span><br><span class=\"line\">    \t\tmWebView.getSettings().setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \tmWebView.loadUrl(remoteUrl);</span><br><span class=\"line\">    \tmWebView.setWebViewClient(<span class=\"keyword\">new</span> WebViewClient()&#123;</span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">shouldOverrideUrlLoading</span><span class=\"params\">(WebView view, String url)</span> </span>&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">handler</span>.sendEmptyMessage(<span class=\"number\">0</span>);</span><br><span class=\"line\">    \t\t\tview.loadUrl(url);</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t&#125;);</span><br><span class=\"line\">    \tmWebView.setWebChromeClient(<span class=\"keyword\">new</span> WebChromeClient()&#123;</span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(WebView view, <span class=\"keyword\">int</span> newProgress)</span> </span>&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">if</span>(newProgress == <span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">handler</span>.sendEmptyMessage(<span class=\"number\">1</span>);<span class=\"comment\">//如果全部载入，隐藏进度对话框</span></span><br><span class=\"line\">    \t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">super</span>.onProgressChanged(view, newProgress);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">//扩展支持alert事件</span></span><br><span class=\"line\">    \t\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> onJsAlert(WebView view, String url, String message,</span><br><span class=\"line\">    \t\t\t\tJsResult result) &#123;</span><br><span class=\"line\">    \t\t\tAlertDialog.Builder builder = <span class=\"keyword\">new</span> AlertDialog.Builder(view.getContext());</span><br><span class=\"line\">    \t\t\tbuilder.setTitle(<span class=\"string\">\"提示\"</span>).setMessage(message).setPositiveButton(<span class=\"string\">\"确定\"</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    \t\t\tbuilder.setCancelable(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    \t\t\tbuilder.setIcon(R.drawable.ic_launcher);</span><br><span class=\"line\">    \t\t\tAlertDialog dialog = builder.create();</span><br><span class=\"line\">    \t\t\tdialog.show();</span><br><span class=\"line\">    \t\t\tresult.confirm();</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">//扩展浏览器上传文件</span></span><br><span class=\"line\">    \t\t<span class=\"comment\">//3.0++版本</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"comment\">//3.0--版本</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooser</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg, String acceptType, String capture)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImpl(uploadMsg);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t\t<span class=\"comment\">// For Android &gt; 5.0</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onShowFileChooser</span><span class=\"params\">(WebView webView, ValueCallback&lt;Uri[]&gt; uploadMsg, WebChromeClient.FileChooserParams fileChooserParams)</span></span>&#123;</span><br><span class=\"line\">    \t\t\topenFileChooserImplForAndroid5(uploadMsg);</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    \t&#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooserImpl</span><span class=\"params\">(ValueCallback&lt;Uri&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \tmUploadMessage = uploadMsg;</span><br><span class=\"line\">    \tIntent i = <span class=\"keyword\">new</span> Intent(Intent.ACTION_GET_CONTENT);</span><br><span class=\"line\">    \ti.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class=\"line\">    \ti.setType(<span class=\"string\">\"image/*\"</span>);</span><br><span class=\"line\">    \tstartActivityForResult(Intent.createChooser(i, <span class=\"string\">\"File Chooser\"</span>), FILECHOOSER_RESULTCODE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">openFileChooserImplForAndroid5</span><span class=\"params\">(ValueCallback&lt;Uri[]&gt; uploadMsg)</span></span>&#123;</span><br><span class=\"line\">    \tmUploadMessageForAndroid5 = uploadMsg;</span><br><span class=\"line\">    \tIntent contentSelectionIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_GET_CONTENT);</span><br><span class=\"line\">    \tcontentSelectionIntent.addCategory(Intent.CATEGORY_OPENABLE);</span><br><span class=\"line\">    \tcontentSelectionIntent.setType(<span class=\"string\">\"image/*\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    \tIntent chooserIntent = <span class=\"keyword\">new</span> Intent(Intent.ACTION_CHOOSER);</span><br><span class=\"line\">    \tchooserIntent.putExtra(Intent.EXTRA_INTENT, contentSelectionIntent);</span><br><span class=\"line\">    \tchooserIntent.putExtra(Intent.EXTRA_TITLE, <span class=\"string\">\"Image Chooser\"</span>);</span><br><span class=\"line\">    \tstartActivityForResult(chooserIntent, FILECHOOSER_RESULTCODE_FOR_ANDORID_5);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(mWebView.canGoBack() &amp;&amp; event.getKeyCode() == KeyEvent.KEYCODE_BACK)&#123;</span><br><span class=\"line\">    \t\t<span class=\"comment\">//获取历史列表</span></span><br><span class=\"line\">    \t\tWebBackForwardList mWebBackForwardList = mWebView.copyBackForwardList();</span><br><span class=\"line\">    \t\t<span class=\"comment\">//判断当前历史列表是否最顶端，其实canGoBack已经判断过</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(mWebBackForwardList.getCurrentIndex() &gt; <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">    \t\t\tmWebView.goBack();</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    \t<span class=\"function\"><span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.<span class=\"title\">onKeyDown</span><span class=\"params\">(keyCode, event)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onActivityResult</span><span class=\"params\">(<span class=\"keyword\">int</span> requestCode, <span class=\"keyword\">int</span> resultCode, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">if</span>(requestCode == FILECHOOSER_RESULTCODE)&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> == mUploadMessage)</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    \t\tUri result = intent == <span class=\"keyword\">null</span> || resultCode != RESULT_OK ? <span class=\"keyword\">null</span> : intent.getData();</span><br><span class=\"line\">    \t\tmUploadMessage.onReceiveValue(result);</span><br><span class=\"line\">    \t\tmUploadMessage = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    \t&#125;<span class=\"function\"><span class=\"keyword\">else</span> <span class=\"title\">if</span><span class=\"params\">(requestCode == FILECHOOSER_RESULTCODE_FOR_ANDORID_5)</span></span>&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">null</span> == mUploadMessageForAndroid5)</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">    \t\tUri result = (intent == <span class=\"keyword\">null</span> || resultCode != RESULT_OK) ? <span class=\"keyword\">null</span>: intent.getData();</span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(result != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    \t\t\tmUploadMessageForAndroid5.onReceiveValue(<span class=\"keyword\">new</span> Uri[]&#123;result&#125;);</span><br><span class=\"line\">    \t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    \t\t\tmUploadMessageForAndroid5.onReceiveValue(<span class=\"keyword\">new</span> Uri[]&#123;&#125;);</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\tmUploadMessageForAndroid5 = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Handler <span class=\"keyword\">handler</span> = <span class=\"keyword\">new</span> Handler()&#123;</span><br><span class=\"line\">    \t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(android.os.Message msg)</span> </span>&#123;<span class=\"comment\">//定义一个Handler， 用于处理下载线程与UI间通讯</span></span><br><span class=\"line\">    \t\t<span class=\"keyword\">if</span>(!Thread.currentThread().isInterrupted())&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">switch</span>(msg.what)&#123;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">    \t\t\t\tprogressBar.show();<span class=\"comment\">//显示进度框</span></span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t\t<span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    \t\t\t\tprogressBar.hide();<span class=\"comment\">//隐藏进度对话框不可使用dismiss()、cancel()，否则再次调用show()时,显示的对话框小圆圈不会动</span></span><br><span class=\"line\">    \t\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">    \t\t\t&#125;</span><br><span class=\"line\">    \t\t&#125;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">super</span>.handleMessage(msg);</span><br><span class=\"line\">    \t&#125;;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"activity-main-xml的代码\"><a href=\"#activity-main-xml的代码\" class=\"headerlink\" title=\"activity_main.xml的代码\"></a>activity_main.xml的代码</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"45dip\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:color/darker_gray\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        &gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageButton</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/back\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@android:drawable/ic_delete\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/title\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"WebViewDemo\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_centerHorizontal</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">WebView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/webview\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"最后在AndroidManifest-xml中不要忘记权限\"><a href=\"#最后在AndroidManifest-xml中不要忘记权限\" class=\"headerlink\" title=\"最后在AndroidManifest.xml中不要忘记权限\"></a>最后在AndroidManifest.xml中不要忘记权限</h3><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.INTERNET\"</span>/&gt;</span><br><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.WRITE_EXTERNAL_STORAGE\"</span>/&gt;</span><br><span class=\"line\">&lt;uses-permission android:<span class=\"attribute\">name</span>=<span class=\"string\">\"android.permission.MOUNT_UNMOUNT_FILESYSTEMS\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<p>什么？你告诉我你不喜欢自己写？好吧，我提供源码下载。</p>\n<p><a href=\"http://7xpj58.com1.z0.glb.clouddn.com/WebViewTest.zip\" target=\"_blank\" rel=\"noopener\">Demo源码下载</a></p>\n<p>到此结束，欢迎提供bug和意见！</p>"},{"title":".gitignore文件不起作用","date":"2017-01-03T07:38:24.000Z","_content":"\n当用git时，经常会添加一些忽略的文件到.gitignore文件中，这里面类似于git的黑名单，文件中指定的文件不会加入到git仓库中，\n但当发现添加某个文件名后，通过git status查看，并不能忽略此文件。\n\n<!-- more -->\n\n遇到此问题原因是：git仓库中某些文件被stage标记，如果不想用此文件即使添加.gitignore后，也是不会被忽略的。\n\n** .gitignore ** 文件只是ignore没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除。\n\n从网络搜索到此解释：\n\n```\nIf you already have a file checked in, and you want to ignore it, Git will not ignore the file if you add a rule later.\nIn those cases, you must untrack the file first, by running the following command in your terminal:\n\n$ git rm --cached\n\n```\n\n通过上面这句话明白：把我们想要忽略的文件，从他们的staged中移除即可。\n```\ngit rm --cached file/path/to/be/ignored\ngit add .\ngit commit -m \"fix untracked files\"\n```\n\n** 引用 **：\n[ignore-not-working](http://stackoverflow.com/questions/11451535/gitignore-not-working)\n","source":"_posts/gitignore文件不起作用.md","raw":"---\ntitle: .gitignore文件不起作用\ndate: 2017-01-03 15:38:24\ntags: [\"git\"]\ncategories: \"git\"\n---\n\n当用git时，经常会添加一些忽略的文件到.gitignore文件中，这里面类似于git的黑名单，文件中指定的文件不会加入到git仓库中，\n但当发现添加某个文件名后，通过git status查看，并不能忽略此文件。\n\n<!-- more -->\n\n遇到此问题原因是：git仓库中某些文件被stage标记，如果不想用此文件即使添加.gitignore后，也是不会被忽略的。\n\n** .gitignore ** 文件只是ignore没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除。\n\n从网络搜索到此解释：\n\n```\nIf you already have a file checked in, and you want to ignore it, Git will not ignore the file if you add a rule later.\nIn those cases, you must untrack the file first, by running the following command in your terminal:\n\n$ git rm --cached\n\n```\n\n通过上面这句话明白：把我们想要忽略的文件，从他们的staged中移除即可。\n```\ngit rm --cached file/path/to/be/ignored\ngit add .\ngit commit -m \"fix untracked files\"\n```\n\n** 引用 **：\n[ignore-not-working](http://stackoverflow.com/questions/11451535/gitignore-not-working)\n","slug":"gitignore文件不起作用","published":1,"updated":"2017-01-03T07:54:41.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuke001hpev2kifrx12j","content":"<p>当用git时，经常会添加一些忽略的文件到.gitignore文件中，这里面类似于git的黑名单，文件中指定的文件不会加入到git仓库中，<br>但当发现添加某个文件名后，通过git status查看，并不能忽略此文件。</p>\n<a id=\"more\"></a>\n<p>遇到此问题原因是：git仓库中某些文件被stage标记，如果不想用此文件即使添加.gitignore后，也是不会被忽略的。</p>\n<p><strong> .gitignore </strong> 文件只是ignore没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除。</p>\n<p>从网络搜索到此解释：</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">If you already have <span class=\"keyword\">a</span> <span class=\"built_in\">file</span> checked <span class=\"keyword\">in</span>, <span class=\"keyword\">and</span> you want <span class=\"built_in\">to</span> ignore <span class=\"keyword\">it</span>, Git will <span class=\"keyword\">not</span> ignore <span class=\"keyword\">the</span> <span class=\"built_in\">file</span> <span class=\"keyword\">if</span> you <span class=\"built_in\">add</span> <span class=\"keyword\">a</span> rule later.</span><br><span class=\"line\">In those cases, you must untrack <span class=\"keyword\">the</span> <span class=\"built_in\">file</span> <span class=\"keyword\">first</span>, <span class=\"keyword\">by</span> running <span class=\"keyword\">the</span> following <span class=\"keyword\">command</span> <span class=\"title\">in</span> <span class=\"title\">your</span> <span class=\"title\">terminal</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">$ git rm <span class=\"comment\">--cached</span></span><br></pre></td></tr></table></figure>\n<p>通过上面这句话明白：把我们想要忽略的文件，从他们的staged中移除即可。<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached <span class=\"keyword\">file</span>/path/<span class=\"keyword\">to</span>/<span class=\"keyword\">be</span>/ignored</span><br><span class=\"line\">git <span class=\"built_in\">add</span> .</span><br><span class=\"line\">git commit -<span class=\"keyword\">m</span> <span class=\"string\">\"fix untracked files\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong> 引用 </strong>：<br><a href=\"http://stackoverflow.com/questions/11451535/gitignore-not-working\" target=\"_blank\" rel=\"noopener\">ignore-not-working</a></p>\n","site":{"data":{}},"excerpt":"<p>当用git时，经常会添加一些忽略的文件到.gitignore文件中，这里面类似于git的黑名单，文件中指定的文件不会加入到git仓库中，<br>但当发现添加某个文件名后，通过git status查看，并不能忽略此文件。</p>","more":"<p>遇到此问题原因是：git仓库中某些文件被stage标记，如果不想用此文件即使添加.gitignore后，也是不会被忽略的。</p>\n<p><strong> .gitignore </strong> 文件只是ignore没有被staged(cached)文件， 对于已经被staged文件，加入ignore文件时一定要先从staged移除。</p>\n<p>从网络搜索到此解释：</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">If you already have <span class=\"keyword\">a</span> <span class=\"built_in\">file</span> checked <span class=\"keyword\">in</span>, <span class=\"keyword\">and</span> you want <span class=\"built_in\">to</span> ignore <span class=\"keyword\">it</span>, Git will <span class=\"keyword\">not</span> ignore <span class=\"keyword\">the</span> <span class=\"built_in\">file</span> <span class=\"keyword\">if</span> you <span class=\"built_in\">add</span> <span class=\"keyword\">a</span> rule later.</span><br><span class=\"line\">In those cases, you must untrack <span class=\"keyword\">the</span> <span class=\"built_in\">file</span> <span class=\"keyword\">first</span>, <span class=\"keyword\">by</span> running <span class=\"keyword\">the</span> following <span class=\"keyword\">command</span> <span class=\"title\">in</span> <span class=\"title\">your</span> <span class=\"title\">terminal</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">$ git rm <span class=\"comment\">--cached</span></span><br></pre></td></tr></table></figure>\n<p>通过上面这句话明白：把我们想要忽略的文件，从他们的staged中移除即可。<br><figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm --cached <span class=\"keyword\">file</span>/path/<span class=\"keyword\">to</span>/<span class=\"keyword\">be</span>/ignored</span><br><span class=\"line\">git <span class=\"built_in\">add</span> .</span><br><span class=\"line\">git commit -<span class=\"keyword\">m</span> <span class=\"string\">\"fix untracked files\"</span></span><br></pre></td></tr></table></figure></p>\n<p><strong> 引用 </strong>：<br><a href=\"http://stackoverflow.com/questions/11451535/gitignore-not-working\" target=\"_blank\" rel=\"noopener\">ignore-not-working</a></p>"},{"title":"glide的简单用法","date":"2016-08-29T12:15:27.000Z","_content":"\n首先需要在app的build.gradle中加入\n```\ncompile 'com.github.bumptech.glide:glide:+'\n```\n注：\"+\"表示始终请求最新版\n\n<!-- more -->\n\n### 基本用法\n```\nGlide.with(context)\n        .load(url)//图片地址\n        .placeholder(R.drawable.default_image)//加载中显示的图片\n        .error(R.drawable.error_image)//加载出错显示的图片\n        .crossFade()//淡入效果\n        .into(imageView);\n\n```\n### 缓存多尺寸\n\n因为Glide默认只缓存一种尺寸大小的图片，即当前要加载的ImageView大小的图片，当你要在另一个不同大小的ImageView中加载同一张图片时Glide就会再次请求加载新的尺寸的图片，但是Glide给我们提供了一个设置可以缓存全尺寸的图片，这样在不同大小的ImageView中加载同一张图片就只会产生一次请求。\n\n```\nGlide.with(context)\n        .load(url)\n        .diskCacheStrategy(DiskCacheStrategy.ALL)\n        .into(imageView);\n```\n\n### 加载特定大小的图片\n\n```\nGlide.with(context)\n        .load(url)\n        .override(300, 200);\n        .into(imageView);\n\n```\n\n### Center Cropping\n\n```\nGlide.with(context)\n        .load(url)\n        .centerCrop();\n        .into(imageView);\n```\n\n### Transforming\n```\nGlide.with(context)\n        .load(url)\n        .transform(new CircleTransform(context))\n        .into(imageView);\n```\n\n### 特性：加载Gif、加载本地图片、asbitmap\nGlide可以加载Gif动态图，使用方法和加载普通图片一样，同时因为Glide和Activity/Fragment的生命周期是一致的，因此gif的动画也会自动的随着Activity/Fragment的状态暂停、重放。Glide 的缓存在gif这里也是一样，调整大小然后缓存。\n\n```\nGlide.with(context)\n        .load(url)//图片地址\n        .asGif()//asGif加载Gif动态图，asBitmap可以将Gif解码成bitmap\n        .placeholder(R.drawable.default_image)//加载中显示的图片\n        .error(R.drawable.error_image)//加载出错显示的图片\n        .crossFade()//淡入效果\n        .into(imageView);\n\n```\n","source":"_posts/glide的简单用法.md","raw":"---\ntitle: glide的简单用法\ndate: 2016-08-29 20:15:27\ntags: [glide]\ncategories: android\n---\n\n首先需要在app的build.gradle中加入\n```\ncompile 'com.github.bumptech.glide:glide:+'\n```\n注：\"+\"表示始终请求最新版\n\n<!-- more -->\n\n### 基本用法\n```\nGlide.with(context)\n        .load(url)//图片地址\n        .placeholder(R.drawable.default_image)//加载中显示的图片\n        .error(R.drawable.error_image)//加载出错显示的图片\n        .crossFade()//淡入效果\n        .into(imageView);\n\n```\n### 缓存多尺寸\n\n因为Glide默认只缓存一种尺寸大小的图片，即当前要加载的ImageView大小的图片，当你要在另一个不同大小的ImageView中加载同一张图片时Glide就会再次请求加载新的尺寸的图片，但是Glide给我们提供了一个设置可以缓存全尺寸的图片，这样在不同大小的ImageView中加载同一张图片就只会产生一次请求。\n\n```\nGlide.with(context)\n        .load(url)\n        .diskCacheStrategy(DiskCacheStrategy.ALL)\n        .into(imageView);\n```\n\n### 加载特定大小的图片\n\n```\nGlide.with(context)\n        .load(url)\n        .override(300, 200);\n        .into(imageView);\n\n```\n\n### Center Cropping\n\n```\nGlide.with(context)\n        .load(url)\n        .centerCrop();\n        .into(imageView);\n```\n\n### Transforming\n```\nGlide.with(context)\n        .load(url)\n        .transform(new CircleTransform(context))\n        .into(imageView);\n```\n\n### 特性：加载Gif、加载本地图片、asbitmap\nGlide可以加载Gif动态图，使用方法和加载普通图片一样，同时因为Glide和Activity/Fragment的生命周期是一致的，因此gif的动画也会自动的随着Activity/Fragment的状态暂停、重放。Glide 的缓存在gif这里也是一样，调整大小然后缓存。\n\n```\nGlide.with(context)\n        .load(url)//图片地址\n        .asGif()//asGif加载Gif动态图，asBitmap可以将Gif解码成bitmap\n        .placeholder(R.drawable.default_image)//加载中显示的图片\n        .error(R.drawable.error_image)//加载出错显示的图片\n        .crossFade()//淡入效果\n        .into(imageView);\n\n```\n","slug":"glide的简单用法","published":1,"updated":"2016-08-29T12:24:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukf001jpev26ap0x7sx","content":"<p>首先需要在app的build.gradle中加入<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.github.bumptech.glide:glide:+'</span></span><br></pre></td></tr></table></figure></p>\n<p>注：”+”表示始终请求最新版</p>\n<a id=\"more\"></a>\n<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(context)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(url)<span class=\"comment\">//图片地址</span></span><br><span class=\"line\">        <span class=\"selector-class\">.placeholder</span>(R.drawable.default_image)<span class=\"comment\">//加载中显示的图片</span></span><br><span class=\"line\">        <span class=\"selector-class\">.error</span>(R.drawable.error_image)<span class=\"comment\">//加载出错显示的图片</span></span><br><span class=\"line\">        <span class=\"selector-class\">.crossFade</span>()<span class=\"comment\">//淡入效果</span></span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(imageView);</span><br></pre></td></tr></table></figure>\n<h3 id=\"缓存多尺寸\"><a href=\"#缓存多尺寸\" class=\"headerlink\" title=\"缓存多尺寸\"></a>缓存多尺寸</h3><p>因为Glide默认只缓存一种尺寸大小的图片，即当前要加载的ImageView大小的图片，当你要在另一个不同大小的ImageView中加载同一张图片时Glide就会再次请求加载新的尺寸的图片，但是Glide给我们提供了一个设置可以缓存全尺寸的图片，这样在不同大小的ImageView中加载同一张图片就只会产生一次请求。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.diskCacheStrategy</span>(<span class=\"selector-tag\">DiskCacheStrategy</span><span class=\"selector-class\">.ALL</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"加载特定大小的图片\"><a href=\"#加载特定大小的图片\" class=\"headerlink\" title=\"加载特定大小的图片\"></a>加载特定大小的图片</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.override</span>(300, 200);</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Center-Cropping\"><a href=\"#Center-Cropping\" class=\"headerlink\" title=\"Center Cropping\"></a>Center Cropping</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.centerCrop</span>();</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Transforming\"><a href=\"#Transforming\" class=\"headerlink\" title=\"Transforming\"></a>Transforming</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Glide.with(<span class=\"built_in\">context</span>)</span><br><span class=\"line\">        .<span class=\"built_in\">load</span>(url)</span><br><span class=\"line\">        .<span class=\"built_in\">transform</span>(<span class=\"built_in\">new</span> CircleTransform(<span class=\"built_in\">context</span>))</span><br><span class=\"line\">        .into(imageView);</span><br></pre></td></tr></table></figure>\n<h3 id=\"特性：加载Gif、加载本地图片、asbitmap\"><a href=\"#特性：加载Gif、加载本地图片、asbitmap\" class=\"headerlink\" title=\"特性：加载Gif、加载本地图片、asbitmap\"></a>特性：加载Gif、加载本地图片、asbitmap</h3><p>Glide可以加载Gif动态图，使用方法和加载普通图片一样，同时因为Glide和Activity/Fragment的生命周期是一致的，因此gif的动画也会自动的随着Activity/Fragment的状态暂停、重放。Glide 的缓存在gif这里也是一样，调整大小然后缓存。</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Glide.with<span class=\"params\">(context)</span></span><br><span class=\"line\">        <span class=\"string\">.load</span><span class=\"params\">(url)</span><span class=\"string\">//</span>图片地址</span><br><span class=\"line\">        <span class=\"string\">.asGif</span><span class=\"params\">()</span><span class=\"string\">//asGif</span>加载G<span class=\"keyword\">if</span>动态图，asBitmap可以将G<span class=\"keyword\">if</span>解码成bitmap</span><br><span class=\"line\">        <span class=\"string\">.placeholder</span><span class=\"params\">(R.drawable.default_image)</span><span class=\"string\">//</span>加载中显示的图片</span><br><span class=\"line\">        <span class=\"string\">.error</span><span class=\"params\">(R.drawable.error_image)</span><span class=\"string\">//</span>加载出错显示的图片</span><br><span class=\"line\">        <span class=\"string\">.crossFade</span><span class=\"params\">()</span><span class=\"string\">//</span>淡入效果</span><br><span class=\"line\">        <span class=\"string\">.into</span><span class=\"params\">(imageView)</span>;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>首先需要在app的build.gradle中加入<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"string\">'com.github.bumptech.glide:glide:+'</span></span><br></pre></td></tr></table></figure></p>\n<p>注：”+”表示始终请求最新版</p>","more":"<h3 id=\"基本用法\"><a href=\"#基本用法\" class=\"headerlink\" title=\"基本用法\"></a>基本用法</h3><figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(context)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(url)<span class=\"comment\">//图片地址</span></span><br><span class=\"line\">        <span class=\"selector-class\">.placeholder</span>(R.drawable.default_image)<span class=\"comment\">//加载中显示的图片</span></span><br><span class=\"line\">        <span class=\"selector-class\">.error</span>(R.drawable.error_image)<span class=\"comment\">//加载出错显示的图片</span></span><br><span class=\"line\">        <span class=\"selector-class\">.crossFade</span>()<span class=\"comment\">//淡入效果</span></span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(imageView);</span><br></pre></td></tr></table></figure>\n<h3 id=\"缓存多尺寸\"><a href=\"#缓存多尺寸\" class=\"headerlink\" title=\"缓存多尺寸\"></a>缓存多尺寸</h3><p>因为Glide默认只缓存一种尺寸大小的图片，即当前要加载的ImageView大小的图片，当你要在另一个不同大小的ImageView中加载同一张图片时Glide就会再次请求加载新的尺寸的图片，但是Glide给我们提供了一个设置可以缓存全尺寸的图片，这样在不同大小的ImageView中加载同一张图片就只会产生一次请求。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.diskCacheStrategy</span>(<span class=\"selector-tag\">DiskCacheStrategy</span><span class=\"selector-class\">.ALL</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"加载特定大小的图片\"><a href=\"#加载特定大小的图片\" class=\"headerlink\" title=\"加载特定大小的图片\"></a>加载特定大小的图片</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.override</span>(300, 200);</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Center-Cropping\"><a href=\"#Center-Cropping\" class=\"headerlink\" title=\"Center Cropping\"></a>Center Cropping</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">Glide</span><span class=\"selector-class\">.with</span>(<span class=\"selector-tag\">context</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.load</span>(<span class=\"selector-tag\">url</span>)</span><br><span class=\"line\">        <span class=\"selector-class\">.centerCrop</span>();</span><br><span class=\"line\">        <span class=\"selector-class\">.into</span>(<span class=\"selector-tag\">imageView</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"Transforming\"><a href=\"#Transforming\" class=\"headerlink\" title=\"Transforming\"></a>Transforming</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Glide.with(<span class=\"built_in\">context</span>)</span><br><span class=\"line\">        .<span class=\"built_in\">load</span>(url)</span><br><span class=\"line\">        .<span class=\"built_in\">transform</span>(<span class=\"built_in\">new</span> CircleTransform(<span class=\"built_in\">context</span>))</span><br><span class=\"line\">        .into(imageView);</span><br></pre></td></tr></table></figure>\n<h3 id=\"特性：加载Gif、加载本地图片、asbitmap\"><a href=\"#特性：加载Gif、加载本地图片、asbitmap\" class=\"headerlink\" title=\"特性：加载Gif、加载本地图片、asbitmap\"></a>特性：加载Gif、加载本地图片、asbitmap</h3><p>Glide可以加载Gif动态图，使用方法和加载普通图片一样，同时因为Glide和Activity/Fragment的生命周期是一致的，因此gif的动画也会自动的随着Activity/Fragment的状态暂停、重放。Glide 的缓存在gif这里也是一样，调整大小然后缓存。</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Glide.with<span class=\"params\">(context)</span></span><br><span class=\"line\">        <span class=\"string\">.load</span><span class=\"params\">(url)</span><span class=\"string\">//</span>图片地址</span><br><span class=\"line\">        <span class=\"string\">.asGif</span><span class=\"params\">()</span><span class=\"string\">//asGif</span>加载G<span class=\"keyword\">if</span>动态图，asBitmap可以将G<span class=\"keyword\">if</span>解码成bitmap</span><br><span class=\"line\">        <span class=\"string\">.placeholder</span><span class=\"params\">(R.drawable.default_image)</span><span class=\"string\">//</span>加载中显示的图片</span><br><span class=\"line\">        <span class=\"string\">.error</span><span class=\"params\">(R.drawable.error_image)</span><span class=\"string\">//</span>加载出错显示的图片</span><br><span class=\"line\">        <span class=\"string\">.crossFade</span><span class=\"params\">()</span><span class=\"string\">//</span>淡入效果</span><br><span class=\"line\">        <span class=\"string\">.into</span><span class=\"params\">(imageView)</span>;</span><br></pre></td></tr></table></figure>"},{"title":"grep && find命令用法","date":"2016-09-01T11:26:58.000Z","_content":"\n>Linux下搜索文件内容常用grep，搜索文件信息使用find\n<!-- more -->\n\n>原文：http://gityuan.com/2015/09/13/grep-and-find/\n\n## 一、 grep\n搜索文本的命令\n```\n命令格式: grep [options]... pattern [file]...\n命令格式: grep 查找规则... 正则表达式 查看文件\n```\n### 1.1 查找规则\n|options |\t解释|\n|:--:|:--:|\n|-i|不区分大 小写(只适用于单字符)|\n|-r|遍历匹配|\n|-w|整字匹配|\n|-l|查询多文件时只输出包含匹配字符的文件名|\n|-c|只输出匹配行的计数|\n|-n|显示匹配行及行号|\n|-s|不显示不存在或无匹配文本的错误信息|\n|-h|查询多文件时不显示文件名|\n|-v|显示不包含匹配文本的所有行|\n\n### 1.2 正则表达式\npattern正则表达式主要参数：\n\n- `\\`： 忽略正则表达式中特殊字符的原有含义。\n- `^`：匹配正则表达式的开始行。\n- `$`: 匹配正则表达式的结束行。\n- `<`：从匹配正则表达 式的行开始。\n- `>`：到匹配正则表达式的行结束。\n- `[]`：单个字符，如[A]即A符合要求 。\n- `[ - ]`：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。\n- `.` ：所有的单个字符。\n- `*` ：有字符，长度可以为0.\n\n### 1.3 实例\n- 忽略大小写搜索\n\n  ```\n  grep -i \"androiD\"  logcat.txt   //从logcat.txt文件中，搜索包含android的文本行，不区分大小写\n  ```\n- 遍历搜索，且不显示无匹配信息\n  ```\n    grep -rs \"android\" .   //从当前目录下，遍历所有的文件，搜索包含android的文本行\n  ```\n- 整字匹配搜索\n  ```\n  grep -w “android” logcat.txt //从logcat.txt文件中，搜索包含单词android的文本行\n  grep -w “android | ios” logcat.txt //从logcat.txt文件中，搜索包含单词android或者ios的文本行\n  ```\n- 只列出文件名\n    ```\n    grep -l \"android\" .\n    ```\n- 统计字符出现次数\n    ```\n    grep -c \"android\" .\n    ```\n- 显示字符出现所在行\n    ```\n     grep -n \"android“ .\n    ```\n\n## 二、 find\n\n搜索文件的命令\n```\n命令格式  find pathname -options [ actions]\n命令格式  find 查找目录  -查找规则 [执行操作]\n```\n### 2.1 查找目录\n(1) 如果不写，默认为当前路径； (2) 支持多个路径，目录直接用空格间隔；\n```\nfind . -name demo\n```\n\n### 2.2 查找规则\n\n#### 2.2.1 根据文件名(name)\n\n`-name`  //根据文件名查找，区分大小写\n`-iname` //根据文件名查找，不区分大小写\n\n通配符说明： (1)* 匹配任意的若干个字符 (2)? 匹配任意的单个字符 (3)[] 匹配括号内的任意一个字符\n```\nfind /data -name dalvi*\nfind /data -name dalvik?cache\nfind /data -name dalvik-cach[abe]\n```\n#### 2.2.2 根据文件类型(type)\n\n- f 普通文件\n- d 目录文件\n- l 链接文件\n- b 块设备文件\n- c 字符设备文件\n- p 管道文件\n- s socket文件\n\n例如：\n```\n find -type f //查看文件类型\n```\n\n#### 2.2.3 根据目录深度(depth)\n- -maxdepth n:查找最大深度为n\n- -mindepth m:查找最小深度为m\n\n#### 2.2.4 根据文件大小(size)\n单位：c(小写), k(小写), M(大写), G(大写)\n\n-size +10M: 查找大于10M的文件\n-size -2k: 查找小于2k的文件\n-empty: 查找大小为0的文件或空目录\n\n#### 2.2.5 根据文件权限(perm)\n\n例如：\n```\nfind -perm 777 //查找权限为777的文件\n```\n\n#### 2.2.6 根据文件所属用户和组\n- -user:根据属主来查找文件\n- -group:根据属组来查找文件\n\n#### 2.2.7 根据uid和gid\n- -uid 500: 查找uid是500 的文件\n- -gid 1000: 查找gid是1000的文件\n\n#### 2.2.8 根据时间\n可以通过`stat`命令来查看文件的时间，下列是按照文件的各种时间来查找文件：\n\n- -mtime -n +n: 根据更改(modify)时间，-n指n天以内，+n指n天以前\n- -atime -n +n: 根据访问(access)时间，-n指n天以内，+n指n天以前\n- -ctime -n +n: 根据创建(create)时间，-n指n天以内，+n指n天以前\n- -mmin -n +n: 根据更改(modify)时间，-n指n分钟以内，+n指n分钟以前\n- -amin -n +n: 根据访问(access)时间，-n指n分钟以内，+n指n分钟以前\n- -cmin -n +n: 根据创建(create)时间，-n指n分钟以内，+n指n分钟以前\n\n#### 2.2.9 多条件连接\n\n- -a:两个条件同时满足（and）\n- -o:两个条件满足其一（or）\n- -not:对条件取反（not）\n\n例如，查找当前路径下，以a开头，并排除掉以b结尾的文件或文件夹：\n```\nfind -name a* -not -name *b\n```\n\n### 2.3 执行操作\n\n- `-print` 匹配文件输出到标准输出，默认操作\n- `-ls` 查找到的结果，以ls方式显示\n  ```\n    find -name app -ls\n  ```\n- `-ok [command]` 查找完成后，执行command执行，询问执行\n    ```\n    find -name app -ok cat {} \\;   //注意：{}前后有空格\n    ```\n- `-exec [command]` 查找完成后，执行command执行，直接执行\n    ```\n    find -name app  -exec ls {} \\;\n    ```\n","source":"_posts/grep-find命令用法.md","raw":"---\ntitle: 'grep && find命令用法'\ndate: 2016-09-01 19:26:58\ntags: [grep]\ncategories: linux\n---\n\n>Linux下搜索文件内容常用grep，搜索文件信息使用find\n<!-- more -->\n\n>原文：http://gityuan.com/2015/09/13/grep-and-find/\n\n## 一、 grep\n搜索文本的命令\n```\n命令格式: grep [options]... pattern [file]...\n命令格式: grep 查找规则... 正则表达式 查看文件\n```\n### 1.1 查找规则\n|options |\t解释|\n|:--:|:--:|\n|-i|不区分大 小写(只适用于单字符)|\n|-r|遍历匹配|\n|-w|整字匹配|\n|-l|查询多文件时只输出包含匹配字符的文件名|\n|-c|只输出匹配行的计数|\n|-n|显示匹配行及行号|\n|-s|不显示不存在或无匹配文本的错误信息|\n|-h|查询多文件时不显示文件名|\n|-v|显示不包含匹配文本的所有行|\n\n### 1.2 正则表达式\npattern正则表达式主要参数：\n\n- `\\`： 忽略正则表达式中特殊字符的原有含义。\n- `^`：匹配正则表达式的开始行。\n- `$`: 匹配正则表达式的结束行。\n- `<`：从匹配正则表达 式的行开始。\n- `>`：到匹配正则表达式的行结束。\n- `[]`：单个字符，如[A]即A符合要求 。\n- `[ - ]`：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。\n- `.` ：所有的单个字符。\n- `*` ：有字符，长度可以为0.\n\n### 1.3 实例\n- 忽略大小写搜索\n\n  ```\n  grep -i \"androiD\"  logcat.txt   //从logcat.txt文件中，搜索包含android的文本行，不区分大小写\n  ```\n- 遍历搜索，且不显示无匹配信息\n  ```\n    grep -rs \"android\" .   //从当前目录下，遍历所有的文件，搜索包含android的文本行\n  ```\n- 整字匹配搜索\n  ```\n  grep -w “android” logcat.txt //从logcat.txt文件中，搜索包含单词android的文本行\n  grep -w “android | ios” logcat.txt //从logcat.txt文件中，搜索包含单词android或者ios的文本行\n  ```\n- 只列出文件名\n    ```\n    grep -l \"android\" .\n    ```\n- 统计字符出现次数\n    ```\n    grep -c \"android\" .\n    ```\n- 显示字符出现所在行\n    ```\n     grep -n \"android“ .\n    ```\n\n## 二、 find\n\n搜索文件的命令\n```\n命令格式  find pathname -options [ actions]\n命令格式  find 查找目录  -查找规则 [执行操作]\n```\n### 2.1 查找目录\n(1) 如果不写，默认为当前路径； (2) 支持多个路径，目录直接用空格间隔；\n```\nfind . -name demo\n```\n\n### 2.2 查找规则\n\n#### 2.2.1 根据文件名(name)\n\n`-name`  //根据文件名查找，区分大小写\n`-iname` //根据文件名查找，不区分大小写\n\n通配符说明： (1)* 匹配任意的若干个字符 (2)? 匹配任意的单个字符 (3)[] 匹配括号内的任意一个字符\n```\nfind /data -name dalvi*\nfind /data -name dalvik?cache\nfind /data -name dalvik-cach[abe]\n```\n#### 2.2.2 根据文件类型(type)\n\n- f 普通文件\n- d 目录文件\n- l 链接文件\n- b 块设备文件\n- c 字符设备文件\n- p 管道文件\n- s socket文件\n\n例如：\n```\n find -type f //查看文件类型\n```\n\n#### 2.2.3 根据目录深度(depth)\n- -maxdepth n:查找最大深度为n\n- -mindepth m:查找最小深度为m\n\n#### 2.2.4 根据文件大小(size)\n单位：c(小写), k(小写), M(大写), G(大写)\n\n-size +10M: 查找大于10M的文件\n-size -2k: 查找小于2k的文件\n-empty: 查找大小为0的文件或空目录\n\n#### 2.2.5 根据文件权限(perm)\n\n例如：\n```\nfind -perm 777 //查找权限为777的文件\n```\n\n#### 2.2.6 根据文件所属用户和组\n- -user:根据属主来查找文件\n- -group:根据属组来查找文件\n\n#### 2.2.7 根据uid和gid\n- -uid 500: 查找uid是500 的文件\n- -gid 1000: 查找gid是1000的文件\n\n#### 2.2.8 根据时间\n可以通过`stat`命令来查看文件的时间，下列是按照文件的各种时间来查找文件：\n\n- -mtime -n +n: 根据更改(modify)时间，-n指n天以内，+n指n天以前\n- -atime -n +n: 根据访问(access)时间，-n指n天以内，+n指n天以前\n- -ctime -n +n: 根据创建(create)时间，-n指n天以内，+n指n天以前\n- -mmin -n +n: 根据更改(modify)时间，-n指n分钟以内，+n指n分钟以前\n- -amin -n +n: 根据访问(access)时间，-n指n分钟以内，+n指n分钟以前\n- -cmin -n +n: 根据创建(create)时间，-n指n分钟以内，+n指n分钟以前\n\n#### 2.2.9 多条件连接\n\n- -a:两个条件同时满足（and）\n- -o:两个条件满足其一（or）\n- -not:对条件取反（not）\n\n例如，查找当前路径下，以a开头，并排除掉以b结尾的文件或文件夹：\n```\nfind -name a* -not -name *b\n```\n\n### 2.3 执行操作\n\n- `-print` 匹配文件输出到标准输出，默认操作\n- `-ls` 查找到的结果，以ls方式显示\n  ```\n    find -name app -ls\n  ```\n- `-ok [command]` 查找完成后，执行command执行，询问执行\n    ```\n    find -name app -ok cat {} \\;   //注意：{}前后有空格\n    ```\n- `-exec [command]` 查找完成后，执行command执行，直接执行\n    ```\n    find -name app  -exec ls {} \\;\n    ```\n","slug":"grep-find命令用法","published":1,"updated":"2016-09-01T11:55:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukh001npev2jjgbrffv","content":"<blockquote>\n<p>Linux下搜索文件内容常用grep，搜索文件信息使用find<br><a id=\"more\"></a></p>\n<p>原文：<a href=\"http://gityuan.com/2015/09/13/grep-and-find/\" target=\"_blank\" rel=\"noopener\">http://gityuan.com/2015/09/13/grep-and-find/</a></p>\n</blockquote>\n<h2 id=\"一、-grep\"><a href=\"#一、-grep\" class=\"headerlink\" title=\"一、 grep\"></a>一、 grep</h2><p>搜索文本的命令<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令格式: <span class=\"keyword\">grep</span> [<span class=\"keyword\">options</span>]... pattern [<span class=\"keyword\">file</span>]...</span><br><span class=\"line\">命令格式: <span class=\"keyword\">grep</span> 查找规则... 正则表达式 查看文件</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-1-查找规则\"><a href=\"#1-1-查找规则\" class=\"headerlink\" title=\"1.1 查找规则\"></a>1.1 查找规则</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">options</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-i</td>\n<td style=\"text-align:center\">不区分大 小写(只适用于单字符)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r</td>\n<td style=\"text-align:center\">遍历匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w</td>\n<td style=\"text-align:center\">整字匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">查询多文件时只输出包含匹配字符的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-c</td>\n<td style=\"text-align:center\">只输出匹配行的计数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n</td>\n<td style=\"text-align:center\">显示匹配行及行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s</td>\n<td style=\"text-align:center\">不显示不存在或无匹配文本的错误信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-h</td>\n<td style=\"text-align:center\">查询多文件时不显示文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v</td>\n<td style=\"text-align:center\">显示不包含匹配文本的所有行</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1-2-正则表达式\"><a href=\"#1-2-正则表达式\" class=\"headerlink\" title=\"1.2 正则表达式\"></a>1.2 正则表达式</h3><p>pattern正则表达式主要参数：</p>\n<ul>\n<li><code>\\</code>： 忽略正则表达式中特殊字符的原有含义。</li>\n<li><code>^</code>：匹配正则表达式的开始行。</li>\n<li><code>$</code>: 匹配正则表达式的结束行。</li>\n<li><code>&lt;</code>：从匹配正则表达 式的行开始。</li>\n<li><code>&gt;</code>：到匹配正则表达式的行结束。</li>\n<li><code>[]</code>：单个字符，如[A]即A符合要求 。</li>\n<li><code>[ - ]</code>：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</li>\n<li><code>.</code> ：所有的单个字符。</li>\n<li><code>*</code> ：有字符，长度可以为0.</li>\n</ul>\n<h3 id=\"1-3-实例\"><a href=\"#1-3-实例\" class=\"headerlink\" title=\"1.3 实例\"></a>1.3 实例</h3><ul>\n<li><p>忽略大小写搜索</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -<span class=\"selector-tag\">i</span> <span class=\"string\">\"androiD\"</span>  logcat<span class=\"selector-class\">.txt</span>   <span class=\"comment\">//从logcat.txt文件中，搜索包含android的文本行，不区分大小写</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>遍历搜索，且不显示无匹配信息</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -rs <span class=\"string\">\"android\"</span> .   <span class=\"comment\">//从当前目录下，遍历所有的文件，搜索包含android的文本行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>整字匹配搜索</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -w “android” logcat.txt <span class=\"comment\">//从logcat.txt文件中，搜索包含单词android的文本行</span></span><br><span class=\"line\"><span class=\"keyword\">grep</span> -w “android | ios” logcat.txt <span class=\"comment\">//从logcat.txt文件中，搜索包含单词android或者ios的文本行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只列出文件名</p>\n  <figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -l <span class=\"string\">\"android\"</span> .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计字符出现次数</p>\n  <figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -c <span class=\"string\">\"android\"</span> .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示字符出现所在行</p>\n  <figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -n <span class=\"comment\">\"android“ .</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"二、-find\"><a href=\"#二、-find\" class=\"headerlink\" title=\"二、 find\"></a>二、 find</h2><p>搜索文件的命令<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令格式  <span class=\"builtin-name\">find</span> pathname -options [ actions]</span><br><span class=\"line\">命令格式  <span class=\"builtin-name\">find</span> 查找目录  -查找规则 [执行操作]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-1-查找目录\"><a href=\"#2-1-查找目录\" class=\"headerlink\" title=\"2.1 查找目录\"></a>2.1 查找目录</h3><p>(1) 如果不写，默认为当前路径； (2) 支持多个路径，目录直接用空格间隔；<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">find</span> . -name demo</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-查找规则\"><a href=\"#2-2-查找规则\" class=\"headerlink\" title=\"2.2 查找规则\"></a>2.2 查找规则</h3><h4 id=\"2-2-1-根据文件名-name\"><a href=\"#2-2-1-根据文件名-name\" class=\"headerlink\" title=\"2.2.1 根据文件名(name)\"></a>2.2.1 根据文件名(name)</h4><p><code>-name</code>  //根据文件名查找，区分大小写<br><code>-iname</code> //根据文件名查找，不区分大小写</p>\n<p>通配符说明： (1)* 匹配任意的若干个字符 (2)? 匹配任意的单个字符 (3)[] 匹配括号内的任意一个字符<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvi*</span><br><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvik?cache</span><br><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvik-cach[abe]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-2-根据文件类型-type\"><a href=\"#2-2-2-根据文件类型-type\" class=\"headerlink\" title=\"2.2.2 根据文件类型(type)\"></a>2.2.2 根据文件类型(type)</h4><ul>\n<li>f 普通文件</li>\n<li>d 目录文件</li>\n<li>l 链接文件</li>\n<li>b 块设备文件</li>\n<li>c 字符设备文件</li>\n<li>p 管道文件</li>\n<li>s socket文件</li>\n</ul>\n<p>例如：<br><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find -<span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">f</span></span> <span class=\"comment\">//查看文件类型</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-3-根据目录深度-depth\"><a href=\"#2-2-3-根据目录深度-depth\" class=\"headerlink\" title=\"2.2.3 根据目录深度(depth)\"></a>2.2.3 根据目录深度(depth)</h4><ul>\n<li>-maxdepth n:查找最大深度为n</li>\n<li>-mindepth m:查找最小深度为m</li>\n</ul>\n<h4 id=\"2-2-4-根据文件大小-size\"><a href=\"#2-2-4-根据文件大小-size\" class=\"headerlink\" title=\"2.2.4 根据文件大小(size)\"></a>2.2.4 根据文件大小(size)</h4><p>单位：c(小写), k(小写), M(大写), G(大写)</p>\n<p>-size +10M: 查找大于10M的文件<br>-size -2k: 查找小于2k的文件<br>-empty: 查找大小为0的文件或空目录</p>\n<h4 id=\"2-2-5-根据文件权限-perm\"><a href=\"#2-2-5-根据文件权限-perm\" class=\"headerlink\" title=\"2.2.5 根据文件权限(perm)\"></a>2.2.5 根据文件权限(perm)</h4><p>例如：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -perm <span class=\"number\">777</span> <span class=\"comment\">//查找权限为777的文件</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-6-根据文件所属用户和组\"><a href=\"#2-2-6-根据文件所属用户和组\" class=\"headerlink\" title=\"2.2.6 根据文件所属用户和组\"></a>2.2.6 根据文件所属用户和组</h4><ul>\n<li>-user:根据属主来查找文件</li>\n<li>-group:根据属组来查找文件</li>\n</ul>\n<h4 id=\"2-2-7-根据uid和gid\"><a href=\"#2-2-7-根据uid和gid\" class=\"headerlink\" title=\"2.2.7 根据uid和gid\"></a>2.2.7 根据uid和gid</h4><ul>\n<li>-uid 500: 查找uid是500 的文件</li>\n<li>-gid 1000: 查找gid是1000的文件</li>\n</ul>\n<h4 id=\"2-2-8-根据时间\"><a href=\"#2-2-8-根据时间\" class=\"headerlink\" title=\"2.2.8 根据时间\"></a>2.2.8 根据时间</h4><p>可以通过<code>stat</code>命令来查看文件的时间，下列是按照文件的各种时间来查找文件：</p>\n<ul>\n<li>-mtime -n +n: 根据更改(modify)时间，-n指n天以内，+n指n天以前</li>\n<li>-atime -n +n: 根据访问(access)时间，-n指n天以内，+n指n天以前</li>\n<li>-ctime -n +n: 根据创建(create)时间，-n指n天以内，+n指n天以前</li>\n<li>-mmin -n +n: 根据更改(modify)时间，-n指n分钟以内，+n指n分钟以前</li>\n<li>-amin -n +n: 根据访问(access)时间，-n指n分钟以内，+n指n分钟以前</li>\n<li>-cmin -n +n: 根据创建(create)时间，-n指n分钟以内，+n指n分钟以前</li>\n</ul>\n<h4 id=\"2-2-9-多条件连接\"><a href=\"#2-2-9-多条件连接\" class=\"headerlink\" title=\"2.2.9 多条件连接\"></a>2.2.9 多条件连接</h4><ul>\n<li>-a:两个条件同时满足（and）</li>\n<li>-o:两个条件满足其一（or）</li>\n<li>-not:对条件取反（not）</li>\n</ul>\n<p>例如，查找当前路径下，以a开头，并排除掉以b结尾的文件或文件夹：<br><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> a* -<span class=\"built_in\">not</span> -<span class=\"built_in\">name</span> *b</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-3-执行操作\"><a href=\"#2-3-执行操作\" class=\"headerlink\" title=\"2.3 执行操作\"></a>2.3 执行操作</h3><ul>\n<li><code>-print</code> 匹配文件输出到标准输出，默认操作</li>\n<li><p><code>-ls</code> 查找到的结果，以ls方式显示</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">find</span> -name app -ls</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>-ok [command]</code> 查找完成后，执行command执行，询问执行</p>\n  <figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> app -ok cat &#123;&#125; \\;   <span class=\"comment\">//注意：&#123;&#125;前后有空格</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>-exec [command]</code> 查找完成后，执行command执行，直接执行</p>\n  <figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> app  -<span class=\"built_in\">exec</span> ls &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>Linux下搜索文件内容常用grep，搜索文件信息使用find<br>","more":"</p>\n<p>原文：<a href=\"http://gityuan.com/2015/09/13/grep-and-find/\" target=\"_blank\" rel=\"noopener\">http://gityuan.com/2015/09/13/grep-and-find/</a></p>\n</blockquote>\n<h2 id=\"一、-grep\"><a href=\"#一、-grep\" class=\"headerlink\" title=\"一、 grep\"></a>一、 grep</h2><p>搜索文本的命令<br><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令格式: <span class=\"keyword\">grep</span> [<span class=\"keyword\">options</span>]... pattern [<span class=\"keyword\">file</span>]...</span><br><span class=\"line\">命令格式: <span class=\"keyword\">grep</span> 查找规则... 正则表达式 查看文件</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"1-1-查找规则\"><a href=\"#1-1-查找规则\" class=\"headerlink\" title=\"1.1 查找规则\"></a>1.1 查找规则</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">options</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-i</td>\n<td style=\"text-align:center\">不区分大 小写(只适用于单字符)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-r</td>\n<td style=\"text-align:center\">遍历匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w</td>\n<td style=\"text-align:center\">整字匹配</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">查询多文件时只输出包含匹配字符的文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-c</td>\n<td style=\"text-align:center\">只输出匹配行的计数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n</td>\n<td style=\"text-align:center\">显示匹配行及行号</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-s</td>\n<td style=\"text-align:center\">不显示不存在或无匹配文本的错误信息</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-h</td>\n<td style=\"text-align:center\">查询多文件时不显示文件名</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-v</td>\n<td style=\"text-align:center\">显示不包含匹配文本的所有行</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"1-2-正则表达式\"><a href=\"#1-2-正则表达式\" class=\"headerlink\" title=\"1.2 正则表达式\"></a>1.2 正则表达式</h3><p>pattern正则表达式主要参数：</p>\n<ul>\n<li><code>\\</code>： 忽略正则表达式中特殊字符的原有含义。</li>\n<li><code>^</code>：匹配正则表达式的开始行。</li>\n<li><code>$</code>: 匹配正则表达式的结束行。</li>\n<li><code>&lt;</code>：从匹配正则表达 式的行开始。</li>\n<li><code>&gt;</code>：到匹配正则表达式的行结束。</li>\n<li><code>[]</code>：单个字符，如[A]即A符合要求 。</li>\n<li><code>[ - ]</code>：范围，如[A-Z]，即A、B、C一直到Z都符合要求 。</li>\n<li><code>.</code> ：所有的单个字符。</li>\n<li><code>*</code> ：有字符，长度可以为0.</li>\n</ul>\n<h3 id=\"1-3-实例\"><a href=\"#1-3-实例\" class=\"headerlink\" title=\"1.3 实例\"></a>1.3 实例</h3><ul>\n<li><p>忽略大小写搜索</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -<span class=\"selector-tag\">i</span> <span class=\"string\">\"androiD\"</span>  logcat<span class=\"selector-class\">.txt</span>   <span class=\"comment\">//从logcat.txt文件中，搜索包含android的文本行，不区分大小写</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>遍历搜索，且不显示无匹配信息</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -rs <span class=\"string\">\"android\"</span> .   <span class=\"comment\">//从当前目录下，遍历所有的文件，搜索包含android的文本行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>整字匹配搜索</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -w “android” logcat.txt <span class=\"comment\">//从logcat.txt文件中，搜索包含单词android的文本行</span></span><br><span class=\"line\"><span class=\"keyword\">grep</span> -w “android | ios” logcat.txt <span class=\"comment\">//从logcat.txt文件中，搜索包含单词android或者ios的文本行</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>只列出文件名</p>\n  <figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -l <span class=\"string\">\"android\"</span> .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>统计字符出现次数</p>\n  <figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep -c <span class=\"string\">\"android\"</span> .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>显示字符出现所在行</p>\n  <figure class=\"highlight vim\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grep</span> -n <span class=\"comment\">\"android“ .</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"二、-find\"><a href=\"#二、-find\" class=\"headerlink\" title=\"二、 find\"></a>二、 find</h2><p>搜索文件的命令<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">命令格式  <span class=\"builtin-name\">find</span> pathname -options [ actions]</span><br><span class=\"line\">命令格式  <span class=\"builtin-name\">find</span> 查找目录  -查找规则 [执行操作]</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-1-查找目录\"><a href=\"#2-1-查找目录\" class=\"headerlink\" title=\"2.1 查找目录\"></a>2.1 查找目录</h3><p>(1) 如果不写，默认为当前路径； (2) 支持多个路径，目录直接用空格间隔；<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">find</span> . -name demo</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-2-查找规则\"><a href=\"#2-2-查找规则\" class=\"headerlink\" title=\"2.2 查找规则\"></a>2.2 查找规则</h3><h4 id=\"2-2-1-根据文件名-name\"><a href=\"#2-2-1-根据文件名-name\" class=\"headerlink\" title=\"2.2.1 根据文件名(name)\"></a>2.2.1 根据文件名(name)</h4><p><code>-name</code>  //根据文件名查找，区分大小写<br><code>-iname</code> //根据文件名查找，不区分大小写</p>\n<p>通配符说明： (1)* 匹配任意的若干个字符 (2)? 匹配任意的单个字符 (3)[] 匹配括号内的任意一个字符<br><figure class=\"highlight fortran\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvi*</span><br><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvik?cache</span><br><span class=\"line\">find /<span class=\"keyword\">data</span> -<span class=\"keyword\">name</span> dalvik-cach[abe]</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-2-根据文件类型-type\"><a href=\"#2-2-2-根据文件类型-type\" class=\"headerlink\" title=\"2.2.2 根据文件类型(type)\"></a>2.2.2 根据文件类型(type)</h4><ul>\n<li>f 普通文件</li>\n<li>d 目录文件</li>\n<li>l 链接文件</li>\n<li>b 块设备文件</li>\n<li>c 字符设备文件</li>\n<li>p 管道文件</li>\n<li>s socket文件</li>\n</ul>\n<p>例如：<br><figure class=\"highlight rust\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find -<span class=\"class\"><span class=\"keyword\">type</span> <span class=\"title\">f</span></span> <span class=\"comment\">//查看文件类型</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-3-根据目录深度-depth\"><a href=\"#2-2-3-根据目录深度-depth\" class=\"headerlink\" title=\"2.2.3 根据目录深度(depth)\"></a>2.2.3 根据目录深度(depth)</h4><ul>\n<li>-maxdepth n:查找最大深度为n</li>\n<li>-mindepth m:查找最小深度为m</li>\n</ul>\n<h4 id=\"2-2-4-根据文件大小-size\"><a href=\"#2-2-4-根据文件大小-size\" class=\"headerlink\" title=\"2.2.4 根据文件大小(size)\"></a>2.2.4 根据文件大小(size)</h4><p>单位：c(小写), k(小写), M(大写), G(大写)</p>\n<p>-size +10M: 查找大于10M的文件<br>-size -2k: 查找小于2k的文件<br>-empty: 查找大小为0的文件或空目录</p>\n<h4 id=\"2-2-5-根据文件权限-perm\"><a href=\"#2-2-5-根据文件权限-perm\" class=\"headerlink\" title=\"2.2.5 根据文件权限(perm)\"></a>2.2.5 根据文件权限(perm)</h4><p>例如：<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -perm <span class=\"number\">777</span> <span class=\"comment\">//查找权限为777的文件</span></span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-6-根据文件所属用户和组\"><a href=\"#2-2-6-根据文件所属用户和组\" class=\"headerlink\" title=\"2.2.6 根据文件所属用户和组\"></a>2.2.6 根据文件所属用户和组</h4><ul>\n<li>-user:根据属主来查找文件</li>\n<li>-group:根据属组来查找文件</li>\n</ul>\n<h4 id=\"2-2-7-根据uid和gid\"><a href=\"#2-2-7-根据uid和gid\" class=\"headerlink\" title=\"2.2.7 根据uid和gid\"></a>2.2.7 根据uid和gid</h4><ul>\n<li>-uid 500: 查找uid是500 的文件</li>\n<li>-gid 1000: 查找gid是1000的文件</li>\n</ul>\n<h4 id=\"2-2-8-根据时间\"><a href=\"#2-2-8-根据时间\" class=\"headerlink\" title=\"2.2.8 根据时间\"></a>2.2.8 根据时间</h4><p>可以通过<code>stat</code>命令来查看文件的时间，下列是按照文件的各种时间来查找文件：</p>\n<ul>\n<li>-mtime -n +n: 根据更改(modify)时间，-n指n天以内，+n指n天以前</li>\n<li>-atime -n +n: 根据访问(access)时间，-n指n天以内，+n指n天以前</li>\n<li>-ctime -n +n: 根据创建(create)时间，-n指n天以内，+n指n天以前</li>\n<li>-mmin -n +n: 根据更改(modify)时间，-n指n分钟以内，+n指n分钟以前</li>\n<li>-amin -n +n: 根据访问(access)时间，-n指n分钟以内，+n指n分钟以前</li>\n<li>-cmin -n +n: 根据创建(create)时间，-n指n分钟以内，+n指n分钟以前</li>\n</ul>\n<h4 id=\"2-2-9-多条件连接\"><a href=\"#2-2-9-多条件连接\" class=\"headerlink\" title=\"2.2.9 多条件连接\"></a>2.2.9 多条件连接</h4><ul>\n<li>-a:两个条件同时满足（and）</li>\n<li>-o:两个条件满足其一（or）</li>\n<li>-not:对条件取反（not）</li>\n</ul>\n<p>例如，查找当前路径下，以a开头，并排除掉以b结尾的文件或文件夹：<br><figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> a* -<span class=\"built_in\">not</span> -<span class=\"built_in\">name</span> *b</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"2-3-执行操作\"><a href=\"#2-3-执行操作\" class=\"headerlink\" title=\"2.3 执行操作\"></a>2.3 执行操作</h3><ul>\n<li><code>-print</code> 匹配文件输出到标准输出，默认操作</li>\n<li><p><code>-ls</code> 查找到的结果，以ls方式显示</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"builtin-name\">find</span> -name app -ls</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>-ok [command]</code> 查找完成后，执行command执行，询问执行</p>\n  <figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> app -ok cat &#123;&#125; \\;   <span class=\"comment\">//注意：&#123;&#125;前后有空格</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>-exec [command]</code> 查找完成后，执行command执行，直接执行</p>\n  <figure class=\"highlight sqf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">find</span> -<span class=\"built_in\">name</span> app  -<span class=\"built_in\">exec</span> ls &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"iOS设置AppIcon&LauncherImages尺寸和位置","date":"2017-12-05T08:28:45.000Z","_content":"\n\n### iOS AppIcon图标布局及尺寸\n---\n#### AppIcon图标尺寸：\n\n```\n\t1024px*1024px     180px*180px    120px*120px  87px*87px  80px*80px   60px*60px  58px*58px    40px*40px\n```\n\n<!-- more -->\n#### AppIcon位置：\n\n| iPhone Notification  |   | \n|:------------- |:---------------:|\n| | 60px × 60px (20pt × 20pt @3x) |\n| | 40px × 40px (20pt × 20pt @2x) |\n\n| iPhone Settings  |   | \n|:------------- |:---------------:|\n| | 87px × 87px (29pt × 29pt @3x) |\n| | 58px × 58px (29pt × 29pt @2x) |\n\n| iPhone Spotlight  |   | \n|:------------- |:---------------:|\n| | 120px × 120px (40pt × 40pt @3x) |\n| | 80px × 80px (40pt × 40pt @2x) |\n\n| iPhone App  |   | \n|:------------- |:---------------:|\n| | 180px × 180px (60pt × 60pt @3x) |\n| | 120px × 120px (60pt × 60pt @2x) |\n\n| App Store |   | \n|:------------- |:---------------:|\n| | 1024px × 1024px (1024pt × 1024pt @1x) |\n\n### Launch Screen Images\n---\n\n|Location |  Portrait size | Device |\n|:------------- |:---------------:|:------:|\n| iPhoneX | 125px × 2436px |iPhone X|\n| Retina HD 5.5\" | 1242px × 2208px |6 plus / 7 plus / 8 plus|\n| Retina HD 4.7\" | 750px × 1334px |6/ 6s/ 7/ 8|\n| Retina 4 | 640px × 1136px |5/ 5s/ 5c/ se|\n| 2x | 640px × 960px |4/ 4s|\n\n\n\n","source":"_posts/iOS设置AppIcon-LauncherImages尺寸和位置.md","raw":"---\ntitle: 'iOS设置AppIcon&LauncherImages尺寸和位置'\ndate: 2017-12-05 16:28:45\ntags: [appicon]\ncategories: ios\n---\n\n\n### iOS AppIcon图标布局及尺寸\n---\n#### AppIcon图标尺寸：\n\n```\n\t1024px*1024px     180px*180px    120px*120px  87px*87px  80px*80px   60px*60px  58px*58px    40px*40px\n```\n\n<!-- more -->\n#### AppIcon位置：\n\n| iPhone Notification  |   | \n|:------------- |:---------------:|\n| | 60px × 60px (20pt × 20pt @3x) |\n| | 40px × 40px (20pt × 20pt @2x) |\n\n| iPhone Settings  |   | \n|:------------- |:---------------:|\n| | 87px × 87px (29pt × 29pt @3x) |\n| | 58px × 58px (29pt × 29pt @2x) |\n\n| iPhone Spotlight  |   | \n|:------------- |:---------------:|\n| | 120px × 120px (40pt × 40pt @3x) |\n| | 80px × 80px (40pt × 40pt @2x) |\n\n| iPhone App  |   | \n|:------------- |:---------------:|\n| | 180px × 180px (60pt × 60pt @3x) |\n| | 120px × 120px (60pt × 60pt @2x) |\n\n| App Store |   | \n|:------------- |:---------------:|\n| | 1024px × 1024px (1024pt × 1024pt @1x) |\n\n### Launch Screen Images\n---\n\n|Location |  Portrait size | Device |\n|:------------- |:---------------:|:------:|\n| iPhoneX | 125px × 2436px |iPhone X|\n| Retina HD 5.5\" | 1242px × 2208px |6 plus / 7 plus / 8 plus|\n| Retina HD 4.7\" | 750px × 1334px |6/ 6s/ 7/ 8|\n| Retina 4 | 640px × 1136px |5/ 5s/ 5c/ se|\n| 2x | 640px × 960px |4/ 4s|\n\n\n\n","slug":"iOS设置AppIcon-LauncherImages尺寸和位置","published":1,"updated":"2017-12-05T09:01:04.313Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukj001ppev2539e2a89","content":"<h3 id=\"iOS-AppIcon图标布局及尺寸\"><a href=\"#iOS-AppIcon图标布局及尺寸\" class=\"headerlink\" title=\"iOS AppIcon图标布局及尺寸\"></a>iOS AppIcon图标布局及尺寸</h3><hr>\n<h4 id=\"AppIcon图标尺寸：\"><a href=\"#AppIcon图标尺寸：\" class=\"headerlink\" title=\"AppIcon图标尺寸：\"></a>AppIcon图标尺寸：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1024</span>px*<span class=\"number\">1024</span>px     <span class=\"number\">180</span>px*<span class=\"number\">180</span>px    <span class=\"number\">120</span>px*<span class=\"number\">120</span>px  <span class=\"number\">87</span>px*<span class=\"number\">87</span>px  <span class=\"number\">80</span>px*<span class=\"number\">80</span>px   <span class=\"number\">60</span>px*<span class=\"number\">60</span>px  <span class=\"number\">58</span>px*<span class=\"number\">58</span>px    <span class=\"number\">40</span>px*<span class=\"number\">40</span>px</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h4 id=\"AppIcon位置：\"><a href=\"#AppIcon位置：\" class=\"headerlink\" title=\"AppIcon位置：\"></a>AppIcon位置：</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Notification</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">60px × 60px (20pt × 20pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">40px × 40px (20pt × 20pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Settings</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">87px × 87px (29pt × 29pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">58px × 58px (29pt × 29pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Spotlight</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">120px × 120px (40pt × 40pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">80px × 80px (40pt × 40pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone App</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">180px × 180px (60pt × 60pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">120px × 120px (60pt × 60pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">App Store</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">1024px × 1024px (1024pt × 1024pt @1x)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Launch-Screen-Images\"><a href=\"#Launch-Screen-Images\" class=\"headerlink\" title=\"Launch Screen Images\"></a>Launch Screen Images</h3><hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Location</th>\n<th style=\"text-align:center\">Portrait size</th>\n<th style=\"text-align:center\">Device</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">iPhoneX</td>\n<td style=\"text-align:center\">125px × 2436px</td>\n<td style=\"text-align:center\">iPhone X</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina HD 5.5”</td>\n<td style=\"text-align:center\">1242px × 2208px</td>\n<td style=\"text-align:center\">6 plus / 7 plus / 8 plus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina HD 4.7”</td>\n<td style=\"text-align:center\">750px × 1334px</td>\n<td style=\"text-align:center\">6/ 6s/ 7/ 8</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina 4</td>\n<td style=\"text-align:center\">640px × 1136px</td>\n<td style=\"text-align:center\">5/ 5s/ 5c/ se</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2x</td>\n<td style=\"text-align:center\">640px × 960px</td>\n<td style=\"text-align:center\">4/ 4s</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h3 id=\"iOS-AppIcon图标布局及尺寸\"><a href=\"#iOS-AppIcon图标布局及尺寸\" class=\"headerlink\" title=\"iOS AppIcon图标布局及尺寸\"></a>iOS AppIcon图标布局及尺寸</h3><hr>\n<h4 id=\"AppIcon图标尺寸：\"><a href=\"#AppIcon图标尺寸：\" class=\"headerlink\" title=\"AppIcon图标尺寸：\"></a>AppIcon图标尺寸：</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1024</span>px*<span class=\"number\">1024</span>px     <span class=\"number\">180</span>px*<span class=\"number\">180</span>px    <span class=\"number\">120</span>px*<span class=\"number\">120</span>px  <span class=\"number\">87</span>px*<span class=\"number\">87</span>px  <span class=\"number\">80</span>px*<span class=\"number\">80</span>px   <span class=\"number\">60</span>px*<span class=\"number\">60</span>px  <span class=\"number\">58</span>px*<span class=\"number\">58</span>px    <span class=\"number\">40</span>px*<span class=\"number\">40</span>px</span><br></pre></td></tr></table></figure>","more":"<h4 id=\"AppIcon位置：\"><a href=\"#AppIcon位置：\" class=\"headerlink\" title=\"AppIcon位置：\"></a>AppIcon位置：</h4><table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Notification</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">60px × 60px (20pt × 20pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">40px × 40px (20pt × 20pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Settings</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">87px × 87px (29pt × 29pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">58px × 58px (29pt × 29pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone Spotlight</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">120px × 120px (40pt × 40pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">80px × 80px (40pt × 40pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">iPhone App</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">180px × 180px (60pt × 60pt @3x)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">120px × 120px (60pt × 60pt @2x)</td>\n</tr>\n</tbody>\n</table>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">App Store</th>\n<th style=\"text-align:center\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:center\">1024px × 1024px (1024pt × 1024pt @1x)</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Launch-Screen-Images\"><a href=\"#Launch-Screen-Images\" class=\"headerlink\" title=\"Launch Screen Images\"></a>Launch Screen Images</h3><hr>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">Location</th>\n<th style=\"text-align:center\">Portrait size</th>\n<th style=\"text-align:center\">Device</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">iPhoneX</td>\n<td style=\"text-align:center\">125px × 2436px</td>\n<td style=\"text-align:center\">iPhone X</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina HD 5.5”</td>\n<td style=\"text-align:center\">1242px × 2208px</td>\n<td style=\"text-align:center\">6 plus / 7 plus / 8 plus</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina HD 4.7”</td>\n<td style=\"text-align:center\">750px × 1334px</td>\n<td style=\"text-align:center\">6/ 6s/ 7/ 8</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Retina 4</td>\n<td style=\"text-align:center\">640px × 1136px</td>\n<td style=\"text-align:center\">5/ 5s/ 5c/ se</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">2x</td>\n<td style=\"text-align:center\">640px × 960px</td>\n<td style=\"text-align:center\">4/ 4s</td>\n</tr>\n</tbody>\n</table>"},{"title":"iPhone开发-GCD","date":"2017-11-15T12:57:52.000Z","_content":"\n一些常用的API\n\n<!-- more -->\n\n```\n//异步执行一个线程\ndispatch_async(queue,^{});\n\n//创建一个线程\ndispatch_queue_t queue =     dispatch_queuq_create(\"com.example.queue\",NULL);\n\n//获取主线程的方法\ndispatch_get_main_queue();\n\n//优先级获取方法\ndispath_queue_t queue = dispatch_get_global_queue(优先级，0);\nDispatch Queue 的种类 有几种\n\n//优先级常量\nDISPATCH_QUEUE_PRIORITY_HIGH\nDISPATCH_QUEUE_PRIORITY_DEFAULT\nDISPATCH_QUEUE_PRIORITY_LOW\nDISPATCH_QUEUE_PRIORITY_BACKGROUND\n\n\n//延迟执行\ndispatch_after\n\ndispatch_time_t time = dispatch_time(DISPATCH_TIME_NOW,3ull*NSEC_PER_SEC);\n```\n\n处理线程的API，有涉及到暂停，挂起，恢复，取消，等待、延迟执行，线程组，同步和异步 ，死锁，只执行一次，等系列的概念出现。这些概念大部分是对于处理线程和任务。\n\n```\ndispatch_time_t\n\ndispatch_once_t\n\ndispatch_after\n\ndispatch_group_wait\n\ndispatch_release\n\ndispatch_barrier_async\n\ndispatch_async //异步\n\ndispatch_sync //同步\n\ndispatch_apply\n\ndispatch_io_create\n```\n\n当线程过多时候，会引发内存问题。导致系统内存开销过多，效率降低。\n\n同样多线程在更新相同一个资源的时候，会造成数据竞争的问题。\n\n同步执行的时候容易出现死锁的问题，导致UI卡顿的问题发生。\n\n系统提供了标准的Dispatch Queue\n1.Main Dispatch Queue\n2.Global Dispatch Queue\n\n通过dispatch_get_global_queue 可以获取到不同等级的线程\n通过dispatch_get_main_queue 获取主线程\n\n**刷新UI操作必须在主线程**\n\n```\ndispatch_async(dispatch_get_global_queue(0,0),^{\n   NSInteger count = [numOfInstructions.text intValue];\n   for (int i = 0; i<count;i++)\n   {\n      dispatch_async(dispatch_get_main_queue(),^{\n      currentCount.text =[NSString stringWithFormat:@\"instruction%d\",i];\n     });\n   }\n });\n```\n\n**构建一个单例**\n\n```\n+(SingleManager) shareManager\n{\n  static dispatch_once_t once;\n  static SingleManager *instance;\n  dispatch_once(&once,^{\n     instance = [[self alloc]init];\n   }\n   return instance;\n}\n```\n\n**延迟执行某些任务**\n\n```\nMBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];\nhud.labelText =@\"拼命加载中\";\ndispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, 10 *NSEC_PER_SEC);\n   dispatch_after(popTime, dispatch_get_main_queue(), ^{\n       [MBProgressHUD hideAllHUDsForView:self.view animated:YES];\n   });\n```\n","source":"_posts/iPhone开发-GCD.md","raw":"---\ntitle: iPhone开发-GCD\ndate: 2017-11-15 20:57:52\ntags: [ios]\ncategories: ios\n---\n\n一些常用的API\n\n<!-- more -->\n\n```\n//异步执行一个线程\ndispatch_async(queue,^{});\n\n//创建一个线程\ndispatch_queue_t queue =     dispatch_queuq_create(\"com.example.queue\",NULL);\n\n//获取主线程的方法\ndispatch_get_main_queue();\n\n//优先级获取方法\ndispath_queue_t queue = dispatch_get_global_queue(优先级，0);\nDispatch Queue 的种类 有几种\n\n//优先级常量\nDISPATCH_QUEUE_PRIORITY_HIGH\nDISPATCH_QUEUE_PRIORITY_DEFAULT\nDISPATCH_QUEUE_PRIORITY_LOW\nDISPATCH_QUEUE_PRIORITY_BACKGROUND\n\n\n//延迟执行\ndispatch_after\n\ndispatch_time_t time = dispatch_time(DISPATCH_TIME_NOW,3ull*NSEC_PER_SEC);\n```\n\n处理线程的API，有涉及到暂停，挂起，恢复，取消，等待、延迟执行，线程组，同步和异步 ，死锁，只执行一次，等系列的概念出现。这些概念大部分是对于处理线程和任务。\n\n```\ndispatch_time_t\n\ndispatch_once_t\n\ndispatch_after\n\ndispatch_group_wait\n\ndispatch_release\n\ndispatch_barrier_async\n\ndispatch_async //异步\n\ndispatch_sync //同步\n\ndispatch_apply\n\ndispatch_io_create\n```\n\n当线程过多时候，会引发内存问题。导致系统内存开销过多，效率降低。\n\n同样多线程在更新相同一个资源的时候，会造成数据竞争的问题。\n\n同步执行的时候容易出现死锁的问题，导致UI卡顿的问题发生。\n\n系统提供了标准的Dispatch Queue\n1.Main Dispatch Queue\n2.Global Dispatch Queue\n\n通过dispatch_get_global_queue 可以获取到不同等级的线程\n通过dispatch_get_main_queue 获取主线程\n\n**刷新UI操作必须在主线程**\n\n```\ndispatch_async(dispatch_get_global_queue(0,0),^{\n   NSInteger count = [numOfInstructions.text intValue];\n   for (int i = 0; i<count;i++)\n   {\n      dispatch_async(dispatch_get_main_queue(),^{\n      currentCount.text =[NSString stringWithFormat:@\"instruction%d\",i];\n     });\n   }\n });\n```\n\n**构建一个单例**\n\n```\n+(SingleManager) shareManager\n{\n  static dispatch_once_t once;\n  static SingleManager *instance;\n  dispatch_once(&once,^{\n     instance = [[self alloc]init];\n   }\n   return instance;\n}\n```\n\n**延迟执行某些任务**\n\n```\nMBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];\nhud.labelText =@\"拼命加载中\";\ndispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, 10 *NSEC_PER_SEC);\n   dispatch_after(popTime, dispatch_get_main_queue(), ^{\n       [MBProgressHUD hideAllHUDsForView:self.view animated:YES];\n   });\n```\n","slug":"iPhone开发-GCD","published":1,"updated":"2017-11-15T13:03:25.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukl001tpev2sw3fw9p8","content":"<p>一些常用的API</p>\n<a id=\"more\"></a>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//异步执行一个线程</span></span><br><span class=\"line\">dispatch_async(<span class=\"built_in\">queue</span>,^&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个线程</span></span><br><span class=\"line\"><span class=\"keyword\">dispatch_queue_t</span> <span class=\"built_in\">queue</span> =     dispatch_queuq_create(<span class=\"string\">\"com.example.queue\"</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取主线程的方法</span></span><br><span class=\"line\">dispatch_get_main_queue();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//优先级获取方法</span></span><br><span class=\"line\"><span class=\"keyword\">dispath_queue_t</span> <span class=\"built_in\">queue</span> = dispatch_get_global_queue(优先级，<span class=\"number\">0</span>);</span><br><span class=\"line\">Dispatch Queue 的种类 有几种</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//优先级常量</span></span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_HIGH</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_LOW</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_BACKGROUND</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟执行</span></span><br><span class=\"line\">dispatch_after</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dispatch_time_t</span> time = dispatch_time(DISPATCH_TIME_NOW,<span class=\"number\">3u</span>ll*NSEC_PER_SEC);</span><br></pre></td></tr></table></figure>\n<p>处理线程的API，有涉及到暂停，挂起，恢复，取消，等待、延迟执行，线程组，同步和异步 ，死锁，只执行一次，等系列的概念出现。这些概念大部分是对于处理线程和任务。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dispatch_time_t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_once_t</span></span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_after</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_group_wait</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_release</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_barrier_async</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_async</span> <span class=\"comment\">//异步</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_sync</span> <span class=\"comment\">//同步</span></span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_apply</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_io_create</span><br></pre></td></tr></table></figure>\n<p>当线程过多时候，会引发内存问题。导致系统内存开销过多，效率降低。</p>\n<p>同样多线程在更新相同一个资源的时候，会造成数据竞争的问题。</p>\n<p>同步执行的时候容易出现死锁的问题，导致UI卡顿的问题发生。</p>\n<p>系统提供了标准的Dispatch Queue<br>1.Main Dispatch Queue<br>2.Global Dispatch Queue</p>\n<p>通过dispatch_get_global_queue 可以获取到不同等级的线程<br>通过dispatch_get_main_queue 获取主线程</p>\n<p><strong>刷新UI操作必须在主线程</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dispatch_async(dispatch_get_global_queue(0,0),^&#123;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>  NSInteger <span class=\"built_in\">count</span> = [numOfInstructions<span class=\"meta\">.text</span> intValue]<span class=\"comment\">;</span></span><br><span class=\"line\">   for (int i = <span class=\"number\">0</span><span class=\"comment\">; i&lt;count;i++)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      <span class=\"keyword\">dispatch_async(dispatch_get_main_queue(),^&#123;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>     currentCount<span class=\"meta\">.text</span> =[NSString stringWithFormat:@<span class=\"string\">\"instruction%d\"</span>,i]<span class=\"comment\">;</span></span><br><span class=\"line\">     &#125;)<span class=\"comment\">;</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p><strong>构建一个单例</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(SingleManager) shareManager</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  static dispatch_once_t once;</span><br><span class=\"line\">  static SingleManager *instance;</span><br><span class=\"line\">  dispatch_once(&amp;once,^&#123;</span><br><span class=\"line\">    <span class=\"built_in\"> instance </span>= [[self alloc]init];</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   return instance;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>延迟执行某些任务</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MBProgressHUD *hud = [MBProgressHUD <span class=\"keyword\">showHUDAddedTo:self.view </span>animated:YES]<span class=\"comment\">;</span></span><br><span class=\"line\">hud.labelText =@<span class=\"string\">\"拼命加载中\"</span><span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">dispatch_time_t </span>popTime = <span class=\"keyword\">dispatch_time(DISPATCH_TIME_NOW, </span><span class=\"number\">10</span> *NSEC_PER_SEC)<span class=\"comment\">;</span></span><br><span class=\"line\">   <span class=\"keyword\">dispatch_after(popTime, </span><span class=\"keyword\">dispatch_get_main_queue(), </span>^&#123;</span><br><span class=\"line\">       [MBProgressHUD hideAllHUDsForView:self.view animated:YES]<span class=\"comment\">;</span></span><br><span class=\"line\">   &#125;)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>一些常用的API</p>","more":"<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//异步执行一个线程</span></span><br><span class=\"line\">dispatch_async(<span class=\"built_in\">queue</span>,^&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//创建一个线程</span></span><br><span class=\"line\"><span class=\"keyword\">dispatch_queue_t</span> <span class=\"built_in\">queue</span> =     dispatch_queuq_create(<span class=\"string\">\"com.example.queue\"</span>,<span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取主线程的方法</span></span><br><span class=\"line\">dispatch_get_main_queue();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//优先级获取方法</span></span><br><span class=\"line\"><span class=\"keyword\">dispath_queue_t</span> <span class=\"built_in\">queue</span> = dispatch_get_global_queue(优先级，<span class=\"number\">0</span>);</span><br><span class=\"line\">Dispatch Queue 的种类 有几种</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//优先级常量</span></span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_HIGH</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_DEFAULT</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_LOW</span><br><span class=\"line\">DISPATCH_QUEUE_PRIORITY_BACKGROUND</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//延迟执行</span></span><br><span class=\"line\">dispatch_after</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dispatch_time_t</span> time = dispatch_time(DISPATCH_TIME_NOW,<span class=\"number\">3u</span>ll*NSEC_PER_SEC);</span><br></pre></td></tr></table></figure>\n<p>处理线程的API，有涉及到暂停，挂起，恢复，取消，等待、延迟执行，线程组，同步和异步 ，死锁，只执行一次，等系列的概念出现。这些概念大部分是对于处理线程和任务。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dispatch_time_t</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_once_t</span></span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_after</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_group_wait</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_release</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_barrier_async</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_async</span> <span class=\"comment\">//异步</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">dispatch_sync</span> <span class=\"comment\">//同步</span></span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_apply</span><br><span class=\"line\"></span><br><span class=\"line\">dispatch_io_create</span><br></pre></td></tr></table></figure>\n<p>当线程过多时候，会引发内存问题。导致系统内存开销过多，效率降低。</p>\n<p>同样多线程在更新相同一个资源的时候，会造成数据竞争的问题。</p>\n<p>同步执行的时候容易出现死锁的问题，导致UI卡顿的问题发生。</p>\n<p>系统提供了标准的Dispatch Queue<br>1.Main Dispatch Queue<br>2.Global Dispatch Queue</p>\n<p>通过dispatch_get_global_queue 可以获取到不同等级的线程<br>通过dispatch_get_main_queue 获取主线程</p>\n<p><strong>刷新UI操作必须在主线程</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">dispatch_async(dispatch_get_global_queue(0,0),^&#123;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>  NSInteger <span class=\"built_in\">count</span> = [numOfInstructions<span class=\"meta\">.text</span> intValue]<span class=\"comment\">;</span></span><br><span class=\"line\">   for (int i = <span class=\"number\">0</span><span class=\"comment\">; i&lt;count;i++)</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">      <span class=\"keyword\">dispatch_async(dispatch_get_main_queue(),^&#123;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>     currentCount<span class=\"meta\">.text</span> =[NSString stringWithFormat:@<span class=\"string\">\"instruction%d\"</span>,i]<span class=\"comment\">;</span></span><br><span class=\"line\">     &#125;)<span class=\"comment\">;</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> &#125;)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<p><strong>构建一个单例</strong></p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+(SingleManager) shareManager</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  static dispatch_once_t once;</span><br><span class=\"line\">  static SingleManager *instance;</span><br><span class=\"line\">  dispatch_once(&amp;once,^&#123;</span><br><span class=\"line\">    <span class=\"built_in\"> instance </span>= [[self alloc]init];</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   return instance;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>延迟执行某些任务</strong></p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MBProgressHUD *hud = [MBProgressHUD <span class=\"keyword\">showHUDAddedTo:self.view </span>animated:YES]<span class=\"comment\">;</span></span><br><span class=\"line\">hud.labelText =@<span class=\"string\">\"拼命加载中\"</span><span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">dispatch_time_t </span>popTime = <span class=\"keyword\">dispatch_time(DISPATCH_TIME_NOW, </span><span class=\"number\">10</span> *NSEC_PER_SEC)<span class=\"comment\">;</span></span><br><span class=\"line\">   <span class=\"keyword\">dispatch_after(popTime, </span><span class=\"keyword\">dispatch_get_main_queue(), </span>^&#123;</span><br><span class=\"line\">       [MBProgressHUD hideAllHUDsForView:self.view animated:YES]<span class=\"comment\">;</span></span><br><span class=\"line\">   &#125;)<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>"},{"title":"iPhone开发-Keyboard","date":"2017-11-15T13:17:18.000Z","_content":"\n文本经常需要和键盘打交道，现在记录一下初步的键盘相关的知识点。\n键盘出现和消失促发两个消息。\n\nUIKeyboardWillShowNotification （出现通知）\nUIKeyboardWillHideNotification （隐藏通知）\n\nNSNotificationCenter 监听两个消息即可捕捉到键盘弹出和隐藏的两个消息。\n\n<!-- more -->\n\n### 键盘类型\n\n键盘类型系统提供了几种类型，文本里面只需要设置一下相应的的类型就可以呈现出对应的键盘种类\n\n```\ntextField.keyboardType  = UIKeyboardTypeNumberPad;（数字类型）理财方面的产品里面可以见到这样的设置。\n\n```\n\n### 类型枚举\n```\ntypedef NS_ENUM(NSInteger, UIKeyboardType) {\n    UIKeyboardTypeDefault,                // Default type for the current input method.\n    UIKeyboardTypeASCIICapable,           // Displays a keyboard which can enter ASCII characters, non-ASCII keyboards remain active\n    UIKeyboardTypeNumbersAndPunctuation,  // Numbers and assorted punctuation.\n    UIKeyboardTypeURL,                    // A type optimized for URL entry (shows . / .com prominently).\n    UIKeyboardTypeNumberPad,              // A number pad (0-9). Suitable for PIN entry.\n    UIKeyboardTypePhonePad,               // A phone pad (1-9, *, 0, #, with letters under the numbers).\n    UIKeyboardTypeNamePhonePad,           // A type optimized for entering a person's name or phone number.\n    UIKeyboardTypeEmailAddress,           // A type optimized for multiple email address entry (shows space @ . prominently).\n    UIKeyboardTypeDecimalPad NS_ENUM_AVAILABLE_IOS(4_1),   // A number pad with a decimal point.\n    UIKeyboardTypeTwitter NS_ENUM_AVAILABLE_IOS(5_0),      // A type optimized for twitter text entry (easy access to @ #)\n    UIKeyboardTypeWebSearch NS_ENUM_AVAILABLE_IOS(7_0),    // A default keyboard type with URL-oriented addition (shows space . prominently).\n\n    UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable, // Deprecated\n\n};\n```\n\n```\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardDisappear:) name:UIKeyboardWillHideNotification object:nil];\n\n    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardAppear:) name:UIKeyboardWillShowNotification object:nil];\n\n    UITextField *textField  = [[UITextField alloc] init];\n    [self.view addSubview:textField];\n    textField.frame  = CGRectMake(0, 160, 200, 28);\n\n    textField.text  = @\"我们来了\";\n    textField.backgroundColor = [UIColor greenColor];\n    textField.keyboardType  = UIKeyboardTypeNumberPad;\n\n}\n\n- (void) keyboardDisappear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘隐藏消息\");\n\n}\n- (void) keyboardAppear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘出现消息\");\n\n}\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardDisappear:) name:UIKeyboardWillHideNotification object:nil];\n\n    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardAppear:) name:UIKeyboardWillShowNotification object:nil];\n\n    UITextField *textField  = [[UITextField alloc] init];\n    [self.view addSubview:textField];\n    textField.frame  = CGRectMake(0, 160, 200, 28);\n\n    textField.text  = @\"我们来了\";\n    textField.backgroundColor = [UIColor greenColor];\n    textField.keyboardType  = UIKeyboardTypeNumberPad;\n\n}\n\n- (void) keyboardDisappear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘隐藏消息\");\n\n}\n- (void) keyboardAppear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘出现消息\");\n\n}\n```\n","source":"_posts/iPhone开发-Keyboard.md","raw":"---\ntitle: iPhone开发-Keyboard\ndate: 2017-11-15 21:17:18\ntags: [ios]\ncategories: ios\n---\n\n文本经常需要和键盘打交道，现在记录一下初步的键盘相关的知识点。\n键盘出现和消失促发两个消息。\n\nUIKeyboardWillShowNotification （出现通知）\nUIKeyboardWillHideNotification （隐藏通知）\n\nNSNotificationCenter 监听两个消息即可捕捉到键盘弹出和隐藏的两个消息。\n\n<!-- more -->\n\n### 键盘类型\n\n键盘类型系统提供了几种类型，文本里面只需要设置一下相应的的类型就可以呈现出对应的键盘种类\n\n```\ntextField.keyboardType  = UIKeyboardTypeNumberPad;（数字类型）理财方面的产品里面可以见到这样的设置。\n\n```\n\n### 类型枚举\n```\ntypedef NS_ENUM(NSInteger, UIKeyboardType) {\n    UIKeyboardTypeDefault,                // Default type for the current input method.\n    UIKeyboardTypeASCIICapable,           // Displays a keyboard which can enter ASCII characters, non-ASCII keyboards remain active\n    UIKeyboardTypeNumbersAndPunctuation,  // Numbers and assorted punctuation.\n    UIKeyboardTypeURL,                    // A type optimized for URL entry (shows . / .com prominently).\n    UIKeyboardTypeNumberPad,              // A number pad (0-9). Suitable for PIN entry.\n    UIKeyboardTypePhonePad,               // A phone pad (1-9, *, 0, #, with letters under the numbers).\n    UIKeyboardTypeNamePhonePad,           // A type optimized for entering a person's name or phone number.\n    UIKeyboardTypeEmailAddress,           // A type optimized for multiple email address entry (shows space @ . prominently).\n    UIKeyboardTypeDecimalPad NS_ENUM_AVAILABLE_IOS(4_1),   // A number pad with a decimal point.\n    UIKeyboardTypeTwitter NS_ENUM_AVAILABLE_IOS(5_0),      // A type optimized for twitter text entry (easy access to @ #)\n    UIKeyboardTypeWebSearch NS_ENUM_AVAILABLE_IOS(7_0),    // A default keyboard type with URL-oriented addition (shows space . prominently).\n\n    UIKeyboardTypeAlphabet = UIKeyboardTypeASCIICapable, // Deprecated\n\n};\n```\n\n```\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardDisappear:) name:UIKeyboardWillHideNotification object:nil];\n\n    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardAppear:) name:UIKeyboardWillShowNotification object:nil];\n\n    UITextField *textField  = [[UITextField alloc] init];\n    [self.view addSubview:textField];\n    textField.frame  = CGRectMake(0, 160, 200, 28);\n\n    textField.text  = @\"我们来了\";\n    textField.backgroundColor = [UIColor greenColor];\n    textField.keyboardType  = UIKeyboardTypeNumberPad;\n\n}\n\n- (void) keyboardDisappear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘隐藏消息\");\n\n}\n- (void) keyboardAppear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘出现消息\");\n\n}\n\n[[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardDisappear:) name:UIKeyboardWillHideNotification object:nil];\n\n    [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(keyboardAppear:) name:UIKeyboardWillShowNotification object:nil];\n\n    UITextField *textField  = [[UITextField alloc] init];\n    [self.view addSubview:textField];\n    textField.frame  = CGRectMake(0, 160, 200, 28);\n\n    textField.text  = @\"我们来了\";\n    textField.backgroundColor = [UIColor greenColor];\n    textField.keyboardType  = UIKeyboardTypeNumberPad;\n\n}\n\n- (void) keyboardDisappear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘隐藏消息\");\n\n}\n- (void) keyboardAppear:(NSNotification *) notification\n{\n\n    NSLog(@\"键盘出现消息\");\n\n}\n```\n","slug":"iPhone开发-Keyboard","published":1,"updated":"2017-11-15T13:19:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukm001vpev2amvoe69s","content":"<p>文本经常需要和键盘打交道，现在记录一下初步的键盘相关的知识点。<br>键盘出现和消失促发两个消息。</p>\n<p>UIKeyboardWillShowNotification （出现通知）<br>UIKeyboardWillHideNotification （隐藏通知）</p>\n<p>NSNotificationCenter 监听两个消息即可捕捉到键盘弹出和隐藏的两个消息。</p>\n<a id=\"more\"></a>\n<h3 id=\"键盘类型\"><a href=\"#键盘类型\" class=\"headerlink\" title=\"键盘类型\"></a>键盘类型</h3><p>键盘类型系统提供了几种类型，文本里面只需要设置一下相应的的类型就可以呈现出对应的键盘种类</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textField.keyboardType  = UIKeyboardTypeNumberPad<span class=\"comment\">;（数字类型）理财方面的产品里面可以见到这样的设置。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"类型枚举\"><a href=\"#类型枚举\" class=\"headerlink\" title=\"类型枚举\"></a>类型枚举</h3><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>, <span class=\"type\">UIKeyboardType</span>) &#123;</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeDefault</span>,                // <span class=\"type\">Default</span> type for the current input method.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeASCIICapable</span>,           // <span class=\"type\">Displays</span> a keyboard which can enter <span class=\"type\">ASCII</span> characters, non-<span class=\"type\">ASCII</span> keyboards remain active</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNumbersAndPunctuation</span>,  // <span class=\"type\">Numbers</span> and assorted punctuation.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeURL</span>,                    // <span class=\"type\">A</span> type optimized for <span class=\"type\">URL</span> entry (shows . / .com prominently).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNumberPad</span>,              // <span class=\"type\">A</span> number pad (0-9). <span class=\"type\">Suitable</span> for <span class=\"type\">PIN</span> entry.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypePhonePad</span>,               // <span class=\"type\">A</span> phone pad (1-9, *, 0, #, with letters under the numbers).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNamePhonePad</span>,           // <span class=\"type\">A</span> type optimized for entering a person's name or phone number.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeEmailAddress</span>,           // <span class=\"type\">A</span> type optimized for multiple email address entry (shows space @ . prominently).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeDecimalPad</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(4_1)</span>,   // <span class=\"type\">A</span> number pad with a decimal point.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeTwitter</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(5_0)</span>,      // <span class=\"type\">A</span> type optimized for twitter text entry (easy access to @ #)</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeWebSearch</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(7_0)</span>,    // <span class=\"type\">A</span> default keyboard type with <span class=\"type\">URL</span>-oriented addition (shows space . prominently).</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeAlphabet</span> = <span class=\"type\">UIKeyboardTypeASCIICapable</span>, // <span class=\"type\">Deprecated</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardDisappear:) name:<span class=\"built_in\">UIKeyboardWillHideNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardAppear:) name:<span class=\"built_in\">UIKeyboardWillShowNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITextField</span> *textField  = [[<span class=\"built_in\">UITextField</span> alloc] init];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:textField];</span><br><span class=\"line\">    textField.frame  = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">28</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    textField.text  = <span class=\"string\">@\"我们来了\"</span>;</span><br><span class=\"line\">    textField.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">    textField.keyboardType  = <span class=\"built_in\">UIKeyboardTypeNumberPad</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardDisappear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘隐藏消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardAppear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘出现消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardDisappear:) name:<span class=\"built_in\">UIKeyboardWillHideNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardAppear:) name:<span class=\"built_in\">UIKeyboardWillShowNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITextField</span> *textField  = [[<span class=\"built_in\">UITextField</span> alloc] init];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:textField];</span><br><span class=\"line\">    textField.frame  = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">28</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    textField.text  = <span class=\"string\">@\"我们来了\"</span>;</span><br><span class=\"line\">    textField.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">    textField.keyboardType  = <span class=\"built_in\">UIKeyboardTypeNumberPad</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardDisappear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘隐藏消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardAppear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘出现消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>文本经常需要和键盘打交道，现在记录一下初步的键盘相关的知识点。<br>键盘出现和消失促发两个消息。</p>\n<p>UIKeyboardWillShowNotification （出现通知）<br>UIKeyboardWillHideNotification （隐藏通知）</p>\n<p>NSNotificationCenter 监听两个消息即可捕捉到键盘弹出和隐藏的两个消息。</p>","more":"<h3 id=\"键盘类型\"><a href=\"#键盘类型\" class=\"headerlink\" title=\"键盘类型\"></a>键盘类型</h3><p>键盘类型系统提供了几种类型，文本里面只需要设置一下相应的的类型就可以呈现出对应的键盘种类</p>\n<figure class=\"highlight abnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">textField.keyboardType  = UIKeyboardTypeNumberPad<span class=\"comment\">;（数字类型）理财方面的产品里面可以见到这样的设置。</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"类型枚举\"><a href=\"#类型枚举\" class=\"headerlink\" title=\"类型枚举\"></a>类型枚举</h3><figure class=\"highlight elm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">typedef <span class=\"type\">NS_ENUM</span>(<span class=\"type\">NSInteger</span>, <span class=\"type\">UIKeyboardType</span>) &#123;</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeDefault</span>,                // <span class=\"type\">Default</span> type for the current input method.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeASCIICapable</span>,           // <span class=\"type\">Displays</span> a keyboard which can enter <span class=\"type\">ASCII</span> characters, non-<span class=\"type\">ASCII</span> keyboards remain active</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNumbersAndPunctuation</span>,  // <span class=\"type\">Numbers</span> and assorted punctuation.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeURL</span>,                    // <span class=\"type\">A</span> type optimized for <span class=\"type\">URL</span> entry (shows . / .com prominently).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNumberPad</span>,              // <span class=\"type\">A</span> number pad (0-9). <span class=\"type\">Suitable</span> for <span class=\"type\">PIN</span> entry.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypePhonePad</span>,               // <span class=\"type\">A</span> phone pad (1-9, *, 0, #, with letters under the numbers).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeNamePhonePad</span>,           // <span class=\"type\">A</span> type optimized for entering a person's name or phone number.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeEmailAddress</span>,           // <span class=\"type\">A</span> type optimized for multiple email address entry (shows space @ . prominently).</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeDecimalPad</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(4_1)</span>,   // <span class=\"type\">A</span> number pad with a decimal point.</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeTwitter</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(5_0)</span>,      // <span class=\"type\">A</span> type optimized for twitter text entry (easy access to @ #)</span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeWebSearch</span> <span class=\"type\">NS_ENUM_AVAILABLE_IOS(7_0)</span>,    // <span class=\"type\">A</span> default keyboard type with <span class=\"type\">URL</span>-oriented addition (shows space . prominently).</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"type\">UIKeyboardTypeAlphabet</span> = <span class=\"type\">UIKeyboardTypeASCIICapable</span>, // <span class=\"type\">Deprecated</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardDisappear:) name:<span class=\"built_in\">UIKeyboardWillHideNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardAppear:) name:<span class=\"built_in\">UIKeyboardWillShowNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITextField</span> *textField  = [[<span class=\"built_in\">UITextField</span> alloc] init];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:textField];</span><br><span class=\"line\">    textField.frame  = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">28</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    textField.text  = <span class=\"string\">@\"我们来了\"</span>;</span><br><span class=\"line\">    textField.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">    textField.keyboardType  = <span class=\"built_in\">UIKeyboardTypeNumberPad</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardDisappear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘隐藏消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardAppear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘出现消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardDisappear:) name:<span class=\"built_in\">UIKeyboardWillHideNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter]addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(keyboardAppear:) name:<span class=\"built_in\">UIKeyboardWillShowNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">UITextField</span> *textField  = [[<span class=\"built_in\">UITextField</span> alloc] init];</span><br><span class=\"line\">    [<span class=\"keyword\">self</span>.view addSubview:textField];</span><br><span class=\"line\">    textField.frame  = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">160</span>, <span class=\"number\">200</span>, <span class=\"number\">28</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    textField.text  = <span class=\"string\">@\"我们来了\"</span>;</span><br><span class=\"line\">    textField.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">    textField.keyboardType  = <span class=\"built_in\">UIKeyboardTypeNumberPad</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardDisappear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘隐藏消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">- (<span class=\"keyword\">void</span>) keyboardAppear:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"键盘出现消息\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"iPhone开发-UIImage,CIImage,CGImageRef","date":"2017-11-15T12:47:08.000Z","_content":"\nUIImage 有很多有用的东西，前段时间接触了coreImage的API，发现有一个CIImage的东西，同样还有一个CGImage的东西，这三者总是可以切换起来，多少让人觉得这个东西很能耐。\nIOS编程揭秘 书中记录着如下一段话。\n\n```\nUIImage类的Core Graphics\n版本是CGImage（CGImageRef）这两个类之间很容易进行转换，因为一个UIImage类有一个CGImage的属性“\n```\n\n<!-- more -->\n\n### 1.创建过程\nUIImage 常规创建过程\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\n```\nCGImage的创建过程\n```\nCGImageRef imageRef = CGImageCreateWithImageInRect(image.CGImage,CGRectMake(0,0,size.width,size.height));\n\n```\n或者\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\nCGImageRef imageRef = [image CGImage];\n```\n\nCIImage的创建过程\n\n```\nNSString *path = [[NSBundle mainBundle] pathForResource:@\"bbg\" ofType:@\"jpg\"];\nNSURL *myURL = [NSURL fileURLWithPath:path];\n\nCIImage *ciImage = [CIImage imageWithContentsOfURL:myURL];\n```\n\n### 2.相互转换\n\nUIImage， CGImageRef， CIImage 三者之间可以通过一些联系进行转换\n\n#### 2.1 UIImage 转换CGImageRef\nUIImage 类当中包含了CGImage的属性，所以很方便地就能转换，方法如下\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\nCGImageRef imageRef = [image CGImage];\n```\n\n#### 2.2 CGImageRef 转换UIImage\nUIImage里面包含了一个方法imageWithCGImage，如果知道了CGImage，则这样子也可以创建得到UIIamge类，在上面我们可以看到关系 UIImage 通过属性得到CGImageRef，同样地两者也可以关联起来。\n\nUIImage—>CGImageRef\nCGImageRef –> UIImage\n\n```\nUIImage *uiImage =[UIImage imageWithCGImage:cgImage];\n```\n#### 2.3 CIImage 转换CGImageRef\nCIContext 当中有一个方法createCGImage，可以创建得到CGImageRef，换句话可知道CIImage 可以通过其他方式转换CGImageRef\n```\nCIContext *context = [CIContext contextWithOptions:nil];                \n CIImage *ciImage = [CIImage imageWithContentsOfURL:myURL];                \n filter = [filterWithName:@\"CISepiaTone\"];            \n [filter setValue:ciImage forKey:kCIInputImageKey];\n [filter setValue:@0.8f forKey:kCIInputIntensityKey];\n CIImage *outputImg = [filter outputImage];   \n CGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];\n```\n\n最主要的一句\n```\nCGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];\n\n```\n\n#### 2.4 UIImage 转换CIImage\n```\nCIImage  *ciImage = [UIImage imageNamed:@\"test.png\"].CIImage\nUIImage *image = [[UIImage alloc] initWithCIImage:ciImage];\n```\n\n但是采用这种方式转换，CIImage的值会是nil，\n相反 采用CIImage 的initWithCGImage初始化的方式 则有值，很奇怪\n```\nUIImage *image = [UIImage imageNamed:@\"test.png\"];\nCIImage *ciImage = [[CIImage alloc]initWithCGImage:image.CGImage];\n```\n由此可见，三者都可以实现转换了，通过直接或者间接把他们联系起来。\nUIImage –> CGImageRef –> CIImage\nUIImage <– CGImageRef <– CIImage\n","source":"_posts/iPhone开发-UIImage-CIImage-CGImageRef.md","raw":"---\ntitle: 'iPhone开发-UIImage,CIImage,CGImageRef'\ndate: 2017-11-15 20:47:08\ntags: [ios]\ncategories: ios\n---\n\nUIImage 有很多有用的东西，前段时间接触了coreImage的API，发现有一个CIImage的东西，同样还有一个CGImage的东西，这三者总是可以切换起来，多少让人觉得这个东西很能耐。\nIOS编程揭秘 书中记录着如下一段话。\n\n```\nUIImage类的Core Graphics\n版本是CGImage（CGImageRef）这两个类之间很容易进行转换，因为一个UIImage类有一个CGImage的属性“\n```\n\n<!-- more -->\n\n### 1.创建过程\nUIImage 常规创建过程\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\n```\nCGImage的创建过程\n```\nCGImageRef imageRef = CGImageCreateWithImageInRect(image.CGImage,CGRectMake(0,0,size.width,size.height));\n\n```\n或者\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\nCGImageRef imageRef = [image CGImage];\n```\n\nCIImage的创建过程\n\n```\nNSString *path = [[NSBundle mainBundle] pathForResource:@\"bbg\" ofType:@\"jpg\"];\nNSURL *myURL = [NSURL fileURLWithPath:path];\n\nCIImage *ciImage = [CIImage imageWithContentsOfURL:myURL];\n```\n\n### 2.相互转换\n\nUIImage， CGImageRef， CIImage 三者之间可以通过一些联系进行转换\n\n#### 2.1 UIImage 转换CGImageRef\nUIImage 类当中包含了CGImage的属性，所以很方便地就能转换，方法如下\n```\nUIImage *image =[ UIImage imageNamed:@\"xx.png\"];\nCGImageRef imageRef = [image CGImage];\n```\n\n#### 2.2 CGImageRef 转换UIImage\nUIImage里面包含了一个方法imageWithCGImage，如果知道了CGImage，则这样子也可以创建得到UIIamge类，在上面我们可以看到关系 UIImage 通过属性得到CGImageRef，同样地两者也可以关联起来。\n\nUIImage—>CGImageRef\nCGImageRef –> UIImage\n\n```\nUIImage *uiImage =[UIImage imageWithCGImage:cgImage];\n```\n#### 2.3 CIImage 转换CGImageRef\nCIContext 当中有一个方法createCGImage，可以创建得到CGImageRef，换句话可知道CIImage 可以通过其他方式转换CGImageRef\n```\nCIContext *context = [CIContext contextWithOptions:nil];                \n CIImage *ciImage = [CIImage imageWithContentsOfURL:myURL];                \n filter = [filterWithName:@\"CISepiaTone\"];            \n [filter setValue:ciImage forKey:kCIInputImageKey];\n [filter setValue:@0.8f forKey:kCIInputIntensityKey];\n CIImage *outputImg = [filter outputImage];   \n CGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];\n```\n\n最主要的一句\n```\nCGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];\n\n```\n\n#### 2.4 UIImage 转换CIImage\n```\nCIImage  *ciImage = [UIImage imageNamed:@\"test.png\"].CIImage\nUIImage *image = [[UIImage alloc] initWithCIImage:ciImage];\n```\n\n但是采用这种方式转换，CIImage的值会是nil，\n相反 采用CIImage 的initWithCGImage初始化的方式 则有值，很奇怪\n```\nUIImage *image = [UIImage imageNamed:@\"test.png\"];\nCIImage *ciImage = [[CIImage alloc]initWithCGImage:image.CGImage];\n```\n由此可见，三者都可以实现转换了，通过直接或者间接把他们联系起来。\nUIImage –> CGImageRef –> CIImage\nUIImage <– CGImageRef <– CIImage\n","slug":"iPhone开发-UIImage-CIImage-CGImageRef","published":1,"updated":"2017-11-15T12:54:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuko001zpev2j16ijzcs","content":"<p>UIImage 有很多有用的东西，前段时间接触了coreImage的API，发现有一个CIImage的东西，同样还有一个CGImage的东西，这三者总是可以切换起来，多少让人觉得这个东西很能耐。<br>IOS编程揭秘 书中记录着如下一段话。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span>类的Core Graphics</span><br><span class=\"line\">版本是<span class=\"built_in\">CGImage</span>（<span class=\"built_in\">CGImageRef</span>）这两个类之间很容易进行转换，因为一个<span class=\"built_in\">UIImage</span>类有一个<span class=\"built_in\">CGImage</span>的属性“</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"1-创建过程\"><a href=\"#1-创建过程\" class=\"headerlink\" title=\"1.创建过程\"></a>1.创建过程</h3><p>UIImage 常规创建过程<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br></pre></td></tr></table></figure></p>\n<p>CGImage的创建过程<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGImageRef imageRef = CGImageCreateWithImageInRect(<span class=\"built_in\">image</span>.CGImage,CGRectMake(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"built_in\">size</span>.<span class=\"built_in\">width</span>,<span class=\"built_in\">size</span>.<span class=\"built_in\">height</span>));</span><br></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CGImageRef</span> imageRef = [image <span class=\"built_in\">CGImage</span>];</span><br></pre></td></tr></table></figure></p>\n<p>CIImage的创建过程</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSString</span> *path = [[<span class=\"built_in\">NSBundle</span> mainBundle] pathForResource:<span class=\"string\">@\"bbg\"</span> ofType:<span class=\"string\">@\"jpg\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *myURL = [<span class=\"built_in\">NSURL</span> fileURLWithPath:path];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">CIImage</span> *ciImage = [<span class=\"built_in\">CIImage</span> imageWithContentsOfURL:myURL];</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-相互转换\"><a href=\"#2-相互转换\" class=\"headerlink\" title=\"2.相互转换\"></a>2.相互转换</h3><p>UIImage， CGImageRef， CIImage 三者之间可以通过一些联系进行转换</p>\n<h4 id=\"2-1-UIImage-转换CGImageRef\"><a href=\"#2-1-UIImage-转换CGImageRef\" class=\"headerlink\" title=\"2.1 UIImage 转换CGImageRef\"></a>2.1 UIImage 转换CGImageRef</h4><p>UIImage 类当中包含了CGImage的属性，所以很方便地就能转换，方法如下<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CGImageRef</span> imageRef = [image <span class=\"built_in\">CGImage</span>];</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-CGImageRef-转换UIImage\"><a href=\"#2-2-CGImageRef-转换UIImage\" class=\"headerlink\" title=\"2.2 CGImageRef 转换UIImage\"></a>2.2 CGImageRef 转换UIImage</h4><p>UIImage里面包含了一个方法imageWithCGImage，如果知道了CGImage，则这样子也可以创建得到UIIamge类，在上面我们可以看到关系 UIImage 通过属性得到CGImageRef，同样地两者也可以关联起来。</p>\n<p>UIImage—&gt;CGImageRef<br>CGImageRef –&gt; UIImage</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *uiImage =[<span class=\"built_in\">UIImage</span> imageWithCGImage:cgImage];</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-CIImage-转换CGImageRef\"><a href=\"#2-3-CIImage-转换CGImageRef\" class=\"headerlink\" title=\"2.3 CIImage 转换CGImageRef\"></a>2.3 CIImage 转换CGImageRef</h4><p>CIContext 当中有一个方法createCGImage，可以创建得到CGImageRef，换句话可知道CIImage 可以通过其他方式转换CGImageRef<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CIContext <span class=\"number\">*c</span>ontext = [CIContext contextWithOptions:nil];                </span><br><span class=\"line\"> CIImage <span class=\"number\">*c</span>iImage = [CIImage imageWithContentsOfURL:myURL];                </span><br><span class=\"line\"><span class=\"built_in\"> filter </span>= [filterWithName:@<span class=\"string\">\"CISepiaTone\"</span>];            </span><br><span class=\"line\"> [filter setValue:ciImage forKey:kCIInputImageKey];</span><br><span class=\"line\"> [filter setValue:@0.8f forKey:kCIInputIntensityKey];</span><br><span class=\"line\"> CIImage *outputImg = [filter outputImage];   </span><br><span class=\"line\"> CGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];</span><br></pre></td></tr></table></figure></p>\n<p>最主要的一句<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">CGImageRef cgImage</span> = [context createCGImage:outputImg fromRect:[outputImg extent]];</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-4-UIImage-转换CIImage\"><a href=\"#2-4-UIImage-转换CIImage\" class=\"headerlink\" title=\"2.4 UIImage 转换CIImage\"></a>2.4 UIImage 转换CIImage</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CIImage</span>  *ciImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"test.png\"</span>].CIImage</span><br><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = [[<span class=\"built_in\">UIImage</span> alloc] initWithCIImage:ciImage];</span><br></pre></td></tr></table></figure>\n<p>但是采用这种方式转换，CIImage的值会是nil，<br>相反 采用CIImage 的initWithCGImage初始化的方式 则有值，很奇怪<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"test.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CIImage</span> *ciImage = [[<span class=\"built_in\">CIImage</span> alloc]initWithCGImage:image.CGImage];</span><br></pre></td></tr></table></figure></p>\n<p>由此可见，三者都可以实现转换了，通过直接或者间接把他们联系起来。<br>UIImage –&gt; CGImageRef –&gt; CIImage<br>UIImage &lt;– CGImageRef &lt;– CIImage</p>\n","site":{"data":{}},"excerpt":"<p>UIImage 有很多有用的东西，前段时间接触了coreImage的API，发现有一个CIImage的东西，同样还有一个CGImage的东西，这三者总是可以切换起来，多少让人觉得这个东西很能耐。<br>IOS编程揭秘 书中记录着如下一段话。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span>类的Core Graphics</span><br><span class=\"line\">版本是<span class=\"built_in\">CGImage</span>（<span class=\"built_in\">CGImageRef</span>）这两个类之间很容易进行转换，因为一个<span class=\"built_in\">UIImage</span>类有一个<span class=\"built_in\">CGImage</span>的属性“</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"1-创建过程\"><a href=\"#1-创建过程\" class=\"headerlink\" title=\"1.创建过程\"></a>1.创建过程</h3><p>UIImage 常规创建过程<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br></pre></td></tr></table></figure></p>\n<p>CGImage的创建过程<br><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGImageRef imageRef = CGImageCreateWithImageInRect(<span class=\"built_in\">image</span>.CGImage,CGRectMake(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"built_in\">size</span>.<span class=\"built_in\">width</span>,<span class=\"built_in\">size</span>.<span class=\"built_in\">height</span>));</span><br></pre></td></tr></table></figure></p>\n<p>或者<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CGImageRef</span> imageRef = [image <span class=\"built_in\">CGImage</span>];</span><br></pre></td></tr></table></figure></p>\n<p>CIImage的创建过程</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSString</span> *path = [[<span class=\"built_in\">NSBundle</span> mainBundle] pathForResource:<span class=\"string\">@\"bbg\"</span> ofType:<span class=\"string\">@\"jpg\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *myURL = [<span class=\"built_in\">NSURL</span> fileURLWithPath:path];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">CIImage</span> *ciImage = [<span class=\"built_in\">CIImage</span> imageWithContentsOfURL:myURL];</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-相互转换\"><a href=\"#2-相互转换\" class=\"headerlink\" title=\"2.相互转换\"></a>2.相互转换</h3><p>UIImage， CGImageRef， CIImage 三者之间可以通过一些联系进行转换</p>\n<h4 id=\"2-1-UIImage-转换CGImageRef\"><a href=\"#2-1-UIImage-转换CGImageRef\" class=\"headerlink\" title=\"2.1 UIImage 转换CGImageRef\"></a>2.1 UIImage 转换CGImageRef</h4><p>UIImage 类当中包含了CGImage的属性，所以很方便地就能转换，方法如下<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image =[ <span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"xx.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CGImageRef</span> imageRef = [image <span class=\"built_in\">CGImage</span>];</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-2-CGImageRef-转换UIImage\"><a href=\"#2-2-CGImageRef-转换UIImage\" class=\"headerlink\" title=\"2.2 CGImageRef 转换UIImage\"></a>2.2 CGImageRef 转换UIImage</h4><p>UIImage里面包含了一个方法imageWithCGImage，如果知道了CGImage，则这样子也可以创建得到UIIamge类，在上面我们可以看到关系 UIImage 通过属性得到CGImageRef，同样地两者也可以关联起来。</p>\n<p>UIImage—&gt;CGImageRef<br>CGImageRef –&gt; UIImage</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *uiImage =[<span class=\"built_in\">UIImage</span> imageWithCGImage:cgImage];</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-3-CIImage-转换CGImageRef\"><a href=\"#2-3-CIImage-转换CGImageRef\" class=\"headerlink\" title=\"2.3 CIImage 转换CGImageRef\"></a>2.3 CIImage 转换CGImageRef</h4><p>CIContext 当中有一个方法createCGImage，可以创建得到CGImageRef，换句话可知道CIImage 可以通过其他方式转换CGImageRef<br><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CIContext <span class=\"number\">*c</span>ontext = [CIContext contextWithOptions:nil];                </span><br><span class=\"line\"> CIImage <span class=\"number\">*c</span>iImage = [CIImage imageWithContentsOfURL:myURL];                </span><br><span class=\"line\"><span class=\"built_in\"> filter </span>= [filterWithName:@<span class=\"string\">\"CISepiaTone\"</span>];            </span><br><span class=\"line\"> [filter setValue:ciImage forKey:kCIInputImageKey];</span><br><span class=\"line\"> [filter setValue:@0.8f forKey:kCIInputIntensityKey];</span><br><span class=\"line\"> CIImage *outputImg = [filter outputImage];   </span><br><span class=\"line\"> CGImageRef cgImage = [context createCGImage:outputImg fromRect:[outputImg extent]];</span><br></pre></td></tr></table></figure></p>\n<p>最主要的一句<br><figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">CGImageRef cgImage</span> = [context createCGImage:outputImg fromRect:[outputImg extent]];</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-4-UIImage-转换CIImage\"><a href=\"#2-4-UIImage-转换CIImage\" class=\"headerlink\" title=\"2.4 UIImage 转换CIImage\"></a>2.4 UIImage 转换CIImage</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CIImage</span>  *ciImage = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"test.png\"</span>].CIImage</span><br><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = [[<span class=\"built_in\">UIImage</span> alloc] initWithCIImage:ciImage];</span><br></pre></td></tr></table></figure>\n<p>但是采用这种方式转换，CIImage的值会是nil，<br>相反 采用CIImage 的initWithCGImage初始化的方式 则有值，很奇怪<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = [<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"test.png\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">CIImage</span> *ciImage = [[<span class=\"built_in\">CIImage</span> alloc]initWithCGImage:image.CGImage];</span><br></pre></td></tr></table></figure></p>\n<p>由此可见，三者都可以实现转换了，通过直接或者间接把他们联系起来。<br>UIImage –&gt; CGImageRef –&gt; CIImage<br>UIImage &lt;– CGImageRef &lt;– CIImage</p>"},{"title":"iPhone开发-UILabel","date":"2017-11-15T12:38:52.000Z","_content":"\nUILable 的用法涉及内容有如下\n\n1. 创建与显示\n2. 文本内容和字体设置\n3. 背景颜色指定\n4. 计算高度。\n5. 行数指定和计算\n\nUIlabel可以显示指定的行数，设置numberOfLines =0 则为不限制行数，因为UIlabel不是Icontrol的方面，没有addTarget和block等方法处理相应的行为机制，但支持扩展手势触控等方法处理点击，不过对于html 超链接响应情况，在之前看过是需要采用第三方处理机制处理。\n\n在日常使用过程，对于文本方法计算高度的用法很常用，ios提供相应计算方法。如属于NSString的类别（NSStringDrawing.h）该类为此提供相应处理解决方案，提供计算高度和文本大小的方法。\n注意到 过去ios6的版本 提供sizeWithFont方法 在ios 7.0 已经不生效，需要改成其他方法处理。boundingRectWithSize 后续推荐的方式。\n\n```\n- (CGSize)sizeWithAttributes:(NSDictionary *)attrs NS_AVAILABLE_IOS(7_0);\n\n```\n\n```\n- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary *)attributes context:(NSStringDrawingContext *)context NS_AVAILABLE_IOS(7_0);\n\n```\n\n```\n    self.label = [[UILabel alloc]initWithFrame:CGRectMake(85, 0, self.view.frame.size.width-85, 70)];\n    [self.panel addSubview:self.label];\n    self.label.text = @\"这个人很懒，什么都没留下\";\n    self.label.numberOfLines = 3;\n    self.label.lineBreakMode = NSLineBreakByCharWrapping;\n    self.label.font =[UIFont systemFontOfSize:14];\n   // self.label.userInteractionEnabled = YES; 需要的时候才打开\n    [self.view addSubview:self.panel];\n```\n\n下面计算一下高度，当采用默认字体的时候，字体号为17，其高度约为20, 字体为14的时候，高度约为16~17之间\n\n\n```\n字体号：17 ，文本高：20\n字体号：16 ，文本高：19\n字体号：15 ，文本高：17~18 之间\n字体号：14， 文本高：16~17 之间\n```\n\n这些字体是默认字体，要是采用其他字体或者设置粗体 ，估计值会受到一些浮动影响。\n\n```\n[self getTextHeight:17 width:self.view.frame.size.width-85];   \n-(void) getTextHeight:(CGFloat) fontSize width:(CGFloat) textWidth\n{\n\n    NSDictionary *dic =@{NSFontAttributeName:[UIFont systemFontOfSize:fontSize]};\n    CGSize curSize = CGSizeMake(textWidth, MAXFLOAT);\n    CGRect rect =   [self.label.text boundingRectWithSize:curSize\n                                                  options:NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading\n                                               attributes:dic context:nil];\n\n    NSString *str = NSStringFromCGRect(rect);\n    NSLog(@\"%@\",str);\n\n}\n```\n","source":"_posts/iPhone开发-UILabel.md","raw":"---\ntitle: iPhone开发-UILabel\ndate: 2017-11-15 20:38:52\ntags: [ios]\ncategories: ios\n---\n\nUILable 的用法涉及内容有如下\n\n1. 创建与显示\n2. 文本内容和字体设置\n3. 背景颜色指定\n4. 计算高度。\n5. 行数指定和计算\n\nUIlabel可以显示指定的行数，设置numberOfLines =0 则为不限制行数，因为UIlabel不是Icontrol的方面，没有addTarget和block等方法处理相应的行为机制，但支持扩展手势触控等方法处理点击，不过对于html 超链接响应情况，在之前看过是需要采用第三方处理机制处理。\n\n在日常使用过程，对于文本方法计算高度的用法很常用，ios提供相应计算方法。如属于NSString的类别（NSStringDrawing.h）该类为此提供相应处理解决方案，提供计算高度和文本大小的方法。\n注意到 过去ios6的版本 提供sizeWithFont方法 在ios 7.0 已经不生效，需要改成其他方法处理。boundingRectWithSize 后续推荐的方式。\n\n```\n- (CGSize)sizeWithAttributes:(NSDictionary *)attrs NS_AVAILABLE_IOS(7_0);\n\n```\n\n```\n- (CGRect)boundingRectWithSize:(CGSize)size options:(NSStringDrawingOptions)options attributes:(NSDictionary *)attributes context:(NSStringDrawingContext *)context NS_AVAILABLE_IOS(7_0);\n\n```\n\n```\n    self.label = [[UILabel alloc]initWithFrame:CGRectMake(85, 0, self.view.frame.size.width-85, 70)];\n    [self.panel addSubview:self.label];\n    self.label.text = @\"这个人很懒，什么都没留下\";\n    self.label.numberOfLines = 3;\n    self.label.lineBreakMode = NSLineBreakByCharWrapping;\n    self.label.font =[UIFont systemFontOfSize:14];\n   // self.label.userInteractionEnabled = YES; 需要的时候才打开\n    [self.view addSubview:self.panel];\n```\n\n下面计算一下高度，当采用默认字体的时候，字体号为17，其高度约为20, 字体为14的时候，高度约为16~17之间\n\n\n```\n字体号：17 ，文本高：20\n字体号：16 ，文本高：19\n字体号：15 ，文本高：17~18 之间\n字体号：14， 文本高：16~17 之间\n```\n\n这些字体是默认字体，要是采用其他字体或者设置粗体 ，估计值会受到一些浮动影响。\n\n```\n[self getTextHeight:17 width:self.view.frame.size.width-85];   \n-(void) getTextHeight:(CGFloat) fontSize width:(CGFloat) textWidth\n{\n\n    NSDictionary *dic =@{NSFontAttributeName:[UIFont systemFontOfSize:fontSize]};\n    CGSize curSize = CGSizeMake(textWidth, MAXFLOAT);\n    CGRect rect =   [self.label.text boundingRectWithSize:curSize\n                                                  options:NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading\n                                               attributes:dic context:nil];\n\n    NSString *str = NSStringFromCGRect(rect);\n    NSLog(@\"%@\",str);\n\n}\n```\n","slug":"iPhone开发-UILabel","published":1,"updated":"2017-11-15T12:43:20.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukq0022pev2uwwm9vrp","content":"<p>UILable 的用法涉及内容有如下</p>\n<ol>\n<li>创建与显示</li>\n<li>文本内容和字体设置</li>\n<li>背景颜色指定</li>\n<li>计算高度。</li>\n<li>行数指定和计算</li>\n</ol>\n<p>UIlabel可以显示指定的行数，设置numberOfLines =0 则为不限制行数，因为UIlabel不是Icontrol的方面，没有addTarget和block等方法处理相应的行为机制，但支持扩展手势触控等方法处理点击，不过对于html 超链接响应情况，在之前看过是需要采用第三方处理机制处理。</p>\n<p>在日常使用过程，对于文本方法计算高度的用法很常用，ios提供相应计算方法。如属于NSString的类别（NSStringDrawing.h）该类为此提供相应处理解决方案，提供计算高度和文本大小的方法。<br>注意到 过去ios6的版本 提供sizeWithFont方法 在ios 7.0 已经不生效，需要改成其他方法处理。boundingRectWithSize 后续推荐的方式。</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"params\">(CGSize)</span>sizeWithAttributes:<span class=\"params\">(NSDictionary *)</span>attrs NS_AVAILABLE_IOS<span class=\"params\">(<span class=\"number\">7</span>_0)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"params\">(CGRect)</span>boundingRectWithSize:<span class=\"params\">(CGSize)</span>size options:<span class=\"params\">(NSStringDrawingOptions)</span>options attributes:<span class=\"params\">(NSDictionary *)</span>attributes context:<span class=\"params\">(NSStringDrawingContext *)</span>context NS_AVAILABLE_IOS<span class=\"params\">(<span class=\"number\">7</span>_0)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span> = [[UILabel alloc]initWithFrame:CGRectMake(<span class=\"number\">85</span>, <span class=\"number\">0</span>, <span class=\"literal\">self</span>.view.frame.size.width-<span class=\"number\">85</span>, <span class=\"number\">70</span>)];</span><br><span class=\"line\"> [<span class=\"literal\">self</span>.panel addSubview:<span class=\"literal\">self</span>.<span class=\"keyword\">label</span>];</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.text = @<span class=\"string\">\"这个人很懒，什么都没留下\"</span>;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.numberOfLines = <span class=\"number\">3</span>;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.lineBreakMode = NSLineBreakByCharWrapping;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.font =[UIFont systemFontOfSize:<span class=\"number\">14</span>];</span><br><span class=\"line\">// <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.<span class=\"keyword\">user</span>InteractionEnabled = YES; 需要的时候才打开</span><br><span class=\"line\"> [<span class=\"literal\">self</span>.view addSubview:<span class=\"literal\">self</span>.panel];</span><br></pre></td></tr></table></figure>\n<p>下面计算一下高度，当采用默认字体的时候，字体号为17，其高度约为20, 字体为14的时候，高度约为16~17之间</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体号：<span class=\"number\">17</span> ，文本高：<span class=\"number\">20</span></span><br><span class=\"line\">字体号：<span class=\"number\">16</span> ，文本高：<span class=\"number\">19</span></span><br><span class=\"line\">字体号：<span class=\"number\">15</span> ，文本高：<span class=\"number\">17</span>~<span class=\"number\">18</span> 之间</span><br><span class=\"line\">字体号：<span class=\"number\">14</span>， 文本高：<span class=\"number\">16</span>~<span class=\"number\">17</span> 之间</span><br></pre></td></tr></table></figure>\n<p>这些字体是默认字体，要是采用其他字体或者设置粗体 ，估计值会受到一些浮动影响。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self</span> getTextHeight:<span class=\"number\">17</span> width:<span class=\"keyword\">self</span>.view.frame.size.width<span class=\"number\">-85</span>];   </span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) getTextHeight:(<span class=\"built_in\">CGFloat</span>) fontSize width:(<span class=\"built_in\">CGFloat</span>) textWidth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *dic =@&#123;<span class=\"built_in\">NSFontAttributeName</span>:[<span class=\"built_in\">UIFont</span> systemFontOfSize:fontSize]&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">CGSize</span> curSize = <span class=\"built_in\">CGSizeMake</span>(textWidth, MAXFLOAT);</span><br><span class=\"line\">    <span class=\"built_in\">CGRect</span> rect =   [<span class=\"keyword\">self</span>.label.text boundingRectWithSize:curSize</span><br><span class=\"line\">                                                  options:<span class=\"built_in\">NSStringDrawingUsesLineFragmentOrigin</span>|<span class=\"built_in\">NSStringDrawingUsesFontLeading</span></span><br><span class=\"line\">                                               attributes:dic context:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *str = <span class=\"built_in\">NSStringFromCGRect</span>(rect);</span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>UILable 的用法涉及内容有如下</p>\n<ol>\n<li>创建与显示</li>\n<li>文本内容和字体设置</li>\n<li>背景颜色指定</li>\n<li>计算高度。</li>\n<li>行数指定和计算</li>\n</ol>\n<p>UIlabel可以显示指定的行数，设置numberOfLines =0 则为不限制行数，因为UIlabel不是Icontrol的方面，没有addTarget和block等方法处理相应的行为机制，但支持扩展手势触控等方法处理点击，不过对于html 超链接响应情况，在之前看过是需要采用第三方处理机制处理。</p>\n<p>在日常使用过程，对于文本方法计算高度的用法很常用，ios提供相应计算方法。如属于NSString的类别（NSStringDrawing.h）该类为此提供相应处理解决方案，提供计算高度和文本大小的方法。<br>注意到 过去ios6的版本 提供sizeWithFont方法 在ios 7.0 已经不生效，需要改成其他方法处理。boundingRectWithSize 后续推荐的方式。</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"params\">(CGSize)</span>sizeWithAttributes:<span class=\"params\">(NSDictionary *)</span>attrs NS_AVAILABLE_IOS<span class=\"params\">(<span class=\"number\">7</span>_0)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- <span class=\"params\">(CGRect)</span>boundingRectWithSize:<span class=\"params\">(CGSize)</span>size options:<span class=\"params\">(NSStringDrawingOptions)</span>options attributes:<span class=\"params\">(NSDictionary *)</span>attributes context:<span class=\"params\">(NSStringDrawingContext *)</span>context NS_AVAILABLE_IOS<span class=\"params\">(<span class=\"number\">7</span>_0)</span>;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight pf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span> = [[UILabel alloc]initWithFrame:CGRectMake(<span class=\"number\">85</span>, <span class=\"number\">0</span>, <span class=\"literal\">self</span>.view.frame.size.width-<span class=\"number\">85</span>, <span class=\"number\">70</span>)];</span><br><span class=\"line\"> [<span class=\"literal\">self</span>.panel addSubview:<span class=\"literal\">self</span>.<span class=\"keyword\">label</span>];</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.text = @<span class=\"string\">\"这个人很懒，什么都没留下\"</span>;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.numberOfLines = <span class=\"number\">3</span>;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.lineBreakMode = NSLineBreakByCharWrapping;</span><br><span class=\"line\"> <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.font =[UIFont systemFontOfSize:<span class=\"number\">14</span>];</span><br><span class=\"line\">// <span class=\"literal\">self</span>.<span class=\"keyword\">label</span>.<span class=\"keyword\">user</span>InteractionEnabled = YES; 需要的时候才打开</span><br><span class=\"line\"> [<span class=\"literal\">self</span>.view addSubview:<span class=\"literal\">self</span>.panel];</span><br></pre></td></tr></table></figure>\n<p>下面计算一下高度，当采用默认字体的时候，字体号为17，其高度约为20, 字体为14的时候，高度约为16~17之间</p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">字体号：<span class=\"number\">17</span> ，文本高：<span class=\"number\">20</span></span><br><span class=\"line\">字体号：<span class=\"number\">16</span> ，文本高：<span class=\"number\">19</span></span><br><span class=\"line\">字体号：<span class=\"number\">15</span> ，文本高：<span class=\"number\">17</span>~<span class=\"number\">18</span> 之间</span><br><span class=\"line\">字体号：<span class=\"number\">14</span>， 文本高：<span class=\"number\">16</span>~<span class=\"number\">17</span> 之间</span><br></pre></td></tr></table></figure>\n<p>这些字体是默认字体，要是采用其他字体或者设置粗体 ，估计值会受到一些浮动影响。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self</span> getTextHeight:<span class=\"number\">17</span> width:<span class=\"keyword\">self</span>.view.frame.size.width<span class=\"number\">-85</span>];   </span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) getTextHeight:(<span class=\"built_in\">CGFloat</span>) fontSize width:(<span class=\"built_in\">CGFloat</span>) textWidth</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSDictionary</span> *dic =@&#123;<span class=\"built_in\">NSFontAttributeName</span>:[<span class=\"built_in\">UIFont</span> systemFontOfSize:fontSize]&#125;;</span><br><span class=\"line\">    <span class=\"built_in\">CGSize</span> curSize = <span class=\"built_in\">CGSizeMake</span>(textWidth, MAXFLOAT);</span><br><span class=\"line\">    <span class=\"built_in\">CGRect</span> rect =   [<span class=\"keyword\">self</span>.label.text boundingRectWithSize:curSize</span><br><span class=\"line\">                                                  options:<span class=\"built_in\">NSStringDrawingUsesLineFragmentOrigin</span>|<span class=\"built_in\">NSStringDrawingUsesFontLeading</span></span><br><span class=\"line\">                                               attributes:dic context:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">NSString</span> *str = <span class=\"built_in\">NSStringFromCGRect</span>(rect);</span><br><span class=\"line\">    <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,str);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"iPhone开发-截屏","date":"2017-11-15T12:23:09.000Z","_content":"iPhone 截屏并本地存储\n\n使用UIGraphicsBeginImageContext 相关绘图API 获取到图像信息，使用UIImageWriteToSavedPhotosAlbum 方法就可以保存到相关的库里面去\n\n```\nUIWindow *window =[UIApplication sharedApplication].keyWindow;\nUIGraphicsBeginImageContext(window.frame.size);\n[window.layer renderInContext:UIGraphicsGetCurrentContext()];\nUIImage *image = UIGraphicsGetImageFromCurrentImageContext();\nUIGraphicsEndImageContext();\nUIImageWriteToSavedPhotosAlbum(image, self, @selector(image:didFinishSavingWithError:contextInfo:), nil);\n\n-(void) image:(UIImage *) image didFinishSavingWithError:(NSError *) error contextInfo:(void *) contextInfo\n{\n    if (error != NULL)\n    {\n        NSLog(@\"保存失败\");\n    }\n    else\n    {\n        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@\"提示\" message:@\"保存成功！\" delegate:nil cancelButtonTitle:@\"确定\" otherButtonTitles:nil, nil];\n        [alertView show];\n    }\n\n}\n\n```\n","source":"_posts/iPhone开发-截屏.md","raw":"---\ntitle: iPhone开发-截屏\ndate: 2017-11-15 20:23:09\ntags: [ios]\ncategories: ios\n---\niPhone 截屏并本地存储\n\n使用UIGraphicsBeginImageContext 相关绘图API 获取到图像信息，使用UIImageWriteToSavedPhotosAlbum 方法就可以保存到相关的库里面去\n\n```\nUIWindow *window =[UIApplication sharedApplication].keyWindow;\nUIGraphicsBeginImageContext(window.frame.size);\n[window.layer renderInContext:UIGraphicsGetCurrentContext()];\nUIImage *image = UIGraphicsGetImageFromCurrentImageContext();\nUIGraphicsEndImageContext();\nUIImageWriteToSavedPhotosAlbum(image, self, @selector(image:didFinishSavingWithError:contextInfo:), nil);\n\n-(void) image:(UIImage *) image didFinishSavingWithError:(NSError *) error contextInfo:(void *) contextInfo\n{\n    if (error != NULL)\n    {\n        NSLog(@\"保存失败\");\n    }\n    else\n    {\n        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@\"提示\" message:@\"保存成功！\" delegate:nil cancelButtonTitle:@\"确定\" otherButtonTitles:nil, nil];\n        [alertView show];\n    }\n\n}\n\n```\n","slug":"iPhone开发-截屏","published":1,"updated":"2017-11-15T12:25:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukr0025pev2xvigqjyz","content":"<p>iPhone 截屏并本地存储</p>\n<p>使用UIGraphicsBeginImageContext 相关绘图API 获取到图像信息，使用UIImageWriteToSavedPhotosAlbum 方法就可以保存到相关的库里面去</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIWindow</span> *window =[<span class=\"built_in\">UIApplication</span> sharedApplication].keyWindow;</span><br><span class=\"line\"><span class=\"built_in\">UIGraphicsBeginImageContext</span>(window.frame.size);</span><br><span class=\"line\">[window.layer renderInContext:<span class=\"built_in\">UIGraphicsGetCurrentContext</span>()];</span><br><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class=\"line\"><span class=\"built_in\">UIGraphicsEndImageContext</span>();</span><br><span class=\"line\"><span class=\"built_in\">UIImageWriteToSavedPhotosAlbum</span>(image, <span class=\"keyword\">self</span>, <span class=\"keyword\">@selector</span>(image:didFinishSavingWithError:contextInfo:), <span class=\"literal\">nil</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) image:(<span class=\"built_in\">UIImage</span> *) image didFinishSavingWithError:(<span class=\"built_in\">NSError</span> *) error contextInfo:(<span class=\"keyword\">void</span> *) contextInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"保存失败\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">UIAlertView</span> *alertView = [[<span class=\"built_in\">UIAlertView</span> alloc]initWithTitle:<span class=\"string\">@\"提示\"</span> message:<span class=\"string\">@\"保存成功！\"</span> delegate:<span class=\"literal\">nil</span> cancelButtonTitle:<span class=\"string\">@\"确定\"</span> otherButtonTitles:<span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">        [alertView show];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>iPhone 截屏并本地存储</p>\n<p>使用UIGraphicsBeginImageContext 相关绘图API 获取到图像信息，使用UIImageWriteToSavedPhotosAlbum 方法就可以保存到相关的库里面去</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIWindow</span> *window =[<span class=\"built_in\">UIApplication</span> sharedApplication].keyWindow;</span><br><span class=\"line\"><span class=\"built_in\">UIGraphicsBeginImageContext</span>(window.frame.size);</span><br><span class=\"line\">[window.layer renderInContext:<span class=\"built_in\">UIGraphicsGetCurrentContext</span>()];</span><br><span class=\"line\"><span class=\"built_in\">UIImage</span> *image = <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class=\"line\"><span class=\"built_in\">UIGraphicsEndImageContext</span>();</span><br><span class=\"line\"><span class=\"built_in\">UIImageWriteToSavedPhotosAlbum</span>(image, <span class=\"keyword\">self</span>, <span class=\"keyword\">@selector</span>(image:didFinishSavingWithError:contextInfo:), <span class=\"literal\">nil</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) image:(<span class=\"built_in\">UIImage</span> *) image didFinishSavingWithError:(<span class=\"built_in\">NSError</span> *) error contextInfo:(<span class=\"keyword\">void</span> *) contextInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (error != <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"保存失败\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">UIAlertView</span> *alertView = [[<span class=\"built_in\">UIAlertView</span> alloc]initWithTitle:<span class=\"string\">@\"提示\"</span> message:<span class=\"string\">@\"保存成功！\"</span> delegate:<span class=\"literal\">nil</span> cancelButtonTitle:<span class=\"string\">@\"确定\"</span> otherButtonTitles:<span class=\"literal\">nil</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">        [alertView show];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"iPhone开发-leftBarButtonItem","date":"2017-11-15T12:27:50.000Z","_content":"\n### 1.设置leftBarButtonItem的文字\n在设置 leftBarButtonItem的时候，又会少了一个左箭头。\n\n一般情况下，自定义一个新的标题会这样操作，设置完成后，问题来了，发现左箭头不见了。\n```\nself.navigationItem.leftBarButtonItem =  [[UIBarButtonItem alloc]initWithTitle:@\"返回\" style:UIBarButtonItemStylePlain target:self  action:@selector(onSelect)];\n```\n\n一般情况下，自定义 UIBarButtonItem 使用设置图片有如下，但发现文本不能设置显示了。\n```\n[[UIBarButtonItem alloc]initWithImage:image style:UIBarButtonItemStylePlain target:self\n                                   action:@selector(onSelect)];\n```\n\n还有一种方式，既有文本又有左箭头的需求，只能使用下面这种方式，自定义一个按钮视图。\n```\n[[UIBarButtonItem alloc]initWithCustomView:backButton];\n```\n\n\n问题前提： 使用pushViewController的时候，该界面返回情况会默认是上一级的标题， 更改文字，又会对本身产生影响。原本意图很简单，就是想设置自己的文字，又想有左箭头。\n```\n[self.navigationController pushViewController:cityController animated:YES];\n```\n\n<!-- more -->\n### 2.实现过程\n实现这个过程改用了一种做法是 用按钮的方式去完成这件事。这里涉及几个问题。设置了图片的时候，按钮点下去还是会出现**蓝色**。\n\n在写的时候，会发现Button 的 setImage 和 setBackGroundImage 是有区别的。\n**setBackGroundImage**： 会对原图拉伸产生影响，跟随性。也就是说，按钮宽度改变，底图也发生改变\n\n**setImage** ： 会保持原图性质，不随改变而改变。\n在测试过程也是一样。\n\n为了解决点击后保存一致的效果， 改用暴力的方式，对点击下去的情况设置一张透明度的图 。同时对文本设置透明度。这样有点罗嗦和累赘。暂时还没发现更好的方式。有一些人说是设置backBarButtonItem 但是没有效果。我也遇到这个问题。**backBarButtonItem 和 leftBarButtonItem 还是有区别**。\n\n为了解决按钮图片和文本点击后透明度变化，采取的办法是对两个状态设置不同的UIImage信息。其中这里使用到复制位图的操作，UIGraphicsBeginImageContext 使用这个方式。拷贝一个UIImage副本出来，对其透明度alpha 设置。\n这个设计的目标是为 了解决点击后还是变蓝色的问题。\n\n```\n//按钮\n[backButton setImage:image forState:UIControlStateNormal];\n[backButton setImage:neImage forState:UIControlStateHighlighted];\n//文本颜色\n[backButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];\n[backButton setTitleColor:[UIColor colorWithWhite:1.0 alpha:0.7] forState:UIControlStateHighlighted];\n```\n\n一切完成后，在刚运行的过程当中，按钮背景图片和文本粘贴在比较紧，可以使用 setImageEdgeInsets的方式让其他拉开一点距离。这样子可以实现一个自定义LeftBarButtonItem。\n\n```\nUIButton *backButton = [[UIButton alloc ]initWithFrame:CGRectMake(0, 0, 60, 30)];\n[backButton addTarget:self action:@selector(onSelectCity:) forControlEvents:UIControlEventTouchUpInside];\nUIImage  *image =[[UIImage imageNamed:@\"navbar_btn@2x.png\"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n[backButton setImage:image forState:UIControlStateNormal];\n\nUIGraphicsBeginImageContext(image.size);\n[image drawInRect:CGRectMake(0,0,image.size.width,image.size.height) blendMode:kCGBlendModeNormal alpha:0.7];\nUIImage *neImage = UIGraphicsGetImageFromCurrentImageContext();\nUIGraphicsEndImageContext();\n[backButton setImage:neImage forState:UIControlStateHighlighted];\n[backButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];\nbackButton.titleLabel.font  =[UIFont systemFontOfSize:14] ;\n[backButton setTitleColor:[UIColor colorWithWhite:1.0 alpha:0.7] forState:UIControlStateHighlighted];\n[backButton setTitle:@\"全部\" forState:UIControlStateNormal];\n[backButton setImageEdgeInsets:UIEdgeInsetsMake(0, -15, 0, 0)];\nUIBarButtonItem *backItem = [[UIBarButtonItem alloc]initWithCustomView:backButton];\nself.navigationItem.leftBarButtonItem = backItem;\n```\n\n### 3.遇到的问题\n\n问题1： UITabbar选择图片的问题，选中后出现蓝色的问题，而不是自定义的\n\n问题2：按钮点击后，蓝色按钮蓝色的问题\n\n问题3：颜色设置缺少一个0会出现奇特现象\n\n问题4：UIImage的缩放操作\n\n\n在学习实验过程，遇到问题 UIColor colorWithRed的方法，后缀 255.0 去掉了0 后变成255 会发现很莫名的颜色，这个小数点影响了一些结果。非法奇怪。\n\n```\nUIColor *color = [UIColor colorWithRed:254/255.0 green:85/255.0 blue:90/255.0 alpha:1.0];\n\n```\n\n其次是UITabBarItem 使用了两张图片做状态，一种是默认的情况，一种是选中的效果。会发现变成蓝色。不同不使用UIImage的imageWithRenderingMode的方式去改回原图。这样子这个问题就解决了。\n\n```\nUIImage  *image =[[UIImage imageNamed:@\"navbar_btn@2x.png\"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n\n```\n\n而NavigationBar的颜色，也是一个坑的，旧的API只能在旧版本使用，新的版本需要在7.0以上才能使用，这样要兼容6.0 还要挖个坑。有时候 会对背景整个栏目设置，所以在这个情况下只能使用兼容方式。\n","source":"_posts/iPhone开发-leftBarButtonItem.md","raw":"---\ntitle: iPhone开发-leftBarButtonItem\ndate: 2017-11-15 20:27:50\ntags: [ios]\ncategories: ios\n---\n\n### 1.设置leftBarButtonItem的文字\n在设置 leftBarButtonItem的时候，又会少了一个左箭头。\n\n一般情况下，自定义一个新的标题会这样操作，设置完成后，问题来了，发现左箭头不见了。\n```\nself.navigationItem.leftBarButtonItem =  [[UIBarButtonItem alloc]initWithTitle:@\"返回\" style:UIBarButtonItemStylePlain target:self  action:@selector(onSelect)];\n```\n\n一般情况下，自定义 UIBarButtonItem 使用设置图片有如下，但发现文本不能设置显示了。\n```\n[[UIBarButtonItem alloc]initWithImage:image style:UIBarButtonItemStylePlain target:self\n                                   action:@selector(onSelect)];\n```\n\n还有一种方式，既有文本又有左箭头的需求，只能使用下面这种方式，自定义一个按钮视图。\n```\n[[UIBarButtonItem alloc]initWithCustomView:backButton];\n```\n\n\n问题前提： 使用pushViewController的时候，该界面返回情况会默认是上一级的标题， 更改文字，又会对本身产生影响。原本意图很简单，就是想设置自己的文字，又想有左箭头。\n```\n[self.navigationController pushViewController:cityController animated:YES];\n```\n\n<!-- more -->\n### 2.实现过程\n实现这个过程改用了一种做法是 用按钮的方式去完成这件事。这里涉及几个问题。设置了图片的时候，按钮点下去还是会出现**蓝色**。\n\n在写的时候，会发现Button 的 setImage 和 setBackGroundImage 是有区别的。\n**setBackGroundImage**： 会对原图拉伸产生影响，跟随性。也就是说，按钮宽度改变，底图也发生改变\n\n**setImage** ： 会保持原图性质，不随改变而改变。\n在测试过程也是一样。\n\n为了解决点击后保存一致的效果， 改用暴力的方式，对点击下去的情况设置一张透明度的图 。同时对文本设置透明度。这样有点罗嗦和累赘。暂时还没发现更好的方式。有一些人说是设置backBarButtonItem 但是没有效果。我也遇到这个问题。**backBarButtonItem 和 leftBarButtonItem 还是有区别**。\n\n为了解决按钮图片和文本点击后透明度变化，采取的办法是对两个状态设置不同的UIImage信息。其中这里使用到复制位图的操作，UIGraphicsBeginImageContext 使用这个方式。拷贝一个UIImage副本出来，对其透明度alpha 设置。\n这个设计的目标是为 了解决点击后还是变蓝色的问题。\n\n```\n//按钮\n[backButton setImage:image forState:UIControlStateNormal];\n[backButton setImage:neImage forState:UIControlStateHighlighted];\n//文本颜色\n[backButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];\n[backButton setTitleColor:[UIColor colorWithWhite:1.0 alpha:0.7] forState:UIControlStateHighlighted];\n```\n\n一切完成后，在刚运行的过程当中，按钮背景图片和文本粘贴在比较紧，可以使用 setImageEdgeInsets的方式让其他拉开一点距离。这样子可以实现一个自定义LeftBarButtonItem。\n\n```\nUIButton *backButton = [[UIButton alloc ]initWithFrame:CGRectMake(0, 0, 60, 30)];\n[backButton addTarget:self action:@selector(onSelectCity:) forControlEvents:UIControlEventTouchUpInside];\nUIImage  *image =[[UIImage imageNamed:@\"navbar_btn@2x.png\"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n[backButton setImage:image forState:UIControlStateNormal];\n\nUIGraphicsBeginImageContext(image.size);\n[image drawInRect:CGRectMake(0,0,image.size.width,image.size.height) blendMode:kCGBlendModeNormal alpha:0.7];\nUIImage *neImage = UIGraphicsGetImageFromCurrentImageContext();\nUIGraphicsEndImageContext();\n[backButton setImage:neImage forState:UIControlStateHighlighted];\n[backButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];\nbackButton.titleLabel.font  =[UIFont systemFontOfSize:14] ;\n[backButton setTitleColor:[UIColor colorWithWhite:1.0 alpha:0.7] forState:UIControlStateHighlighted];\n[backButton setTitle:@\"全部\" forState:UIControlStateNormal];\n[backButton setImageEdgeInsets:UIEdgeInsetsMake(0, -15, 0, 0)];\nUIBarButtonItem *backItem = [[UIBarButtonItem alloc]initWithCustomView:backButton];\nself.navigationItem.leftBarButtonItem = backItem;\n```\n\n### 3.遇到的问题\n\n问题1： UITabbar选择图片的问题，选中后出现蓝色的问题，而不是自定义的\n\n问题2：按钮点击后，蓝色按钮蓝色的问题\n\n问题3：颜色设置缺少一个0会出现奇特现象\n\n问题4：UIImage的缩放操作\n\n\n在学习实验过程，遇到问题 UIColor colorWithRed的方法，后缀 255.0 去掉了0 后变成255 会发现很莫名的颜色，这个小数点影响了一些结果。非法奇怪。\n\n```\nUIColor *color = [UIColor colorWithRed:254/255.0 green:85/255.0 blue:90/255.0 alpha:1.0];\n\n```\n\n其次是UITabBarItem 使用了两张图片做状态，一种是默认的情况，一种是选中的效果。会发现变成蓝色。不同不使用UIImage的imageWithRenderingMode的方式去改回原图。这样子这个问题就解决了。\n\n```\nUIImage  *image =[[UIImage imageNamed:@\"navbar_btn@2x.png\"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal];\n\n```\n\n而NavigationBar的颜色，也是一个坑的，旧的API只能在旧版本使用，新的版本需要在7.0以上才能使用，这样要兼容6.0 还要挖个坑。有时候 会对背景整个栏目设置，所以在这个情况下只能使用兼容方式。\n","slug":"iPhone开发-leftBarButtonItem","published":1,"updated":"2017-11-15T12:36:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukt002apev26vpjh324","content":"<h3 id=\"1-设置leftBarButtonItem的文字\"><a href=\"#1-设置leftBarButtonItem的文字\" class=\"headerlink\" title=\"1.设置leftBarButtonItem的文字\"></a>1.设置leftBarButtonItem的文字</h3><p>在设置 leftBarButtonItem的时候，又会少了一个左箭头。</p>\n<p>一般情况下，自定义一个新的标题会这样操作，设置完成后，问题来了，发现左箭头不见了。<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.navigationItem.leftBarButtonItem =  [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"返回\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self  <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(onSelect)];</span><br></pre></td></tr></table></figure></p>\n<p>一般情况下，自定义 UIBarButtonItem 使用设置图片有如下，但发现文本不能设置显示了。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[[UIBarButtonItem alloc]</span><span class=\"selector-tag\">initWithImage</span><span class=\"selector-pseudo\">:image</span> <span class=\"selector-tag\">style</span><span class=\"selector-pseudo\">:UIBarButtonItemStylePlain</span> <span class=\"selector-tag\">target</span><span class=\"selector-pseudo\">:self</span></span><br><span class=\"line\">                                   <span class=\"selector-tag\">action</span>:@<span class=\"keyword\">selector</span>(<span class=\"keyword\">onSelect</span>)];</span><br></pre></td></tr></table></figure></p>\n<p>还有一种方式，既有文本又有左箭头的需求，只能使用下面这种方式，自定义一个按钮视图。<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"name\">UIBarButtonItem</span> alloc]initWithCustomView:backButton]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n<p>问题前提： 使用pushViewController的时候，该界面返回情况会默认是上一级的标题， 更改文字，又会对本身产生影响。原本意图很简单，就是想设置自己的文字，又想有左箭头。<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self.navigationController </span><span class=\"keyword\">pushViewController:cityController </span>animated:YES]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h3 id=\"2-实现过程\"><a href=\"#2-实现过程\" class=\"headerlink\" title=\"2.实现过程\"></a>2.实现过程</h3><p>实现这个过程改用了一种做法是 用按钮的方式去完成这件事。这里涉及几个问题。设置了图片的时候，按钮点下去还是会出现<strong>蓝色</strong>。</p>\n<p>在写的时候，会发现Button 的 setImage 和 setBackGroundImage 是有区别的。<br><strong>setBackGroundImage</strong>： 会对原图拉伸产生影响，跟随性。也就是说，按钮宽度改变，底图也发生改变</p>\n<p><strong>setImage</strong> ： 会保持原图性质，不随改变而改变。<br>在测试过程也是一样。</p>\n<p>为了解决点击后保存一致的效果， 改用暴力的方式，对点击下去的情况设置一张透明度的图 。同时对文本设置透明度。这样有点罗嗦和累赘。暂时还没发现更好的方式。有一些人说是设置backBarButtonItem 但是没有效果。我也遇到这个问题。<strong>backBarButtonItem 和 leftBarButtonItem 还是有区别</strong>。</p>\n<p>为了解决按钮图片和文本点击后透明度变化，采取的办法是对两个状态设置不同的UIImage信息。其中这里使用到复制位图的操作，UIGraphicsBeginImageContext 使用这个方式。拷贝一个UIImage副本出来，对其透明度alpha 设置。<br>这个设计的目标是为 了解决点击后还是变蓝色的问题。</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//按钮</span></span><br><span class=\"line\">[backButton <span class=\"string\">setImage:</span>image <span class=\"string\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">[backButton <span class=\"string\">setImage:</span>neImage <span class=\"string\">forState:</span>UIControlStateHighlighted];</span><br><span class=\"line\"><span class=\"comment\">//文本颜色</span></span><br><span class=\"line\">[backButton <span class=\"string\">setTitleColor:</span>[UIColor whiteColor] <span class=\"string\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">[backButton <span class=\"string\">setTitleColor:</span>[UIColor <span class=\"string\">colorWithWhite:</span><span class=\"number\">1.0</span> <span class=\"string\">alpha:</span><span class=\"number\">0.7</span>] <span class=\"string\">forState:</span>UIControlStateHighlighted];</span><br></pre></td></tr></table></figure>\n<p>一切完成后，在刚运行的过程当中，按钮背景图片和文本粘贴在比较紧，可以使用 setImageEdgeInsets的方式让其他拉开一点距离。这样子可以实现一个自定义LeftBarButtonItem。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIButton *<span class=\"keyword\">backButton </span>= [[UIButton alloc ]initWithFrame:CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">60</span>, <span class=\"number\">30</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span><span class=\"keyword\">addTarget:self </span>action:@selector(onSelectCity:) forControlEvents:UIControlEventTouchUpInside]<span class=\"comment\">;</span></span><br><span class=\"line\">UIImage  *image =[[UIImage imageNamed:@<span class=\"string\">\"navbar_btn@2x.png\"</span>] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImage:image forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">UIGraphicsBeginImageContext(image.size)<span class=\"comment\">;</span></span><br><span class=\"line\">[image drawInRect:CGRectMake(<span class=\"number\">0</span>,<span class=\"number\">0</span>,image.size.width,image.size.height) <span class=\"keyword\">blendMode:kCGBlendModeNormal </span>alpha:<span class=\"number\">0</span>.<span class=\"number\">7</span>]<span class=\"comment\">;</span></span><br><span class=\"line\">UIImage *neImage = UIGraphicsGetImageFromCurrentImageContext()<span class=\"comment\">;</span></span><br><span class=\"line\">UIGraphicsEndImageContext()<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImage:neImage forState:UIControlStateHighlighted]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">backButton.titleLabel.font </span> =[UIFont systemFontOfSize:<span class=\"number\">14</span>] <span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitleColor:[UIColor colorWithWhite:<span class=\"number\">1</span>.<span class=\"number\">0</span> alpha:<span class=\"number\">0</span>.<span class=\"number\">7</span>] forState:UIControlStateHighlighted]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitle:@<span class=\"string\">\"全部\"</span> forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImageEdgeInsets:UIEdgeInsetsMake(<span class=\"number\">0</span>, -<span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\">UIBarButtonItem *<span class=\"keyword\">backItem </span>= [[UIBarButtonItem alloc]initWithCustomView:<span class=\"keyword\">backButton];</span></span><br><span class=\"line\"><span class=\"keyword\">self.navigationItem.leftBarButtonItem </span>= <span class=\"keyword\">backItem;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-遇到的问题\"><a href=\"#3-遇到的问题\" class=\"headerlink\" title=\"3.遇到的问题\"></a>3.遇到的问题</h3><p>问题1： UITabbar选择图片的问题，选中后出现蓝色的问题，而不是自定义的</p>\n<p>问题2：按钮点击后，蓝色按钮蓝色的问题</p>\n<p>问题3：颜色设置缺少一个0会出现奇特现象</p>\n<p>问题4：UIImage的缩放操作</p>\n<p>在学习实验过程，遇到问题 UIColor colorWithRed的方法，后缀 255.0 去掉了0 后变成255 会发现很莫名的颜色，这个小数点影响了一些结果。非法奇怪。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">UIColor</span> <span class=\"meta\">*color</span> <span class=\"string\">=</span> <span class=\"string\">[UIColor</span> <span class=\"attr\">colorWithRed:254/255.0</span> <span class=\"attr\">green:85/255.0</span> <span class=\"attr\">blue:90/255.0</span> <span class=\"attr\">alpha:1.0];</span></span><br></pre></td></tr></table></figure>\n<p>其次是UITabBarItem 使用了两张图片做状态，一种是默认的情况，一种是选中的效果。会发现变成蓝色。不同不使用UIImage的imageWithRenderingMode的方式去改回原图。这样子这个问题就解决了。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span>  *image =[[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"navbar_btn@2x.png\"</span>] imageWithRenderingMode:<span class=\"built_in\">UIImageRenderingModeAlwaysOriginal</span>];</span><br></pre></td></tr></table></figure>\n<p>而NavigationBar的颜色，也是一个坑的，旧的API只能在旧版本使用，新的版本需要在7.0以上才能使用，这样要兼容6.0 还要挖个坑。有时候 会对背景整个栏目设置，所以在这个情况下只能使用兼容方式。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"1-设置leftBarButtonItem的文字\"><a href=\"#1-设置leftBarButtonItem的文字\" class=\"headerlink\" title=\"1.设置leftBarButtonItem的文字\"></a>1.设置leftBarButtonItem的文字</h3><p>在设置 leftBarButtonItem的时候，又会少了一个左箭头。</p>\n<p>一般情况下，自定义一个新的标题会这样操作，设置完成后，问题来了，发现左箭头不见了。<br><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">self.navigationItem.leftBarButtonItem =  [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"返回\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self  <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(onSelect)];</span><br></pre></td></tr></table></figure></p>\n<p>一般情况下，自定义 UIBarButtonItem 使用设置图片有如下，但发现文本不能设置显示了。<br><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-attr\">[[UIBarButtonItem alloc]</span><span class=\"selector-tag\">initWithImage</span><span class=\"selector-pseudo\">:image</span> <span class=\"selector-tag\">style</span><span class=\"selector-pseudo\">:UIBarButtonItemStylePlain</span> <span class=\"selector-tag\">target</span><span class=\"selector-pseudo\">:self</span></span><br><span class=\"line\">                                   <span class=\"selector-tag\">action</span>:@<span class=\"keyword\">selector</span>(<span class=\"keyword\">onSelect</span>)];</span><br></pre></td></tr></table></figure></p>\n<p>还有一种方式，既有文本又有左箭头的需求，只能使用下面这种方式，自定义一个按钮视图。<br><figure class=\"highlight scheme\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"name\">UIBarButtonItem</span> alloc]initWithCustomView:backButton]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>\n<p>问题前提： 使用pushViewController的时候，该界面返回情况会默认是上一级的标题， 更改文字，又会对本身产生影响。原本意图很简单，就是想设置自己的文字，又想有左箭头。<br><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">self.navigationController </span><span class=\"keyword\">pushViewController:cityController </span>animated:YES]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure></p>","more":"<h3 id=\"2-实现过程\"><a href=\"#2-实现过程\" class=\"headerlink\" title=\"2.实现过程\"></a>2.实现过程</h3><p>实现这个过程改用了一种做法是 用按钮的方式去完成这件事。这里涉及几个问题。设置了图片的时候，按钮点下去还是会出现<strong>蓝色</strong>。</p>\n<p>在写的时候，会发现Button 的 setImage 和 setBackGroundImage 是有区别的。<br><strong>setBackGroundImage</strong>： 会对原图拉伸产生影响，跟随性。也就是说，按钮宽度改变，底图也发生改变</p>\n<p><strong>setImage</strong> ： 会保持原图性质，不随改变而改变。<br>在测试过程也是一样。</p>\n<p>为了解决点击后保存一致的效果， 改用暴力的方式，对点击下去的情况设置一张透明度的图 。同时对文本设置透明度。这样有点罗嗦和累赘。暂时还没发现更好的方式。有一些人说是设置backBarButtonItem 但是没有效果。我也遇到这个问题。<strong>backBarButtonItem 和 leftBarButtonItem 还是有区别</strong>。</p>\n<p>为了解决按钮图片和文本点击后透明度变化，采取的办法是对两个状态设置不同的UIImage信息。其中这里使用到复制位图的操作，UIGraphicsBeginImageContext 使用这个方式。拷贝一个UIImage副本出来，对其透明度alpha 设置。<br>这个设计的目标是为 了解决点击后还是变蓝色的问题。</p>\n<figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//按钮</span></span><br><span class=\"line\">[backButton <span class=\"string\">setImage:</span>image <span class=\"string\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">[backButton <span class=\"string\">setImage:</span>neImage <span class=\"string\">forState:</span>UIControlStateHighlighted];</span><br><span class=\"line\"><span class=\"comment\">//文本颜色</span></span><br><span class=\"line\">[backButton <span class=\"string\">setTitleColor:</span>[UIColor whiteColor] <span class=\"string\">forState:</span>UIControlStateNormal];</span><br><span class=\"line\">[backButton <span class=\"string\">setTitleColor:</span>[UIColor <span class=\"string\">colorWithWhite:</span><span class=\"number\">1.0</span> <span class=\"string\">alpha:</span><span class=\"number\">0.7</span>] <span class=\"string\">forState:</span>UIControlStateHighlighted];</span><br></pre></td></tr></table></figure>\n<p>一切完成后，在刚运行的过程当中，按钮背景图片和文本粘贴在比较紧，可以使用 setImageEdgeInsets的方式让其他拉开一点距离。这样子可以实现一个自定义LeftBarButtonItem。</p>\n<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIButton *<span class=\"keyword\">backButton </span>= [[UIButton alloc ]initWithFrame:CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">60</span>, <span class=\"number\">30</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span><span class=\"keyword\">addTarget:self </span>action:@selector(onSelectCity:) forControlEvents:UIControlEventTouchUpInside]<span class=\"comment\">;</span></span><br><span class=\"line\">UIImage  *image =[[UIImage imageNamed:@<span class=\"string\">\"navbar_btn@2x.png\"</span>] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImage:image forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\"></span><br><span class=\"line\">UIGraphicsBeginImageContext(image.size)<span class=\"comment\">;</span></span><br><span class=\"line\">[image drawInRect:CGRectMake(<span class=\"number\">0</span>,<span class=\"number\">0</span>,image.size.width,image.size.height) <span class=\"keyword\">blendMode:kCGBlendModeNormal </span>alpha:<span class=\"number\">0</span>.<span class=\"number\">7</span>]<span class=\"comment\">;</span></span><br><span class=\"line\">UIImage *neImage = UIGraphicsGetImageFromCurrentImageContext()<span class=\"comment\">;</span></span><br><span class=\"line\">UIGraphicsEndImageContext()<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImage:neImage forState:UIControlStateHighlighted]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">backButton.titleLabel.font </span> =[UIFont systemFontOfSize:<span class=\"number\">14</span>] <span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitleColor:[UIColor colorWithWhite:<span class=\"number\">1</span>.<span class=\"number\">0</span> alpha:<span class=\"number\">0</span>.<span class=\"number\">7</span>] forState:UIControlStateHighlighted]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setTitle:@<span class=\"string\">\"全部\"</span> forState:UIControlStateNormal]<span class=\"comment\">;</span></span><br><span class=\"line\">[<span class=\"keyword\">backButton </span>setImageEdgeInsets:UIEdgeInsetsMake(<span class=\"number\">0</span>, -<span class=\"number\">15</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\">UIBarButtonItem *<span class=\"keyword\">backItem </span>= [[UIBarButtonItem alloc]initWithCustomView:<span class=\"keyword\">backButton];</span></span><br><span class=\"line\"><span class=\"keyword\">self.navigationItem.leftBarButtonItem </span>= <span class=\"keyword\">backItem;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-遇到的问题\"><a href=\"#3-遇到的问题\" class=\"headerlink\" title=\"3.遇到的问题\"></a>3.遇到的问题</h3><p>问题1： UITabbar选择图片的问题，选中后出现蓝色的问题，而不是自定义的</p>\n<p>问题2：按钮点击后，蓝色按钮蓝色的问题</p>\n<p>问题3：颜色设置缺少一个0会出现奇特现象</p>\n<p>问题4：UIImage的缩放操作</p>\n<p>在学习实验过程，遇到问题 UIColor colorWithRed的方法，后缀 255.0 去掉了0 后变成255 会发现很莫名的颜色，这个小数点影响了一些结果。非法奇怪。</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">UIColor</span> <span class=\"meta\">*color</span> <span class=\"string\">=</span> <span class=\"string\">[UIColor</span> <span class=\"attr\">colorWithRed:254/255.0</span> <span class=\"attr\">green:85/255.0</span> <span class=\"attr\">blue:90/255.0</span> <span class=\"attr\">alpha:1.0];</span></span><br></pre></td></tr></table></figure>\n<p>其次是UITabBarItem 使用了两张图片做状态，一种是默认的情况，一种是选中的效果。会发现变成蓝色。不同不使用UIImage的imageWithRenderingMode的方式去改回原图。这样子这个问题就解决了。</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImage</span>  *image =[[<span class=\"built_in\">UIImage</span> imageNamed:<span class=\"string\">@\"navbar_btn@2x.png\"</span>] imageWithRenderingMode:<span class=\"built_in\">UIImageRenderingModeAlwaysOriginal</span>];</span><br></pre></td></tr></table></figure>\n<p>而NavigationBar的颜色，也是一个坑的，旧的API只能在旧版本使用，新的版本需要在7.0以上才能使用，这样要兼容6.0 还要挖个坑。有时候 会对背景整个栏目设置，所以在这个情况下只能使用兼容方式。</p>"},{"title":"iPhone开发-常用组件","date":"2017-11-15T09:35:41.000Z","_content":"\n### 1. UIButton\n\n```\n CGRect frame = CGRectMake(0, 100, 80, 40);\n UIButton *button = [UIButton buttonWithType:UIButtonTypeRoundedRect];\n button.frame = frame;\n [button setTitle:@\"click\" forState: UIControlStateNormal];\n button.backgroundColor = [UIColor greenColor];\n [button addTarget:self action:@selector(buttonClicked:) forControlEvents:UIControlEventTouchUpInside];\n [self.view addSubview:button];\n\n -(void) buttonClicked:(UIButton *)button\n {\n   //添加code\n }\n```\n### 2. UIAlertView\n\n```\nUIAlertView *alert = [[UIAlertView alloc]initWithTitle:@\"标题\" message:@\"你的内存已满\" delegate:self cancelButtonTitle:@\"取消\" otherButtonTitles:nil, nil];\n   [alert show];\n\n```\n\n\n<!-- more -->\n### 3. UILabel\n\n```\nUILabel *label =[[UILabel alloc]initWithFrame:CGRectMake(0, 10, 200, 34)];\nlabel.textColor =[UIColor grayColor];\nlabel.font =[UIFont systemFontOfSize:18];\nlabel.text =@\"创建一个文本\";\nlabel.lineBreakMode = NSLineBreakByCharWrapping;\nlabel.numberOfLines = 0;\nlabel.backgroundColor =[UIColor grayColor];\nlabel.textAlignment = NSTextAlignmentCenter;\n```\n\n### 4. UITextField\n\n```\n\nUITextField *textField =[[UITextField alloc]initWithFrame:CGRectMake(10, 44, self.view.bounds.size.width-20,30)];\n textField.borderStyle = UITextBorderStyleRoundedRect;\n textField.placeholder = @\"请输入用户名\";\n textField.clearButtonMode = UITextFieldViewModeAlways;\n textField.delegate = self;\n textField.textColor = [UIColor grayColor];\n textField.keyboardType = UIKeyboardTypeDefault;\n textField.returnKeyType = UIReturnKeyDone;\n textField.clearButtonMode = UITextFieldViewModeWhileEditing;\n```\n\n### 5.UISlider\n\n```\nUISlider *slider =[[UISlider alloc]initWithFrame:CGRectMake(0, 100, 200, 33)];\n  [slider addTarget:self action:@selector(onChangeHandler:) forControlEvents:UIControlEventValueChanged];\n  [self.view addSubview:slider];\n\n-(void) onChangeHandler:(UISlider *) slider\n{\n    float value = slider.value;\n}\n```\n\n### 6.UISegmentedControl\n\n```\nUISegmentedControl *seg= [[UISegmentedControl alloc]initWithItems:@[@\"骑士\",@\"勇士\"]];\n   [self.view addSubview:seg];\n   seg.frame =CGRectMake(20, 200, 200, 33);\n   [seg addTarget:self action:@selector(onSelect:) forControlEvents:UIControlEventValueChanged];\n\n-(void) onSelect:(UISegmentedControl *) control\n{\n   NSInteger index = control.selectedSegmentIndex;\n    if (index==0)\n    {\n        NSLog(@\"点击骑士\");\n    }\n    else\n    {\n        NSLog(@\"点击勇士\");\n    }\n\n}\n\n```\n\n### 7.UIViewImage\n\n```\nUIImageView *imageView =[[UIImageView alloc]initWithImage:[UIImage imageNamed:@\"head.png\" ]];\nimageView.layer.cornerRadius = 4.0;\n```\n### 8.UISwitch\n\n```\nUISwitch *uiSwitch=[[UISwitch alloc]initWithFrame:CGRectMake(20, 200, 100, 33)];\n   [self.view addSubview:uiSwitch];\n   [uiSwitch setOn:YES animated:YES];\n   [uiSwitch addTarget:self action:@selector(onChange:) forControlEvents:UIControlEventValueChanged];\n\n-(void) onChange:(UISwitch *) uiswitch\n{\n  BOOL isOn =  uiswitch.isOn;\n  //两种方式输出真假值\n  NSLog(@\"%@\",  [NSNumber numberWithBool:isOn].stringValue);\n  NSLog(@\"%@\",  isOn ? @\"YES\":@\"NO\");\n}\n\n```\n\n### 9.UIActionSheet\n\n```\nUIActionSheet *actionSheet = [[UIActionSheet alloc]initWithTitle:nil delegate:self cancelButtonTitle:@\"取消\" destructiveButtonTitle:@\"微信\" otherButtonTitles:@\"新浪微博\",@\"腾讯微博\", nil];\nactionSheet.actionSheetStyle = UIActionSheetStyleDefault;\n[actionSheet showInView:self.view];\n\n-(void) actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex\n{\n    if(buttonIndex == 0)\n    {\n        NSLog(@\"微信\");\n    }\n    else if(buttonIndex ==1)\n    {\n        NSLog(@\"新浪微博\");\n    }\n    else if(buttonIndex == 2)\n    {\n        NSLog(@\"腾讯微博\");\n    }\n}\n\n```\n### 10.UIWindow\n\n```\nUIWindow *window =[[UIWindow alloc]initWithFrame:[UIScreen mainScreen].bounds];\n```\n\n### 11.UIBarButtonItem\n\n```\n//左边\nself.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"话题\" style:UIBarButtonItemStylePlain target:self action:@selector(showMenu)];\n //右边\nself.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"话题\" style:UIBarButtonItemStylePlain target:self action:@selector(showMenu)];\n\n-(void) showMenu\n{\n    [[NSNotificationCenter defaultCenter] postNotificationName:@\"ShowMenuCmd\" object:nil];\n}\n```\n\n### 12.UIWebView\n  UIWebView 的本地加载HTML页面\n```\nCGRect rect = [UIScreen mainScreen].bounds;\nUIWebView *webView = [[UIWebView alloc] initWithFrame:CGRectMake(0, 0, rect .size.width,rect.size.height)];\n[self.view addSubview:self.webView];\n[webView setUserInteractionEnabled:YES];//是否支持交互\nNSString *path =  [[NSBundle mainBundle] pathForResource:@\"index\" ofType:@\"html\"];\nNSURL *url = [NSURL fileURLWithPath:path];\n[webView loadRequest:[NSURLRequest requestWithURL:url]];   \nwebView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;\n```\n### 13.UIPickerView\n选择器创建与代理设置\n\n```\nNSArray *pickerArray =@[@\"勇士\",@\"火箭\",@\"湖人\",@\"雷霆\"];\nUIPickerView *pickerView =[[UIPickerView alloc]init];\n[self.view addSubview:self.pickerView];\npickerView.frame =(CGRect){0,self.view.frame.size.height-160,320,180};\npickerView.delegate = self;//设置代理\npickerView.dataSource = self;//设置代理\npickerView.backgroundColor = [UIColor orangeColor];\n\n - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView\n{\n    return 1;\n}\n\n- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component\n{\n    return [pickerArray count];\n}\n-(NSString *) pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component\n{\n  return [pickerArray objectAtIndex:row];\n}\n\n- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component\n{\n  NSLog(@\"点击选择了\");\n}\n```\n\n### 14.UIScrollView\n\n```\nUIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 40, 200, 100)];\nscrollView.backgroundColor =  [UIColor blueColor];\n\n    CGFloat y=20;\n    for (int i=0; i<30;i++)\n    {\n        UILabel *lab = [[UILabel alloc]init];\n        lab.text = @\"第一章 约定的开始\";\n        [lab sizeToFit];\n        CGRect f= lab.frame;\n        f.origin.y = i*22;\n        lab.frame =f;\n        [scrollView addSubview:lab];\n        y += lab.bounds.size.height +10;\n    }\n    CGSize sz=scrollView.bounds.size;\n    sz.height = y;\n    scrollView.contentSize = sz;\n```\n\n### 15.UIProgressView\n  进度条\n```\nUIProgressView *progressView =[[UIProgressView alloc]initWithProgressViewStyle:UIProgressViewStyleDefault];\n  [self.view addSubview:progressView];\n  [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(onTimer:) userInfo:progressView repeats:YES];\n\n-(void) onTimer:(NSTimer *) timer\n{\nUIProgressView *progress =(UIProgressView *) timer.userInfo;\n  progress.progress += 0.1;\n  if(progress.progress == 1.0)\n  {\n      progress.progress =0;\n  }\n}\n```\n\n### 16.UIActivityIndicatorView\n活动指示器\n```\nUIActivityIndicatorView *activityView= [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];\n  [self.view addSubview:activityView];\n  [activityView startAnimating];//播放动画\n  [activityView stopAnimating];//停止动画\n  [activityView isAnimating];//判断是否在播放动画\n  self.view.backgroundColor=[UIColor orangeColor];//背景设置颜色方便预览该组件\n```\n\n### 17.UINavigationBar\n  UINavigationBar 导航栏 需要抱一个导航栏目UINavigationItem\n\n```\nUINavigationBar *navbar =[[UINavigationBar alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 44)];\n [self.view addSubview:navbar];\n UIBarButtonItem *leftButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"菜单\" style:UIBarButtonItemStylePlain target:self action:@selector(onSelectLeft:)];\n UIBarButtonItem *rightButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"设置\" style:UIBarButtonItemStylePlain target:self action:@selector(onSelectRight:)];\n UINavigationItem *navigationItem =[[UINavigationItem alloc]initWithTitle:@\"我爱IOS\"];\n [navbar pushNavigationItem:navigationItem animated:NO];\n [navigationItem setLeftBarButtonItem:leftButtonItem];\n [navigationItem setRightBarButtonItem:rightButtonItem];\n\n-(void) onSelectLeft:(UIBarButtonItem *) button\n{\n   NSLog(@\"点击左边\");\n}\n\n-(void) onSelectRight:(UIBarButtonItem *) button\n{\n   NSLog(@\"点击右边\");\n}\n```\n\n### 18.UITabBar\n\n```\nUITabBar *tabBar =[[UITabBar alloc]initWithFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height-44, self.view.frame.size.width, 44)];\n[self.view addSubview:tabBar];\nUITabBarItem *firstBarItem =[[UITabBarItem alloc]initWithTitle:@\"首页\" image:nil tag:1];\nUITabBarItem *secondBarItem =[[UITabBarItem alloc]initWithTitle:@\"我的\" image:nil tag:2];\n[tabBar setItems:@[firstBarItem,secondBarItem]];\n```\n\n### 19.UIApplication\n\n```\nNSURL *appStoreUrl = [NSURL URLWithString:@\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;amp;mt=8\"];\n[[UIApplication sharedApplication] openURL:appStoreUrl];\n```\n\n```\n  //退出编辑\n [[UIApplication sharedApplication].keyWindow endEditing:YES];\n\n  //设置网络状态\n [[UIApplication sharedApplication] setNetworkActivityIndicatorVisible:YES];//开启\n [[UIApplication sharedApplication] setNetworkActivityIndicatorVisible:NO];//关闭\n```\n\n### 20.UIRefreshControl\n  刷新组件，继承了UITableController 有refreshControl 属性存在\n```\nUIRefreshControl *refreshControl = [[UIRefreshControl alloc]init];\n  refreshControl.attributedTitle = [[NSAttributedString alloc]initWithString:@\"刷新中..\"];\n  [refreshControl addTarget:self action:@selector(refreshTableView) forControlEvents:UIControlEventValueChanged];\n  self.refreshControl = refreshControl;\n\n\n-(void) refreshTableView\n{\n  //刷新后请求\n}\n```\n\n### 21.UIImagePickerController\n查看相册\n```\nUIImagePickerController *pickerController = [[UIImagePickerController alloc]init];\npickerController.sourceType  = UIImagePickerControllerSourceTypePhotoLibrary;\npickerController.delegate = self;\n[self presentViewController:pickerController animated:YES completion:nil];\n\n-(void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\n{\n\n  if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypePhotoLibrary])\n  {\n     UIImage *image =  [info objectForKey:UIImagePickerControllerOriginalImage];\n     self.imageView.image = image;\n  }\n\n    [self dismissViewControllerAnimated:YES completion:nil];\n}\n```\n\n### 22.UICollectionView\n\n```\nUICollectionViewFlowLayout* flowLayout = [[UICollectionViewFlowLayout alloc]init];\nflowLayout.itemSize = CGSizeMake(120, 120);\n[flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];\nUICollectionView *collectionView = [[UICollectionView alloc]initWithFrame:rect collectionViewLayout:flowLayout ];\ncollectionView.backgroundColor = [UIColor whiteColor];\ncollectionView.dataSource = self;\ncollectionView.delegate = self;\n[self.view addSubview:self.collectionView];\n\n-(NSInteger) collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section\n{\n    return  1;\n}\n\n-(UICollectionViewCell *) collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@\"NodeCell\" forIndexPath:indexPath];\n    return cell;\n}\n\n\n-(void) collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    //选中子项\n}\n```\n### 23.MPMoviePlayerController\n  视频控制\n```\nNSURL *url = [NSURL URLWithString:@\"http://devimages.apple.com/iphone/samples/bipbop/bipbopall.m3u8\"];\nMPMoviePlayerController  *player =[[MPMoviePlayerController alloc]initWithContentURL:url];\nplayer.fullscreen = YES;\nCGRect winRect = [[UIScreen mainScreen] applicationFrame];\nCGRect rect = CGRectMake(0,0,winRect.size.height, winRect.size.width);\nplayer.controlStyle = MPMovieControlStyleDefault;\nplayer.view.frame = rect;\nplayer.view.center = CGPointMake(rect.size.width/2, rect.size.height/2);  \n[player.view setTransform:CGAffineTransformMakeRotation(M_PI/2)];\nlayer.scalingMode = MPMovieScalingModeAspectFill;\n[player play];\n[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(playCompleteFun:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];\n[self.view addSubview:player.view];\n\n-(void) playCompleteFun:(NSNotification *) notification\n{\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:nil];\n}\n```\n### 常用的一些代码片段记录\n\n#### 视频截图\n```\n- (UIImage *) captureFromView: (UIView *) aView\n{    \n    UIGraphicsBeginImageContext(aView.frame.size);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    [aView.layer renderInContext:context];\n    UIImage *image= UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();     \n    return image;\n}\n```\n\n#### 遇到block的情况下转为self\n\n```\n__weak typeof(self)weakSelf = self;\n__storng typeof(self)strongSelf = self;\n```\n\n### 常用的一些Build setting 记录\n\n#### Bitcode 的开启和关闭\n![bitcode](http://7xpj58.com1.z0.glb.clouddn.com/20150923200746917)\n\n#### pch文件开启和配置路径位置\n需要则在Precompile Prefix Header 开启 默认关闭\n##### Prefix Header 则配置相应的路径\n例如：**$(SRCROOT)/PrefixHeader.pch**\n![PrefixHeader](http://7xpj58.com1.z0.glb.clouddn.com/20150923201059584)\n\n##### Library Search Paths\n![Search Paths](http://7xpj58.com1.z0.glb.clouddn.com/20150923201555972)\n\n##### Product Name 产品名字设置\n![Product BundleId](http://7xpj58.com1.z0.glb.clouddn.com/20150923201750634)\n\n##### Other Linker Flags -Objc 设置\n![Other linker](http://7xpj58.com1.z0.glb.clouddn.com/20150923202008456)\n","source":"_posts/iPhone开发-常用组件.md","raw":"---\ntitle: iPhone开发-常用组件\ndate: 2017-11-15 17:35:41\ntags: [ios]\ncategories: ios\n---\n\n### 1. UIButton\n\n```\n CGRect frame = CGRectMake(0, 100, 80, 40);\n UIButton *button = [UIButton buttonWithType:UIButtonTypeRoundedRect];\n button.frame = frame;\n [button setTitle:@\"click\" forState: UIControlStateNormal];\n button.backgroundColor = [UIColor greenColor];\n [button addTarget:self action:@selector(buttonClicked:) forControlEvents:UIControlEventTouchUpInside];\n [self.view addSubview:button];\n\n -(void) buttonClicked:(UIButton *)button\n {\n   //添加code\n }\n```\n### 2. UIAlertView\n\n```\nUIAlertView *alert = [[UIAlertView alloc]initWithTitle:@\"标题\" message:@\"你的内存已满\" delegate:self cancelButtonTitle:@\"取消\" otherButtonTitles:nil, nil];\n   [alert show];\n\n```\n\n\n<!-- more -->\n### 3. UILabel\n\n```\nUILabel *label =[[UILabel alloc]initWithFrame:CGRectMake(0, 10, 200, 34)];\nlabel.textColor =[UIColor grayColor];\nlabel.font =[UIFont systemFontOfSize:18];\nlabel.text =@\"创建一个文本\";\nlabel.lineBreakMode = NSLineBreakByCharWrapping;\nlabel.numberOfLines = 0;\nlabel.backgroundColor =[UIColor grayColor];\nlabel.textAlignment = NSTextAlignmentCenter;\n```\n\n### 4. UITextField\n\n```\n\nUITextField *textField =[[UITextField alloc]initWithFrame:CGRectMake(10, 44, self.view.bounds.size.width-20,30)];\n textField.borderStyle = UITextBorderStyleRoundedRect;\n textField.placeholder = @\"请输入用户名\";\n textField.clearButtonMode = UITextFieldViewModeAlways;\n textField.delegate = self;\n textField.textColor = [UIColor grayColor];\n textField.keyboardType = UIKeyboardTypeDefault;\n textField.returnKeyType = UIReturnKeyDone;\n textField.clearButtonMode = UITextFieldViewModeWhileEditing;\n```\n\n### 5.UISlider\n\n```\nUISlider *slider =[[UISlider alloc]initWithFrame:CGRectMake(0, 100, 200, 33)];\n  [slider addTarget:self action:@selector(onChangeHandler:) forControlEvents:UIControlEventValueChanged];\n  [self.view addSubview:slider];\n\n-(void) onChangeHandler:(UISlider *) slider\n{\n    float value = slider.value;\n}\n```\n\n### 6.UISegmentedControl\n\n```\nUISegmentedControl *seg= [[UISegmentedControl alloc]initWithItems:@[@\"骑士\",@\"勇士\"]];\n   [self.view addSubview:seg];\n   seg.frame =CGRectMake(20, 200, 200, 33);\n   [seg addTarget:self action:@selector(onSelect:) forControlEvents:UIControlEventValueChanged];\n\n-(void) onSelect:(UISegmentedControl *) control\n{\n   NSInteger index = control.selectedSegmentIndex;\n    if (index==0)\n    {\n        NSLog(@\"点击骑士\");\n    }\n    else\n    {\n        NSLog(@\"点击勇士\");\n    }\n\n}\n\n```\n\n### 7.UIViewImage\n\n```\nUIImageView *imageView =[[UIImageView alloc]initWithImage:[UIImage imageNamed:@\"head.png\" ]];\nimageView.layer.cornerRadius = 4.0;\n```\n### 8.UISwitch\n\n```\nUISwitch *uiSwitch=[[UISwitch alloc]initWithFrame:CGRectMake(20, 200, 100, 33)];\n   [self.view addSubview:uiSwitch];\n   [uiSwitch setOn:YES animated:YES];\n   [uiSwitch addTarget:self action:@selector(onChange:) forControlEvents:UIControlEventValueChanged];\n\n-(void) onChange:(UISwitch *) uiswitch\n{\n  BOOL isOn =  uiswitch.isOn;\n  //两种方式输出真假值\n  NSLog(@\"%@\",  [NSNumber numberWithBool:isOn].stringValue);\n  NSLog(@\"%@\",  isOn ? @\"YES\":@\"NO\");\n}\n\n```\n\n### 9.UIActionSheet\n\n```\nUIActionSheet *actionSheet = [[UIActionSheet alloc]initWithTitle:nil delegate:self cancelButtonTitle:@\"取消\" destructiveButtonTitle:@\"微信\" otherButtonTitles:@\"新浪微博\",@\"腾讯微博\", nil];\nactionSheet.actionSheetStyle = UIActionSheetStyleDefault;\n[actionSheet showInView:self.view];\n\n-(void) actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex\n{\n    if(buttonIndex == 0)\n    {\n        NSLog(@\"微信\");\n    }\n    else if(buttonIndex ==1)\n    {\n        NSLog(@\"新浪微博\");\n    }\n    else if(buttonIndex == 2)\n    {\n        NSLog(@\"腾讯微博\");\n    }\n}\n\n```\n### 10.UIWindow\n\n```\nUIWindow *window =[[UIWindow alloc]initWithFrame:[UIScreen mainScreen].bounds];\n```\n\n### 11.UIBarButtonItem\n\n```\n//左边\nself.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"话题\" style:UIBarButtonItemStylePlain target:self action:@selector(showMenu)];\n //右边\nself.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"话题\" style:UIBarButtonItemStylePlain target:self action:@selector(showMenu)];\n\n-(void) showMenu\n{\n    [[NSNotificationCenter defaultCenter] postNotificationName:@\"ShowMenuCmd\" object:nil];\n}\n```\n\n### 12.UIWebView\n  UIWebView 的本地加载HTML页面\n```\nCGRect rect = [UIScreen mainScreen].bounds;\nUIWebView *webView = [[UIWebView alloc] initWithFrame:CGRectMake(0, 0, rect .size.width,rect.size.height)];\n[self.view addSubview:self.webView];\n[webView setUserInteractionEnabled:YES];//是否支持交互\nNSString *path =  [[NSBundle mainBundle] pathForResource:@\"index\" ofType:@\"html\"];\nNSURL *url = [NSURL fileURLWithPath:path];\n[webView loadRequest:[NSURLRequest requestWithURL:url]];   \nwebView.autoresizingMask = UIViewAutoresizingFlexibleHeight | UIViewAutoresizingFlexibleWidth;\n```\n### 13.UIPickerView\n选择器创建与代理设置\n\n```\nNSArray *pickerArray =@[@\"勇士\",@\"火箭\",@\"湖人\",@\"雷霆\"];\nUIPickerView *pickerView =[[UIPickerView alloc]init];\n[self.view addSubview:self.pickerView];\npickerView.frame =(CGRect){0,self.view.frame.size.height-160,320,180};\npickerView.delegate = self;//设置代理\npickerView.dataSource = self;//设置代理\npickerView.backgroundColor = [UIColor orangeColor];\n\n - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView\n{\n    return 1;\n}\n\n- (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component\n{\n    return [pickerArray count];\n}\n-(NSString *) pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component\n{\n  return [pickerArray objectAtIndex:row];\n}\n\n- (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component\n{\n  NSLog(@\"点击选择了\");\n}\n```\n\n### 14.UIScrollView\n\n```\nUIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 40, 200, 100)];\nscrollView.backgroundColor =  [UIColor blueColor];\n\n    CGFloat y=20;\n    for (int i=0; i<30;i++)\n    {\n        UILabel *lab = [[UILabel alloc]init];\n        lab.text = @\"第一章 约定的开始\";\n        [lab sizeToFit];\n        CGRect f= lab.frame;\n        f.origin.y = i*22;\n        lab.frame =f;\n        [scrollView addSubview:lab];\n        y += lab.bounds.size.height +10;\n    }\n    CGSize sz=scrollView.bounds.size;\n    sz.height = y;\n    scrollView.contentSize = sz;\n```\n\n### 15.UIProgressView\n  进度条\n```\nUIProgressView *progressView =[[UIProgressView alloc]initWithProgressViewStyle:UIProgressViewStyleDefault];\n  [self.view addSubview:progressView];\n  [NSTimer scheduledTimerWithTimeInterval:1.0 target:self selector:@selector(onTimer:) userInfo:progressView repeats:YES];\n\n-(void) onTimer:(NSTimer *) timer\n{\nUIProgressView *progress =(UIProgressView *) timer.userInfo;\n  progress.progress += 0.1;\n  if(progress.progress == 1.0)\n  {\n      progress.progress =0;\n  }\n}\n```\n\n### 16.UIActivityIndicatorView\n活动指示器\n```\nUIActivityIndicatorView *activityView= [[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];\n  [self.view addSubview:activityView];\n  [activityView startAnimating];//播放动画\n  [activityView stopAnimating];//停止动画\n  [activityView isAnimating];//判断是否在播放动画\n  self.view.backgroundColor=[UIColor orangeColor];//背景设置颜色方便预览该组件\n```\n\n### 17.UINavigationBar\n  UINavigationBar 导航栏 需要抱一个导航栏目UINavigationItem\n\n```\nUINavigationBar *navbar =[[UINavigationBar alloc]initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, 44)];\n [self.view addSubview:navbar];\n UIBarButtonItem *leftButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"菜单\" style:UIBarButtonItemStylePlain target:self action:@selector(onSelectLeft:)];\n UIBarButtonItem *rightButtonItem = [[UIBarButtonItem alloc]initWithTitle:@\"设置\" style:UIBarButtonItemStylePlain target:self action:@selector(onSelectRight:)];\n UINavigationItem *navigationItem =[[UINavigationItem alloc]initWithTitle:@\"我爱IOS\"];\n [navbar pushNavigationItem:navigationItem animated:NO];\n [navigationItem setLeftBarButtonItem:leftButtonItem];\n [navigationItem setRightBarButtonItem:rightButtonItem];\n\n-(void) onSelectLeft:(UIBarButtonItem *) button\n{\n   NSLog(@\"点击左边\");\n}\n\n-(void) onSelectRight:(UIBarButtonItem *) button\n{\n   NSLog(@\"点击右边\");\n}\n```\n\n### 18.UITabBar\n\n```\nUITabBar *tabBar =[[UITabBar alloc]initWithFrame:CGRectMake(0, [UIScreen mainScreen].bounds.size.height-44, self.view.frame.size.width, 44)];\n[self.view addSubview:tabBar];\nUITabBarItem *firstBarItem =[[UITabBarItem alloc]initWithTitle:@\"首页\" image:nil tag:1];\nUITabBarItem *secondBarItem =[[UITabBarItem alloc]initWithTitle:@\"我的\" image:nil tag:2];\n[tabBar setItems:@[firstBarItem,secondBarItem]];\n```\n\n### 19.UIApplication\n\n```\nNSURL *appStoreUrl = [NSURL URLWithString:@\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;amp;mt=8\"];\n[[UIApplication sharedApplication] openURL:appStoreUrl];\n```\n\n```\n  //退出编辑\n [[UIApplication sharedApplication].keyWindow endEditing:YES];\n\n  //设置网络状态\n [[UIApplication sharedApplication] setNetworkActivityIndicatorVisible:YES];//开启\n [[UIApplication sharedApplication] setNetworkActivityIndicatorVisible:NO];//关闭\n```\n\n### 20.UIRefreshControl\n  刷新组件，继承了UITableController 有refreshControl 属性存在\n```\nUIRefreshControl *refreshControl = [[UIRefreshControl alloc]init];\n  refreshControl.attributedTitle = [[NSAttributedString alloc]initWithString:@\"刷新中..\"];\n  [refreshControl addTarget:self action:@selector(refreshTableView) forControlEvents:UIControlEventValueChanged];\n  self.refreshControl = refreshControl;\n\n\n-(void) refreshTableView\n{\n  //刷新后请求\n}\n```\n\n### 21.UIImagePickerController\n查看相册\n```\nUIImagePickerController *pickerController = [[UIImagePickerController alloc]init];\npickerController.sourceType  = UIImagePickerControllerSourceTypePhotoLibrary;\npickerController.delegate = self;\n[self presentViewController:pickerController animated:YES completion:nil];\n\n-(void) imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info\n{\n\n  if([UIImagePickerController isSourceTypeAvailable:UIImagePickerControllerSourceTypePhotoLibrary])\n  {\n     UIImage *image =  [info objectForKey:UIImagePickerControllerOriginalImage];\n     self.imageView.image = image;\n  }\n\n    [self dismissViewControllerAnimated:YES completion:nil];\n}\n```\n\n### 22.UICollectionView\n\n```\nUICollectionViewFlowLayout* flowLayout = [[UICollectionViewFlowLayout alloc]init];\nflowLayout.itemSize = CGSizeMake(120, 120);\n[flowLayout setScrollDirection:UICollectionViewScrollDirectionVertical];\nUICollectionView *collectionView = [[UICollectionView alloc]initWithFrame:rect collectionViewLayout:flowLayout ];\ncollectionView.backgroundColor = [UIColor whiteColor];\ncollectionView.dataSource = self;\ncollectionView.delegate = self;\n[self.view addSubview:self.collectionView];\n\n-(NSInteger) collectionView:(UICollectionView *)collectionView numberOfItemsInSection:(NSInteger)section\n{\n    return  1;\n}\n\n-(UICollectionViewCell *) collectionView:(UICollectionView *)collectionView cellForItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    UICollectionViewCell *cell = [collectionView dequeueReusableCellWithReuseIdentifier:@\"NodeCell\" forIndexPath:indexPath];\n    return cell;\n}\n\n\n-(void) collectionView:(UICollectionView *)collectionView didSelectItemAtIndexPath:(NSIndexPath *)indexPath\n{\n    //选中子项\n}\n```\n### 23.MPMoviePlayerController\n  视频控制\n```\nNSURL *url = [NSURL URLWithString:@\"http://devimages.apple.com/iphone/samples/bipbop/bipbopall.m3u8\"];\nMPMoviePlayerController  *player =[[MPMoviePlayerController alloc]initWithContentURL:url];\nplayer.fullscreen = YES;\nCGRect winRect = [[UIScreen mainScreen] applicationFrame];\nCGRect rect = CGRectMake(0,0,winRect.size.height, winRect.size.width);\nplayer.controlStyle = MPMovieControlStyleDefault;\nplayer.view.frame = rect;\nplayer.view.center = CGPointMake(rect.size.width/2, rect.size.height/2);  \n[player.view setTransform:CGAffineTransformMakeRotation(M_PI/2)];\nlayer.scalingMode = MPMovieScalingModeAspectFill;\n[player play];\n[[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(playCompleteFun:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];\n[self.view addSubview:player.view];\n\n-(void) playCompleteFun:(NSNotification *) notification\n{\n    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:nil];\n}\n```\n### 常用的一些代码片段记录\n\n#### 视频截图\n```\n- (UIImage *) captureFromView: (UIView *) aView\n{    \n    UIGraphicsBeginImageContext(aView.frame.size);\n    CGContextRef context = UIGraphicsGetCurrentContext();\n    [aView.layer renderInContext:context];\n    UIImage *image= UIGraphicsGetImageFromCurrentImageContext();\n    UIGraphicsEndImageContext();     \n    return image;\n}\n```\n\n#### 遇到block的情况下转为self\n\n```\n__weak typeof(self)weakSelf = self;\n__storng typeof(self)strongSelf = self;\n```\n\n### 常用的一些Build setting 记录\n\n#### Bitcode 的开启和关闭\n![bitcode](http://7xpj58.com1.z0.glb.clouddn.com/20150923200746917)\n\n#### pch文件开启和配置路径位置\n需要则在Precompile Prefix Header 开启 默认关闭\n##### Prefix Header 则配置相应的路径\n例如：**$(SRCROOT)/PrefixHeader.pch**\n![PrefixHeader](http://7xpj58.com1.z0.glb.clouddn.com/20150923201059584)\n\n##### Library Search Paths\n![Search Paths](http://7xpj58.com1.z0.glb.clouddn.com/20150923201555972)\n\n##### Product Name 产品名字设置\n![Product BundleId](http://7xpj58.com1.z0.glb.clouddn.com/20150923201750634)\n\n##### Other Linker Flags -Objc 设置\n![Other linker](http://7xpj58.com1.z0.glb.clouddn.com/20150923202008456)\n","slug":"iPhone开发-常用组件","published":1,"updated":"2017-11-15T12:14:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuku002dpev2ez0p2r5n","content":"<h3 id=\"1-UIButton\"><a href=\"#1-UIButton\" class=\"headerlink\" title=\"1. UIButton\"></a>1. UIButton</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CGRect</span> frame = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">80</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\"><span class=\"built_in\">UIButton</span> *button = [<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeRoundedRect</span>];</span><br><span class=\"line\">button.frame = frame;</span><br><span class=\"line\">[button setTitle:<span class=\"string\">@\"click\"</span> forState: <span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">button.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">[button addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(buttonClicked:) forControlEvents:<span class=\"built_in\">UIControlEventTouchUpInside</span>];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:button];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) buttonClicked:(<span class=\"built_in\">UIButton</span> *)button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//添加code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-UIAlertView\"><a href=\"#2-UIAlertView\" class=\"headerlink\" title=\"2. UIAlertView\"></a>2. UIAlertView</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIAlertView *alert = [[UIAlertView alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"标题\"</span> <span class=\"string\">message:</span>@<span class=\"string\">\"你的内存已满\"</span> <span class=\"string\">delegate:</span>self <span class=\"string\">cancelButtonTitle:</span>@<span class=\"string\">\"取消\"</span> <span class=\"string\">otherButtonTitles:</span>nil, nil];</span><br><span class=\"line\">   [alert show];</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"3-UILabel\"><a href=\"#3-UILabel\" class=\"headerlink\" title=\"3. UILabel\"></a>3. UILabel</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UILabel *<span class=\"keyword\">label</span><span class=\"bash\"> =[[UILabel alloc]initWithFrame:CGRectMake(0, 10, 200, 34)];</span></span><br><span class=\"line\"><span class=\"bash\">label.textColor =[UIColor grayColor];</span></span><br><span class=\"line\"><span class=\"bash\">label.font =[UIFont systemFontOfSize:18];</span></span><br><span class=\"line\"><span class=\"bash\">label.text =@<span class=\"string\">\"创建一个文本\"</span>;</span></span><br><span class=\"line\"><span class=\"bash\">label.lineBreakMode = NSLineBreakByCharWrapping;</span></span><br><span class=\"line\"><span class=\"bash\">label.numberOfLines = 0;</span></span><br><span class=\"line\"><span class=\"bash\">label.backgroundColor =[UIColor grayColor];</span></span><br><span class=\"line\"><span class=\"bash\">label.textAlignment = NSTextAlignmentCenter;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-UITextField\"><a href=\"#4-UITextField\" class=\"headerlink\" title=\"4. UITextField\"></a>4. UITextField</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UITextField</span> *textField =[[<span class=\"built_in\">UITextField</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">10</span>, <span class=\"number\">44</span>, <span class=\"keyword\">self</span>.view.bounds.size.width<span class=\"number\">-20</span>,<span class=\"number\">30</span>)];</span><br><span class=\"line\"> textField.borderStyle = <span class=\"built_in\">UITextBorderStyleRoundedRect</span>;</span><br><span class=\"line\"> textField.placeholder = <span class=\"string\">@\"请输入用户名\"</span>;</span><br><span class=\"line\"> textField.clearButtonMode = <span class=\"built_in\">UITextFieldViewModeAlways</span>;</span><br><span class=\"line\"> textField.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\"> textField.textColor = [<span class=\"built_in\">UIColor</span> grayColor];</span><br><span class=\"line\"> textField.keyboardType = <span class=\"built_in\">UIKeyboardTypeDefault</span>;</span><br><span class=\"line\"> textField.returnKeyType = <span class=\"built_in\">UIReturnKeyDone</span>;</span><br><span class=\"line\"> textField.clearButtonMode = <span class=\"built_in\">UITextFieldViewModeWhileEditing</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-UISlider\"><a href=\"#5-UISlider\" class=\"headerlink\" title=\"5.UISlider\"></a>5.UISlider</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UISlider *slider =[[UISlider alloc]<span class=\"string\">initWithFrame:</span>CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">33</span>)];</span><br><span class=\"line\">  [slider <span class=\"string\">addTarget:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(<span class=\"string\">onChangeHandler:</span>) <span class=\"string\">forControlEvents:</span>UIControlEventValueChanged];</span><br><span class=\"line\">  [self.view <span class=\"string\">addSubview:</span>slider];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) <span class=\"string\">onChangeHandler:</span>(UISlider *) slider</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> value = slider.value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-UISegmentedControl\"><a href=\"#6-UISegmentedControl\" class=\"headerlink\" title=\"6.UISegmentedControl\"></a>6.UISegmentedControl</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UISegmentedControl</span> *seg= [[<span class=\"built_in\">UISegmentedControl</span> alloc]initWithItems:@[<span class=\"string\">@\"骑士\"</span>,<span class=\"string\">@\"勇士\"</span>]];</span><br><span class=\"line\">   [<span class=\"keyword\">self</span>.view addSubview:seg];</span><br><span class=\"line\">   seg.frame =<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">20</span>, <span class=\"number\">200</span>, <span class=\"number\">200</span>, <span class=\"number\">33</span>);</span><br><span class=\"line\">   [seg addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelect:) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelect:(<span class=\"built_in\">UISegmentedControl</span> *) control</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSInteger</span> index = control.selectedSegmentIndex;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击骑士\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击勇士\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-UIViewImage\"><a href=\"#7-UIViewImage\" class=\"headerlink\" title=\"7.UIViewImage\"></a>7.UIViewImage</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIImageView *imageView =<span class=\"string\">[[UIImageView alloc]initWithImage:[UIImage imageNamed:@\"head.png\" ]]</span>;</span><br><span class=\"line\">imageView.layer.cornerRadius = <span class=\"number\">4.0</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-UISwitch\"><a href=\"#8-UISwitch\" class=\"headerlink\" title=\"8.UISwitch\"></a>8.UISwitch</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UISwitch</span> *uiSwitch=[[<span class=\"built_in\">UISwitch</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">20</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">33</span>)];</span><br><span class=\"line\">   [<span class=\"keyword\">self</span>.view addSubview:uiSwitch];</span><br><span class=\"line\">   [uiSwitch setOn:<span class=\"literal\">YES</span> animated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">   [uiSwitch addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onChange:) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onChange:(<span class=\"built_in\">UISwitch</span> *) uiswitch</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">BOOL</span> isOn =  uiswitch.isOn;</span><br><span class=\"line\">  <span class=\"comment\">//两种方式输出真假值</span></span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,  [<span class=\"built_in\">NSNumber</span> numberWithBool:isOn].stringValue);</span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,  isOn ? <span class=\"string\">@\"YES\"</span>:<span class=\"string\">@\"NO\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-UIActionSheet\"><a href=\"#9-UIActionSheet\" class=\"headerlink\" title=\"9.UIActionSheet\"></a>9.UIActionSheet</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIActionSheet</span> *actionSheet = [[<span class=\"built_in\">UIActionSheet</span> alloc]initWithTitle:<span class=\"literal\">nil</span> delegate:<span class=\"keyword\">self</span> cancelButtonTitle:<span class=\"string\">@\"取消\"</span> destructiveButtonTitle:<span class=\"string\">@\"微信\"</span> otherButtonTitles:<span class=\"string\">@\"新浪微博\"</span>,<span class=\"string\">@\"腾讯微博\"</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">actionSheet.actionSheetStyle = <span class=\"built_in\">UIActionSheetStyleDefault</span>;</span><br><span class=\"line\">[actionSheet showInView:<span class=\"keyword\">self</span>.view];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) actionSheet:(<span class=\"built_in\">UIActionSheet</span> *)actionSheet clickedButtonAtIndex:(<span class=\"built_in\">NSInteger</span>)buttonIndex</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(buttonIndex == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"微信\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(buttonIndex ==<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"新浪微博\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(buttonIndex == <span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"腾讯微博\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-UIWindow\"><a href=\"#10-UIWindow\" class=\"headerlink\" title=\"10.UIWindow\"></a>10.UIWindow</h3><figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIWindow *window =<span class=\"comment\">[<span class=\"comment\">[UIWindow alloc]</span>initWithFrame:<span class=\"comment\">[UIScreen mainScreen]</span>.bounds]</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-UIBarButtonItem\"><a href=\"#11-UIBarButtonItem\" class=\"headerlink\" title=\"11.UIBarButtonItem\"></a>11.UIBarButtonItem</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//左边</span></span><br><span class=\"line\">self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"话题\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(showMenu)];</span><br><span class=\"line\"> <span class=\"comment\">//右边</span></span><br><span class=\"line\">self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"话题\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(showMenu)];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) showMenu</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] <span class=\"string\">postNotificationName:</span>@<span class=\"string\">\"ShowMenuCmd\"</span> <span class=\"string\">object:</span>nil];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-UIWebView\"><a href=\"#12-UIWebView\" class=\"headerlink\" title=\"12.UIWebView\"></a>12.UIWebView</h3><p>  UIWebView 的本地加载HTML页面<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CGRect</span> rect = [<span class=\"built_in\">UIScreen</span> mainScreen].bounds;</span><br><span class=\"line\"><span class=\"built_in\">UIWebView</span> *webView = [[<span class=\"built_in\">UIWebView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, rect .size.width,rect.size.height)];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.webView];</span><br><span class=\"line\">[webView setUserInteractionEnabled:<span class=\"literal\">YES</span>];<span class=\"comment\">//是否支持交互</span></span><br><span class=\"line\"><span class=\"built_in\">NSString</span> *path =  [[<span class=\"built_in\">NSBundle</span> mainBundle] pathForResource:<span class=\"string\">@\"index\"</span> ofType:<span class=\"string\">@\"html\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> fileURLWithPath:path];</span><br><span class=\"line\">[webView loadRequest:[<span class=\"built_in\">NSURLRequest</span> requestWithURL:url]];   </span><br><span class=\"line\">webView.autoresizingMask = <span class=\"built_in\">UIViewAutoresizingFlexibleHeight</span> | <span class=\"built_in\">UIViewAutoresizingFlexibleWidth</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"13-UIPickerView\"><a href=\"#13-UIPickerView\" class=\"headerlink\" title=\"13.UIPickerView\"></a>13.UIPickerView</h3><p>选择器创建与代理设置</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSArray</span> *pickerArray =@[<span class=\"string\">@\"勇士\"</span>,<span class=\"string\">@\"火箭\"</span>,<span class=\"string\">@\"湖人\"</span>,<span class=\"string\">@\"雷霆\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">UIPickerView</span> *pickerView =[[<span class=\"built_in\">UIPickerView</span> alloc]init];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.pickerView];</span><br><span class=\"line\">pickerView.frame =(<span class=\"built_in\">CGRect</span>)&#123;<span class=\"number\">0</span>,<span class=\"keyword\">self</span>.view.frame.size.height<span class=\"number\">-160</span>,<span class=\"number\">320</span>,<span class=\"number\">180</span>&#125;;</span><br><span class=\"line\">pickerView.delegate = <span class=\"keyword\">self</span>;<span class=\"comment\">//设置代理</span></span><br><span class=\"line\">pickerView.dataSource = <span class=\"keyword\">self</span>;<span class=\"comment\">//设置代理</span></span><br><span class=\"line\">pickerView.backgroundColor = [<span class=\"built_in\">UIColor</span> orangeColor];</span><br><span class=\"line\"></span><br><span class=\"line\"> - (<span class=\"built_in\">NSInteger</span>)numberOfComponentsInPickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView numberOfRowsInComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [pickerArray count];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *) pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView titleForRow:(<span class=\"built_in\">NSInteger</span>)row forComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [pickerArray objectAtIndex:row];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView didSelectRow:(<span class=\"built_in\">NSInteger</span>)row inComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击选择了\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-UIScrollView\"><a href=\"#14-UIScrollView\" class=\"headerlink\" title=\"14.UIScrollView\"></a>14.UIScrollView</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIScrollView *<span class=\"keyword\">scrollView </span>= [[UIScrollView alloc] initWithFrame:CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">40</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">scrollView.backgroundColor </span>=  [UIColor <span class=\"keyword\">blueColor];</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   CGFloat y=<span class=\"number\">20</span><span class=\"comment\">;</span></span><br><span class=\"line\">    for (int i=<span class=\"number\">0</span><span class=\"comment\">; i&lt;30;i++)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        UILabel *lab = [[UILabel alloc]init]<span class=\"comment\">;</span></span><br><span class=\"line\">        lab<span class=\"meta\">.text</span> = @<span class=\"string\">\"第一章 约定的开始\"</span><span class=\"comment\">;</span></span><br><span class=\"line\">        [lab sizeToFit]<span class=\"comment\">;</span></span><br><span class=\"line\">        CGRect f= lab.frame<span class=\"comment\">;</span></span><br><span class=\"line\">        f.<span class=\"keyword\">origin.y </span>= i*<span class=\"number\">22</span><span class=\"comment\">;</span></span><br><span class=\"line\">        lab.frame =f<span class=\"comment\">;</span></span><br><span class=\"line\">        [<span class=\"keyword\">scrollView </span><span class=\"keyword\">addSubview:lab];</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>       y += lab.<span class=\"keyword\">bounds.size.height </span>+<span class=\"number\">10</span><span class=\"comment\">;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    CGSize sz=<span class=\"keyword\">scrollView.bounds.size;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   sz.height = y<span class=\"comment\">;</span></span><br><span class=\"line\">    <span class=\"keyword\">scrollView.contentSize </span>= sz<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"15-UIProgressView\"><a href=\"#15-UIProgressView\" class=\"headerlink\" title=\"15.UIProgressView\"></a>15.UIProgressView</h3><p>  进度条<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIProgressView</span> *progressView =[[<span class=\"built_in\">UIProgressView</span> alloc]initWithProgressViewStyle:<span class=\"built_in\">UIProgressViewStyleDefault</span>];</span><br><span class=\"line\">  [<span class=\"keyword\">self</span>.view addSubview:progressView];</span><br><span class=\"line\">  [<span class=\"built_in\">NSTimer</span> scheduledTimerWithTimeInterval:<span class=\"number\">1.0</span> target:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(onTimer:) userInfo:progressView repeats:<span class=\"literal\">YES</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onTimer:(<span class=\"built_in\">NSTimer</span> *) timer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">UIProgressView</span> *progress =(<span class=\"built_in\">UIProgressView</span> *) timer.userInfo;</span><br><span class=\"line\">  progress.progress += <span class=\"number\">0.1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(progress.progress == <span class=\"number\">1.0</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      progress.progress =<span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"16-UIActivityIndicatorView\"><a href=\"#16-UIActivityIndicatorView\" class=\"headerlink\" title=\"16.UIActivityIndicatorView\"></a>16.UIActivityIndicatorView</h3><p>活动指示器<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIActivityIndicatorView</span> *activityView= [[<span class=\"built_in\">UIActivityIndicatorView</span> alloc]initWithActivityIndicatorStyle:<span class=\"built_in\">UIActivityIndicatorViewStyleWhiteLarge</span>];</span><br><span class=\"line\">  [<span class=\"keyword\">self</span>.view addSubview:activityView];</span><br><span class=\"line\">  [activityView startAnimating];<span class=\"comment\">//播放动画</span></span><br><span class=\"line\">  [activityView stopAnimating];<span class=\"comment\">//停止动画</span></span><br><span class=\"line\">  [activityView isAnimating];<span class=\"comment\">//判断是否在播放动画</span></span><br><span class=\"line\">  <span class=\"keyword\">self</span>.view.backgroundColor=[<span class=\"built_in\">UIColor</span> orangeColor];<span class=\"comment\">//背景设置颜色方便预览该组件</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"17-UINavigationBar\"><a href=\"#17-UINavigationBar\" class=\"headerlink\" title=\"17.UINavigationBar\"></a>17.UINavigationBar</h3><p>  UINavigationBar 导航栏 需要抱一个导航栏目UINavigationItem</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UINavigationBar</span> *navbar =[[<span class=\"built_in\">UINavigationBar</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">self</span>.view.frame.size.width, <span class=\"number\">44</span>)];</span><br><span class=\"line\"> [<span class=\"keyword\">self</span>.view addSubview:navbar];</span><br><span class=\"line\"> <span class=\"built_in\">UIBarButtonItem</span> *leftButtonItem = [[<span class=\"built_in\">UIBarButtonItem</span> alloc]initWithTitle:<span class=\"string\">@\"菜单\"</span> style:<span class=\"built_in\">UIBarButtonItemStylePlain</span> target:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelectLeft:)];</span><br><span class=\"line\"> <span class=\"built_in\">UIBarButtonItem</span> *rightButtonItem = [[<span class=\"built_in\">UIBarButtonItem</span> alloc]initWithTitle:<span class=\"string\">@\"设置\"</span> style:<span class=\"built_in\">UIBarButtonItemStylePlain</span> target:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelectRight:)];</span><br><span class=\"line\"> <span class=\"built_in\">UINavigationItem</span> *navigationItem =[[<span class=\"built_in\">UINavigationItem</span> alloc]initWithTitle:<span class=\"string\">@\"我爱IOS\"</span>];</span><br><span class=\"line\"> [navbar pushNavigationItem:navigationItem animated:<span class=\"literal\">NO</span>];</span><br><span class=\"line\"> [navigationItem setLeftBarButtonItem:leftButtonItem];</span><br><span class=\"line\"> [navigationItem setRightBarButtonItem:rightButtonItem];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelectLeft:(<span class=\"built_in\">UIBarButtonItem</span> *) button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击左边\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelectRight:(<span class=\"built_in\">UIBarButtonItem</span> *) button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击右边\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"18-UITabBar\"><a href=\"#18-UITabBar\" class=\"headerlink\" title=\"18.UITabBar\"></a>18.UITabBar</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UITabBar</span> *tabBar =[[<span class=\"built_in\">UITabBar</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, [<span class=\"built_in\">UIScreen</span> mainScreen].bounds.size.height<span class=\"number\">-44</span>, <span class=\"keyword\">self</span>.view.frame.size.width, <span class=\"number\">44</span>)];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:tabBar];</span><br><span class=\"line\"><span class=\"built_in\">UITabBarItem</span> *firstBarItem =[[<span class=\"built_in\">UITabBarItem</span> alloc]initWithTitle:<span class=\"string\">@\"首页\"</span> image:<span class=\"literal\">nil</span> tag:<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">UITabBarItem</span> *secondBarItem =[[<span class=\"built_in\">UITabBarItem</span> alloc]initWithTitle:<span class=\"string\">@\"我的\"</span> image:<span class=\"literal\">nil</span> tag:<span class=\"number\">2</span>];</span><br><span class=\"line\">[tabBar setItems:@[firstBarItem,secondBarItem]];</span><br></pre></td></tr></table></figure>\n<h3 id=\"19-UIApplication\"><a href=\"#19-UIApplication\" class=\"headerlink\" title=\"19.UIApplication\"></a>19.UIApplication</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSURL *appStoreUrl = [NSURL URLWithString:@<span class=\"string\">\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;amp;amp;mt=8\"</span>]<span class=\"comment\">;</span></span><br><span class=\"line\">[[UIApplication <span class=\"keyword\">sharedApplication] </span>openURL:appStoreUrl]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//退出编辑</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span><span class=\"selector-class\">.keyWindow</span> <span class=\"selector-tag\">endEditing</span><span class=\"selector-pseudo\">:YES</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//设置网络状态</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span> <span class=\"selector-tag\">setNetworkActivityIndicatorVisible</span><span class=\"selector-pseudo\">:YES</span>];<span class=\"comment\">//开启</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span> <span class=\"selector-tag\">setNetworkActivityIndicatorVisible</span><span class=\"selector-pseudo\">:NO</span>];<span class=\"comment\">//关闭</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"20-UIRefreshControl\"><a href=\"#20-UIRefreshControl\" class=\"headerlink\" title=\"20.UIRefreshControl\"></a>20.UIRefreshControl</h3><p>  刷新组件，继承了UITableController 有refreshControl 属性存在<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIRefreshControl</span> *refreshControl = [[<span class=\"built_in\">UIRefreshControl</span> alloc]init];</span><br><span class=\"line\">  refreshControl.attributedTitle = [[<span class=\"built_in\">NSAttributedString</span> alloc]initWithString:<span class=\"string\">@\"刷新中..\"</span>];</span><br><span class=\"line\">  [refreshControl addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(refreshTableView) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\">  <span class=\"keyword\">self</span>.refreshControl = refreshControl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) refreshTableView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//刷新后请求</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"21-UIImagePickerController\"><a href=\"#21-UIImagePickerController\" class=\"headerlink\" title=\"21.UIImagePickerController\"></a>21.UIImagePickerController</h3><p>查看相册<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImagePickerController</span> *pickerController = [[<span class=\"built_in\">UIImagePickerController</span> alloc]init];</span><br><span class=\"line\">pickerController.sourceType  = <span class=\"built_in\">UIImagePickerControllerSourceTypePhotoLibrary</span>;</span><br><span class=\"line\">pickerController.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">[<span class=\"keyword\">self</span> presentViewController:pickerController animated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) imagePickerController:(<span class=\"built_in\">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class=\"built_in\">NSDictionary</span> *)info</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>([<span class=\"built_in\">UIImagePickerController</span> isSourceTypeAvailable:<span class=\"built_in\">UIImagePickerControllerSourceTypePhotoLibrary</span>])</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">     <span class=\"built_in\">UIImage</span> *image =  [info objectForKey:<span class=\"built_in\">UIImagePickerControllerOriginalImage</span>];</span><br><span class=\"line\">     <span class=\"keyword\">self</span>.imageView.image = image;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"keyword\">self</span> dismissViewControllerAnimated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"22-UICollectionView\"><a href=\"#22-UICollectionView\" class=\"headerlink\" title=\"22.UICollectionView\"></a>22.UICollectionView</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UICollectionViewFlowLayout</span>* flowLayout = [[<span class=\"built_in\">UICollectionViewFlowLayout</span> alloc]init];</span><br><span class=\"line\">flowLayout.itemSize = <span class=\"built_in\">CGSizeMake</span>(<span class=\"number\">120</span>, <span class=\"number\">120</span>);</span><br><span class=\"line\">[flowLayout setScrollDirection:<span class=\"built_in\">UICollectionViewScrollDirectionVertical</span>];</span><br><span class=\"line\"><span class=\"built_in\">UICollectionView</span> *collectionView = [[<span class=\"built_in\">UICollectionView</span> alloc]initWithFrame:rect collectionViewLayout:flowLayout ];</span><br><span class=\"line\">collectionView.backgroundColor = [<span class=\"built_in\">UIColor</span> whiteColor];</span><br><span class=\"line\">collectionView.dataSource = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">collectionView.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.collectionView];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSInteger</span>) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView numberOfItemsInSection:(<span class=\"built_in\">NSInteger</span>)section</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UICollectionViewCell</span> *) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView cellForItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">UICollectionViewCell</span> *cell = [collectionView dequeueReusableCellWithReuseIdentifier:<span class=\"string\">@\"NodeCell\"</span> forIndexPath:indexPath];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView didSelectItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//选中子项</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"23-MPMoviePlayerController\"><a href=\"#23-MPMoviePlayerController\" class=\"headerlink\" title=\"23.MPMoviePlayerController\"></a>23.MPMoviePlayerController</h3><p>  视频控制<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://devimages.apple.com/iphone/samples/bipbop/bipbopall.m3u8\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">MPMoviePlayerController</span>  *player =[[<span class=\"built_in\">MPMoviePlayerController</span> alloc]initWithContentURL:url];</span><br><span class=\"line\">player.fullscreen = <span class=\"literal\">YES</span>;</span><br><span class=\"line\"><span class=\"built_in\">CGRect</span> winRect = [[<span class=\"built_in\">UIScreen</span> mainScreen] applicationFrame];</span><br><span class=\"line\"><span class=\"built_in\">CGRect</span> rect = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,winRect.size.height, winRect.size.width);</span><br><span class=\"line\">player.controlStyle = <span class=\"built_in\">MPMovieControlStyleDefault</span>;</span><br><span class=\"line\">player.view.frame = rect;</span><br><span class=\"line\">player.view.center = <span class=\"built_in\">CGPointMake</span>(rect.size.width/<span class=\"number\">2</span>, rect.size.height/<span class=\"number\">2</span>);  </span><br><span class=\"line\">[player.view setTransform:<span class=\"built_in\">CGAffineTransformMakeRotation</span>(M_PI/<span class=\"number\">2</span>)];</span><br><span class=\"line\">layer.scalingMode = <span class=\"built_in\">MPMovieScalingModeAspectFill</span>;</span><br><span class=\"line\">[player play];</span><br><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter] addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(playCompleteFun:) name:<span class=\"built_in\">MPMoviePlayerPlaybackDidFinishNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:player.view];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) playCompleteFun:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter] removeObserver:<span class=\"keyword\">self</span> name:<span class=\"built_in\">MPMoviePlayerPlaybackDidFinishNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"常用的一些代码片段记录\"><a href=\"#常用的一些代码片段记录\" class=\"headerlink\" title=\"常用的一些代码片段记录\"></a>常用的一些代码片段记录</h3><h4 id=\"视频截图\"><a href=\"#视频截图\" class=\"headerlink\" title=\"视频截图\"></a>视频截图</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">UIImage</span> *) captureFromView: (<span class=\"built_in\">UIView</span> *) aView</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    <span class=\"built_in\">UIGraphicsBeginImageContext</span>(aView.frame.size);</span><br><span class=\"line\">    <span class=\"built_in\">CGContextRef</span> context = <span class=\"built_in\">UIGraphicsGetCurrentContext</span>();</span><br><span class=\"line\">    [aView.layer renderInContext:context];</span><br><span class=\"line\">    <span class=\"built_in\">UIImage</span> *image= <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class=\"line\">    <span class=\"built_in\">UIGraphicsEndImageContext</span>();     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> image;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"遇到block的情况下转为self\"><a href=\"#遇到block的情况下转为self\" class=\"headerlink\" title=\"遇到block的情况下转为self\"></a>遇到block的情况下转为self</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__<span class=\"keyword\">weak</span> <span class=\"keyword\">typeof</span>(<span class=\"keyword\">self</span>)weakSelf = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">__storng <span class=\"keyword\">typeof</span>(<span class=\"keyword\">self</span>)strongSelf = <span class=\"keyword\">self</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用的一些Build-setting-记录\"><a href=\"#常用的一些Build-setting-记录\" class=\"headerlink\" title=\"常用的一些Build setting 记录\"></a>常用的一些Build setting 记录</h3><h4 id=\"Bitcode-的开启和关闭\"><a href=\"#Bitcode-的开启和关闭\" class=\"headerlink\" title=\"Bitcode 的开启和关闭\"></a>Bitcode 的开启和关闭</h4><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923200746917\" alt=\"bitcode\"></p>\n<h4 id=\"pch文件开启和配置路径位置\"><a href=\"#pch文件开启和配置路径位置\" class=\"headerlink\" title=\"pch文件开启和配置路径位置\"></a>pch文件开启和配置路径位置</h4><p>需要则在Precompile Prefix Header 开启 默认关闭</p>\n<h5 id=\"Prefix-Header-则配置相应的路径\"><a href=\"#Prefix-Header-则配置相应的路径\" class=\"headerlink\" title=\"Prefix Header 则配置相应的路径\"></a>Prefix Header 则配置相应的路径</h5><p>例如：<strong>$(SRCROOT)/PrefixHeader.pch</strong><br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201059584\" alt=\"PrefixHeader\"></p>\n<h5 id=\"Library-Search-Paths\"><a href=\"#Library-Search-Paths\" class=\"headerlink\" title=\"Library Search Paths\"></a>Library Search Paths</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201555972\" alt=\"Search Paths\"></p>\n<h5 id=\"Product-Name-产品名字设置\"><a href=\"#Product-Name-产品名字设置\" class=\"headerlink\" title=\"Product Name 产品名字设置\"></a>Product Name 产品名字设置</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201750634\" alt=\"Product BundleId\"></p>\n<h5 id=\"Other-Linker-Flags-Objc-设置\"><a href=\"#Other-Linker-Flags-Objc-设置\" class=\"headerlink\" title=\"Other Linker Flags -Objc 设置\"></a>Other Linker Flags -Objc 设置</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923202008456\" alt=\"Other linker\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"1-UIButton\"><a href=\"#1-UIButton\" class=\"headerlink\" title=\"1. UIButton\"></a>1. UIButton</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CGRect</span> frame = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">80</span>, <span class=\"number\">40</span>);</span><br><span class=\"line\"><span class=\"built_in\">UIButton</span> *button = [<span class=\"built_in\">UIButton</span> buttonWithType:<span class=\"built_in\">UIButtonTypeRoundedRect</span>];</span><br><span class=\"line\">button.frame = frame;</span><br><span class=\"line\">[button setTitle:<span class=\"string\">@\"click\"</span> forState: <span class=\"built_in\">UIControlStateNormal</span>];</span><br><span class=\"line\">button.backgroundColor = [<span class=\"built_in\">UIColor</span> greenColor];</span><br><span class=\"line\">[button addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(buttonClicked:) forControlEvents:<span class=\"built_in\">UIControlEventTouchUpInside</span>];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:button];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) buttonClicked:(<span class=\"built_in\">UIButton</span> *)button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//添加code</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-UIAlertView\"><a href=\"#2-UIAlertView\" class=\"headerlink\" title=\"2. UIAlertView\"></a>2. UIAlertView</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIAlertView *alert = [[UIAlertView alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"标题\"</span> <span class=\"string\">message:</span>@<span class=\"string\">\"你的内存已满\"</span> <span class=\"string\">delegate:</span>self <span class=\"string\">cancelButtonTitle:</span>@<span class=\"string\">\"取消\"</span> <span class=\"string\">otherButtonTitles:</span>nil, nil];</span><br><span class=\"line\">   [alert show];</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"3-UILabel\"><a href=\"#3-UILabel\" class=\"headerlink\" title=\"3. UILabel\"></a>3. UILabel</h3><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UILabel *<span class=\"keyword\">label</span><span class=\"bash\"> =[[UILabel alloc]initWithFrame:CGRectMake(0, 10, 200, 34)];</span></span><br><span class=\"line\"><span class=\"bash\">label.textColor =[UIColor grayColor];</span></span><br><span class=\"line\"><span class=\"bash\">label.font =[UIFont systemFontOfSize:18];</span></span><br><span class=\"line\"><span class=\"bash\">label.text =@<span class=\"string\">\"创建一个文本\"</span>;</span></span><br><span class=\"line\"><span class=\"bash\">label.lineBreakMode = NSLineBreakByCharWrapping;</span></span><br><span class=\"line\"><span class=\"bash\">label.numberOfLines = 0;</span></span><br><span class=\"line\"><span class=\"bash\">label.backgroundColor =[UIColor grayColor];</span></span><br><span class=\"line\"><span class=\"bash\">label.textAlignment = NSTextAlignmentCenter;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"4-UITextField\"><a href=\"#4-UITextField\" class=\"headerlink\" title=\"4. UITextField\"></a>4. UITextField</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">UITextField</span> *textField =[[<span class=\"built_in\">UITextField</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">10</span>, <span class=\"number\">44</span>, <span class=\"keyword\">self</span>.view.bounds.size.width<span class=\"number\">-20</span>,<span class=\"number\">30</span>)];</span><br><span class=\"line\"> textField.borderStyle = <span class=\"built_in\">UITextBorderStyleRoundedRect</span>;</span><br><span class=\"line\"> textField.placeholder = <span class=\"string\">@\"请输入用户名\"</span>;</span><br><span class=\"line\"> textField.clearButtonMode = <span class=\"built_in\">UITextFieldViewModeAlways</span>;</span><br><span class=\"line\"> textField.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\"> textField.textColor = [<span class=\"built_in\">UIColor</span> grayColor];</span><br><span class=\"line\"> textField.keyboardType = <span class=\"built_in\">UIKeyboardTypeDefault</span>;</span><br><span class=\"line\"> textField.returnKeyType = <span class=\"built_in\">UIReturnKeyDone</span>;</span><br><span class=\"line\"> textField.clearButtonMode = <span class=\"built_in\">UITextFieldViewModeWhileEditing</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-UISlider\"><a href=\"#5-UISlider\" class=\"headerlink\" title=\"5.UISlider\"></a>5.UISlider</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UISlider *slider =[[UISlider alloc]<span class=\"string\">initWithFrame:</span>CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>, <span class=\"number\">33</span>)];</span><br><span class=\"line\">  [slider <span class=\"string\">addTarget:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(<span class=\"string\">onChangeHandler:</span>) <span class=\"string\">forControlEvents:</span>UIControlEventValueChanged];</span><br><span class=\"line\">  [self.view <span class=\"string\">addSubview:</span>slider];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) <span class=\"string\">onChangeHandler:</span>(UISlider *) slider</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">float</span> value = slider.value;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"6-UISegmentedControl\"><a href=\"#6-UISegmentedControl\" class=\"headerlink\" title=\"6.UISegmentedControl\"></a>6.UISegmentedControl</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UISegmentedControl</span> *seg= [[<span class=\"built_in\">UISegmentedControl</span> alloc]initWithItems:@[<span class=\"string\">@\"骑士\"</span>,<span class=\"string\">@\"勇士\"</span>]];</span><br><span class=\"line\">   [<span class=\"keyword\">self</span>.view addSubview:seg];</span><br><span class=\"line\">   seg.frame =<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">20</span>, <span class=\"number\">200</span>, <span class=\"number\">200</span>, <span class=\"number\">33</span>);</span><br><span class=\"line\">   [seg addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelect:) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelect:(<span class=\"built_in\">UISegmentedControl</span> *) control</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSInteger</span> index = control.selectedSegmentIndex;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index==<span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击骑士\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击勇士\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-UIViewImage\"><a href=\"#7-UIViewImage\" class=\"headerlink\" title=\"7.UIViewImage\"></a>7.UIViewImage</h3><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIImageView *imageView =<span class=\"string\">[[UIImageView alloc]initWithImage:[UIImage imageNamed:@\"head.png\" ]]</span>;</span><br><span class=\"line\">imageView.layer.cornerRadius = <span class=\"number\">4.0</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-UISwitch\"><a href=\"#8-UISwitch\" class=\"headerlink\" title=\"8.UISwitch\"></a>8.UISwitch</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UISwitch</span> *uiSwitch=[[<span class=\"built_in\">UISwitch</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">20</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">33</span>)];</span><br><span class=\"line\">   [<span class=\"keyword\">self</span>.view addSubview:uiSwitch];</span><br><span class=\"line\">   [uiSwitch setOn:<span class=\"literal\">YES</span> animated:<span class=\"literal\">YES</span>];</span><br><span class=\"line\">   [uiSwitch addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onChange:) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onChange:(<span class=\"built_in\">UISwitch</span> *) uiswitch</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">BOOL</span> isOn =  uiswitch.isOn;</span><br><span class=\"line\">  <span class=\"comment\">//两种方式输出真假值</span></span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,  [<span class=\"built_in\">NSNumber</span> numberWithBool:isOn].stringValue);</span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"%@\"</span>,  isOn ? <span class=\"string\">@\"YES\"</span>:<span class=\"string\">@\"NO\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-UIActionSheet\"><a href=\"#9-UIActionSheet\" class=\"headerlink\" title=\"9.UIActionSheet\"></a>9.UIActionSheet</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIActionSheet</span> *actionSheet = [[<span class=\"built_in\">UIActionSheet</span> alloc]initWithTitle:<span class=\"literal\">nil</span> delegate:<span class=\"keyword\">self</span> cancelButtonTitle:<span class=\"string\">@\"取消\"</span> destructiveButtonTitle:<span class=\"string\">@\"微信\"</span> otherButtonTitles:<span class=\"string\">@\"新浪微博\"</span>,<span class=\"string\">@\"腾讯微博\"</span>, <span class=\"literal\">nil</span>];</span><br><span class=\"line\">actionSheet.actionSheetStyle = <span class=\"built_in\">UIActionSheetStyleDefault</span>;</span><br><span class=\"line\">[actionSheet showInView:<span class=\"keyword\">self</span>.view];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) actionSheet:(<span class=\"built_in\">UIActionSheet</span> *)actionSheet clickedButtonAtIndex:(<span class=\"built_in\">NSInteger</span>)buttonIndex</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(buttonIndex == <span class=\"number\">0</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"微信\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(buttonIndex ==<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"新浪微博\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(buttonIndex == <span class=\"number\">2</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"腾讯微博\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-UIWindow\"><a href=\"#10-UIWindow\" class=\"headerlink\" title=\"10.UIWindow\"></a>10.UIWindow</h3><figure class=\"highlight inform7\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIWindow *window =<span class=\"comment\">[<span class=\"comment\">[UIWindow alloc]</span>initWithFrame:<span class=\"comment\">[UIScreen mainScreen]</span>.bounds]</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-UIBarButtonItem\"><a href=\"#11-UIBarButtonItem\" class=\"headerlink\" title=\"11.UIBarButtonItem\"></a>11.UIBarButtonItem</h3><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//左边</span></span><br><span class=\"line\">self.navigationItem.leftBarButtonItem = [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"话题\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(showMenu)];</span><br><span class=\"line\"> <span class=\"comment\">//右边</span></span><br><span class=\"line\">self.navigationItem.rightBarButtonItem = [[UIBarButtonItem alloc]<span class=\"string\">initWithTitle:</span>@<span class=\"string\">\"话题\"</span> <span class=\"string\">style:</span>UIBarButtonItemStylePlain <span class=\"string\">target:</span>self <span class=\"string\">action:</span><span class=\"meta\">@selector</span>(showMenu)];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) showMenu</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[NSNotificationCenter defaultCenter] <span class=\"string\">postNotificationName:</span>@<span class=\"string\">\"ShowMenuCmd\"</span> <span class=\"string\">object:</span>nil];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"12-UIWebView\"><a href=\"#12-UIWebView\" class=\"headerlink\" title=\"12.UIWebView\"></a>12.UIWebView</h3><p>  UIWebView 的本地加载HTML页面<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">CGRect</span> rect = [<span class=\"built_in\">UIScreen</span> mainScreen].bounds;</span><br><span class=\"line\"><span class=\"built_in\">UIWebView</span> *webView = [[<span class=\"built_in\">UIWebView</span> alloc] initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, rect .size.width,rect.size.height)];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.webView];</span><br><span class=\"line\">[webView setUserInteractionEnabled:<span class=\"literal\">YES</span>];<span class=\"comment\">//是否支持交互</span></span><br><span class=\"line\"><span class=\"built_in\">NSString</span> *path =  [[<span class=\"built_in\">NSBundle</span> mainBundle] pathForResource:<span class=\"string\">@\"index\"</span> ofType:<span class=\"string\">@\"html\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> fileURLWithPath:path];</span><br><span class=\"line\">[webView loadRequest:[<span class=\"built_in\">NSURLRequest</span> requestWithURL:url]];   </span><br><span class=\"line\">webView.autoresizingMask = <span class=\"built_in\">UIViewAutoresizingFlexibleHeight</span> | <span class=\"built_in\">UIViewAutoresizingFlexibleWidth</span>;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"13-UIPickerView\"><a href=\"#13-UIPickerView\" class=\"headerlink\" title=\"13.UIPickerView\"></a>13.UIPickerView</h3><p>选择器创建与代理设置</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSArray</span> *pickerArray =@[<span class=\"string\">@\"勇士\"</span>,<span class=\"string\">@\"火箭\"</span>,<span class=\"string\">@\"湖人\"</span>,<span class=\"string\">@\"雷霆\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">UIPickerView</span> *pickerView =[[<span class=\"built_in\">UIPickerView</span> alloc]init];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.pickerView];</span><br><span class=\"line\">pickerView.frame =(<span class=\"built_in\">CGRect</span>)&#123;<span class=\"number\">0</span>,<span class=\"keyword\">self</span>.view.frame.size.height<span class=\"number\">-160</span>,<span class=\"number\">320</span>,<span class=\"number\">180</span>&#125;;</span><br><span class=\"line\">pickerView.delegate = <span class=\"keyword\">self</span>;<span class=\"comment\">//设置代理</span></span><br><span class=\"line\">pickerView.dataSource = <span class=\"keyword\">self</span>;<span class=\"comment\">//设置代理</span></span><br><span class=\"line\">pickerView.backgroundColor = [<span class=\"built_in\">UIColor</span> orangeColor];</span><br><span class=\"line\"></span><br><span class=\"line\"> - (<span class=\"built_in\">NSInteger</span>)numberOfComponentsInPickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"built_in\">NSInteger</span>)pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView numberOfRowsInComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> [pickerArray count];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">-(<span class=\"built_in\">NSString</span> *) pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView titleForRow:(<span class=\"built_in\">NSInteger</span>)row forComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> [pickerArray objectAtIndex:row];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">- (<span class=\"keyword\">void</span>)pickerView:(<span class=\"built_in\">UIPickerView</span> *)pickerView didSelectRow:(<span class=\"built_in\">NSInteger</span>)row inComponent:(<span class=\"built_in\">NSInteger</span>)component</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击选择了\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"14-UIScrollView\"><a href=\"#14-UIScrollView\" class=\"headerlink\" title=\"14.UIScrollView\"></a>14.UIScrollView</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">UIScrollView *<span class=\"keyword\">scrollView </span>= [[UIScrollView alloc] initWithFrame:CGRectMake(<span class=\"number\">0</span>, <span class=\"number\">40</span>, <span class=\"number\">200</span>, <span class=\"number\">100</span>)]<span class=\"comment\">;</span></span><br><span class=\"line\"><span class=\"keyword\">scrollView.backgroundColor </span>=  [UIColor <span class=\"keyword\">blueColor];</span></span><br><span class=\"line\"><span class=\"keyword\"></span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   CGFloat y=<span class=\"number\">20</span><span class=\"comment\">;</span></span><br><span class=\"line\">    for (int i=<span class=\"number\">0</span><span class=\"comment\">; i&lt;30;i++)</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        UILabel *lab = [[UILabel alloc]init]<span class=\"comment\">;</span></span><br><span class=\"line\">        lab<span class=\"meta\">.text</span> = @<span class=\"string\">\"第一章 约定的开始\"</span><span class=\"comment\">;</span></span><br><span class=\"line\">        [lab sizeToFit]<span class=\"comment\">;</span></span><br><span class=\"line\">        CGRect f= lab.frame<span class=\"comment\">;</span></span><br><span class=\"line\">        f.<span class=\"keyword\">origin.y </span>= i*<span class=\"number\">22</span><span class=\"comment\">;</span></span><br><span class=\"line\">        lab.frame =f<span class=\"comment\">;</span></span><br><span class=\"line\">        [<span class=\"keyword\">scrollView </span><span class=\"keyword\">addSubview:lab];</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>       y += lab.<span class=\"keyword\">bounds.size.height </span>+<span class=\"number\">10</span><span class=\"comment\">;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    CGSize sz=<span class=\"keyword\">scrollView.bounds.size;</span></span><br><span class=\"line\"><span class=\"keyword\"> </span>   sz.height = y<span class=\"comment\">;</span></span><br><span class=\"line\">    <span class=\"keyword\">scrollView.contentSize </span>= sz<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"15-UIProgressView\"><a href=\"#15-UIProgressView\" class=\"headerlink\" title=\"15.UIProgressView\"></a>15.UIProgressView</h3><p>  进度条<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIProgressView</span> *progressView =[[<span class=\"built_in\">UIProgressView</span> alloc]initWithProgressViewStyle:<span class=\"built_in\">UIProgressViewStyleDefault</span>];</span><br><span class=\"line\">  [<span class=\"keyword\">self</span>.view addSubview:progressView];</span><br><span class=\"line\">  [<span class=\"built_in\">NSTimer</span> scheduledTimerWithTimeInterval:<span class=\"number\">1.0</span> target:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(onTimer:) userInfo:progressView repeats:<span class=\"literal\">YES</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onTimer:(<span class=\"built_in\">NSTimer</span> *) timer</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"built_in\">UIProgressView</span> *progress =(<span class=\"built_in\">UIProgressView</span> *) timer.userInfo;</span><br><span class=\"line\">  progress.progress += <span class=\"number\">0.1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(progress.progress == <span class=\"number\">1.0</span>)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">      progress.progress =<span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"16-UIActivityIndicatorView\"><a href=\"#16-UIActivityIndicatorView\" class=\"headerlink\" title=\"16.UIActivityIndicatorView\"></a>16.UIActivityIndicatorView</h3><p>活动指示器<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIActivityIndicatorView</span> *activityView= [[<span class=\"built_in\">UIActivityIndicatorView</span> alloc]initWithActivityIndicatorStyle:<span class=\"built_in\">UIActivityIndicatorViewStyleWhiteLarge</span>];</span><br><span class=\"line\">  [<span class=\"keyword\">self</span>.view addSubview:activityView];</span><br><span class=\"line\">  [activityView startAnimating];<span class=\"comment\">//播放动画</span></span><br><span class=\"line\">  [activityView stopAnimating];<span class=\"comment\">//停止动画</span></span><br><span class=\"line\">  [activityView isAnimating];<span class=\"comment\">//判断是否在播放动画</span></span><br><span class=\"line\">  <span class=\"keyword\">self</span>.view.backgroundColor=[<span class=\"built_in\">UIColor</span> orangeColor];<span class=\"comment\">//背景设置颜色方便预览该组件</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"17-UINavigationBar\"><a href=\"#17-UINavigationBar\" class=\"headerlink\" title=\"17.UINavigationBar\"></a>17.UINavigationBar</h3><p>  UINavigationBar 导航栏 需要抱一个导航栏目UINavigationItem</p>\n<figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UINavigationBar</span> *navbar =[[<span class=\"built_in\">UINavigationBar</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"keyword\">self</span>.view.frame.size.width, <span class=\"number\">44</span>)];</span><br><span class=\"line\"> [<span class=\"keyword\">self</span>.view addSubview:navbar];</span><br><span class=\"line\"> <span class=\"built_in\">UIBarButtonItem</span> *leftButtonItem = [[<span class=\"built_in\">UIBarButtonItem</span> alloc]initWithTitle:<span class=\"string\">@\"菜单\"</span> style:<span class=\"built_in\">UIBarButtonItemStylePlain</span> target:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelectLeft:)];</span><br><span class=\"line\"> <span class=\"built_in\">UIBarButtonItem</span> *rightButtonItem = [[<span class=\"built_in\">UIBarButtonItem</span> alloc]initWithTitle:<span class=\"string\">@\"设置\"</span> style:<span class=\"built_in\">UIBarButtonItemStylePlain</span> target:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(onSelectRight:)];</span><br><span class=\"line\"> <span class=\"built_in\">UINavigationItem</span> *navigationItem =[[<span class=\"built_in\">UINavigationItem</span> alloc]initWithTitle:<span class=\"string\">@\"我爱IOS\"</span>];</span><br><span class=\"line\"> [navbar pushNavigationItem:navigationItem animated:<span class=\"literal\">NO</span>];</span><br><span class=\"line\"> [navigationItem setLeftBarButtonItem:leftButtonItem];</span><br><span class=\"line\"> [navigationItem setRightBarButtonItem:rightButtonItem];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelectLeft:(<span class=\"built_in\">UIBarButtonItem</span> *) button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击左边\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) onSelectRight:(<span class=\"built_in\">UIBarButtonItem</span> *) button</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"built_in\">NSLog</span>(<span class=\"string\">@\"点击右边\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"18-UITabBar\"><a href=\"#18-UITabBar\" class=\"headerlink\" title=\"18.UITabBar\"></a>18.UITabBar</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UITabBar</span> *tabBar =[[<span class=\"built_in\">UITabBar</span> alloc]initWithFrame:<span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>, [<span class=\"built_in\">UIScreen</span> mainScreen].bounds.size.height<span class=\"number\">-44</span>, <span class=\"keyword\">self</span>.view.frame.size.width, <span class=\"number\">44</span>)];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:tabBar];</span><br><span class=\"line\"><span class=\"built_in\">UITabBarItem</span> *firstBarItem =[[<span class=\"built_in\">UITabBarItem</span> alloc]initWithTitle:<span class=\"string\">@\"首页\"</span> image:<span class=\"literal\">nil</span> tag:<span class=\"number\">1</span>];</span><br><span class=\"line\"><span class=\"built_in\">UITabBarItem</span> *secondBarItem =[[<span class=\"built_in\">UITabBarItem</span> alloc]initWithTitle:<span class=\"string\">@\"我的\"</span> image:<span class=\"literal\">nil</span> tag:<span class=\"number\">2</span>];</span><br><span class=\"line\">[tabBar setItems:@[firstBarItem,secondBarItem]];</span><br></pre></td></tr></table></figure>\n<h3 id=\"19-UIApplication\"><a href=\"#19-UIApplication\" class=\"headerlink\" title=\"19.UIApplication\"></a>19.UIApplication</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSURL *appStoreUrl = [NSURL URLWithString:@<span class=\"string\">\"http://phobos.apple.com/WebObjects/MZStore.woa/wa/viewSoftware?id=291586600&amp;amp;amp;mt=8\"</span>]<span class=\"comment\">;</span></span><br><span class=\"line\">[[UIApplication <span class=\"keyword\">sharedApplication] </span>openURL:appStoreUrl]<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight less\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">//退出编辑</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span><span class=\"selector-class\">.keyWindow</span> <span class=\"selector-tag\">endEditing</span><span class=\"selector-pseudo\">:YES</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\">//设置网络状态</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span> <span class=\"selector-tag\">setNetworkActivityIndicatorVisible</span><span class=\"selector-pseudo\">:YES</span>];<span class=\"comment\">//开启</span></span><br><span class=\"line\"><span class=\"selector-attr\">[[UIApplication sharedApplication]</span> <span class=\"selector-tag\">setNetworkActivityIndicatorVisible</span><span class=\"selector-pseudo\">:NO</span>];<span class=\"comment\">//关闭</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"20-UIRefreshControl\"><a href=\"#20-UIRefreshControl\" class=\"headerlink\" title=\"20.UIRefreshControl\"></a>20.UIRefreshControl</h3><p>  刷新组件，继承了UITableController 有refreshControl 属性存在<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIRefreshControl</span> *refreshControl = [[<span class=\"built_in\">UIRefreshControl</span> alloc]init];</span><br><span class=\"line\">  refreshControl.attributedTitle = [[<span class=\"built_in\">NSAttributedString</span> alloc]initWithString:<span class=\"string\">@\"刷新中..\"</span>];</span><br><span class=\"line\">  [refreshControl addTarget:<span class=\"keyword\">self</span> action:<span class=\"keyword\">@selector</span>(refreshTableView) forControlEvents:<span class=\"built_in\">UIControlEventValueChanged</span>];</span><br><span class=\"line\">  <span class=\"keyword\">self</span>.refreshControl = refreshControl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) refreshTableView</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">//刷新后请求</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"21-UIImagePickerController\"><a href=\"#21-UIImagePickerController\" class=\"headerlink\" title=\"21.UIImagePickerController\"></a>21.UIImagePickerController</h3><p>查看相册<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UIImagePickerController</span> *pickerController = [[<span class=\"built_in\">UIImagePickerController</span> alloc]init];</span><br><span class=\"line\">pickerController.sourceType  = <span class=\"built_in\">UIImagePickerControllerSourceTypePhotoLibrary</span>;</span><br><span class=\"line\">pickerController.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">[<span class=\"keyword\">self</span> presentViewController:pickerController animated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) imagePickerController:(<span class=\"built_in\">UIImagePickerController</span> *)picker didFinishPickingMediaWithInfo:(<span class=\"built_in\">NSDictionary</span> *)info</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span>([<span class=\"built_in\">UIImagePickerController</span> isSourceTypeAvailable:<span class=\"built_in\">UIImagePickerControllerSourceTypePhotoLibrary</span>])</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">     <span class=\"built_in\">UIImage</span> *image =  [info objectForKey:<span class=\"built_in\">UIImagePickerControllerOriginalImage</span>];</span><br><span class=\"line\">     <span class=\"keyword\">self</span>.imageView.image = image;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    [<span class=\"keyword\">self</span> dismissViewControllerAnimated:<span class=\"literal\">YES</span> completion:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"22-UICollectionView\"><a href=\"#22-UICollectionView\" class=\"headerlink\" title=\"22.UICollectionView\"></a>22.UICollectionView</h3><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">UICollectionViewFlowLayout</span>* flowLayout = [[<span class=\"built_in\">UICollectionViewFlowLayout</span> alloc]init];</span><br><span class=\"line\">flowLayout.itemSize = <span class=\"built_in\">CGSizeMake</span>(<span class=\"number\">120</span>, <span class=\"number\">120</span>);</span><br><span class=\"line\">[flowLayout setScrollDirection:<span class=\"built_in\">UICollectionViewScrollDirectionVertical</span>];</span><br><span class=\"line\"><span class=\"built_in\">UICollectionView</span> *collectionView = [[<span class=\"built_in\">UICollectionView</span> alloc]initWithFrame:rect collectionViewLayout:flowLayout ];</span><br><span class=\"line\">collectionView.backgroundColor = [<span class=\"built_in\">UIColor</span> whiteColor];</span><br><span class=\"line\">collectionView.dataSource = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">collectionView.delegate = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:<span class=\"keyword\">self</span>.collectionView];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">NSInteger</span>) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView numberOfItemsInSection:(<span class=\"built_in\">NSInteger</span>)section</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"built_in\">UICollectionViewCell</span> *) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView cellForItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">UICollectionViewCell</span> *cell = [collectionView dequeueReusableCellWithReuseIdentifier:<span class=\"string\">@\"NodeCell\"</span> forIndexPath:indexPath];</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cell;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) collectionView:(<span class=\"built_in\">UICollectionView</span> *)collectionView didSelectItemAtIndexPath:(<span class=\"built_in\">NSIndexPath</span> *)indexPath</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">//选中子项</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"23-MPMoviePlayerController\"><a href=\"#23-MPMoviePlayerController\" class=\"headerlink\" title=\"23.MPMoviePlayerController\"></a>23.MPMoviePlayerController</h3><p>  视频控制<br><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">NSURL</span> *url = [<span class=\"built_in\">NSURL</span> URLWithString:<span class=\"string\">@\"http://devimages.apple.com/iphone/samples/bipbop/bipbopall.m3u8\"</span>];</span><br><span class=\"line\"><span class=\"built_in\">MPMoviePlayerController</span>  *player =[[<span class=\"built_in\">MPMoviePlayerController</span> alloc]initWithContentURL:url];</span><br><span class=\"line\">player.fullscreen = <span class=\"literal\">YES</span>;</span><br><span class=\"line\"><span class=\"built_in\">CGRect</span> winRect = [[<span class=\"built_in\">UIScreen</span> mainScreen] applicationFrame];</span><br><span class=\"line\"><span class=\"built_in\">CGRect</span> rect = <span class=\"built_in\">CGRectMake</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,winRect.size.height, winRect.size.width);</span><br><span class=\"line\">player.controlStyle = <span class=\"built_in\">MPMovieControlStyleDefault</span>;</span><br><span class=\"line\">player.view.frame = rect;</span><br><span class=\"line\">player.view.center = <span class=\"built_in\">CGPointMake</span>(rect.size.width/<span class=\"number\">2</span>, rect.size.height/<span class=\"number\">2</span>);  </span><br><span class=\"line\">[player.view setTransform:<span class=\"built_in\">CGAffineTransformMakeRotation</span>(M_PI/<span class=\"number\">2</span>)];</span><br><span class=\"line\">layer.scalingMode = <span class=\"built_in\">MPMovieScalingModeAspectFill</span>;</span><br><span class=\"line\">[player play];</span><br><span class=\"line\">[[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter] addObserver:<span class=\"keyword\">self</span> selector:<span class=\"keyword\">@selector</span>(playCompleteFun:) name:<span class=\"built_in\">MPMoviePlayerPlaybackDidFinishNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">[<span class=\"keyword\">self</span>.view addSubview:player.view];</span><br><span class=\"line\"></span><br><span class=\"line\">-(<span class=\"keyword\">void</span>) playCompleteFun:(<span class=\"built_in\">NSNotification</span> *) notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    [[<span class=\"built_in\">NSNotificationCenter</span> defaultCenter] removeObserver:<span class=\"keyword\">self</span> name:<span class=\"built_in\">MPMoviePlayerPlaybackDidFinishNotification</span> object:<span class=\"literal\">nil</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"常用的一些代码片段记录\"><a href=\"#常用的一些代码片段记录\" class=\"headerlink\" title=\"常用的一些代码片段记录\"></a>常用的一些代码片段记录</h3><h4 id=\"视频截图\"><a href=\"#视频截图\" class=\"headerlink\" title=\"视频截图\"></a>视频截图</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (<span class=\"built_in\">UIImage</span> *) captureFromView: (<span class=\"built_in\">UIView</span> *) aView</span><br><span class=\"line\">&#123;    </span><br><span class=\"line\">    <span class=\"built_in\">UIGraphicsBeginImageContext</span>(aView.frame.size);</span><br><span class=\"line\">    <span class=\"built_in\">CGContextRef</span> context = <span class=\"built_in\">UIGraphicsGetCurrentContext</span>();</span><br><span class=\"line\">    [aView.layer renderInContext:context];</span><br><span class=\"line\">    <span class=\"built_in\">UIImage</span> *image= <span class=\"built_in\">UIGraphicsGetImageFromCurrentImageContext</span>();</span><br><span class=\"line\">    <span class=\"built_in\">UIGraphicsEndImageContext</span>();     </span><br><span class=\"line\">    <span class=\"keyword\">return</span> image;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"遇到block的情况下转为self\"><a href=\"#遇到block的情况下转为self\" class=\"headerlink\" title=\"遇到block的情况下转为self\"></a>遇到block的情况下转为self</h4><figure class=\"highlight objectivec\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__<span class=\"keyword\">weak</span> <span class=\"keyword\">typeof</span>(<span class=\"keyword\">self</span>)weakSelf = <span class=\"keyword\">self</span>;</span><br><span class=\"line\">__storng <span class=\"keyword\">typeof</span>(<span class=\"keyword\">self</span>)strongSelf = <span class=\"keyword\">self</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"常用的一些Build-setting-记录\"><a href=\"#常用的一些Build-setting-记录\" class=\"headerlink\" title=\"常用的一些Build setting 记录\"></a>常用的一些Build setting 记录</h3><h4 id=\"Bitcode-的开启和关闭\"><a href=\"#Bitcode-的开启和关闭\" class=\"headerlink\" title=\"Bitcode 的开启和关闭\"></a>Bitcode 的开启和关闭</h4><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923200746917\" alt=\"bitcode\"></p>\n<h4 id=\"pch文件开启和配置路径位置\"><a href=\"#pch文件开启和配置路径位置\" class=\"headerlink\" title=\"pch文件开启和配置路径位置\"></a>pch文件开启和配置路径位置</h4><p>需要则在Precompile Prefix Header 开启 默认关闭</p>\n<h5 id=\"Prefix-Header-则配置相应的路径\"><a href=\"#Prefix-Header-则配置相应的路径\" class=\"headerlink\" title=\"Prefix Header 则配置相应的路径\"></a>Prefix Header 则配置相应的路径</h5><p>例如：<strong>$(SRCROOT)/PrefixHeader.pch</strong><br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201059584\" alt=\"PrefixHeader\"></p>\n<h5 id=\"Library-Search-Paths\"><a href=\"#Library-Search-Paths\" class=\"headerlink\" title=\"Library Search Paths\"></a>Library Search Paths</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201555972\" alt=\"Search Paths\"></p>\n<h5 id=\"Product-Name-产品名字设置\"><a href=\"#Product-Name-产品名字设置\" class=\"headerlink\" title=\"Product Name 产品名字设置\"></a>Product Name 产品名字设置</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923201750634\" alt=\"Product BundleId\"></p>\n<h5 id=\"Other-Linker-Flags-Objc-设置\"><a href=\"#Other-Linker-Flags-Objc-设置\" class=\"headerlink\" title=\"Other Linker Flags -Objc 设置\"></a>Other Linker Flags -Objc 设置</h5><p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20150923202008456\" alt=\"Other linker\"></p>"},{"title":"linux之cut用法","date":"2016-08-29T08:10:16.000Z","_content":"\ncut是一个选取命令，就是将一段数据经过分析，取出我们想要的。一般来说，选取信息通常是针对“行”来进行分析的，并不是整篇信息分析的。\n\n<!-- more -->\n(1) 其语法格式为：\n<font color=\"red\">cut [-bn] [file] 或 cut [-c] [file] 或者 cut [-df] [file]</font>\n\n使用说明\ncut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</br>\n如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。\n\n主要参数\n* -b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。\n* -c ：以字符为单位进行分割。\n* -d ：自定义分隔符，默认为制表符。\n* -f  ：与-d一起使用，指定显示哪个区域。\n* -n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的<br />范围之内，该字符将被写出；否则，该字符将被排除。\n\n（2）cut一般以什么为依据呢? 也就是说，我怎么告诉cut我想定位到的剪切内容呢?\n\ncut命令主要是接受三个定位方法：\n第一，字节（bytes），用选项-b\n第二，字符（characters），用选项-c\n第三，域（fields），用选项-f\n\n3）以“字节”定位\n举个例子吧，当你执行ps命令时，会输出类似如下的内容：\n[rocrocket@rocrocket programming]$ who\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n如果我们想提取每一行的第3个字节，就这样：\n[rocrocket@rocrocket programming]$ who|cut -b 3\nc\nc\nc\n\n4） 如果“字节”定位中，我想提取第3，第4、第5和第8个字节，怎么办?\n-b支持形如3-5的写法，而且多个定位之间用逗号隔开就成了。看看例子吧：\n[rocrocket@rocrocket programming]$ who|cut -b 3-5,8\ncroe\ncroe\ncroe\n但有一点要注意，cut命令如果使用了-b选项，那么执行此命令时，cut会先把-b后面所有的定位进行从小到大排序，然后再提取。可不能颠倒定位的顺序哦。这个例子就可以说明这个问题：\n\n[rocrocket@rocrocket programming]$ who|cut -b 8,3-5\ncroe\ncroe\ncroe\n（5） 还有哪些类似“3-5”这样的小技巧，列举一下吧!\n\n[rocrocket@rocrocket programming]$ who\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n[rocrocket@rocrocket programming]$ who|cut -b -3\nroc\nroc\nroc\n[rocrocket@rocrocket programming]$ who|cut -b 3-\ncrocket :0           2009-01-08 11:07\ncrocket pts/0        2009-01-08 11:23 (:0.0)\ncrocket pts/1        2009-01-08 14:15 (:0.0)\n想必你也看到了，-3表示从第一个字节到第三个字节，而3-表示从第三个字节到行尾。如果你细心，你可以看到这两种情况下，都包括了第三个字节“c”。\n如果我执行who|cut -b -3,3-，你觉得会如何呢？答案是输出整行，不会出现连续两个重叠的c的。看：\n\n[rocrocket@rocrocket programming]$ who|cut -b -3,3-\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n（6）给个以字符为定位标志的最简单的例子吧!\n\n下面例子你似曾相识，提取第3，第4，第5和第8个字符：\n\n[rocrocket@rocrocket programming]$ who|cut -c 3-5,8\ncroe\ncroe\ncroe\n不过，看着怎么和-b没有什么区别啊？莫非-b和-c作用一样? 其实不然，看似相同，只是因为这个例子举的不好，who输出的都是单字节字符，所以用-b和-c没有区别，如果你提取中文，区别就看出来了，来，看看中文提取的情况：\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt\n星期一\n星期二\n星期三\n星期四\n[rocrocket@rocrocket programming]$ cut -b 3 cut_ch.txt\n�\n�\n�\n�\n[rocrocket@rocrocket programming]$ cut -c 3 cut_ch.txt\n一\n二\n三\n四\n看到了吧，用-c则会以字符为单位，输出正常；而-b只会傻傻的以字节（8位二进制位）来计算，输出就是乱码。\n既然提到了这个知识点，就再补充一句，如果你学有余力，就提高一下。\n当遇到多字节字符时，可以使用-n选项，-n用于告诉cut不要将多字节字符拆开。例子如下：\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -b 2\n�\n�\n�\n�\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 2\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 1,2,3\n星\n星\n星\n星\n（7）域是怎么回事呢？解释解释:)\n\n为什么会有“域”的提取呢，因为刚才提到的-b和-c只能在固定格式的文档中提取信息，而对于非固定格式的信息则束手无策。这时候“域”就派上用场了。如果你观察过/etc/passwd文件，你会发现，它并不像who的输出信息那样具有固定格式，而是比较零散的排放。但是，冒号在这个文件的每一行中都起到了非常重要的作用，冒号用来隔开每一个项。\n\n我们很幸运，cut命令提供了这样的提取方式，具体的说就是设置“间隔符”，再设置“提取第几个域”，就OK了！\n\n以/etc/passwd的前五行内容为例：\n\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1\nroot\nbin\ndaemon\nadm\nlp\n看到了吧，用-d来设置间隔符为冒号，然后用-f来设置我要取的是第一个域，再按回车，所有的用户名就都列出来了！呵呵 有成就感吧！\n当然，在设定-f时，也可以使用例如3-5或者4-类似的格式：\n\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5\nroot:0:0:root\nbin:1:1:bin\ndaemon:2:2:daemon\nadm:3:4:adm\nlp:4:7:lp\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5,7\nroot:0:0:root:/bin/bash\nbin:1:1:bin:/sbin/nologin\ndaemon:2:2:daemon:/sbin/nologin\nadm:3:4:adm:/sbin/nologin\nlp:4:7:lp:/sbin/nologin\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f -2\nroot:x\nbin:x\ndaemon:x\nadm:x\nlp:x\n（8）如果遇到空格和制表符时，怎么分辨呢？我觉得有点乱，怎么办？\n\n有时候制表符确实很难辨认，有一个方法可以看出一段空格到底是由若干个空格组成的还是由一个制表符组成的。\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt\nthis is tab finish.\nthis is several space      finish.\n[rocrocket@rocrocket programming]$ sed -n l tab_space.txt\nthis is tab\\tfinish.$\nthis is several space      finish.$\n看到了吧，如果是制表符（TAB），那么会显示为\\t符号，如果是空格，就会原样显示。\n通过此方法即可以判断制表符和空格了。\n注意，上面sed -n后面的字符是L的小写字母哦，不要看错。\n\n（9）我应该在cut -d中用什么符号来设定制表符或空格呢?\n\n其实cut的-d选项的默认间隔符就是制表符，所以当你就是要使用制表符的时候，完全就可以省略-d选项，而直接用－f来取域就可以了。\n\n如果你设定一个空格为间隔符，那么就这样：\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ' ' -f 1\nthis\nthis\n注意，两个单引号之间可确实要有一个空格哦，不能偷懒。\n而且，你只能在-d后面设置一个空格，可不许设置多个空格，因为cut只允许间隔符是一个字符。\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ' ' -f 1\ncut: the delimiter must be a single character\nTry `cut --help' for more information.\n\n（10）cut有哪些缺陷和不足？\n\n猜出来了吧？对，就是在处理多空格时。\n如果文件里面的某些域是由若干个空格来间隔的，那么用cut就有点麻烦了，因为cut只擅长处理“以一个字符间隔”的文本内容\n","source":"_posts/linux之cut用法.md","raw":"---\ntitle: linux之cut用法\ndate: 2016-08-29 16:10:16\ntags: [linux]\ncategories: linux\n---\n\ncut是一个选取命令，就是将一段数据经过分析，取出我们想要的。一般来说，选取信息通常是针对“行”来进行分析的，并不是整篇信息分析的。\n\n<!-- more -->\n(1) 其语法格式为：\n<font color=\"red\">cut [-bn] [file] 或 cut [-c] [file] 或者 cut [-df] [file]</font>\n\n使用说明\ncut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。</br>\n如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。\n\n主要参数\n* -b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。\n* -c ：以字符为单位进行分割。\n* -d ：自定义分隔符，默认为制表符。\n* -f  ：与-d一起使用，指定显示哪个区域。\n* -n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的<br />范围之内，该字符将被写出；否则，该字符将被排除。\n\n（2）cut一般以什么为依据呢? 也就是说，我怎么告诉cut我想定位到的剪切内容呢?\n\ncut命令主要是接受三个定位方法：\n第一，字节（bytes），用选项-b\n第二，字符（characters），用选项-c\n第三，域（fields），用选项-f\n\n3）以“字节”定位\n举个例子吧，当你执行ps命令时，会输出类似如下的内容：\n[rocrocket@rocrocket programming]$ who\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n如果我们想提取每一行的第3个字节，就这样：\n[rocrocket@rocrocket programming]$ who|cut -b 3\nc\nc\nc\n\n4） 如果“字节”定位中，我想提取第3，第4、第5和第8个字节，怎么办?\n-b支持形如3-5的写法，而且多个定位之间用逗号隔开就成了。看看例子吧：\n[rocrocket@rocrocket programming]$ who|cut -b 3-5,8\ncroe\ncroe\ncroe\n但有一点要注意，cut命令如果使用了-b选项，那么执行此命令时，cut会先把-b后面所有的定位进行从小到大排序，然后再提取。可不能颠倒定位的顺序哦。这个例子就可以说明这个问题：\n\n[rocrocket@rocrocket programming]$ who|cut -b 8,3-5\ncroe\ncroe\ncroe\n（5） 还有哪些类似“3-5”这样的小技巧，列举一下吧!\n\n[rocrocket@rocrocket programming]$ who\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n[rocrocket@rocrocket programming]$ who|cut -b -3\nroc\nroc\nroc\n[rocrocket@rocrocket programming]$ who|cut -b 3-\ncrocket :0           2009-01-08 11:07\ncrocket pts/0        2009-01-08 11:23 (:0.0)\ncrocket pts/1        2009-01-08 14:15 (:0.0)\n想必你也看到了，-3表示从第一个字节到第三个字节，而3-表示从第三个字节到行尾。如果你细心，你可以看到这两种情况下，都包括了第三个字节“c”。\n如果我执行who|cut -b -3,3-，你觉得会如何呢？答案是输出整行，不会出现连续两个重叠的c的。看：\n\n[rocrocket@rocrocket programming]$ who|cut -b -3,3-\nrocrocket :0           2009-01-08 11:07\nrocrocket pts/0        2009-01-08 11:23 (:0.0)\nrocrocket pts/1        2009-01-08 14:15 (:0.0)\n（6）给个以字符为定位标志的最简单的例子吧!\n\n下面例子你似曾相识，提取第3，第4，第5和第8个字符：\n\n[rocrocket@rocrocket programming]$ who|cut -c 3-5,8\ncroe\ncroe\ncroe\n不过，看着怎么和-b没有什么区别啊？莫非-b和-c作用一样? 其实不然，看似相同，只是因为这个例子举的不好，who输出的都是单字节字符，所以用-b和-c没有区别，如果你提取中文，区别就看出来了，来，看看中文提取的情况：\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt\n星期一\n星期二\n星期三\n星期四\n[rocrocket@rocrocket programming]$ cut -b 3 cut_ch.txt\n�\n�\n�\n�\n[rocrocket@rocrocket programming]$ cut -c 3 cut_ch.txt\n一\n二\n三\n四\n看到了吧，用-c则会以字符为单位，输出正常；而-b只会傻傻的以字节（8位二进制位）来计算，输出就是乱码。\n既然提到了这个知识点，就再补充一句，如果你学有余力，就提高一下。\n当遇到多字节字符时，可以使用-n选项，-n用于告诉cut不要将多字节字符拆开。例子如下：\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -b 2\n�\n�\n�\n�\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 2\n\n[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 1,2,3\n星\n星\n星\n星\n（7）域是怎么回事呢？解释解释:)\n\n为什么会有“域”的提取呢，因为刚才提到的-b和-c只能在固定格式的文档中提取信息，而对于非固定格式的信息则束手无策。这时候“域”就派上用场了。如果你观察过/etc/passwd文件，你会发现，它并不像who的输出信息那样具有固定格式，而是比较零散的排放。但是，冒号在这个文件的每一行中都起到了非常重要的作用，冒号用来隔开每一个项。\n\n我们很幸运，cut命令提供了这样的提取方式，具体的说就是设置“间隔符”，再设置“提取第几个域”，就OK了！\n\n以/etc/passwd的前五行内容为例：\n\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1\nroot\nbin\ndaemon\nadm\nlp\n看到了吧，用-d来设置间隔符为冒号，然后用-f来设置我要取的是第一个域，再按回车，所有的用户名就都列出来了！呵呵 有成就感吧！\n当然，在设定-f时，也可以使用例如3-5或者4-类似的格式：\n\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5\nroot:0:0:root\nbin:1:1:bin\ndaemon:2:2:daemon\nadm:3:4:adm\nlp:4:7:lp\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5,7\nroot:0:0:root:/bin/bash\nbin:1:1:bin:/sbin/nologin\ndaemon:2:2:daemon:/sbin/nologin\nadm:3:4:adm:/sbin/nologin\nlp:4:7:lp:/sbin/nologin\n[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f -2\nroot:x\nbin:x\ndaemon:x\nadm:x\nlp:x\n（8）如果遇到空格和制表符时，怎么分辨呢？我觉得有点乱，怎么办？\n\n有时候制表符确实很难辨认，有一个方法可以看出一段空格到底是由若干个空格组成的还是由一个制表符组成的。\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt\nthis is tab finish.\nthis is several space      finish.\n[rocrocket@rocrocket programming]$ sed -n l tab_space.txt\nthis is tab\\tfinish.$\nthis is several space      finish.$\n看到了吧，如果是制表符（TAB），那么会显示为\\t符号，如果是空格，就会原样显示。\n通过此方法即可以判断制表符和空格了。\n注意，上面sed -n后面的字符是L的小写字母哦，不要看错。\n\n（9）我应该在cut -d中用什么符号来设定制表符或空格呢?\n\n其实cut的-d选项的默认间隔符就是制表符，所以当你就是要使用制表符的时候，完全就可以省略-d选项，而直接用－f来取域就可以了。\n\n如果你设定一个空格为间隔符，那么就这样：\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ' ' -f 1\nthis\nthis\n注意，两个单引号之间可确实要有一个空格哦，不能偷懒。\n而且，你只能在-d后面设置一个空格，可不许设置多个空格，因为cut只允许间隔符是一个字符。\n\n[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ' ' -f 1\ncut: the delimiter must be a single character\nTry `cut --help' for more information.\n\n（10）cut有哪些缺陷和不足？\n\n猜出来了吧？对，就是在处理多空格时。\n如果文件里面的某些域是由若干个空格来间隔的，那么用cut就有点麻烦了，因为cut只擅长处理“以一个字符间隔”的文本内容\n","slug":"linux之cut用法","published":1,"updated":"2016-08-29T08:40:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukv002ipev2k31spip5","content":"<p>cut是一个选取命令，就是将一段数据经过分析，取出我们想要的。一般来说，选取信息通常是针对“行”来进行分析的，并不是整篇信息分析的。</p>\n<a id=\"more\"></a>\n<p>(1) 其语法格式为：</p>\n<font color=\"red\">cut [-bn] [file] 或 cut [-c] [file] 或者 cut [-df] [file]</font>\n\n<p>使用说明<br>cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。<br><br>如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。</p>\n<p>主要参数</p>\n<ul>\n<li>-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</li>\n<li>-c ：以字符为单位进行分割。</li>\n<li>-d ：自定义分隔符，默认为制表符。</li>\n<li>-f  ：与-d一起使用，指定显示哪个区域。</li>\n<li>-n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的<br>范围之内，该字符将被写出；否则，该字符将被排除。</li>\n</ul>\n<p>（2）cut一般以什么为依据呢? 也就是说，我怎么告诉cut我想定位到的剪切内容呢?</p>\n<p>cut命令主要是接受三个定位方法：<br>第一，字节（bytes），用选项-b<br>第二，字符（characters），用选项-c<br>第三，域（fields），用选项-f</p>\n<p>3）以“字节”定位<br>举个例子吧，当你执行ps命令时，会输出类似如下的内容：<br>[rocrocket@rocrocket programming]$ who<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>如果我们想提取每一行的第3个字节，就这样：<br>[rocrocket@rocrocket programming]$ who|cut -b 3<br>c<br>c<br>c</p>\n<p>4） 如果“字节”定位中，我想提取第3，第4、第5和第8个字节，怎么办?<br>-b支持形如3-5的写法，而且多个定位之间用逗号隔开就成了。看看例子吧：<br>[rocrocket@rocrocket programming]$ who|cut -b 3-5,8<br>croe<br>croe<br>croe<br>但有一点要注意，cut命令如果使用了-b选项，那么执行此命令时，cut会先把-b后面所有的定位进行从小到大排序，然后再提取。可不能颠倒定位的顺序哦。这个例子就可以说明这个问题：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -b 8,3-5<br>croe<br>croe<br>croe<br>（5） 还有哪些类似“3-5”这样的小技巧，列举一下吧!</p>\n<p>[rocrocket@rocrocket programming]$ who<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>[rocrocket@rocrocket programming]$ who|cut -b -3<br>roc<br>roc<br>roc<br>[rocrocket@rocrocket programming]$ who|cut -b 3-<br>crocket :0           2009-01-08 11:07<br>crocket pts/0        2009-01-08 11:23 (:0.0)<br>crocket pts/1        2009-01-08 14:15 (:0.0)<br>想必你也看到了，-3表示从第一个字节到第三个字节，而3-表示从第三个字节到行尾。如果你细心，你可以看到这两种情况下，都包括了第三个字节“c”。<br>如果我执行who|cut -b -3,3-，你觉得会如何呢？答案是输出整行，不会出现连续两个重叠的c的。看：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -b -3,3-<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>（6）给个以字符为定位标志的最简单的例子吧!</p>\n<p>下面例子你似曾相识，提取第3，第4，第5和第8个字符：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -c 3-5,8<br>croe<br>croe<br>croe<br>不过，看着怎么和-b没有什么区别啊？莫非-b和-c作用一样? 其实不然，看似相同，只是因为这个例子举的不好，who输出的都是单字节字符，所以用-b和-c没有区别，如果你提取中文，区别就看出来了，来，看看中文提取的情况：</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt<br>星期一<br>星期二<br>星期三<br>星期四<br>[rocrocket@rocrocket programming]$ cut -b 3 cut_ch.txt<br>�<br>�<br>�<br>�<br>[rocrocket@rocrocket programming]$ cut -c 3 cut_ch.txt<br>一<br>二<br>三<br>四<br>看到了吧，用-c则会以字符为单位，输出正常；而-b只会傻傻的以字节（8位二进制位）来计算，输出就是乱码。<br>既然提到了这个知识点，就再补充一句，如果你学有余力，就提高一下。<br>当遇到多字节字符时，可以使用-n选项，-n用于告诉cut不要将多字节字符拆开。例子如下：</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -b 2<br>�<br>�<br>�<br>�<br>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 2</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 1,2,3<br>星<br>星<br>星<br>星<br>（7）域是怎么回事呢？解释解释:)</p>\n<p>为什么会有“域”的提取呢，因为刚才提到的-b和-c只能在固定格式的文档中提取信息，而对于非固定格式的信息则束手无策。这时候“域”就派上用场了。如果你观察过/etc/passwd文件，你会发现，它并不像who的输出信息那样具有固定格式，而是比较零散的排放。但是，冒号在这个文件的每一行中都起到了非常重要的作用，冒号用来隔开每一个项。</p>\n<p>我们很幸运，cut命令提供了这样的提取方式，具体的说就是设置“间隔符”，再设置“提取第几个域”，就OK了！</p>\n<p>以/etc/passwd的前五行内容为例：</p>\n<p>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5<br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1<br>root<br>bin<br>daemon<br>adm<br>lp<br>看到了吧，用-d来设置间隔符为冒号，然后用-f来设置我要取的是第一个域，再按回车，所有的用户名就都列出来了！呵呵 有成就感吧！<br>当然，在设定-f时，也可以使用例如3-5或者4-类似的格式：</p>\n<p>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5<br>root:0:0:root<br>bin:1:1:bin<br>daemon:2:2:daemon<br>adm:3:4:adm<br>lp:4:7:lp<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5,7<br>root:0:0:root:/bin/bash<br>bin:1:1:bin:/sbin/nologin<br>daemon:2:2:daemon:/sbin/nologin<br>adm:3:4:adm:/sbin/nologin<br>lp:4:7:lp:/sbin/nologin<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f -2<br>root:x<br>bin:x<br>daemon:x<br>adm:x<br>lp:x<br>（8）如果遇到空格和制表符时，怎么分辨呢？我觉得有点乱，怎么办？</p>\n<p>有时候制表符确实很难辨认，有一个方法可以看出一段空格到底是由若干个空格组成的还是由一个制表符组成的。</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt<br>this is tab finish.<br>this is several space      finish.<br>[rocrocket@rocrocket programming]$ sed -n l tab_space.txt<br>this is tab\\tfinish.$<br>this is several space      finish.$<br>看到了吧，如果是制表符（TAB），那么会显示为\\t符号，如果是空格，就会原样显示。<br>通过此方法即可以判断制表符和空格了。<br>注意，上面sed -n后面的字符是L的小写字母哦，不要看错。</p>\n<p>（9）我应该在cut -d中用什么符号来设定制表符或空格呢?</p>\n<p>其实cut的-d选项的默认间隔符就是制表符，所以当你就是要使用制表符的时候，完全就可以省略-d选项，而直接用－f来取域就可以了。</p>\n<p>如果你设定一个空格为间隔符，那么就这样：</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ‘ ‘ -f 1<br>this<br>this<br>注意，两个单引号之间可确实要有一个空格哦，不能偷懒。<br>而且，你只能在-d后面设置一个空格，可不许设置多个空格，因为cut只允许间隔符是一个字符。</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ‘ ‘ -f 1<br>cut: the delimiter must be a single character<br>Try `cut –help’ for more information.</p>\n<p>（10）cut有哪些缺陷和不足？</p>\n<p>猜出来了吧？对，就是在处理多空格时。<br>如果文件里面的某些域是由若干个空格来间隔的，那么用cut就有点麻烦了，因为cut只擅长处理“以一个字符间隔”的文本内容</p>\n","site":{"data":{}},"excerpt":"<p>cut是一个选取命令，就是将一段数据经过分析，取出我们想要的。一般来说，选取信息通常是针对“行”来进行分析的，并不是整篇信息分析的。</p>","more":"<p>(1) 其语法格式为：</p>\n<font color=\"red\">cut [-bn] [file] 或 cut [-c] [file] 或者 cut [-df] [file]</font>\n\n<p>使用说明<br>cut 命令从文件的每一行剪切字节、字符和字段并将这些字节、字符和字段写至标准输出。<br><br>如果不指定 File 参数，cut 命令将读取标准输入。必须指定 -b、-c 或 -f 标志之一。</p>\n<p>主要参数</p>\n<ul>\n<li>-b ：以字节为单位进行分割。这些字节位置将忽略多字节字符边界，除非也指定了 -n 标志。</li>\n<li>-c ：以字符为单位进行分割。</li>\n<li>-d ：自定义分隔符，默认为制表符。</li>\n<li>-f  ：与-d一起使用，指定显示哪个区域。</li>\n<li>-n ：取消分割多字节字符。仅和 -b 标志一起使用。如果字符的最后一个字节落在由 -b 标志的 List 参数指示的<br>范围之内，该字符将被写出；否则，该字符将被排除。</li>\n</ul>\n<p>（2）cut一般以什么为依据呢? 也就是说，我怎么告诉cut我想定位到的剪切内容呢?</p>\n<p>cut命令主要是接受三个定位方法：<br>第一，字节（bytes），用选项-b<br>第二，字符（characters），用选项-c<br>第三，域（fields），用选项-f</p>\n<p>3）以“字节”定位<br>举个例子吧，当你执行ps命令时，会输出类似如下的内容：<br>[rocrocket@rocrocket programming]$ who<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>如果我们想提取每一行的第3个字节，就这样：<br>[rocrocket@rocrocket programming]$ who|cut -b 3<br>c<br>c<br>c</p>\n<p>4） 如果“字节”定位中，我想提取第3，第4、第5和第8个字节，怎么办?<br>-b支持形如3-5的写法，而且多个定位之间用逗号隔开就成了。看看例子吧：<br>[rocrocket@rocrocket programming]$ who|cut -b 3-5,8<br>croe<br>croe<br>croe<br>但有一点要注意，cut命令如果使用了-b选项，那么执行此命令时，cut会先把-b后面所有的定位进行从小到大排序，然后再提取。可不能颠倒定位的顺序哦。这个例子就可以说明这个问题：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -b 8,3-5<br>croe<br>croe<br>croe<br>（5） 还有哪些类似“3-5”这样的小技巧，列举一下吧!</p>\n<p>[rocrocket@rocrocket programming]$ who<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>[rocrocket@rocrocket programming]$ who|cut -b -3<br>roc<br>roc<br>roc<br>[rocrocket@rocrocket programming]$ who|cut -b 3-<br>crocket :0           2009-01-08 11:07<br>crocket pts/0        2009-01-08 11:23 (:0.0)<br>crocket pts/1        2009-01-08 14:15 (:0.0)<br>想必你也看到了，-3表示从第一个字节到第三个字节，而3-表示从第三个字节到行尾。如果你细心，你可以看到这两种情况下，都包括了第三个字节“c”。<br>如果我执行who|cut -b -3,3-，你觉得会如何呢？答案是输出整行，不会出现连续两个重叠的c的。看：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -b -3,3-<br>rocrocket :0           2009-01-08 11:07<br>rocrocket pts/0        2009-01-08 11:23 (:0.0)<br>rocrocket pts/1        2009-01-08 14:15 (:0.0)<br>（6）给个以字符为定位标志的最简单的例子吧!</p>\n<p>下面例子你似曾相识，提取第3，第4，第5和第8个字符：</p>\n<p>[rocrocket@rocrocket programming]$ who|cut -c 3-5,8<br>croe<br>croe<br>croe<br>不过，看着怎么和-b没有什么区别啊？莫非-b和-c作用一样? 其实不然，看似相同，只是因为这个例子举的不好，who输出的都是单字节字符，所以用-b和-c没有区别，如果你提取中文，区别就看出来了，来，看看中文提取的情况：</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt<br>星期一<br>星期二<br>星期三<br>星期四<br>[rocrocket@rocrocket programming]$ cut -b 3 cut_ch.txt<br>�<br>�<br>�<br>�<br>[rocrocket@rocrocket programming]$ cut -c 3 cut_ch.txt<br>一<br>二<br>三<br>四<br>看到了吧，用-c则会以字符为单位，输出正常；而-b只会傻傻的以字节（8位二进制位）来计算，输出就是乱码。<br>既然提到了这个知识点，就再补充一句，如果你学有余力，就提高一下。<br>当遇到多字节字符时，可以使用-n选项，-n用于告诉cut不要将多字节字符拆开。例子如下：</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -b 2<br>�<br>�<br>�<br>�<br>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 2</p>\n<p>[rocrocket@rocrocket programming]$ cat cut_ch.txt |cut -nb 1,2,3<br>星<br>星<br>星<br>星<br>（7）域是怎么回事呢？解释解释:)</p>\n<p>为什么会有“域”的提取呢，因为刚才提到的-b和-c只能在固定格式的文档中提取信息，而对于非固定格式的信息则束手无策。这时候“域”就派上用场了。如果你观察过/etc/passwd文件，你会发现，它并不像who的输出信息那样具有固定格式，而是比较零散的排放。但是，冒号在这个文件的每一行中都起到了非常重要的作用，冒号用来隔开每一个项。</p>\n<p>我们很幸运，cut命令提供了这样的提取方式，具体的说就是设置“间隔符”，再设置“提取第几个域”，就OK了！</p>\n<p>以/etc/passwd的前五行内容为例：</p>\n<p>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5<br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin<br>daemon:x:2:2:daemon:/sbin:/sbin/nologin<br>adm:x:3:4:adm:/var/adm:/sbin/nologin<br>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1<br>root<br>bin<br>daemon<br>adm<br>lp<br>看到了吧，用-d来设置间隔符为冒号，然后用-f来设置我要取的是第一个域，再按回车，所有的用户名就都列出来了！呵呵 有成就感吧！<br>当然，在设定-f时，也可以使用例如3-5或者4-类似的格式：</p>\n<p>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5<br>root:0:0:root<br>bin:1:1:bin<br>daemon:2:2:daemon<br>adm:3:4:adm<br>lp:4:7:lp<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f 1,3-5,7<br>root:0:0:root:/bin/bash<br>bin:1:1:bin:/sbin/nologin<br>daemon:2:2:daemon:/sbin/nologin<br>adm:3:4:adm:/sbin/nologin<br>lp:4:7:lp:/sbin/nologin<br>[rocrocket@rocrocket programming]$ cat /etc/passwd|head -n 5|cut -d : -f -2<br>root:x<br>bin:x<br>daemon:x<br>adm:x<br>lp:x<br>（8）如果遇到空格和制表符时，怎么分辨呢？我觉得有点乱，怎么办？</p>\n<p>有时候制表符确实很难辨认，有一个方法可以看出一段空格到底是由若干个空格组成的还是由一个制表符组成的。</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt<br>this is tab finish.<br>this is several space      finish.<br>[rocrocket@rocrocket programming]$ sed -n l tab_space.txt<br>this is tab\\tfinish.$<br>this is several space      finish.$<br>看到了吧，如果是制表符（TAB），那么会显示为\\t符号，如果是空格，就会原样显示。<br>通过此方法即可以判断制表符和空格了。<br>注意，上面sed -n后面的字符是L的小写字母哦，不要看错。</p>\n<p>（9）我应该在cut -d中用什么符号来设定制表符或空格呢?</p>\n<p>其实cut的-d选项的默认间隔符就是制表符，所以当你就是要使用制表符的时候，完全就可以省略-d选项，而直接用－f来取域就可以了。</p>\n<p>如果你设定一个空格为间隔符，那么就这样：</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ‘ ‘ -f 1<br>this<br>this<br>注意，两个单引号之间可确实要有一个空格哦，不能偷懒。<br>而且，你只能在-d后面设置一个空格，可不许设置多个空格，因为cut只允许间隔符是一个字符。</p>\n<p>[rocrocket@rocrocket programming]$ cat tab_space.txt |cut -d ‘ ‘ -f 1<br>cut: the delimiter must be a single character<br>Try `cut –help’ for more information.</p>\n<p>（10）cut有哪些缺陷和不足？</p>\n<p>猜出来了吧？对，就是在处理多空格时。<br>如果文件里面的某些域是由若干个空格来间隔的，那么用cut就有点麻烦了，因为cut只擅长处理“以一个字符间隔”的文本内容</p>"},{"title":"mac系统如何显示和隐藏文件","date":"2016-03-09T15:49:21.000Z","_content":"\n### 显示Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles -bool true\n\n### 隐藏Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles -bool false\n\n<!-- more -->\n## 或者 : ##\n\n### 显示Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles YES\n\n### 隐藏Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles NO \n\n输完单击Enter键，退出终端，重新启动Finder就可以了 \n#### 重启Finder：\n>鼠标单击窗口左上角的苹果标志-->强制退出-->Finder-->重新启动\n\n\n","source":"_posts/mac系统如何显示和隐藏文件.md","raw":"---\ntitle: mac系统如何显示和隐藏文件\ndate: 2016-03-09 23:49:21\ntags: [mac]\ncategories: mac\n---\n\n### 显示Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles -bool true\n\n### 隐藏Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles -bool false\n\n<!-- more -->\n## 或者 : ##\n\n### 显示Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles YES\n\n### 隐藏Mac隐藏文件的命令：\n>defaults write com.apple.finder AppleShowAllFiles NO \n\n输完单击Enter键，退出终端，重新启动Finder就可以了 \n#### 重启Finder：\n>鼠标单击窗口左上角的苹果标志-->强制退出-->Finder-->重新启动\n\n\n","slug":"mac系统如何显示和隐藏文件","published":1,"updated":"2016-03-12T03:24:56.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uukx002jpev2gpcac4zp","content":"<h3 id=\"显示Mac隐藏文件的命令：\"><a href=\"#显示Mac隐藏文件的命令：\" class=\"headerlink\" title=\"显示Mac隐藏文件的命令：\"></a>显示Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool true</p>\n</blockquote>\n<h3 id=\"隐藏Mac隐藏文件的命令：\"><a href=\"#隐藏Mac隐藏文件的命令：\" class=\"headerlink\" title=\"隐藏Mac隐藏文件的命令：\"></a>隐藏Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool false</p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"或者\"><a href=\"#或者\" class=\"headerlink\" title=\"或者 :\"></a>或者 :</h2><h3 id=\"显示Mac隐藏文件的命令：-1\"><a href=\"#显示Mac隐藏文件的命令：-1\" class=\"headerlink\" title=\"显示Mac隐藏文件的命令：\"></a>显示Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles YES</p>\n</blockquote>\n<h3 id=\"隐藏Mac隐藏文件的命令：-1\"><a href=\"#隐藏Mac隐藏文件的命令：-1\" class=\"headerlink\" title=\"隐藏Mac隐藏文件的命令：\"></a>隐藏Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles NO </p>\n</blockquote>\n<p>输完单击Enter键，退出终端，重新启动Finder就可以了 </p>\n<h4 id=\"重启Finder：\"><a href=\"#重启Finder：\" class=\"headerlink\" title=\"重启Finder：\"></a>重启Finder：</h4><blockquote>\n<p>鼠标单击窗口左上角的苹果标志–&gt;强制退出–&gt;Finder–&gt;重新启动</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h3 id=\"显示Mac隐藏文件的命令：\"><a href=\"#显示Mac隐藏文件的命令：\" class=\"headerlink\" title=\"显示Mac隐藏文件的命令：\"></a>显示Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool true</p>\n</blockquote>\n<h3 id=\"隐藏Mac隐藏文件的命令：\"><a href=\"#隐藏Mac隐藏文件的命令：\" class=\"headerlink\" title=\"隐藏Mac隐藏文件的命令：\"></a>隐藏Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles -bool false</p>\n</blockquote>","more":"<h2 id=\"或者\"><a href=\"#或者\" class=\"headerlink\" title=\"或者 :\"></a>或者 :</h2><h3 id=\"显示Mac隐藏文件的命令：-1\"><a href=\"#显示Mac隐藏文件的命令：-1\" class=\"headerlink\" title=\"显示Mac隐藏文件的命令：\"></a>显示Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles YES</p>\n</blockquote>\n<h3 id=\"隐藏Mac隐藏文件的命令：-1\"><a href=\"#隐藏Mac隐藏文件的命令：-1\" class=\"headerlink\" title=\"隐藏Mac隐藏文件的命令：\"></a>隐藏Mac隐藏文件的命令：</h3><blockquote>\n<p>defaults write com.apple.finder AppleShowAllFiles NO </p>\n</blockquote>\n<p>输完单击Enter键，退出终端，重新启动Finder就可以了 </p>\n<h4 id=\"重启Finder：\"><a href=\"#重启Finder：\" class=\"headerlink\" title=\"重启Finder：\"></a>重启Finder：</h4><blockquote>\n<p>鼠标单击窗口左上角的苹果标志–&gt;强制退出–&gt;Finder–&gt;重新启动</p>\n</blockquote>"},{"title":"python字符串的去除空格函数 字符串的内建函数","date":"2016-08-24T15:11:52.000Z","_content":"\n## python字符串的去除空格函数 字符串的内建函数\n-----\n\n* strip 同时去掉左右两边的空格\n* lstrip 去掉左边的空格\n* rstrip 去掉右边的空格\n\n<!-- more -->\n| 方法 | 描述 |\n| :-----| :----|                                 \n|string.capitalize()     |         把字符串的第一个字符大写|\n|string.center(width)      |    返回一个原字符串居中,并使用空格填充至长度width的新字串|\n|string.count(str, beg=0, end=len(string))|返回str在string里面出现的次数，如果beg或者end指定则返回指定范围内 str 出现的次数 |\n|string.decode(encoding='UTF-8', errors='strict')  | 以 encoding 指定的编码格式解码string，如果出错默认报一个 ValueError的异常 ，除非errors 指定的是 'ignore''replace' string.encode(encoding='UTF-8', errors='strict')  以 encoding 指定的编码格式编码string，如果出错默认报一个ValueError 的异常，除非 errors指定的是'ignore'或者'replace'|           \n|string.endswith(obj, beg=0, end=len(string))|检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回True,否则返回 False.|\n|string.expandtabs(tabsize=8) |把字符串string中的tab符号转为空格,默认的空格数tabsize是 8.|\n|string.find(str, beg=0, end=len(string))|检测str是否包含在 string 中,如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1|\n|string.index(str, beg=0, end=len(string))|跟find()方法一样，只不过如果str不在 string中会报一个异常.|\n|string.isalnum() | R如果 string 至少有一个字符并且所有字符都是字母或数字则返回True,否则返回False|\n|string.isalpha() | 如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False|\n|string.isdecimal() | 如果 string 只包含十进制数字则返回True 否则返回 False.|\n|string.isdigit() |如果 string 只包含数字则返回 True 否则返回 False.|\n|string.islower() |如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回True，否则返回 False|\n|string.isnumeric()|如果 string 中只包含数字字符，则返回True，否则返回 False|\n|string.isspace()|如果 string 中只包含空格，则返回True，否则返回 False.|\n|string.istitle()| 如果 string 是标题化的(见 title())则返回 True，否则返回 False|\n|string.isupper() | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回True，否则返回 False|\n|string.join(seq)| Merges (concatenates)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串|\n|string.ljust(width)|返回一个原字符串左对齐,并使用空格填充至长度width 的新字符串|\n|string.lower() | 转换 string 中所有大写字符为小写. |\n|<font color=\"#DC143C\">string.lstrip() </font>|<font color=\"#DC143C\">截掉 string 左边的空格.</font>|\n|string.partition(str)|有点像 find()和 split()的结合体,从 str 出现的第一个位置起,把字符 串string分成一个3元素的元组(string_pre_str,str,strig_post_str),如果 string中不包含str则string_pre_str == string.|\n|string.replace(str1, str2,num=string.count(str1))|把 string中的str1替换成str2,如果num指定，则替换不超过 num 次.|\n|string.rfind(str, beg=0,end=len(string) )|类似于 find()函数，不过是从右边开始查找.|\n|string.rindex( str, beg=0,end=len(string)) | 类似于 index()，不过是从右边开始.|\n|string.rjust(width)      |   返回一个原字符串右对齐,并使用空格填充至长度width 的新字符串|\n|string.rpartition(str)   |   类似于 partition()函数,不过是从右边开始查找.|\n|<font color=\"#DC143C\">string.rstrip() </font>  |  <font color=\"#DC143C\">          删除 string 字符串末尾的空格.</font>|\n|string.split(str=\"\", num=string.count(str))|以 str 为分隔符切片string，如果num有指定值，则仅分隔num个子字符串|\n|string.splitlines(num=string.count('\\n'))|按照行分隔，返回一个包含各行作为元素的列表，如果num指定则仅切片 num 个行.|\n|string.startswith(obj, beg=0,end=len(string))|检查字符串是否是以 obj 开头，是则返回True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.|\n|<font color=\"#DC143C\">string.strip([obj]) </font>|  <font color=\"#DC143C\">    在string 上执行 lstrip()和 rstrip().</font>|\n|string.swapcase() |      翻转 string 中的大小写|\n|string.title() |              返回\"标题化\"的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())|\n|string.translate(str, del=\"\")|根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中|\n|string.upper() |         转换 string 中的小写字母为大写|\n|string.zfill(width) |    返回长度为width的字符串,原字符串 string 右对齐,前面填充0|\n","source":"_posts/python字符串的去除空格函数-字符串的内建函数.md","raw":"---\ntitle: python字符串的去除空格函数 字符串的内建函数\ndate: 2016-08-24 23:11:52\ntags: python\ncategories: python\n---\n\n## python字符串的去除空格函数 字符串的内建函数\n-----\n\n* strip 同时去掉左右两边的空格\n* lstrip 去掉左边的空格\n* rstrip 去掉右边的空格\n\n<!-- more -->\n| 方法 | 描述 |\n| :-----| :----|                                 \n|string.capitalize()     |         把字符串的第一个字符大写|\n|string.center(width)      |    返回一个原字符串居中,并使用空格填充至长度width的新字串|\n|string.count(str, beg=0, end=len(string))|返回str在string里面出现的次数，如果beg或者end指定则返回指定范围内 str 出现的次数 |\n|string.decode(encoding='UTF-8', errors='strict')  | 以 encoding 指定的编码格式解码string，如果出错默认报一个 ValueError的异常 ，除非errors 指定的是 'ignore''replace' string.encode(encoding='UTF-8', errors='strict')  以 encoding 指定的编码格式编码string，如果出错默认报一个ValueError 的异常，除非 errors指定的是'ignore'或者'replace'|           \n|string.endswith(obj, beg=0, end=len(string))|检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回True,否则返回 False.|\n|string.expandtabs(tabsize=8) |把字符串string中的tab符号转为空格,默认的空格数tabsize是 8.|\n|string.find(str, beg=0, end=len(string))|检测str是否包含在 string 中,如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1|\n|string.index(str, beg=0, end=len(string))|跟find()方法一样，只不过如果str不在 string中会报一个异常.|\n|string.isalnum() | R如果 string 至少有一个字符并且所有字符都是字母或数字则返回True,否则返回False|\n|string.isalpha() | 如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False|\n|string.isdecimal() | 如果 string 只包含十进制数字则返回True 否则返回 False.|\n|string.isdigit() |如果 string 只包含数字则返回 True 否则返回 False.|\n|string.islower() |如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回True，否则返回 False|\n|string.isnumeric()|如果 string 中只包含数字字符，则返回True，否则返回 False|\n|string.isspace()|如果 string 中只包含空格，则返回True，否则返回 False.|\n|string.istitle()| 如果 string 是标题化的(见 title())则返回 True，否则返回 False|\n|string.isupper() | 如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回True，否则返回 False|\n|string.join(seq)| Merges (concatenates)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串|\n|string.ljust(width)|返回一个原字符串左对齐,并使用空格填充至长度width 的新字符串|\n|string.lower() | 转换 string 中所有大写字符为小写. |\n|<font color=\"#DC143C\">string.lstrip() </font>|<font color=\"#DC143C\">截掉 string 左边的空格.</font>|\n|string.partition(str)|有点像 find()和 split()的结合体,从 str 出现的第一个位置起,把字符 串string分成一个3元素的元组(string_pre_str,str,strig_post_str),如果 string中不包含str则string_pre_str == string.|\n|string.replace(str1, str2,num=string.count(str1))|把 string中的str1替换成str2,如果num指定，则替换不超过 num 次.|\n|string.rfind(str, beg=0,end=len(string) )|类似于 find()函数，不过是从右边开始查找.|\n|string.rindex( str, beg=0,end=len(string)) | 类似于 index()，不过是从右边开始.|\n|string.rjust(width)      |   返回一个原字符串右对齐,并使用空格填充至长度width 的新字符串|\n|string.rpartition(str)   |   类似于 partition()函数,不过是从右边开始查找.|\n|<font color=\"#DC143C\">string.rstrip() </font>  |  <font color=\"#DC143C\">          删除 string 字符串末尾的空格.</font>|\n|string.split(str=\"\", num=string.count(str))|以 str 为分隔符切片string，如果num有指定值，则仅分隔num个子字符串|\n|string.splitlines(num=string.count('\\n'))|按照行分隔，返回一个包含各行作为元素的列表，如果num指定则仅切片 num 个行.|\n|string.startswith(obj, beg=0,end=len(string))|检查字符串是否是以 obj 开头，是则返回True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.|\n|<font color=\"#DC143C\">string.strip([obj]) </font>|  <font color=\"#DC143C\">    在string 上执行 lstrip()和 rstrip().</font>|\n|string.swapcase() |      翻转 string 中的大小写|\n|string.title() |              返回\"标题化\"的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())|\n|string.translate(str, del=\"\")|根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中|\n|string.upper() |         转换 string 中的小写字母为大写|\n|string.zfill(width) |    返回长度为width的字符串,原字符串 string 右对齐,前面填充0|\n","slug":"python字符串的去除空格函数-字符串的内建函数","published":1,"updated":"2016-08-24T15:37:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uul0002npev28bmm8wcs","content":"<h2 id=\"python字符串的去除空格函数-字符串的内建函数\"><a href=\"#python字符串的去除空格函数-字符串的内建函数\" class=\"headerlink\" title=\"python字符串的去除空格函数 字符串的内建函数\"></a>python字符串的去除空格函数 字符串的内建函数</h2><hr>\n<ul>\n<li>strip 同时去掉左右两边的空格</li>\n<li>lstrip 去掉左边的空格</li>\n<li>rstrip 去掉右边的空格</li>\n</ul>\n<a id=\"more\"></a>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string.capitalize()</td>\n<td style=\"text-align:left\">把字符串的第一个字符大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.center(width)</td>\n<td style=\"text-align:left\">返回一个原字符串居中,并使用空格填充至长度width的新字串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.count(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">返回str在string里面出现的次数，如果beg或者end指定则返回指定范围内 str 出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.decode(encoding=’UTF-8’, errors=’strict’)</td>\n<td style=\"text-align:left\">以 encoding 指定的编码格式解码string，如果出错默认报一个 ValueError的异常 ，除非errors 指定的是 ‘ignore’’replace’ string.encode(encoding=’UTF-8’, errors=’strict’)  以 encoding 指定的编码格式编码string，如果出错默认报一个ValueError 的异常，除非 errors指定的是’ignore’或者’replace’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.endswith(obj, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回True,否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.expandtabs(tabsize=8)</td>\n<td style=\"text-align:left\">把字符串string中的tab符号转为空格,默认的空格数tabsize是 8.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.find(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">检测str是否包含在 string 中,如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.index(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">跟find()方法一样，只不过如果str不在 string中会报一个异常.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isalnum()</td>\n<td style=\"text-align:left\">R如果 string 至少有一个字符并且所有字符都是字母或数字则返回True,否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isalpha()</td>\n<td style=\"text-align:left\">如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isdecimal()</td>\n<td style=\"text-align:left\">如果 string 只包含十进制数字则返回True 否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isdigit()</td>\n<td style=\"text-align:left\">如果 string 只包含数字则返回 True 否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.islower()</td>\n<td style=\"text-align:left\">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isnumeric()</td>\n<td style=\"text-align:left\">如果 string 中只包含数字字符，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isspace()</td>\n<td style=\"text-align:left\">如果 string 中只包含空格，则返回True，否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.istitle()</td>\n<td style=\"text-align:left\">如果 string 是标题化的(见 title())则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isupper()</td>\n<td style=\"text-align:left\">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.join(seq)</td>\n<td style=\"text-align:left\">Merges (concatenates)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.ljust(width)</td>\n<td style=\"text-align:left\">返回一个原字符串左对齐,并使用空格填充至长度width 的新字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.lower()</td>\n<td style=\"text-align:left\">转换 string 中所有大写字符为小写.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.lstrip() </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">截掉 string 左边的空格.</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.partition(str)</td>\n<td style=\"text-align:left\">有点像 find()和 split()的结合体,从 str 出现的第一个位置起,把字符 串string分成一个3元素的元组(string_pre_str,str,strig_post_str),如果 string中不包含str则string_pre_str == string.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.replace(str1, str2,num=string.count(str1))</td>\n<td style=\"text-align:left\">把 string中的str1替换成str2,如果num指定，则替换不超过 num 次.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rfind(str, beg=0,end=len(string) )</td>\n<td style=\"text-align:left\">类似于 find()函数，不过是从右边开始查找.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rindex( str, beg=0,end=len(string))</td>\n<td style=\"text-align:left\">类似于 index()，不过是从右边开始.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rjust(width)</td>\n<td style=\"text-align:left\">返回一个原字符串右对齐,并使用空格填充至长度width 的新字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rpartition(str)</td>\n<td style=\"text-align:left\">类似于 partition()函数,不过是从右边开始查找.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.rstrip() </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">          删除 string 字符串末尾的空格.</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.split(str=””, num=string.count(str))</td>\n<td style=\"text-align:left\">以 str 为分隔符切片string，如果num有指定值，则仅分隔num个子字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.splitlines(num=string.count(‘\\n’))</td>\n<td style=\"text-align:left\">按照行分隔，返回一个包含各行作为元素的列表，如果num指定则仅切片 num 个行.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.startswith(obj, beg=0,end=len(string))</td>\n<td style=\"text-align:left\">检查字符串是否是以 obj 开头，是则返回True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.strip([obj]) </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">    在string 上执行 lstrip()和 rstrip().</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.swapcase()</td>\n<td style=\"text-align:left\">翻转 string 中的大小写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.title()</td>\n<td style=\"text-align:left\">返回”标题化”的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.translate(str, del=””)</td>\n<td style=\"text-align:left\">根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.upper()</td>\n<td style=\"text-align:left\">转换 string 中的小写字母为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.zfill(width)</td>\n<td style=\"text-align:left\">返回长度为width的字符串,原字符串 string 右对齐,前面填充0</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h2 id=\"python字符串的去除空格函数-字符串的内建函数\"><a href=\"#python字符串的去除空格函数-字符串的内建函数\" class=\"headerlink\" title=\"python字符串的去除空格函数 字符串的内建函数\"></a>python字符串的去除空格函数 字符串的内建函数</h2><hr>\n<ul>\n<li>strip 同时去掉左右两边的空格</li>\n<li>lstrip 去掉左边的空格</li>\n<li>rstrip 去掉右边的空格</li>\n</ul>","more":"<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">string.capitalize()</td>\n<td style=\"text-align:left\">把字符串的第一个字符大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.center(width)</td>\n<td style=\"text-align:left\">返回一个原字符串居中,并使用空格填充至长度width的新字串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.count(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">返回str在string里面出现的次数，如果beg或者end指定则返回指定范围内 str 出现的次数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.decode(encoding=’UTF-8’, errors=’strict’)</td>\n<td style=\"text-align:left\">以 encoding 指定的编码格式解码string，如果出错默认报一个 ValueError的异常 ，除非errors 指定的是 ‘ignore’’replace’ string.encode(encoding=’UTF-8’, errors=’strict’)  以 encoding 指定的编码格式编码string，如果出错默认报一个ValueError 的异常，除非 errors指定的是’ignore’或者’replace’</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.endswith(obj, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">检查字符串是否以 obj 结束，如果beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回True,否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.expandtabs(tabsize=8)</td>\n<td style=\"text-align:left\">把字符串string中的tab符号转为空格,默认的空格数tabsize是 8.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.find(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">检测str是否包含在 string 中,如果 beg 和 end 指定范围，则检查是否包含在指定范围内，如果是返回开始的索引值，否则返回-1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.index(str, beg=0, end=len(string))</td>\n<td style=\"text-align:left\">跟find()方法一样，只不过如果str不在 string中会报一个异常.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isalnum()</td>\n<td style=\"text-align:left\">R如果 string 至少有一个字符并且所有字符都是字母或数字则返回True,否则返回False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isalpha()</td>\n<td style=\"text-align:left\">如果 string 至少有一个字符并且所有字符都是字母则返回 True,否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isdecimal()</td>\n<td style=\"text-align:left\">如果 string 只包含十进制数字则返回True 否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isdigit()</td>\n<td style=\"text-align:left\">如果 string 只包含数字则返回 True 否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.islower()</td>\n<td style=\"text-align:left\">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isnumeric()</td>\n<td style=\"text-align:left\">如果 string 中只包含数字字符，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isspace()</td>\n<td style=\"text-align:left\">如果 string 中只包含空格，则返回True，否则返回 False.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.istitle()</td>\n<td style=\"text-align:left\">如果 string 是标题化的(见 title())则返回 True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.isupper()</td>\n<td style=\"text-align:left\">如果 string 中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回True，否则返回 False</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.join(seq)</td>\n<td style=\"text-align:left\">Merges (concatenates)以 string 作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.ljust(width)</td>\n<td style=\"text-align:left\">返回一个原字符串左对齐,并使用空格填充至长度width 的新字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.lower()</td>\n<td style=\"text-align:left\">转换 string 中所有大写字符为小写.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.lstrip() </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">截掉 string 左边的空格.</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.partition(str)</td>\n<td style=\"text-align:left\">有点像 find()和 split()的结合体,从 str 出现的第一个位置起,把字符 串string分成一个3元素的元组(string_pre_str,str,strig_post_str),如果 string中不包含str则string_pre_str == string.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.replace(str1, str2,num=string.count(str1))</td>\n<td style=\"text-align:left\">把 string中的str1替换成str2,如果num指定，则替换不超过 num 次.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rfind(str, beg=0,end=len(string) )</td>\n<td style=\"text-align:left\">类似于 find()函数，不过是从右边开始查找.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rindex( str, beg=0,end=len(string))</td>\n<td style=\"text-align:left\">类似于 index()，不过是从右边开始.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rjust(width)</td>\n<td style=\"text-align:left\">返回一个原字符串右对齐,并使用空格填充至长度width 的新字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.rpartition(str)</td>\n<td style=\"text-align:left\">类似于 partition()函数,不过是从右边开始查找.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.rstrip() </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">          删除 string 字符串末尾的空格.</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.split(str=””, num=string.count(str))</td>\n<td style=\"text-align:left\">以 str 为分隔符切片string，如果num有指定值，则仅分隔num个子字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.splitlines(num=string.count(‘\\n’))</td>\n<td style=\"text-align:left\">按照行分隔，返回一个包含各行作为元素的列表，如果num指定则仅切片 num 个行.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.startswith(obj, beg=0,end=len(string))</td>\n<td style=\"text-align:left\">检查字符串是否是以 obj 开头，是则返回True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查.</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><font color=\"#DC143C\">string.strip([obj]) </font></td>\n<td style=\"text-align:left\"><font color=\"#DC143C\">    在string 上执行 lstrip()和 rstrip().</font></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.swapcase()</td>\n<td style=\"text-align:left\">翻转 string 中的大小写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.title()</td>\n<td style=\"text-align:left\">返回”标题化”的 string,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.translate(str, del=””)</td>\n<td style=\"text-align:left\">根据 str 给出的表(包含 256 个字符)转换 string 的字符,要过滤掉的字符放到 del 参数中</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.upper()</td>\n<td style=\"text-align:left\">转换 string 中的小写字母为大写</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string.zfill(width)</td>\n<td style=\"text-align:left\">返回长度为width的字符串,原字符串 string 右对齐,前面填充0</td>\n</tr>\n</tbody>\n</table>"},{"title":"一句代码搞定 Android 图片压缩","date":"2016-08-29T12:30:58.000Z","_content":"\n一个Android图片压缩工具\n\n<!-- more -->\n\n#### 尊重原著，请移步作者博客\n\n\n>文／zibin（简书作者）\n原文链接：http://www.jianshu.com/p/8a51288c1dee\n","source":"_posts/一句代码搞定-Android-图片压缩.md","raw":"---\ntitle: 一句代码搞定 Android 图片压缩\ndate: 2016-08-29 20:30:58\ntags: [android]\ncategories: android\n---\n\n一个Android图片压缩工具\n\n<!-- more -->\n\n#### 尊重原著，请移步作者博客\n\n\n>文／zibin（简书作者）\n原文链接：http://www.jianshu.com/p/8a51288c1dee\n","slug":"一句代码搞定-Android-图片压缩","published":1,"updated":"2016-08-29T12:33:45.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uul2002ppev20hksgjx7","content":"<p>一个Android图片压缩工具</p>\n<a id=\"more\"></a>\n<h4 id=\"尊重原著，请移步作者博客\"><a href=\"#尊重原著，请移步作者博客\" class=\"headerlink\" title=\"尊重原著，请移步作者博客\"></a>尊重原著，请移步作者博客</h4><blockquote>\n<p>文／zibin（简书作者）<br>原文链接：<a href=\"http://www.jianshu.com/p/8a51288c1dee\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/8a51288c1dee</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<p>一个Android图片压缩工具</p>","more":"<h4 id=\"尊重原著，请移步作者博客\"><a href=\"#尊重原著，请移步作者博客\" class=\"headerlink\" title=\"尊重原著，请移步作者博客\"></a>尊重原著，请移步作者博客</h4><blockquote>\n<p>文／zibin（简书作者）<br>原文链接：<a href=\"http://www.jianshu.com/p/8a51288c1dee\" target=\"_blank\" rel=\"noopener\">http://www.jianshu.com/p/8a51288c1dee</a></p>\n</blockquote>"},{"title":"使用Android Studio的lint清除无用的资源文件","date":"2016-03-22T14:15:20.000Z","_content":"\n## 使用Android Studio的lint清除无用的资源文件\n<!-- more -->\n> studio很容易查找无用的资源\n\n在项目中，点击菜单栏的Analyze->Run Inspection by Name...\n![lint-1.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-1.png)\n\n选择后出现弹窗如下：\n![lint-2.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-2.png)\n\n在弹窗中输入 unused resources 选中点击回车后：\n![lint-3.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-3.png)\n\n这里可以选择，整个项目或者某个模块，也可以自定义选择某个目录\n到此，Android Studio 就会自动分析，然后可以根据结果清除无用的资源文件。\n\n**注意**：在某些情况下，也有可能检测错误，我就在build.gradle中有引用图片，然而这里无法查询到，但大部分查出是对的。\n\n\n> Note:\n> 1.一般是删除无用的Java文件\n> 2.然后删除无用Java文件中引用的xml文件\n> 3.删除xml或Java代码中用到的图片等资源文件\n> 4.可以通过指定图片Alt+F7(Find Usages)查询是否引用\n\n\n\n\n","source":"_posts/使用Android-Studio的lint清除无用的资源文件.md","raw":"---\ntitle: 使用Android Studio的lint清除无用的资源文件\ndate: 2016-03-22 22:15:20\ntags: [android, lint]\ncategories: android\n---\n\n## 使用Android Studio的lint清除无用的资源文件\n<!-- more -->\n> studio很容易查找无用的资源\n\n在项目中，点击菜单栏的Analyze->Run Inspection by Name...\n![lint-1.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-1.png)\n\n选择后出现弹窗如下：\n![lint-2.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-2.png)\n\n在弹窗中输入 unused resources 选中点击回车后：\n![lint-3.png](http://7xpj58.com1.z0.glb.clouddn.com/20160322-3.png)\n\n这里可以选择，整个项目或者某个模块，也可以自定义选择某个目录\n到此，Android Studio 就会自动分析，然后可以根据结果清除无用的资源文件。\n\n**注意**：在某些情况下，也有可能检测错误，我就在build.gradle中有引用图片，然而这里无法查询到，但大部分查出是对的。\n\n\n> Note:\n> 1.一般是删除无用的Java文件\n> 2.然后删除无用Java文件中引用的xml文件\n> 3.删除xml或Java代码中用到的图片等资源文件\n> 4.可以通过指定图片Alt+F7(Find Usages)查询是否引用\n\n\n\n\n","slug":"使用Android-Studio的lint清除无用的资源文件","published":1,"updated":"2016-04-15T02:53:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uul5002upev2i3088d4o","content":"<h2 id=\"使用Android-Studio的lint清除无用的资源文件\"><a href=\"#使用Android-Studio的lint清除无用的资源文件\" class=\"headerlink\" title=\"使用Android Studio的lint清除无用的资源文件\"></a>使用Android Studio的lint清除无用的资源文件</h2><a id=\"more\"></a>\n<blockquote>\n<p>studio很容易查找无用的资源</p>\n</blockquote>\n<p>在项目中，点击菜单栏的Analyze-&gt;Run Inspection by Name…<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-1.png\" alt=\"lint-1.png\"></p>\n<p>选择后出现弹窗如下：<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-2.png\" alt=\"lint-2.png\"></p>\n<p>在弹窗中输入 unused resources 选中点击回车后：<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-3.png\" alt=\"lint-3.png\"></p>\n<p>这里可以选择，整个项目或者某个模块，也可以自定义选择某个目录<br>到此，Android Studio 就会自动分析，然后可以根据结果清除无用的资源文件。</p>\n<p><strong>注意</strong>：在某些情况下，也有可能检测错误，我就在build.gradle中有引用图片，然而这里无法查询到，但大部分查出是对的。</p>\n<blockquote>\n<p>Note:<br>1.一般是删除无用的Java文件<br>2.然后删除无用Java文件中引用的xml文件<br>3.删除xml或Java代码中用到的图片等资源文件<br>4.可以通过指定图片Alt+F7(Find Usages)查询是否引用</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h2 id=\"使用Android-Studio的lint清除无用的资源文件\"><a href=\"#使用Android-Studio的lint清除无用的资源文件\" class=\"headerlink\" title=\"使用Android Studio的lint清除无用的资源文件\"></a>使用Android Studio的lint清除无用的资源文件</h2>","more":"<blockquote>\n<p>studio很容易查找无用的资源</p>\n</blockquote>\n<p>在项目中，点击菜单栏的Analyze-&gt;Run Inspection by Name…<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-1.png\" alt=\"lint-1.png\"></p>\n<p>选择后出现弹窗如下：<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-2.png\" alt=\"lint-2.png\"></p>\n<p>在弹窗中输入 unused resources 选中点击回车后：<br><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/20160322-3.png\" alt=\"lint-3.png\"></p>\n<p>这里可以选择，整个项目或者某个模块，也可以自定义选择某个目录<br>到此，Android Studio 就会自动分析，然后可以根据结果清除无用的资源文件。</p>\n<p><strong>注意</strong>：在某些情况下，也有可能检测错误，我就在build.gradle中有引用图片，然而这里无法查询到，但大部分查出是对的。</p>\n<blockquote>\n<p>Note:<br>1.一般是删除无用的Java文件<br>2.然后删除无用Java文件中引用的xml文件<br>3.删除xml或Java代码中用到的图片等资源文件<br>4.可以通过指定图片Alt+F7(Find Usages)查询是否引用</p>\n</blockquote>"},{"title":"关于Android中软键盘与布局的问题","date":"2017-12-05T09:28:06.000Z","_content":">当在Android的layout设计里面如果输入框过多，则在输入弹出软键盘的时候，下面的输入框会有一部分被软件盘挡住，从而不能获取焦点输入。\n\n**解决办法：**\n\n方法一、在Activity中的onCreate中setContentView之前写上如下代码\n\n```\ngetWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN)\n```\n\n方法二、在项目的AndroidManifest.xml文件中界面对应<activity>里加上 `android:windowSoftInputMode=\"stateVisible|adjustResize\"`,这样会让屏幕整体上移。如果加上的是`android:windowSoftInputMode=\"adjustPan\"`这样键盘就会覆盖屏幕。\n\n方法三、把顶级的layout替换为ScrollView, 或者在顶级的layout外再嵌套一层ScrollView。这样页面就可以一起滚动了，软键盘会一直处于底部。\n\n**注意：** 方法一和二应该是同一种方法，只不过一个是在代码中实现一个是在xml中实现。\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/关于Android中软键盘与布局的问题.md","raw":"---\ntitle: 关于Android中软键盘与布局的问题\ndate: 2017-12-05 17:28:06\ntags: [keyboard]\ncategories: android\n---\n>当在Android的layout设计里面如果输入框过多，则在输入弹出软键盘的时候，下面的输入框会有一部分被软件盘挡住，从而不能获取焦点输入。\n\n**解决办法：**\n\n方法一、在Activity中的onCreate中setContentView之前写上如下代码\n\n```\ngetWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_ADJUST_PAN)\n```\n\n方法二、在项目的AndroidManifest.xml文件中界面对应<activity>里加上 `android:windowSoftInputMode=\"stateVisible|adjustResize\"`,这样会让屏幕整体上移。如果加上的是`android:windowSoftInputMode=\"adjustPan\"`这样键盘就会覆盖屏幕。\n\n方法三、把顶级的layout替换为ScrollView, 或者在顶级的layout外再嵌套一层ScrollView。这样页面就可以一起滚动了，软键盘会一直处于底部。\n\n**注意：** 方法一和二应该是同一种方法，只不过一个是在代码中实现一个是在xml中实现。\n\n\n\n\n\n\n\n\n\n\n\n","slug":"关于Android中软键盘与布局的问题","published":1,"updated":"2017-12-05T09:37:19.341Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uul7002xpev2smt8b0xy","content":"<blockquote>\n<p>当在Android的layout设计里面如果输入框过多，则在输入弹出软键盘的时候，下面的输入框会有一部分被软件盘挡住，从而不能获取焦点输入。</p>\n</blockquote>\n<p><strong>解决办法：</strong></p>\n<p>方法一、在Activity中的onCreate中setContentView之前写上如下代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getWindow</span><span class=\"params\">()</span></span>.setSoftInputMode(WindowManager<span class=\"selector-class\">.LayoutParams</span><span class=\"selector-class\">.SOFT_INPUT_ADJUST_PAN</span>)</span><br></pre></td></tr></table></figure>\n<p>方法二、在项目的AndroidManifest.xml文件中界面对应<activity>里加上 <code>android:windowSoftInputMode=&quot;stateVisible|adjustResize&quot;</code>,这样会让屏幕整体上移。如果加上的是<code>android:windowSoftInputMode=&quot;adjustPan&quot;</code>这样键盘就会覆盖屏幕。</activity></p>\n<p>方法三、把顶级的layout替换为ScrollView, 或者在顶级的layout外再嵌套一层ScrollView。这样页面就可以一起滚动了，软键盘会一直处于底部。</p>\n<p><strong>注意：</strong> 方法一和二应该是同一种方法，只不过一个是在代码中实现一个是在xml中实现。</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>当在Android的layout设计里面如果输入框过多，则在输入弹出软键盘的时候，下面的输入框会有一部分被软件盘挡住，从而不能获取焦点输入。</p>\n</blockquote>\n<p><strong>解决办法：</strong></p>\n<p>方法一、在Activity中的onCreate中setContentView之前写上如下代码</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">getWindow</span><span class=\"params\">()</span></span>.setSoftInputMode(WindowManager<span class=\"selector-class\">.LayoutParams</span><span class=\"selector-class\">.SOFT_INPUT_ADJUST_PAN</span>)</span><br></pre></td></tr></table></figure>\n<p>方法二、在项目的AndroidManifest.xml文件中界面对应<activity>里加上 <code>android:windowSoftInputMode=&quot;stateVisible|adjustResize&quot;</code>,这样会让屏幕整体上移。如果加上的是<code>android:windowSoftInputMode=&quot;adjustPan&quot;</code>这样键盘就会覆盖屏幕。</activity></p>\n<p>方法三、把顶级的layout替换为ScrollView, 或者在顶级的layout外再嵌套一层ScrollView。这样页面就可以一起滚动了，软键盘会一直处于底部。</p>\n<p><strong>注意：</strong> 方法一和二应该是同一种方法，只不过一个是在代码中实现一个是在xml中实现。</p>\n"},{"title":"命名规则-阿里巴巴Java开发","date":"2017-08-08T03:53:14.000Z","_content":"\n1. 【强制】 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。\n反例： _name / __name / $Object / name_ / name$ / Object$\n\n<!-- more -->\n\n2. 【强制】 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。\n说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式\n也要避免采用。\n反例：  DaZhePromotion [ 打折 ] /  getPingfenByName() [ 评分 ] /  int 某变量 = 3\n正例：  alibaba /  taobao /  youku /  hangzhou 等国际通用的名称，可视同英文。\n3. 【强制】类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外： （ 领域模型\n的相关命名 ）DO /  BO  /  DTO /  VO 等。\n正例： MarcoPolo /  UserDO /  XmlService /  TcpUdpDeal /  TaPromotion\n反例： macroPolo /  UserDo /  XMLService /  TCPUDPDeal /  TAPromotion\n4. 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从\n驼峰形式。\n正例：  localValue /  getHttpMessage() /  inputUserId\n5. 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。\n正例：  MAX _ STOCK _ COUNT\n反例：  MAX _ COUNT\n6. 【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用 Exception 结尾 ； 测试类\n命名以它要测试的类的名称开始，以 Test 结尾。\n7. 【强制】中括号是数组类型的一部分，数组定义如下： String[] args;\n反例：使用 String args[] 的方式来定义。\n8. 【强制】 POJO 类中布尔类型的变量，都不要加 is ，否则部分框架解析会引起序列化错误。\n反例：定义为基本数据类型 Boolean isSuccess； 的属性，它的方法也是 isSuccess() ， RPC\n框架在反向解析的时候，“以为”对应的属性名称是 success ，导致属性获取不到，进而抛出异\n常。\n9. 【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用\n单数形式，但是类名如果有复数含义，类名可以使用复数形式。\n正例： 应用工具类包名为 com . alibaba . open . util 、类名为 MessageUtils（ 此规则参考\nspring 的框架结构 ）\n10. 【强制】杜绝完全不规范的缩写，避免望文不知义。\n反例：  AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成  condi ，此类\n随意缩写严重降低了代码的可阅读性。\n11. 【推荐】如果使用到了设计模式，建议在类名中体现出具体模式。\n说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计思想。\n正例： public class OrderFactory;\npublic class LoginProxy;\npublic class ResourceObserver;\n12. 【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁\n性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是\n与接口方法相关，并且是整个应用的基础常量。\n正例：接口方法签名： void f();\n接口基础常量表示： String COMPANY = \" alibaba \" ;\n反例：接口方法定义： public abstract void f();\n说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默\n认实现。\n13. 接口和实现类的命名有两套规则：\n1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部\n的实现类用 Impl 的后缀与接口区别。\n正例： CacheServiceImpl 实现 CacheService 接口。\n2 ）  【推荐】 如果是形容能力的接口名称，取对应的形容词做接口名 （ 通常是– able 的形式 ） 。\n正例： AbstractTranslator 实现  Translatable 。\n14. 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。\n说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。\n正例：枚举名字： DealStatusEnum， 成员名称： SUCCESS /  UNKOWN _ REASON 。\n15. 【参考】各层命名规约：\nA) Service / DAO 层方法命名规约\n1 ） 获取单个对象的方法用 get 做前缀。\n2 ） 获取多个对象的方法用 list 做前缀。\n3 ） 获取统计值的方法用 count 做前缀。\n4 ） 插入的方法用 save（ 推荐 ） 或 insert 做前缀。\n5 ） 删除的方法用 remove（ 推荐 ） 或 delete 做前缀。\n6 ） 修改的方法用 update 做前缀。\nB) 领域模型命名规约\n1 ） 数据对象： xxxDO ， xxx 即为数据表名。\n2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。\n3 ） 展示对象： xxxVO ， xxx 一般为网页名称。\n4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO 。\n","source":"_posts/命名规则-阿里巴巴Java开发.md","raw":"---\ntitle: 命名规则-阿里巴巴Java开发\ndate: 2017-08-08 11:53:14\ntags: [java]\ncategories: java\n---\n\n1. 【强制】 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。\n反例： _name / __name / $Object / name_ / name$ / Object$\n\n<!-- more -->\n\n2. 【强制】 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。\n说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式\n也要避免采用。\n反例：  DaZhePromotion [ 打折 ] /  getPingfenByName() [ 评分 ] /  int 某变量 = 3\n正例：  alibaba /  taobao /  youku /  hangzhou 等国际通用的名称，可视同英文。\n3. 【强制】类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外： （ 领域模型\n的相关命名 ）DO /  BO  /  DTO /  VO 等。\n正例： MarcoPolo /  UserDO /  XmlService /  TcpUdpDeal /  TaPromotion\n反例： macroPolo /  UserDo /  XMLService /  TCPUDPDeal /  TAPromotion\n4. 【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从\n驼峰形式。\n正例：  localValue /  getHttpMessage() /  inputUserId\n5. 【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。\n正例：  MAX _ STOCK _ COUNT\n反例：  MAX _ COUNT\n6. 【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用 Exception 结尾 ； 测试类\n命名以它要测试的类的名称开始，以 Test 结尾。\n7. 【强制】中括号是数组类型的一部分，数组定义如下： String[] args;\n反例：使用 String args[] 的方式来定义。\n8. 【强制】 POJO 类中布尔类型的变量，都不要加 is ，否则部分框架解析会引起序列化错误。\n反例：定义为基本数据类型 Boolean isSuccess； 的属性，它的方法也是 isSuccess() ， RPC\n框架在反向解析的时候，“以为”对应的属性名称是 success ，导致属性获取不到，进而抛出异\n常。\n9. 【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用\n单数形式，但是类名如果有复数含义，类名可以使用复数形式。\n正例： 应用工具类包名为 com . alibaba . open . util 、类名为 MessageUtils（ 此规则参考\nspring 的框架结构 ）\n10. 【强制】杜绝完全不规范的缩写，避免望文不知义。\n反例：  AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成  condi ，此类\n随意缩写严重降低了代码的可阅读性。\n11. 【推荐】如果使用到了设计模式，建议在类名中体现出具体模式。\n说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计思想。\n正例： public class OrderFactory;\npublic class LoginProxy;\npublic class ResourceObserver;\n12. 【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁\n性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是\n与接口方法相关，并且是整个应用的基础常量。\n正例：接口方法签名： void f();\n接口基础常量表示： String COMPANY = \" alibaba \" ;\n反例：接口方法定义： public abstract void f();\n说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默\n认实现。\n13. 接口和实现类的命名有两套规则：\n1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部\n的实现类用 Impl 的后缀与接口区别。\n正例： CacheServiceImpl 实现 CacheService 接口。\n2 ）  【推荐】 如果是形容能力的接口名称，取对应的形容词做接口名 （ 通常是– able 的形式 ） 。\n正例： AbstractTranslator 实现  Translatable 。\n14. 【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。\n说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。\n正例：枚举名字： DealStatusEnum， 成员名称： SUCCESS /  UNKOWN _ REASON 。\n15. 【参考】各层命名规约：\nA) Service / DAO 层方法命名规约\n1 ） 获取单个对象的方法用 get 做前缀。\n2 ） 获取多个对象的方法用 list 做前缀。\n3 ） 获取统计值的方法用 count 做前缀。\n4 ） 插入的方法用 save（ 推荐 ） 或 insert 做前缀。\n5 ） 删除的方法用 remove（ 推荐 ） 或 delete 做前缀。\n6 ） 修改的方法用 update 做前缀。\nB) 领域模型命名规约\n1 ） 数据对象： xxxDO ， xxx 即为数据表名。\n2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。\n3 ） 展示对象： xxxVO ， xxx 一般为网页名称。\n4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO 。\n","slug":"命名规则-阿里巴巴Java开发","published":1,"updated":"2017-08-08T03:54:39.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uul90031pev2dq8rdkfe","content":"<ol>\n<li>【强制】 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。<br>反例： <em>name / __name / $Object / name</em> / name$ / Object$</li>\n</ol>\n<a id=\"more\"></a>\n<ol>\n<li>【强制】 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。<br>说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式<br>也要避免采用。<br>反例：  DaZhePromotion [ 打折 ] /  getPingfenByName() [ 评分 ] /  int 某变量 = 3<br>正例：  alibaba /  taobao /  youku /  hangzhou 等国际通用的名称，可视同英文。</li>\n<li>【强制】类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外： （ 领域模型<br>的相关命名 ）DO /  BO  /  DTO /  VO 等。<br>正例： MarcoPolo /  UserDO /  XmlService /  TcpUdpDeal /  TaPromotion<br>反例： macroPolo /  UserDo /  XMLService /  TCPUDPDeal /  TAPromotion</li>\n<li>【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从<br>驼峰形式。<br>正例：  localValue /  getHttpMessage() /  inputUserId</li>\n<li>【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。<br>正例：  MAX <em> STOCK </em> COUNT<br>反例：  MAX _ COUNT</li>\n<li>【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用 Exception 结尾 ； 测试类<br>命名以它要测试的类的名称开始，以 Test 结尾。</li>\n<li>【强制】中括号是数组类型的一部分，数组定义如下： String[] args;<br>反例：使用 String args[] 的方式来定义。</li>\n<li>【强制】 POJO 类中布尔类型的变量，都不要加 is ，否则部分框架解析会引起序列化错误。<br>反例：定义为基本数据类型 Boolean isSuccess； 的属性，它的方法也是 isSuccess() ， RPC<br>框架在反向解析的时候，“以为”对应的属性名称是 success ，导致属性获取不到，进而抛出异<br>常。</li>\n<li>【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用<br>单数形式，但是类名如果有复数含义，类名可以使用复数形式。<br>正例： 应用工具类包名为 com . alibaba . open . util 、类名为 MessageUtils（ 此规则参考<br>spring 的框架结构 ）</li>\n<li>【强制】杜绝完全不规范的缩写，避免望文不知义。<br>反例：  AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成  condi ，此类<br>随意缩写严重降低了代码的可阅读性。</li>\n<li>【推荐】如果使用到了设计模式，建议在类名中体现出具体模式。<br>说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计思想。<br>正例： public class OrderFactory;<br>public class LoginProxy;<br>public class ResourceObserver;</li>\n<li>【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁<br>性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是<br>与接口方法相关，并且是整个应用的基础常量。<br>正例：接口方法签名： void f();<br>接口基础常量表示： String COMPANY = “ alibaba “ ;<br>反例：接口方法定义： public abstract void f();<br>说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默<br>认实现。</li>\n<li>接口和实现类的命名有两套规则：<br>1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部<br>的实现类用 Impl 的后缀与接口区别。<br>正例： CacheServiceImpl 实现 CacheService 接口。<br>2 ）  【推荐】 如果是形容能力的接口名称，取对应的形容词做接口名 （ 通常是– able 的形式 ） 。<br>正例： AbstractTranslator 实现  Translatable 。</li>\n<li>【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。<br>说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。<br>正例：枚举名字： DealStatusEnum， 成员名称： SUCCESS /  UNKOWN _ REASON 。</li>\n<li>【参考】各层命名规约：<br>A) Service / DAO 层方法命名规约<br>1 ） 获取单个对象的方法用 get 做前缀。<br>2 ） 获取多个对象的方法用 list 做前缀。<br>3 ） 获取统计值的方法用 count 做前缀。<br>4 ） 插入的方法用 save（ 推荐 ） 或 insert 做前缀。<br>5 ） 删除的方法用 remove（ 推荐 ） 或 delete 做前缀。<br>6 ） 修改的方法用 update 做前缀。<br>B) 领域模型命名规约<br>1 ） 数据对象： xxxDO ， xxx 即为数据表名。<br>2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。<br>3 ） 展示对象： xxxVO ， xxx 一般为网页名称。<br>4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO 。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<ol>\n<li>【强制】 代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。<br>反例： <em>name / __name / $Object / name</em> / name$ / Object$</li>\n</ol>","more":"<ol>\n<li>【强制】 代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。<br>说明：正确的英文拼写和语法可以让阅读者易于理解，避免歧义。注意，即使纯拼音命名方式<br>也要避免采用。<br>反例：  DaZhePromotion [ 打折 ] /  getPingfenByName() [ 评分 ] /  int 某变量 = 3<br>正例：  alibaba /  taobao /  youku /  hangzhou 等国际通用的名称，可视同英文。</li>\n<li>【强制】类名使用 UpperCamelCase 风格，必须遵从驼峰形式，但以下情形例外： （ 领域模型<br>的相关命名 ）DO /  BO  /  DTO /  VO 等。<br>正例： MarcoPolo /  UserDO /  XmlService /  TcpUdpDeal /  TaPromotion<br>反例： macroPolo /  UserDo /  XMLService /  TCPUDPDeal /  TAPromotion</li>\n<li>【强制】方法名、参数名、成员变量、局部变量都统一使用 lowerCamelCase 风格，必须遵从<br>驼峰形式。<br>正例：  localValue /  getHttpMessage() /  inputUserId</li>\n<li>【强制】常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。<br>正例：  MAX <em> STOCK </em> COUNT<br>反例：  MAX _ COUNT</li>\n<li>【强制】抽象类命名使用 Abstract 或 Base 开头 ； 异常类命名使用 Exception 结尾 ； 测试类<br>命名以它要测试的类的名称开始，以 Test 结尾。</li>\n<li>【强制】中括号是数组类型的一部分，数组定义如下： String[] args;<br>反例：使用 String args[] 的方式来定义。</li>\n<li>【强制】 POJO 类中布尔类型的变量，都不要加 is ，否则部分框架解析会引起序列化错误。<br>反例：定义为基本数据类型 Boolean isSuccess； 的属性，它的方法也是 isSuccess() ， RPC<br>框架在反向解析的时候，“以为”对应的属性名称是 success ，导致属性获取不到，进而抛出异<br>常。</li>\n<li>【强制】包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用<br>单数形式，但是类名如果有复数含义，类名可以使用复数形式。<br>正例： 应用工具类包名为 com . alibaba . open . util 、类名为 MessageUtils（ 此规则参考<br>spring 的框架结构 ）</li>\n<li>【强制】杜绝完全不规范的缩写，避免望文不知义。<br>反例：  AbstractClass “缩写”命名成 AbsClass；condition “缩写”命名成  condi ，此类<br>随意缩写严重降低了代码的可阅读性。</li>\n<li>【推荐】如果使用到了设计模式，建议在类名中体现出具体模式。<br>说明：将设计模式体现在名字中，有利于阅读者快速理解架构设计思想。<br>正例： public class OrderFactory;<br>public class LoginProxy;<br>public class ResourceObserver;</li>\n<li>【推荐】接口类中的方法和属性不要加任何修饰符号 （public 也不要加 ） ，保持代码的简洁<br>性，并加上有效的 Javadoc 注释。尽量不要在接口里定义变量，如果一定要定义变量，肯定是<br>与接口方法相关，并且是整个应用的基础常量。<br>正例：接口方法签名： void f();<br>接口基础常量表示： String COMPANY = “ alibaba “ ;<br>反例：接口方法定义： public abstract void f();<br>说明： JDK 8 中接口允许有默认实现，那么这个 default 方法，是对所有实现类都有价值的默<br>认实现。</li>\n<li>接口和实现类的命名有两套规则：<br>1 ） 【强制】对于 Service 和 DAO 类，基于 SOA 的理念，暴露出来的服务一定是接口，内部<br>的实现类用 Impl 的后缀与接口区别。<br>正例： CacheServiceImpl 实现 CacheService 接口。<br>2 ）  【推荐】 如果是形容能力的接口名称，取对应的形容词做接口名 （ 通常是– able 的形式 ） 。<br>正例： AbstractTranslator 实现  Translatable 。</li>\n<li>【参考】枚举类名建议带上 Enum 后缀，枚举成员名称需要全大写，单词间用下划线隔开。<br>说明：枚举其实就是特殊的常量类，且构造方法被默认强制是私有。<br>正例：枚举名字： DealStatusEnum， 成员名称： SUCCESS /  UNKOWN _ REASON 。</li>\n<li>【参考】各层命名规约：<br>A) Service / DAO 层方法命名规约<br>1 ） 获取单个对象的方法用 get 做前缀。<br>2 ） 获取多个对象的方法用 list 做前缀。<br>3 ） 获取统计值的方法用 count 做前缀。<br>4 ） 插入的方法用 save（ 推荐 ） 或 insert 做前缀。<br>5 ） 删除的方法用 remove（ 推荐 ） 或 delete 做前缀。<br>6 ） 修改的方法用 update 做前缀。<br>B) 领域模型命名规约<br>1 ） 数据对象： xxxDO ， xxx 即为数据表名。<br>2 ） 数据传输对象： xxxDTO ， xxx 为业务领域相关的名称。<br>3 ） 展示对象： xxxVO ， xxx 一般为网页名称。<br>4 ） POJO 是 DO / DTO / BO / VO 的统称，禁止命名成 xxxPOJO 。</li>\n</ol>"},{"title":"升级Xcode后Qt问题了","date":"2017-01-23T06:21:18.000Z","_content":"\n升级XCode后，Qt新建项目出现了问题：\n\n  `Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.`\n\n<!-- more -->\n在Google找到了解决方法。\n[http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t](http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t)\n\n~> Xcode 8\n\nThis problem occurs when command line tools are installed after Xcode is installed. What happens is the `Xcode-select` developer directory gets pointed to ``/Library/Developer/CommandLineTools`.\n\nStep 1:\n\nPoint `Xcode-select` to the correct Xcode Developer directory with the command:\n\n```\nsudo xcode-select -switch /Applications/Xcode.app/Contents/Developer\n```\nStep 2:\n\nConfirm the license agreement with the command:\n```\nxcodebuild -license\n```\nThis will prompt you to read through the license agreement.\n\nEnter `agree` to accept the terms.\n\n#### >= Xcode 8\n\nStep 1:\n\nAs Bruce said, this happens when Qt tries to find `xcrun` when it should be looking for `xcodebuild`.\n\nOpen the file:\n```\nQt_install_folder/5.7/clang_64/mkspecs/features/mac/default_pre.prf\n```\n\nStep 2:\n\nReplace:\n\n```\nisEmpty($$list($$system(\"/usr/bin/xcrun -find xcrun 2>/dev/null\"))))\n```\n\nWith:\n\n```\nisEmpty($$list($$system(\"/usr/bin/xcrun -find xcodebuild 2>/dev/null\")))\n```\n","source":"_posts/升级Xcode后Qt问题了.md","raw":"---\ntitle: 升级Xcode后Qt问题了\ndate: 2017-01-23 14:21:18\ntags: [qt]\ncategories: qt\n---\n\n升级XCode后，Qt新建项目出现了问题：\n\n  `Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.`\n\n<!-- more -->\n在Google找到了解决方法。\n[http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t](http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t)\n\n~> Xcode 8\n\nThis problem occurs when command line tools are installed after Xcode is installed. What happens is the `Xcode-select` developer directory gets pointed to ``/Library/Developer/CommandLineTools`.\n\nStep 1:\n\nPoint `Xcode-select` to the correct Xcode Developer directory with the command:\n\n```\nsudo xcode-select -switch /Applications/Xcode.app/Contents/Developer\n```\nStep 2:\n\nConfirm the license agreement with the command:\n```\nxcodebuild -license\n```\nThis will prompt you to read through the license agreement.\n\nEnter `agree` to accept the terms.\n\n#### >= Xcode 8\n\nStep 1:\n\nAs Bruce said, this happens when Qt tries to find `xcrun` when it should be looking for `xcodebuild`.\n\nOpen the file:\n```\nQt_install_folder/5.7/clang_64/mkspecs/features/mac/default_pre.prf\n```\n\nStep 2:\n\nReplace:\n\n```\nisEmpty($$list($$system(\"/usr/bin/xcrun -find xcrun 2>/dev/null\"))))\n```\n\nWith:\n\n```\nisEmpty($$list($$system(\"/usr/bin/xcrun -find xcodebuild 2>/dev/null\")))\n```\n","slug":"升级Xcode后Qt问题了","published":1,"updated":"2017-01-23T06:30:01.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uula0035pev2xpv7f550","content":"<p>升级XCode后，Qt新建项目出现了问题：</p>\n<p>  <code>Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.</code></p>\n<a id=\"more\"></a>\n<p>在Google找到了解决方法。<br><a href=\"http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t</a></p>\n<p>~&gt; Xcode 8</p>\n<p>This problem occurs when command line tools are installed after Xcode is installed. What happens is the <code>Xcode-select</code> developer directory gets pointed to <code>`/Library/Developer/CommandLineTools</code>.</p>\n<p>Step 1:</p>\n<p>Point <code>Xcode-select</code> to the correct Xcode Developer directory with the command:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcode-select -<span class=\"keyword\">switch</span> <span class=\"regexp\">/Applications/</span>Xcode.app<span class=\"regexp\">/Contents/</span>Developer</span><br></pre></td></tr></table></figure>\n<p>Step 2:</p>\n<p>Confirm the license agreement with the command:<br><figure class=\"highlight ceylon\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcodebuild -<span class=\"meta\">license</span></span><br></pre></td></tr></table></figure></p>\n<p>This will prompt you to read through the license agreement.</p>\n<p>Enter <code>agree</code> to accept the terms.</p>\n<h4 id=\"gt-Xcode-8\"><a href=\"#gt-Xcode-8\" class=\"headerlink\" title=\"&gt;= Xcode 8\"></a>&gt;= Xcode 8</h4><p>Step 1:</p>\n<p>As Bruce said, this happens when Qt tries to find <code>xcrun</code> when it should be looking for <code>xcodebuild</code>.</p>\n<p>Open the file:<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Qt_install_folder<span class=\"regexp\">/5.7/</span>clang_64<span class=\"regexp\">/mkspecs/</span>features<span class=\"regexp\">/mac/</span>default_pre.prf</span><br></pre></td></tr></table></figure></p>\n<p>Step 2:</p>\n<p>Replace:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEmpty(<span class=\"symbol\">$</span><span class=\"symbol\">$</span>list(<span class=\"symbol\">$</span><span class=\"symbol\">$</span><span class=\"keyword\">system</span>(<span class=\"string\">\"/usr/bin/xcrun -find xcrun 2&gt;/dev/null\"</span>))))</span><br></pre></td></tr></table></figure>\n<p>With:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEmpty(<span class=\"symbol\">$</span><span class=\"symbol\">$</span>list(<span class=\"symbol\">$</span><span class=\"symbol\">$</span><span class=\"keyword\">system</span>(<span class=\"string\">\"/usr/bin/xcrun -find xcodebuild 2&gt;/dev/null\"</span>)))</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>升级XCode后，Qt新建项目出现了问题：</p>\n<p>  <code>Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.</code></p>","more":"<p>在Google找到了解决方法。<br><a href=\"http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t\" target=\"_blank\" rel=\"noopener\">http://stackoverflow.com/questions/33728905/qt-creator-project-error-xcode-not-set-up-properly-you-may-need-to-confirm-t</a></p>\n<p>~&gt; Xcode 8</p>\n<p>This problem occurs when command line tools are installed after Xcode is installed. What happens is the <code>Xcode-select</code> developer directory gets pointed to <code>`/Library/Developer/CommandLineTools</code>.</p>\n<p>Step 1:</p>\n<p>Point <code>Xcode-select</code> to the correct Xcode Developer directory with the command:</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo xcode-select -<span class=\"keyword\">switch</span> <span class=\"regexp\">/Applications/</span>Xcode.app<span class=\"regexp\">/Contents/</span>Developer</span><br></pre></td></tr></table></figure>\n<p>Step 2:</p>\n<p>Confirm the license agreement with the command:<br><figure class=\"highlight ceylon\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xcodebuild -<span class=\"meta\">license</span></span><br></pre></td></tr></table></figure></p>\n<p>This will prompt you to read through the license agreement.</p>\n<p>Enter <code>agree</code> to accept the terms.</p>\n<h4 id=\"gt-Xcode-8\"><a href=\"#gt-Xcode-8\" class=\"headerlink\" title=\"&gt;= Xcode 8\"></a>&gt;= Xcode 8</h4><p>Step 1:</p>\n<p>As Bruce said, this happens when Qt tries to find <code>xcrun</code> when it should be looking for <code>xcodebuild</code>.</p>\n<p>Open the file:<br><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Qt_install_folder<span class=\"regexp\">/5.7/</span>clang_64<span class=\"regexp\">/mkspecs/</span>features<span class=\"regexp\">/mac/</span>default_pre.prf</span><br></pre></td></tr></table></figure></p>\n<p>Step 2:</p>\n<p>Replace:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEmpty(<span class=\"symbol\">$</span><span class=\"symbol\">$</span>list(<span class=\"symbol\">$</span><span class=\"symbol\">$</span><span class=\"keyword\">system</span>(<span class=\"string\">\"/usr/bin/xcrun -find xcrun 2&gt;/dev/null\"</span>))))</span><br></pre></td></tr></table></figure>\n<p>With:</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">isEmpty(<span class=\"symbol\">$</span><span class=\"symbol\">$</span>list(<span class=\"symbol\">$</span><span class=\"symbol\">$</span><span class=\"keyword\">system</span>(<span class=\"string\">\"/usr/bin/xcrun -find xcodebuild 2&gt;/dev/null\"</span>)))</span><br></pre></td></tr></table></figure>"},{"title":"常用 Git 命令清单","date":"2016-03-13T17:03:14.000Z","_content":"# 常用 Git 命令清单\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n![git structer picture](http://7xpj58.com1.z0.glb.clouddn.com/675733-cc81d1c02c093efa.png)\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n* Workspace: 工作区\n* Index / Stage: 暂存区\n* Repository: 仓库区（或本地仓库）\n* Remote: 远程仓库\n\n<!-- more -->\n## 一、新建代码库\n\n`````\n#在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n`````\n## 二、配置\nGit的设置文件`.gitconfig`,它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n`````\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n`````\n## 三、增加/删除文件\n`````\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n`````\n\n## 四、代码提交\n\n`````\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n`````\n## 五、分支\n\n`````\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n`````\n\n## 六、标签\n  \n  `````\n  # 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n  `````\n\n## 七、查看信息\n\n`````\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n`````\n\n## 八、远程同步\n\n`````\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n`````\n\n## 九、撤销\n\n`````\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n`````\n\n## 十、其他\n\n`````\n# 生成一个可供发布的压缩包\n$ git archive\n`````\n\n\n> 作者：阮一峰\n> 文章源自：http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\n\n\n\n","source":"_posts/常用-Git-命令清单.md","raw":"---\ntitle: 常用 Git 命令清单\ndate: 2016-03-14 01:03:14\ntags: [Git]\ncategories: Git\n---\n# 常用 Git 命令清单\n\n一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。\n\n![git structer picture](http://7xpj58.com1.z0.glb.clouddn.com/675733-cc81d1c02c093efa.png)\n\n下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。\n\n* Workspace: 工作区\n* Index / Stage: 暂存区\n* Repository: 仓库区（或本地仓库）\n* Remote: 远程仓库\n\n<!-- more -->\n## 一、新建代码库\n\n`````\n#在当前目录新建一个Git代码库\n$ git init\n\n# 新建一个目录，将其初始化为Git代码库\n$ git init [project-name]\n\n# 下载一个项目和它的整个代码历史\n$ git clone [url]\n`````\n## 二、配置\nGit的设置文件`.gitconfig`,它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。\n\n`````\n# 显示当前的Git配置\n$ git config --list\n\n# 编辑Git配置文件\n$ git config -e [--global]\n\n# 设置提交代码时的用户信息\n$ git config [--global] user.name \"[name]\"\n$ git config [--global] user.email \"[email address]\"\n`````\n## 三、增加/删除文件\n`````\n# 添加指定文件到暂存区\n$ git add [file1] [file2] ...\n\n# 添加指定目录到暂存区，包括子目录\n$ git add [dir]\n\n# 添加当前目录的所有文件到暂存区\n$ git add .\n\n# 添加每个变化前，都会要求确认\n# 对于同一个文件的多处变化，可以实现分次提交\n$ git add -p\n\n# 删除工作区文件，并且将这次删除放入暂存区\n$ git rm [file1] [file2] ...\n\n# 停止追踪指定文件，但该文件会保留在工作区\n$ git rm --cached [file]\n\n# 改名文件，并且将这个改名放入暂存区\n$ git mv [file-original] [file-renamed]\n`````\n\n## 四、代码提交\n\n`````\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n`````\n## 五、分支\n\n`````\n# 提交暂存区到仓库区\n$ git commit -m [message]\n\n# 提交暂存区的指定文件到仓库区\n$ git commit [file1] [file2] ... -m [message]\n\n# 提交工作区自上次commit之后的变化，直接到仓库区\n$ git commit -a\n\n# 提交时显示所有diff信息\n$ git commit -v\n\n# 使用一次新的commit，替代上一次提交\n# 如果代码没有任何新变化，则用来改写上一次commit的提交信息\n$ git commit --amend -m [message]\n\n# 重做上一次commit，并包括指定文件的新变化\n$ git commit --amend [file1] [file2] ...\n`````\n\n## 六、标签\n  \n  `````\n  # 列出所有tag\n$ git tag\n\n# 新建一个tag在当前commit\n$ git tag [tag]\n\n# 新建一个tag在指定commit\n$ git tag [tag] [commit]\n\n# 删除本地tag\n$ git tag -d [tag]\n\n# 删除远程tag\n$ git push origin :refs/tags/[tagName]\n\n# 查看tag信息\n$ git show [tag]\n\n# 提交指定tag\n$ git push [remote] [tag]\n\n# 提交所有tag\n$ git push [remote] --tags\n\n# 新建一个分支，指向某个tag\n$ git checkout -b [branch] [tag]\n  `````\n\n## 七、查看信息\n\n`````\n# 显示有变更的文件\n$ git status\n\n# 显示当前分支的版本历史\n$ git log\n\n# 显示commit历史，以及每次commit发生变更的文件\n$ git log --stat\n\n# 搜索提交历史，根据关键词\n$ git log -S [keyword]\n\n# 显示某个commit之后的所有变动，每个commit占据一行\n$ git log [tag] HEAD --pretty=format:%s\n\n# 显示某个commit之后的所有变动，其\"提交说明\"必须符合搜索条件\n$ git log [tag] HEAD --grep feature\n\n# 显示某个文件的版本历史，包括文件改名\n$ git log --follow [file]\n$ git whatchanged [file]\n\n# 显示指定文件相关的每一次diff\n$ git log -p [file]\n\n# 显示过去5次提交\n$ git log -5 --pretty --oneline\n\n# 显示所有提交过的用户，按提交次数排序\n$ git shortlog -sn\n\n# 显示指定文件是什么人在什么时间修改过\n$ git blame [file]\n\n# 显示暂存区和工作区的差异\n$ git diff\n\n# 显示暂存区和上一个commit的差异\n$ git diff --cached [file]\n\n# 显示工作区与当前分支最新commit之间的差异\n$ git diff HEAD\n\n# 显示两次提交之间的差异\n$ git diff [first-branch]...[second-branch]\n\n# 显示今天你写了多少行代码\n$ git diff --shortstat \"@{0 day ago}\"\n\n# 显示某次提交的元数据和内容变化\n$ git show [commit]\n\n# 显示某次提交发生变化的文件\n$ git show --name-only [commit]\n\n# 显示某次提交时，某个文件的内容\n$ git show [commit]:[filename]\n\n# 显示当前分支的最近几次提交\n$ git reflog\n\n`````\n\n## 八、远程同步\n\n`````\n# 下载远程仓库的所有变动\n$ git fetch [remote]\n\n# 显示所有远程仓库\n$ git remote -v\n\n# 显示某个远程仓库的信息\n$ git remote show [remote]\n\n# 增加一个新的远程仓库，并命名\n$ git remote add [shortname] [url]\n\n# 取回远程仓库的变化，并与本地分支合并\n$ git pull [remote] [branch]\n\n# 上传本地指定分支到远程仓库\n$ git push [remote] [branch]\n\n# 强行推送当前分支到远程仓库，即使有冲突\n$ git push [remote] --force\n\n# 推送所有分支到远程仓库\n$ git push [remote] --all\n\n`````\n\n## 九、撤销\n\n`````\n# 恢复暂存区的指定文件到工作区\n$ git checkout [file]\n\n# 恢复某个commit的指定文件到暂存区和工作区\n$ git checkout [commit] [file]\n\n# 恢复暂存区的所有文件到工作区\n$ git checkout .\n\n# 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变\n$ git reset [file]\n\n# 重置暂存区与工作区，与上一次commit保持一致\n$ git reset --hard\n\n# 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变\n$ git reset [commit]\n\n# 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致\n$ git reset --hard [commit]\n\n# 重置当前HEAD为指定commit，但保持暂存区和工作区不变\n$ git reset --keep [commit]\n\n# 新建一个commit，用来撤销指定commit\n# 后者的所有变化都将被前者抵消，并且应用到当前分支\n$ git revert [commit]\n\n# 暂时将未提交的变化移除，稍后再移入\n$ git stash\n$ git stash pop\n`````\n\n## 十、其他\n\n`````\n# 生成一个可供发布的压缩包\n$ git archive\n`````\n\n\n> 作者：阮一峰\n> 文章源自：http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\n\n\n\n","slug":"常用-Git-命令清单","published":1,"updated":"2016-03-13T17:13:11.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuld0039pev2l0bkzovd","content":"<h1 id=\"常用-Git-命令清单\"><a href=\"#常用-Git-命令清单\" class=\"headerlink\" title=\"常用 Git 命令清单\"></a>常用 Git 命令清单</h1><p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p>\n<p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/675733-cc81d1c02c093efa.png\" alt=\"git structer picture\"></p>\n<p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p>\n<ul>\n<li>Workspace: 工作区</li>\n<li>Index / Stage: 暂存区</li>\n<li>Repository: 仓库区（或本地仓库）</li>\n<li>Remote: 远程仓库</li>\n</ul>\n<a id=\"more\"></a>\n<h2 id=\"一、新建代码库\"><a href=\"#一、新建代码库\" class=\"headerlink\" title=\"一、新建代码库\"></a>一、新建代码库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在当前目录新建一个Git代码库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git init</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个目录，将其初始化为Git代码库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git init [project-name]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载一个项目和它的整个代码历史</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> [url]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"二、配置\"><a href=\"#二、配置\" class=\"headerlink\" title=\"二、配置\"></a>二、配置</h2><p>Git的设置文件<code>.gitconfig</code>,它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示当前的Git配置</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>--list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑Git配置文件</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>-e [--global]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置提交代码时的用户信息</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>[--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>[--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"三、增加-删除文件\"><a href=\"#三、增加-删除文件\" class=\"headerlink\" title=\"三、增加/删除文件\"></a>三、增加/删除文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加指定文件到暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add [file1] [file2] ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加指定目录到暂存区，包括子目录</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add [dir]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加当前目录的所有文件到暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加每个变化前，都会要求确认</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add -p</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git rm [file1] [file2] ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git rm --cached [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 改名文件，并且将这个改名放入暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git mv [file-original] [file-renamed]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、代码提交\"><a href=\"#四、代码提交\" class=\"headerlink\" title=\"四、代码提交\"></a>四、代码提交</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区的指定文件到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit [file1] [file2] ... -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交时显示所有diff信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用一次新的commit，替代上一次提交</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重做上一次commit，并包括指定文件的新变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend [file1] [file2] ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、分支\"><a href=\"#五、分支\" class=\"headerlink\" title=\"五、分支\"></a>五、分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区的指定文件到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit [file1] [file2] ... -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交时显示所有diff信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用一次新的commit，替代上一次提交</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重做上一次commit，并包括指定文件的新变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend [file1] [file2] ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"六、标签\"><a href=\"#六、标签\" class=\"headerlink\" title=\"六、标签\"></a>六、标签</h2>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> 列出所有tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个tag在当前commit</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个tag在指定commit</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag [tag] [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除本地tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag -d [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除远程tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push origin :refs/tags/[tagName]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看tag信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交指定tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交所有tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --tags</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个分支，指向某个tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout -b [branch] [tag]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"七、查看信息\"><a href=\"#七、查看信息\" class=\"headerlink\" title=\"七、查看信息\"></a>七、查看信息</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示有变更的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git status</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示当前分支的版本历史</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> --<span class=\"built_in\">stat</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 搜索提交历史，根据关键词</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -S [keyword]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> [tag] HEAD --pretty=format:%s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个commit之后的所有变动，其<span class=\"string\">\"提交说明\"</span>必须符合搜索条件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> [tag] HEAD --grep feature</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个文件的版本历史，包括文件改名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> --follow [file]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git whatchanged [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示指定文件相关的每一次diff</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -p [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示过去5次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -5 --pretty --oneline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示所有提交过的用户，按提交次数排序</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git shortlog -sn</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示指定文件是什么人在什么时间修改过</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git blame [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示暂存区和工作区的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示暂存区和上一个commit的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff --cached [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示工作区与当前分支最新commit之间的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff HEAD</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示两次提交之间的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff [first-branch]...[second-branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示今天你写了多少行代码</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff --shortstat <span class=\"string\">\"@&#123;0 day ago&#125;\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交的元数据和内容变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交发生变化的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show --name-only [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交时，某个文件的内容</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [commit]:[filename]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示当前分支的最近几次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reflog</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"八、远程同步\"><a href=\"#八、远程同步\" class=\"headerlink\" title=\"八、远程同步\"></a>八、远程同步</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载远程仓库的所有变动</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git fetch [remote]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示所有远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个远程仓库的信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote show [remote]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 增加一个新的远程仓库，并命名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote add [shortname] [url]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 取回远程仓库的变化，并与本地分支合并</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git pull [remote] [branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 上传本地指定分支到远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] [branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --force</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 推送所有分支到远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --all</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"九、撤销\"><a href=\"#九、撤销\" class=\"headerlink\" title=\"九、撤销\"></a>九、撤销</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复暂存区的指定文件到工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout [commit] [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复暂存区的所有文件到工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --hard</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --hard [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --keep [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个commit，用来撤销指定commit</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git revert [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 暂时将未提交的变化移除，稍后再移入</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git stash</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git stash pop</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"十、其他\"><a href=\"#十、其他\" class=\"headerlink\" title=\"十、其他\"></a>十、其他</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 生成一个可供发布的压缩包</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git archive</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>作者：阮一峰<br>文章源自：<a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"<h1 id=\"常用-Git-命令清单\"><a href=\"#常用-Git-命令清单\" class=\"headerlink\" title=\"常用 Git 命令清单\"></a>常用 Git 命令清单</h1><p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。</p>\n<p><img src=\"http://7xpj58.com1.z0.glb.clouddn.com/675733-cc81d1c02c093efa.png\" alt=\"git structer picture\"></p>\n<p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。</p>\n<ul>\n<li>Workspace: 工作区</li>\n<li>Index / Stage: 暂存区</li>\n<li>Repository: 仓库区（或本地仓库）</li>\n<li>Remote: 远程仓库</li>\n</ul>","more":"<h2 id=\"一、新建代码库\"><a href=\"#一、新建代码库\" class=\"headerlink\" title=\"一、新建代码库\"></a>一、新建代码库</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">在当前目录新建一个Git代码库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git init</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个目录，将其初始化为Git代码库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git init [project-name]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载一个项目和它的整个代码历史</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">clone</span> [url]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"二、配置\"><a href=\"#二、配置\" class=\"headerlink\" title=\"二、配置\"></a>二、配置</h2><p>Git的设置文件<code>.gitconfig</code>,它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示当前的Git配置</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>--list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 编辑Git配置文件</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>-e [--global]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 设置提交代码时的用户信息</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>[--global] user.name <span class=\"string\">\"[name]\"</span></span><br><span class=\"line\">$ git<span class=\"built_in\"> config </span>[--global] user.email <span class=\"string\">\"[email address]\"</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"三、增加-删除文件\"><a href=\"#三、增加-删除文件\" class=\"headerlink\" title=\"三、增加/删除文件\"></a>三、增加/删除文件</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加指定文件到暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add [file1] [file2] ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加指定目录到暂存区，包括子目录</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add [dir]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加当前目录的所有文件到暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 添加每个变化前，都会要求确认</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git add -p</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git rm [file1] [file2] ...</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git rm --cached [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 改名文件，并且将这个改名放入暂存区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git mv [file-original] [file-renamed]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"四、代码提交\"><a href=\"#四、代码提交\" class=\"headerlink\" title=\"四、代码提交\"></a>四、代码提交</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区的指定文件到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit [file1] [file2] ... -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交时显示所有diff信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用一次新的commit，替代上一次提交</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重做上一次commit，并包括指定文件的新变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend [file1] [file2] ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"五、分支\"><a href=\"#五、分支\" class=\"headerlink\" title=\"五、分支\"></a>五、分支</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交暂存区的指定文件到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit [file1] [file2] ... -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -a</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交时显示所有diff信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 使用一次新的commit，替代上一次提交</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend -m [message]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重做上一次commit，并包括指定文件的新变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git commit --amend [file1] [file2] ...</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"六、标签\"><a href=\"#六、标签\" class=\"headerlink\" title=\"六、标签\"></a>六、标签</h2>  <figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">  #</span><span class=\"bash\"> 列出所有tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个tag在当前commit</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个tag在指定commit</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag [tag] [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除本地tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git tag -d [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 删除远程tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push origin :refs/tags/[tagName]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 查看tag信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交指定tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] [tag]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 提交所有tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --tags</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个分支，指向某个tag</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout -b [branch] [tag]</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"七、查看信息\"><a href=\"#七、查看信息\" class=\"headerlink\" title=\"七、查看信息\"></a>七、查看信息</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示有变更的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git status</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示当前分支的版本历史</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> --<span class=\"built_in\">stat</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 搜索提交历史，根据关键词</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -S [keyword]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> [tag] HEAD --pretty=format:%s</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个commit之后的所有变动，其<span class=\"string\">\"提交说明\"</span>必须符合搜索条件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> [tag] HEAD --grep feature</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个文件的版本历史，包括文件改名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> --follow [file]</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git whatchanged [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示指定文件相关的每一次diff</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -p [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示过去5次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git <span class=\"built_in\">log</span> -5 --pretty --oneline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示所有提交过的用户，按提交次数排序</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git shortlog -sn</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示指定文件是什么人在什么时间修改过</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git blame [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示暂存区和工作区的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示暂存区和上一个commit的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff --cached [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示工作区与当前分支最新commit之间的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff HEAD</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示两次提交之间的差异</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff [first-branch]...[second-branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示今天你写了多少行代码</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git diff --shortstat <span class=\"string\">\"@&#123;0 day ago&#125;\"</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交的元数据和内容变化</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交发生变化的文件</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show --name-only [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某次提交时，某个文件的内容</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git show [commit]:[filename]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示当前分支的最近几次提交</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reflog</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"八、远程同步\"><a href=\"#八、远程同步\" class=\"headerlink\" title=\"八、远程同步\"></a>八、远程同步</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 下载远程仓库的所有变动</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git fetch [remote]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示所有远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote -v</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 显示某个远程仓库的信息</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote show [remote]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 增加一个新的远程仓库，并命名</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git remote add [shortname] [url]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 取回远程仓库的变化，并与本地分支合并</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git pull [remote] [branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 上传本地指定分支到远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] [branch]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --force</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 推送所有分支到远程仓库</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git push [remote] --all</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"九、撤销\"><a href=\"#九、撤销\" class=\"headerlink\" title=\"九、撤销\"></a>九、撤销</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复暂存区的指定文件到工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout [commit] [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 恢复暂存区的所有文件到工作区</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git checkout .</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset [file]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --hard</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --hard [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git reset --keep [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 新建一个commit，用来撤销指定commit</span></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git revert [commit]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 暂时将未提交的变化移除，稍后再移入</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git stash</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git stash pop</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"十、其他\"><a href=\"#十、其他\" class=\"headerlink\" title=\"十、其他\"></a>十、其他</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> 生成一个可供发布的压缩包</span></span><br><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> git archive</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>作者：阮一峰<br>文章源自：<a href=\"http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html\" target=\"_blank\" rel=\"noopener\">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></p>\n</blockquote>"},{"title":"正则表达式--匹配电话号码和手机号码","date":"2016-03-03T02:43:29.000Z","_content":"\n### 正则表达式匹配电话号码和手机号码\n---\n\n##### 正则表达式（电话号码）一、\n\n\t\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\t匹配 0511-1234567 | 022 -28191732\n\t不匹配 02-123456 12345-123456\n\n##### 正则表达式（电话号码）二、\n\n\t(^\\([0]\\d{2}|\\d{4}\\))(\\d{6,7}$)\n\t匹配    (021)1234567 | (0411)123456 | (000)000000\n\t不匹配    (123)1234567 | 025123456 | 0252345678  \n\n<!-- more -->\n##### 正则表达式（手机号码）三、\n\n\t^(?<national>\\+?(?:86)?)(?<separator>\\s?-?)(?<phone>(?<vender>(13|15|18)[0-9])(?<area>\\d{4})(?<id>\\d{4}))$\n\t匹配 +8613012345678 | 86 13012345678 | 13245679087\n\t不匹配 +86130123456781231434352 | 13560012513 | ++8613012345678\n\t\n\n","source":"_posts/正则表达式--匹配电话号码和手机号码.md","raw":"---\ntitle: 正则表达式--匹配电话号码和手机号码\ndate: 2016-03-03 10:43:29\ntags: [java]\ncategories: java\n---\n\n### 正则表达式匹配电话号码和手机号码\n---\n\n##### 正则表达式（电话号码）一、\n\n\t\\d{3}-\\d{8}|\\d{4}-\\d{7}\n\t匹配 0511-1234567 | 022 -28191732\n\t不匹配 02-123456 12345-123456\n\n##### 正则表达式（电话号码）二、\n\n\t(^\\([0]\\d{2}|\\d{4}\\))(\\d{6,7}$)\n\t匹配    (021)1234567 | (0411)123456 | (000)000000\n\t不匹配    (123)1234567 | 025123456 | 0252345678  \n\n<!-- more -->\n##### 正则表达式（手机号码）三、\n\n\t^(?<national>\\+?(?:86)?)(?<separator>\\s?-?)(?<phone>(?<vender>(13|15|18)[0-9])(?<area>\\d{4})(?<id>\\d{4}))$\n\t匹配 +8613012345678 | 86 13012345678 | 13245679087\n\t不匹配 +86130123456781231434352 | 13560012513 | ++8613012345678\n\t\n\n","slug":"正则表达式--匹配电话号码和手机号码","published":1,"updated":"2016-03-12T03:25:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uulf003cpev2qg2arc4f","content":"<h3 id=\"正则表达式匹配电话号码和手机号码\"><a href=\"#正则表达式匹配电话号码和手机号码\" class=\"headerlink\" title=\"正则表达式匹配电话号码和手机号码\"></a>正则表达式匹配电话号码和手机号码</h3><hr>\n<h5 id=\"正则表达式（电话号码）一、\"><a href=\"#正则表达式（电话号码）一、\" class=\"headerlink\" title=\"正则表达式（电话号码）一、\"></a>正则表达式（电话号码）一、</h5><pre><code>\\d{3}-\\d{8}|\\d{4}-\\d{7}\n匹配 0511-1234567 | 022 -28191732\n不匹配 02-123456 12345-123456\n</code></pre><h5 id=\"正则表达式（电话号码）二、\"><a href=\"#正则表达式（电话号码）二、\" class=\"headerlink\" title=\"正则表达式（电话号码）二、\"></a>正则表达式（电话号码）二、</h5><pre><code>(^\\([0]\\d{2}|\\d{4}\\))(\\d{6,7}$)\n匹配    (021)1234567 | (0411)123456 | (000)000000\n不匹配    (123)1234567 | 025123456 | 0252345678  \n</code></pre><a id=\"more\"></a>\n<h5 id=\"正则表达式（手机号码）三、\"><a href=\"#正则表达式（手机号码）三、\" class=\"headerlink\" title=\"正则表达式（手机号码）三、\"></a>正则表达式（手机号码）三、</h5><pre><code>^(?&lt;national&gt;\\+?(?:86)?)(?&lt;separator&gt;\\s?-?)(?&lt;phone&gt;(?&lt;vender&gt;(13|15|18)[0-9])(?&lt;area&gt;\\d{4})(?&lt;id&gt;\\d{4}))$\n匹配 +8613012345678 | 86 13012345678 | 13245679087\n不匹配 +86130123456781231434352 | 13560012513 | ++8613012345678\n</code></pre>","site":{"data":{}},"excerpt":"<h3 id=\"正则表达式匹配电话号码和手机号码\"><a href=\"#正则表达式匹配电话号码和手机号码\" class=\"headerlink\" title=\"正则表达式匹配电话号码和手机号码\"></a>正则表达式匹配电话号码和手机号码</h3><hr>\n<h5 id=\"正则表达式（电话号码）一、\"><a href=\"#正则表达式（电话号码）一、\" class=\"headerlink\" title=\"正则表达式（电话号码）一、\"></a>正则表达式（电话号码）一、</h5><pre><code>\\d{3}-\\d{8}|\\d{4}-\\d{7}\n匹配 0511-1234567 | 022 -28191732\n不匹配 02-123456 12345-123456\n</code></pre><h5 id=\"正则表达式（电话号码）二、\"><a href=\"#正则表达式（电话号码）二、\" class=\"headerlink\" title=\"正则表达式（电话号码）二、\"></a>正则表达式（电话号码）二、</h5><pre><code>(^\\([0]\\d{2}|\\d{4}\\))(\\d{6,7}$)\n匹配    (021)1234567 | (0411)123456 | (000)000000\n不匹配    (123)1234567 | 025123456 | 0252345678  \n</code></pre>","more":"<h5 id=\"正则表达式（手机号码）三、\"><a href=\"#正则表达式（手机号码）三、\" class=\"headerlink\" title=\"正则表达式（手机号码）三、\"></a>正则表达式（手机号码）三、</h5><pre><code>^(?&lt;national&gt;\\+?(?:86)?)(?&lt;separator&gt;\\s?-?)(?&lt;phone&gt;(?&lt;vender&gt;(13|15|18)[0-9])(?&lt;area&gt;\\d{4})(?&lt;id&gt;\\d{4}))$\n匹配 +8613012345678 | 86 13012345678 | 13245679087\n不匹配 +86130123456781231434352 | 13560012513 | ++8613012345678\n</code></pre>"},{"title":"查看被删的微信好友","date":"2016-04-01T06:33:06.000Z","_content":"## 查看被删的微信好友\n\n<!-- more -->\n\n[来自这里](https://github.com/0x5e/wechat-deleted-friends)\n\n> 原理：\n\n查看被删的微信好友\n原理就是新建群组,如果加不进来就是被删好友了(不要在群组里讲话,别人是看不见的)\n用的是微信网页版的接口\n查询结果可能会引起一些心理上的不适,请小心使用.\nMac OS用法: 启动Terminal\n\n```\n\t$ python wechat.py\n\n```\n下面是wechat.py的代码\n\n```\n#!/usr/bin/env python\n# coding=utf-8\nfrom __future__ import print_function\n\nimport os\ntry:\n    from urllib import urlencode, quote_plus\nexcept ImportError:\n    from urllib.parse import urlencode, quote_plus\n\ntry:\n    import urllib2 as wdf_urllib\n    from cookielib import CookieJar\nexcept ImportError:\n    import urllib.request as wdf_urllib\n    from http.cookiejar import CookieJar\n\nimport re\nimport time\nimport xml.dom.minidom\nimport json\nimport sys\nimport math\nimport subprocess\nimport ssl\nimport thread\n\nDEBUG = False\n\nMAX_GROUP_NUM = 35  # 每组人数\nINTERFACE_CALLING_INTERVAL = 20  # 接口调用时间间隔, 间隔太短容易出现\"操作太频繁\", 会被限制操作半小时左右\nMAX_PROGRESS_LEN = 50\n\nQRImagePath = os.path.join(os.getcwd(), 'qrcode.jpg')\n\ntip = 0\nuuid = ''\n\nbase_uri = ''\nredirect_uri = ''\npush_uri = ''\n\nskey = ''\nwxsid = ''\nwxuin = ''\npass_ticket = ''\ndeviceId = 'e000000000000000'\n\nBaseRequest = {}\n\nContactList = []\nMy = []\nSyncKey = []\n\ntry:\n    xrange\n    range = xrange\nexcept:\n    # python 3\n    pass\n\n\ndef responseState(func, BaseResponse):\n    ErrMsg = BaseResponse['ErrMsg']\n    Ret = BaseResponse['Ret']\n    if DEBUG or Ret != 0:\n        print('func: %s, Ret: %d, ErrMsg: %s' % (func, Ret, ErrMsg))\n\n    if Ret != 0:\n        return False\n\n    return True\n\n\ndef getRequest(url, data=None):\n    try:\n        data = data.encode('utf-8')\n    except:\n        pass\n    finally:\n        return wdf_urllib.Request(url=url, data=data)\n\n\ndef getUUID():\n    global uuid\n\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {\n        'appid': 'wx782c26e4c19acffb',\n        'fun': 'new',\n        'lang': 'zh_CN',\n        '_': int(time.time()),\n    }\n\n    request = getRequest(url=url, data=urlencode(params))\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.QRLogin.code = 200; window.QRLogin.uuid = \"oZwt_bFfRg==\";\n    regx = r'window.QRLogin.code = (\\d+); window.QRLogin.uuid = \"(\\S+?)\"'\n    pm = re.search(regx, data)\n\n    code = pm.group(1)\n    uuid = pm.group(2)\n\n    if code == '200':\n        return True\n\n    return False\n\n\ndef showQRImage():\n    global tip\n\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {\n        't': 'webwx',\n        '_': int(time.time()),\n    }\n\n    request = getRequest(url=url, data=urlencode(params))\n    response = wdf_urllib.urlopen(request)\n\n    tip = 1\n\n    f = open(QRImagePath, 'wb')\n    f.write(response.read())\n    f.close()\n\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImagePath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImagePath])\n    else:\n        os.startfile(QRImagePath)\n\n    print('请使用微信扫描二维码以登录')\n\n\ndef waitForLogin():\n    global tip, base_uri, redirect_uri, push_uri\n\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (\n        tip, uuid, int(time.time()))\n\n    request = getRequest(url=url)\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.code=500;\n    regx = r'window.code=(\\d+);'\n    pm = re.search(regx, data)\n\n    code = pm.group(1)\n\n    if code == '201':  # 已扫描\n        print('成功扫描,请在手机上点击确认以登录')\n        tip = 0\n    elif code == '200':  # 已登录\n        print('正在登录...')\n        regx = r'window.redirect_uri=\"(\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n\n        # push_uri与base_uri对应关系(排名分先后)(就是这么奇葩..)\n        services = [\n            ('wx2.qq.com', 'webpush2.weixin.qq.com'),\n            ('qq.com', 'webpush.weixin.qq.com'),\n            ('web1.wechat.com', 'webpush1.wechat.com'),\n            ('web2.wechat.com', 'webpush2.wechat.com'),\n            ('wechat.com', 'webpush.wechat.com'),\n            ('web1.wechatapp.com', 'webpush1.wechatapp.com'),\n        ]\n        push_uri = base_uri\n        for (searchUrl, pushUrl) in services:\n            if base_uri.find(searchUrl) >= 0:\n                push_uri = 'https://%s/cgi-bin/mmwebwx-bin' % pushUrl\n                break\n\n        # closeQRImage\n        if sys.platform.find('darwin') >= 0:  # for OSX with Preview\n            os.system(\"osascript -e 'quit app \\\"Preview\\\"'\")\n    elif code == '408':  # 超时\n        pass\n    # elif code == '400' or code == '500':\n\n    return code\n\n\ndef login():\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n\n    request = getRequest(url=redirect_uri)\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n\n    # print('skey: %s, wxsid: %s, wxuin: %s, pass_ticket: %s' % (skey, wxsid,\n    # wxuin, pass_ticket))\n\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n\n    BaseRequest = {\n        'Uin': int(wxuin),\n        'Sid': wxsid,\n        'Skey': skey,\n        'DeviceID': deviceId,\n    }\n\n    return True\n\n\ndef webwxinit():\n\n    url = base_uri + \\\n        '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (\n            pass_ticket, skey, int(time.time()))\n    params = {\n        'BaseRequest': BaseRequest\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read()\n\n    if DEBUG:\n        f = open(os.path.join(os.getcwd(), 'webwxinit.json'), 'wb')\n        f.write(data)\n        f.close()\n\n    data = data.decode('utf-8', 'replace')\n\n    # print(data)\n\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKey = dic['SyncKey']\n\n    state = responseState('webwxinit', dic['BaseResponse'])\n    return state\n\n\ndef webwxgetcontact():\n\n    url = base_uri + \\\n        '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (\n            pass_ticket, skey, int(time.time()))\n\n    request = getRequest(url=url)\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read()\n\n    if DEBUG:\n        f = open(os.path.join(os.getcwd(), 'webwxgetcontact.json'), 'wb')\n        f.write(data)\n        f.close()\n\n    # print(data)\n    data = data.decode('utf-8', 'replace')\n\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n\n    # 倒序遍历,不然删除的时候出问题..\n    SpecialUsers = [\"newsapp\", \"fmessage\", \"filehelper\", \"weibo\", \"qqmail\", \"tmessage\", \"qmessage\", \"qqsync\", \"floatbottle\", \"lbsapp\", \"shakeapp\", \"medianote\", \"qqfriend\", \"readerapp\", \"blogapp\", \"facebookapp\", \"masssendapp\",\n                    \"meishiapp\", \"feedsapp\", \"voip\", \"blogappweixin\", \"weixin\", \"brandsessionholder\", \"weixinreminder\", \"wxid_novlwrv3lqwv11\", \"gh_22b87fa7cb3c\", \"officialaccounts\", \"notification_messages\", \"wxitil\", \"userexperience_alarm\"]\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:  # 公众号/服务号\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:  # 特殊账号\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:  # 群聊\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:  # 自己\n            MemberList.remove(Member)\n\n    return MemberList\n\n\ndef createChatroom(UserNames):\n    MemberList = [{'UserName': UserName} for UserName in UserNames]\n\n    url = base_uri + \\\n        '/webwxcreatechatroom?pass_ticket=%s&r=%s' % (\n            pass_ticket, int(time.time()))\n    params = {\n        'BaseRequest': BaseRequest,\n        'MemberCount': len(MemberList),\n        'MemberList': MemberList,\n        'Topic': '',\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    ChatRoomName = dic['ChatRoomName']\n    MemberList = dic['MemberList']\n    DeletedList = []\n    BlockedList = []\n    for Member in MemberList:\n        if Member['MemberStatus'] == 4:  # 被对方删除了\n            DeletedList.append(Member['UserName'])\n        elif Member['MemberStatus'] == 3:  # 被加入黑名单\n            BlockedList.append(Member['UserName'])\n\n    state = responseState('createChatroom', dic['BaseResponse'])\n\n    return ChatRoomName, DeletedList, BlockedList\n\n\ndef deleteMember(ChatRoomName, UserNames):\n    url = base_uri + \\\n        '/webwxupdatechatroom?fun=delmember&pass_ticket=%s' % (pass_ticket)\n    params = {\n        'BaseRequest': BaseRequest,\n        'ChatRoomName': ChatRoomName,\n        'DelMemberList': ','.join(UserNames),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n\n    state = responseState('deleteMember', dic['BaseResponse'])\n    return state\n\n\ndef addMember(ChatRoomName, UserNames):\n    url = base_uri + \\\n        '/webwxupdatechatroom?fun=addmember&pass_ticket=%s' % (pass_ticket)\n    params = {\n        'BaseRequest': BaseRequest,\n        'ChatRoomName': ChatRoomName,\n        'AddMemberList': ','.join(UserNames),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    DeletedList = []\n    BlockedList = []\n    for Member in MemberList:\n        if Member['MemberStatus'] == 4:  # 被对方删除了\n            DeletedList.append(Member['UserName'])\n        elif Member['MemberStatus'] == 3:  # 被加入黑名单\n            BlockedList.append(Member['UserName'])\n\n    state = responseState('addMember', dic['BaseResponse'])\n\n    return DeletedList, BlockedList\n\n\ndef syncKey():\n    SyncKeyItems = ['%s_%s' % (item['Key'], item['Val'])\n                    for item in SyncKey['List']]\n    SyncKeyStr = '|'.join(SyncKeyItems)\n    return SyncKeyStr\n\n\ndef syncCheck():\n    url = push_uri + '/synccheck?'\n    params = {\n        'skey': BaseRequest['Skey'],\n        'sid': BaseRequest['Sid'],\n        'uin': BaseRequest['Uin'],\n        'deviceId': BaseRequest['DeviceID'],\n        'synckey': syncKey(),\n        'r': int(time.time()),\n    }\n\n    request = getRequest(url=url + urlencode(params))\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.synccheck={retcode:\"0\",selector:\"2\"}\n    regx = r'window.synccheck={retcode:\"(\\d+)\",selector:\"(\\d+)\"}'\n    pm = re.search(regx, data)\n\n    retcode = pm.group(1)\n    selector = pm.group(2)\n\n    return selector\n\n\ndef webwxsync():\n    global SyncKey\n\n    url = base_uri + '/webwxsync?lang=zh_CN&skey=%s&sid=%s&pass_ticket=%s' % (\n        BaseRequest['Skey'], BaseRequest['Sid'], quote_plus(pass_ticket))\n    params = {\n        'BaseRequest': BaseRequest,\n        'SyncKey': SyncKey,\n        'rr': ~int(time.time()),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    SyncKey = dic['SyncKey']\n\n    state = responseState('webwxsync', dic['BaseResponse'])\n    return state\n\n\ndef heartBeatLoop():\n    while True:\n        selector = syncCheck()\n        if selector != '0':\n            webwxsync()\n        time.sleep(1)\n\n\ndef main():\n\n    try:\n        ssl._create_default_https_context = ssl._create_unverified_context\n\n        opener = wdf_urllib.build_opener(\n            wdf_urllib.HTTPCookieProcessor(CookieJar()))\n        opener.addheaders = [\n            ('User-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36')]\n        wdf_urllib.install_opener(opener)\n    except:\n        pass\n\n    if not getUUID():\n        print('获取uuid失败')\n        return\n\n    print('正在获取二维码图片...')\n    showQRImage()\n    time.sleep(1)\n\n    while waitForLogin() != '200':\n        pass\n\n    os.remove(QRImagePath)\n\n    if not login():\n        print('登录失败')\n        return\n\n    if not webwxinit():\n        print('初始化失败')\n        return\n\n    MemberList = webwxgetcontact()\n\n    print('开启心跳线程')\n    thread.start_new_thread(heartBeatLoop, ())\n\n    MemberCount = len(MemberList)\n    print('通讯录共%s位好友' % MemberCount)\n\n    ChatRoomName = ''\n    result = []\n    d = {}\n    for Member in MemberList:\n        d[Member['UserName']] = (Member['NickName'].encode(\n            'utf-8'), Member['RemarkName'].encode('utf-8'))\n    print('开始查找...')\n    group_num = int(math.ceil(MemberCount / float(MAX_GROUP_NUM)))\n    for i in range(0, group_num):\n        UserNames = []\n        for j in range(0, MAX_GROUP_NUM):\n            if i * MAX_GROUP_NUM + j >= MemberCount:\n                break\n            Member = MemberList[i * MAX_GROUP_NUM + j]\n            UserNames.append(Member['UserName'])\n\n        # 新建群组/添加成员\n        if ChatRoomName == '':\n            (ChatRoomName, DeletedList, BlockedList) = createChatroom(\n                UserNames)\n        else:\n            (DeletedList, BlockedList) = addMember(ChatRoomName, UserNames)\n\n        # todo BlockedList 被拉黑列表\n\n        DeletedCount = len(DeletedList)\n        if DeletedCount > 0:\n            result += DeletedList\n\n        # 删除成员\n        deleteMember(ChatRoomName, UserNames)\n\n        # 进度条\n        progress = MAX_PROGRESS_LEN * (i + 1) / group_num\n        print('[', '#' * progress, '-' * (MAX_PROGRESS_LEN - progress), ']', end=' ')\n        print('新发现你被%d人删除' % DeletedCount)\n        for i in range(DeletedCount):\n            if d[DeletedList[i]][1] != '':\n                print(d[DeletedList[i]][0] + '(%s)' % d[DeletedList[i]][1])\n            else:\n                print(d[DeletedList[i]][0])\n\n        if i != group_num - 1:\n            print('正在继续查找,请耐心等待...')\n            # 下一次进行接口调用需要等待的时间\n            time.sleep(INTERFACE_CALLING_INTERVAL)\n    # todo 删除群组\n\n    print('\\n结果汇总完毕,20s后可重试...')\n    resultNames = []\n    for r in result:\n        if d[r][1] != '':\n            resultNames.append(d[r][0] + '(%s)' % d[r][1])\n        else:\n            resultNames.append(d[r][0])\n\n    print('---------- 被删除的好友列表(共%d人) ----------' % len(result))\n    # 过滤emoji\n    resultNames = map(lambda x: re.sub(r'<span.+/span>', '', x), resultNames)\n    if len(resultNames):\n        print('\\n'.join(resultNames))\n    else:\n        print(\"无\")\n    print('---------------------------------------------')\n\n\n# windows下编码问题修复\n# http://blog.csdn.net/heyuxuanzee/article/details/8442718\n\n\nclass UnicodeStreamFilter:\n\n    def __init__(self, target):\n        self.target = target\n        self.encoding = 'utf-8'\n        self.errors = 'replace'\n        self.encode_to = self.target.encoding\n\n    def write(self, s):\n        if type(s) == str:\n            s = s.decode('utf-8')\n        s = s.encode(self.encode_to, self.errors).decode(self.encode_to)\n        self.target.write(s)\n\nif sys.stdout.encoding == 'cp936':\n    sys.stdout = UnicodeStreamFilter(sys.stdout)\n\nif __name__ == '__main__':\n\n    print('本程序的查询结果可能会引起一些心理上的不适,请小心使用...')\n    main()\n    print('回车键退出...')\n```\n\n按照指示做即可。","source":"_posts/查看被删的微信好友.md","raw":"---\ntitle: 查看被删的微信好友\ndate: 2016-04-01 14:33:06\ntags: [wechat, 微信, python]\ncategories: python\n---\n## 查看被删的微信好友\n\n<!-- more -->\n\n[来自这里](https://github.com/0x5e/wechat-deleted-friends)\n\n> 原理：\n\n查看被删的微信好友\n原理就是新建群组,如果加不进来就是被删好友了(不要在群组里讲话,别人是看不见的)\n用的是微信网页版的接口\n查询结果可能会引起一些心理上的不适,请小心使用.\nMac OS用法: 启动Terminal\n\n```\n\t$ python wechat.py\n\n```\n下面是wechat.py的代码\n\n```\n#!/usr/bin/env python\n# coding=utf-8\nfrom __future__ import print_function\n\nimport os\ntry:\n    from urllib import urlencode, quote_plus\nexcept ImportError:\n    from urllib.parse import urlencode, quote_plus\n\ntry:\n    import urllib2 as wdf_urllib\n    from cookielib import CookieJar\nexcept ImportError:\n    import urllib.request as wdf_urllib\n    from http.cookiejar import CookieJar\n\nimport re\nimport time\nimport xml.dom.minidom\nimport json\nimport sys\nimport math\nimport subprocess\nimport ssl\nimport thread\n\nDEBUG = False\n\nMAX_GROUP_NUM = 35  # 每组人数\nINTERFACE_CALLING_INTERVAL = 20  # 接口调用时间间隔, 间隔太短容易出现\"操作太频繁\", 会被限制操作半小时左右\nMAX_PROGRESS_LEN = 50\n\nQRImagePath = os.path.join(os.getcwd(), 'qrcode.jpg')\n\ntip = 0\nuuid = ''\n\nbase_uri = ''\nredirect_uri = ''\npush_uri = ''\n\nskey = ''\nwxsid = ''\nwxuin = ''\npass_ticket = ''\ndeviceId = 'e000000000000000'\n\nBaseRequest = {}\n\nContactList = []\nMy = []\nSyncKey = []\n\ntry:\n    xrange\n    range = xrange\nexcept:\n    # python 3\n    pass\n\n\ndef responseState(func, BaseResponse):\n    ErrMsg = BaseResponse['ErrMsg']\n    Ret = BaseResponse['Ret']\n    if DEBUG or Ret != 0:\n        print('func: %s, Ret: %d, ErrMsg: %s' % (func, Ret, ErrMsg))\n\n    if Ret != 0:\n        return False\n\n    return True\n\n\ndef getRequest(url, data=None):\n    try:\n        data = data.encode('utf-8')\n    except:\n        pass\n    finally:\n        return wdf_urllib.Request(url=url, data=data)\n\n\ndef getUUID():\n    global uuid\n\n    url = 'https://login.weixin.qq.com/jslogin'\n    params = {\n        'appid': 'wx782c26e4c19acffb',\n        'fun': 'new',\n        'lang': 'zh_CN',\n        '_': int(time.time()),\n    }\n\n    request = getRequest(url=url, data=urlencode(params))\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.QRLogin.code = 200; window.QRLogin.uuid = \"oZwt_bFfRg==\";\n    regx = r'window.QRLogin.code = (\\d+); window.QRLogin.uuid = \"(\\S+?)\"'\n    pm = re.search(regx, data)\n\n    code = pm.group(1)\n    uuid = pm.group(2)\n\n    if code == '200':\n        return True\n\n    return False\n\n\ndef showQRImage():\n    global tip\n\n    url = 'https://login.weixin.qq.com/qrcode/' + uuid\n    params = {\n        't': 'webwx',\n        '_': int(time.time()),\n    }\n\n    request = getRequest(url=url, data=urlencode(params))\n    response = wdf_urllib.urlopen(request)\n\n    tip = 1\n\n    f = open(QRImagePath, 'wb')\n    f.write(response.read())\n    f.close()\n\n    if sys.platform.find('darwin') >= 0:\n        subprocess.call(['open', QRImagePath])\n    elif sys.platform.find('linux') >= 0:\n        subprocess.call(['xdg-open', QRImagePath])\n    else:\n        os.startfile(QRImagePath)\n\n    print('请使用微信扫描二维码以登录')\n\n\ndef waitForLogin():\n    global tip, base_uri, redirect_uri, push_uri\n\n    url = 'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&uuid=%s&_=%s' % (\n        tip, uuid, int(time.time()))\n\n    request = getRequest(url=url)\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.code=500;\n    regx = r'window.code=(\\d+);'\n    pm = re.search(regx, data)\n\n    code = pm.group(1)\n\n    if code == '201':  # 已扫描\n        print('成功扫描,请在手机上点击确认以登录')\n        tip = 0\n    elif code == '200':  # 已登录\n        print('正在登录...')\n        regx = r'window.redirect_uri=\"(\\S+?)\";'\n        pm = re.search(regx, data)\n        redirect_uri = pm.group(1) + '&fun=new'\n        base_uri = redirect_uri[:redirect_uri.rfind('/')]\n\n        # push_uri与base_uri对应关系(排名分先后)(就是这么奇葩..)\n        services = [\n            ('wx2.qq.com', 'webpush2.weixin.qq.com'),\n            ('qq.com', 'webpush.weixin.qq.com'),\n            ('web1.wechat.com', 'webpush1.wechat.com'),\n            ('web2.wechat.com', 'webpush2.wechat.com'),\n            ('wechat.com', 'webpush.wechat.com'),\n            ('web1.wechatapp.com', 'webpush1.wechatapp.com'),\n        ]\n        push_uri = base_uri\n        for (searchUrl, pushUrl) in services:\n            if base_uri.find(searchUrl) >= 0:\n                push_uri = 'https://%s/cgi-bin/mmwebwx-bin' % pushUrl\n                break\n\n        # closeQRImage\n        if sys.platform.find('darwin') >= 0:  # for OSX with Preview\n            os.system(\"osascript -e 'quit app \\\"Preview\\\"'\")\n    elif code == '408':  # 超时\n        pass\n    # elif code == '400' or code == '500':\n\n    return code\n\n\ndef login():\n    global skey, wxsid, wxuin, pass_ticket, BaseRequest\n\n    request = getRequest(url=redirect_uri)\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    doc = xml.dom.minidom.parseString(data)\n    root = doc.documentElement\n\n    for node in root.childNodes:\n        if node.nodeName == 'skey':\n            skey = node.childNodes[0].data\n        elif node.nodeName == 'wxsid':\n            wxsid = node.childNodes[0].data\n        elif node.nodeName == 'wxuin':\n            wxuin = node.childNodes[0].data\n        elif node.nodeName == 'pass_ticket':\n            pass_ticket = node.childNodes[0].data\n\n    # print('skey: %s, wxsid: %s, wxuin: %s, pass_ticket: %s' % (skey, wxsid,\n    # wxuin, pass_ticket))\n\n    if not all((skey, wxsid, wxuin, pass_ticket)):\n        return False\n\n    BaseRequest = {\n        'Uin': int(wxuin),\n        'Sid': wxsid,\n        'Skey': skey,\n        'DeviceID': deviceId,\n    }\n\n    return True\n\n\ndef webwxinit():\n\n    url = base_uri + \\\n        '/webwxinit?pass_ticket=%s&skey=%s&r=%s' % (\n            pass_ticket, skey, int(time.time()))\n    params = {\n        'BaseRequest': BaseRequest\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read()\n\n    if DEBUG:\n        f = open(os.path.join(os.getcwd(), 'webwxinit.json'), 'wb')\n        f.write(data)\n        f.close()\n\n    data = data.decode('utf-8', 'replace')\n\n    # print(data)\n\n    global ContactList, My, SyncKey\n    dic = json.loads(data)\n    ContactList = dic['ContactList']\n    My = dic['User']\n    SyncKey = dic['SyncKey']\n\n    state = responseState('webwxinit', dic['BaseResponse'])\n    return state\n\n\ndef webwxgetcontact():\n\n    url = base_uri + \\\n        '/webwxgetcontact?pass_ticket=%s&skey=%s&r=%s' % (\n            pass_ticket, skey, int(time.time()))\n\n    request = getRequest(url=url)\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read()\n\n    if DEBUG:\n        f = open(os.path.join(os.getcwd(), 'webwxgetcontact.json'), 'wb')\n        f.write(data)\n        f.close()\n\n    # print(data)\n    data = data.decode('utf-8', 'replace')\n\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n\n    # 倒序遍历,不然删除的时候出问题..\n    SpecialUsers = [\"newsapp\", \"fmessage\", \"filehelper\", \"weibo\", \"qqmail\", \"tmessage\", \"qmessage\", \"qqsync\", \"floatbottle\", \"lbsapp\", \"shakeapp\", \"medianote\", \"qqfriend\", \"readerapp\", \"blogapp\", \"facebookapp\", \"masssendapp\",\n                    \"meishiapp\", \"feedsapp\", \"voip\", \"blogappweixin\", \"weixin\", \"brandsessionholder\", \"weixinreminder\", \"wxid_novlwrv3lqwv11\", \"gh_22b87fa7cb3c\", \"officialaccounts\", \"notification_messages\", \"wxitil\", \"userexperience_alarm\"]\n    for i in range(len(MemberList) - 1, -1, -1):\n        Member = MemberList[i]\n        if Member['VerifyFlag'] & 8 != 0:  # 公众号/服务号\n            MemberList.remove(Member)\n        elif Member['UserName'] in SpecialUsers:  # 特殊账号\n            MemberList.remove(Member)\n        elif Member['UserName'].find('@@') != -1:  # 群聊\n            MemberList.remove(Member)\n        elif Member['UserName'] == My['UserName']:  # 自己\n            MemberList.remove(Member)\n\n    return MemberList\n\n\ndef createChatroom(UserNames):\n    MemberList = [{'UserName': UserName} for UserName in UserNames]\n\n    url = base_uri + \\\n        '/webwxcreatechatroom?pass_ticket=%s&r=%s' % (\n            pass_ticket, int(time.time()))\n    params = {\n        'BaseRequest': BaseRequest,\n        'MemberCount': len(MemberList),\n        'MemberList': MemberList,\n        'Topic': '',\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    ChatRoomName = dic['ChatRoomName']\n    MemberList = dic['MemberList']\n    DeletedList = []\n    BlockedList = []\n    for Member in MemberList:\n        if Member['MemberStatus'] == 4:  # 被对方删除了\n            DeletedList.append(Member['UserName'])\n        elif Member['MemberStatus'] == 3:  # 被加入黑名单\n            BlockedList.append(Member['UserName'])\n\n    state = responseState('createChatroom', dic['BaseResponse'])\n\n    return ChatRoomName, DeletedList, BlockedList\n\n\ndef deleteMember(ChatRoomName, UserNames):\n    url = base_uri + \\\n        '/webwxupdatechatroom?fun=delmember&pass_ticket=%s' % (pass_ticket)\n    params = {\n        'BaseRequest': BaseRequest,\n        'ChatRoomName': ChatRoomName,\n        'DelMemberList': ','.join(UserNames),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n\n    state = responseState('deleteMember', dic['BaseResponse'])\n    return state\n\n\ndef addMember(ChatRoomName, UserNames):\n    url = base_uri + \\\n        '/webwxupdatechatroom?fun=addmember&pass_ticket=%s' % (pass_ticket)\n    params = {\n        'BaseRequest': BaseRequest,\n        'ChatRoomName': ChatRoomName,\n        'AddMemberList': ','.join(UserNames),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    MemberList = dic['MemberList']\n    DeletedList = []\n    BlockedList = []\n    for Member in MemberList:\n        if Member['MemberStatus'] == 4:  # 被对方删除了\n            DeletedList.append(Member['UserName'])\n        elif Member['MemberStatus'] == 3:  # 被加入黑名单\n            BlockedList.append(Member['UserName'])\n\n    state = responseState('addMember', dic['BaseResponse'])\n\n    return DeletedList, BlockedList\n\n\ndef syncKey():\n    SyncKeyItems = ['%s_%s' % (item['Key'], item['Val'])\n                    for item in SyncKey['List']]\n    SyncKeyStr = '|'.join(SyncKeyItems)\n    return SyncKeyStr\n\n\ndef syncCheck():\n    url = push_uri + '/synccheck?'\n    params = {\n        'skey': BaseRequest['Skey'],\n        'sid': BaseRequest['Sid'],\n        'uin': BaseRequest['Uin'],\n        'deviceId': BaseRequest['DeviceID'],\n        'synckey': syncKey(),\n        'r': int(time.time()),\n    }\n\n    request = getRequest(url=url + urlencode(params))\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    # window.synccheck={retcode:\"0\",selector:\"2\"}\n    regx = r'window.synccheck={retcode:\"(\\d+)\",selector:\"(\\d+)\"}'\n    pm = re.search(regx, data)\n\n    retcode = pm.group(1)\n    selector = pm.group(2)\n\n    return selector\n\n\ndef webwxsync():\n    global SyncKey\n\n    url = base_uri + '/webwxsync?lang=zh_CN&skey=%s&sid=%s&pass_ticket=%s' % (\n        BaseRequest['Skey'], BaseRequest['Sid'], quote_plus(pass_ticket))\n    params = {\n        'BaseRequest': BaseRequest,\n        'SyncKey': SyncKey,\n        'rr': ~int(time.time()),\n    }\n\n    request = getRequest(url=url, data=json.dumps(params))\n    request.add_header('ContentType', 'application/json; charset=UTF-8')\n    response = wdf_urllib.urlopen(request)\n    data = response.read().decode('utf-8', 'replace')\n\n    # print(data)\n\n    dic = json.loads(data)\n    SyncKey = dic['SyncKey']\n\n    state = responseState('webwxsync', dic['BaseResponse'])\n    return state\n\n\ndef heartBeatLoop():\n    while True:\n        selector = syncCheck()\n        if selector != '0':\n            webwxsync()\n        time.sleep(1)\n\n\ndef main():\n\n    try:\n        ssl._create_default_https_context = ssl._create_unverified_context\n\n        opener = wdf_urllib.build_opener(\n            wdf_urllib.HTTPCookieProcessor(CookieJar()))\n        opener.addheaders = [\n            ('User-agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36')]\n        wdf_urllib.install_opener(opener)\n    except:\n        pass\n\n    if not getUUID():\n        print('获取uuid失败')\n        return\n\n    print('正在获取二维码图片...')\n    showQRImage()\n    time.sleep(1)\n\n    while waitForLogin() != '200':\n        pass\n\n    os.remove(QRImagePath)\n\n    if not login():\n        print('登录失败')\n        return\n\n    if not webwxinit():\n        print('初始化失败')\n        return\n\n    MemberList = webwxgetcontact()\n\n    print('开启心跳线程')\n    thread.start_new_thread(heartBeatLoop, ())\n\n    MemberCount = len(MemberList)\n    print('通讯录共%s位好友' % MemberCount)\n\n    ChatRoomName = ''\n    result = []\n    d = {}\n    for Member in MemberList:\n        d[Member['UserName']] = (Member['NickName'].encode(\n            'utf-8'), Member['RemarkName'].encode('utf-8'))\n    print('开始查找...')\n    group_num = int(math.ceil(MemberCount / float(MAX_GROUP_NUM)))\n    for i in range(0, group_num):\n        UserNames = []\n        for j in range(0, MAX_GROUP_NUM):\n            if i * MAX_GROUP_NUM + j >= MemberCount:\n                break\n            Member = MemberList[i * MAX_GROUP_NUM + j]\n            UserNames.append(Member['UserName'])\n\n        # 新建群组/添加成员\n        if ChatRoomName == '':\n            (ChatRoomName, DeletedList, BlockedList) = createChatroom(\n                UserNames)\n        else:\n            (DeletedList, BlockedList) = addMember(ChatRoomName, UserNames)\n\n        # todo BlockedList 被拉黑列表\n\n        DeletedCount = len(DeletedList)\n        if DeletedCount > 0:\n            result += DeletedList\n\n        # 删除成员\n        deleteMember(ChatRoomName, UserNames)\n\n        # 进度条\n        progress = MAX_PROGRESS_LEN * (i + 1) / group_num\n        print('[', '#' * progress, '-' * (MAX_PROGRESS_LEN - progress), ']', end=' ')\n        print('新发现你被%d人删除' % DeletedCount)\n        for i in range(DeletedCount):\n            if d[DeletedList[i]][1] != '':\n                print(d[DeletedList[i]][0] + '(%s)' % d[DeletedList[i]][1])\n            else:\n                print(d[DeletedList[i]][0])\n\n        if i != group_num - 1:\n            print('正在继续查找,请耐心等待...')\n            # 下一次进行接口调用需要等待的时间\n            time.sleep(INTERFACE_CALLING_INTERVAL)\n    # todo 删除群组\n\n    print('\\n结果汇总完毕,20s后可重试...')\n    resultNames = []\n    for r in result:\n        if d[r][1] != '':\n            resultNames.append(d[r][0] + '(%s)' % d[r][1])\n        else:\n            resultNames.append(d[r][0])\n\n    print('---------- 被删除的好友列表(共%d人) ----------' % len(result))\n    # 过滤emoji\n    resultNames = map(lambda x: re.sub(r'<span.+/span>', '', x), resultNames)\n    if len(resultNames):\n        print('\\n'.join(resultNames))\n    else:\n        print(\"无\")\n    print('---------------------------------------------')\n\n\n# windows下编码问题修复\n# http://blog.csdn.net/heyuxuanzee/article/details/8442718\n\n\nclass UnicodeStreamFilter:\n\n    def __init__(self, target):\n        self.target = target\n        self.encoding = 'utf-8'\n        self.errors = 'replace'\n        self.encode_to = self.target.encoding\n\n    def write(self, s):\n        if type(s) == str:\n            s = s.decode('utf-8')\n        s = s.encode(self.encode_to, self.errors).decode(self.encode_to)\n        self.target.write(s)\n\nif sys.stdout.encoding == 'cp936':\n    sys.stdout = UnicodeStreamFilter(sys.stdout)\n\nif __name__ == '__main__':\n\n    print('本程序的查询结果可能会引起一些心理上的不适,请小心使用...')\n    main()\n    print('回车键退出...')\n```\n\n按照指示做即可。","slug":"查看被删的微信好友","published":1,"updated":"2016-04-01T06:37:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uulh003gpev2k5kit6wq","content":"<h2 id=\"查看被删的微信好友\"><a href=\"#查看被删的微信好友\" class=\"headerlink\" title=\"查看被删的微信好友\"></a>查看被删的微信好友</h2><a id=\"more\"></a>\n<p><a href=\"https://github.com/0x5e/wechat-deleted-friends\" target=\"_blank\" rel=\"noopener\">来自这里</a></p>\n<blockquote>\n<p>原理：</p>\n</blockquote>\n<p>查看被删的微信好友<br>原理就是新建群组,如果加不进来就是被删好友了(不要在群组里讲话,别人是看不见的)<br>用的是微信网页版的接口<br>查询结果可能会引起一些心理上的不适,请小心使用.<br>Mac OS用法: 启动Terminal</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> python wechat.py</span></span><br></pre></td></tr></table></figure>\n<p>下面是wechat.py的代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> print_function</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> urlencode, quote_plus</span><br><span class=\"line\"><span class=\"keyword\">except</span> ImportError:</span><br><span class=\"line\">    <span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> urlencode, quote_plus</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">import</span> urllib2 <span class=\"keyword\">as</span> wdf_urllib</span><br><span class=\"line\">    <span class=\"keyword\">from</span> cookielib <span class=\"keyword\">import</span> CookieJar</span><br><span class=\"line\"><span class=\"keyword\">except</span> ImportError:</span><br><span class=\"line\">    <span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> wdf_urllib</span><br><span class=\"line\">    <span class=\"keyword\">from</span> http.cookiejar <span class=\"keyword\">import</span> CookieJar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.dom.minidom</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">DEBUG = <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">MAX_GROUP_NUM = <span class=\"number\">35</span>  <span class=\"comment\"># 每组人数</span></span><br><span class=\"line\">INTERFACE_CALLING_INTERVAL = <span class=\"number\">20</span>  <span class=\"comment\"># 接口调用时间间隔, 间隔太短容易出现\"操作太频繁\", 会被限制操作半小时左右</span></span><br><span class=\"line\">MAX_PROGRESS_LEN = <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">QRImagePath = os.path.join(os.getcwd(), <span class=\"string\">'qrcode.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tip = <span class=\"number\">0</span></span><br><span class=\"line\">uuid = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\">base_uri = <span class=\"string\">''</span></span><br><span class=\"line\">redirect_uri = <span class=\"string\">''</span></span><br><span class=\"line\">push_uri = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\">skey = <span class=\"string\">''</span></span><br><span class=\"line\">wxsid = <span class=\"string\">''</span></span><br><span class=\"line\">wxuin = <span class=\"string\">''</span></span><br><span class=\"line\">pass_ticket = <span class=\"string\">''</span></span><br><span class=\"line\">deviceId = <span class=\"string\">'e000000000000000'</span></span><br><span class=\"line\"></span><br><span class=\"line\">BaseRequest = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ContactList = []</span><br><span class=\"line\">My = []</span><br><span class=\"line\">SyncKey = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    xrange</span><br><span class=\"line\">    range = xrange</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"comment\"># python 3</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">responseState</span><span class=\"params\">(func, BaseResponse)</span>:</span></span><br><span class=\"line\">    ErrMsg = BaseResponse[<span class=\"string\">'ErrMsg'</span>]</span><br><span class=\"line\">    Ret = BaseResponse[<span class=\"string\">'Ret'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG <span class=\"keyword\">or</span> Ret != <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">'func: %s, Ret: %d, ErrMsg: %s'</span> % (func, Ret, ErrMsg))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Ret != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getRequest</span><span class=\"params\">(url, data=None)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        data = data.encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wdf_urllib.Request(url=url, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getUUID</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> uuid</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/jslogin'</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'appid'</span>: <span class=\"string\">'wx782c26e4c19acffb'</span>,</span><br><span class=\"line\">        <span class=\"string\">'fun'</span>: <span class=\"string\">'new'</span>,</span><br><span class=\"line\">        <span class=\"string\">'lang'</span>: <span class=\"string\">'zh_CN'</span>,</span><br><span class=\"line\">        <span class=\"string\">'_'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.QRLogin.code = 200; window.QRLogin.uuid = \"oZwt_bFfRg==\";</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.QRLogin.code = (\\d+); window.QRLogin.uuid = \"(\\S+?)\"'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    code = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    uuid = pm.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> code == <span class=\"string\">'200'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showQRImage</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> tip</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/qrcode/'</span> + uuid</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'t'</span>: <span class=\"string\">'webwx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'_'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\"></span><br><span class=\"line\">    tip = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(QRImagePath, <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">    f.write(response.read())</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sys.platform.find(<span class=\"string\">'darwin'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        subprocess.call([<span class=\"string\">'open'</span>, QRImagePath])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> sys.platform.find(<span class=\"string\">'linux'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        subprocess.call([<span class=\"string\">'xdg-open'</span>, QRImagePath])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        os.startfile(QRImagePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'请使用微信扫描二维码以登录'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waitForLogin</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> tip, base_uri, redirect_uri, push_uri</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&amp;uuid=%s&amp;_=%s'</span> % (</span><br><span class=\"line\">        tip, uuid, int(time.time()))</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.code=500;</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.code=(\\d+);'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    code = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> code == <span class=\"string\">'201'</span>:  <span class=\"comment\"># 已扫描</span></span><br><span class=\"line\">        print(<span class=\"string\">'成功扫描,请在手机上点击确认以登录'</span>)</span><br><span class=\"line\">        tip = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> code == <span class=\"string\">'200'</span>:  <span class=\"comment\"># 已登录</span></span><br><span class=\"line\">        print(<span class=\"string\">'正在登录...'</span>)</span><br><span class=\"line\">        regx = <span class=\"string\">r'window.redirect_uri=\"(\\S+?)\";'</span></span><br><span class=\"line\">        pm = re.search(regx, data)</span><br><span class=\"line\">        redirect_uri = pm.group(<span class=\"number\">1</span>) + <span class=\"string\">'&amp;fun=new'</span></span><br><span class=\"line\">        base_uri = redirect_uri[:redirect_uri.rfind(<span class=\"string\">'/'</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># push_uri与base_uri对应关系(排名分先后)(就是这么奇葩..)</span></span><br><span class=\"line\">        services = [</span><br><span class=\"line\">            (<span class=\"string\">'wx2.qq.com'</span>, <span class=\"string\">'webpush2.weixin.qq.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'qq.com'</span>, <span class=\"string\">'webpush.weixin.qq.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web1.wechat.com'</span>, <span class=\"string\">'webpush1.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web2.wechat.com'</span>, <span class=\"string\">'webpush2.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'wechat.com'</span>, <span class=\"string\">'webpush.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web1.wechatapp.com'</span>, <span class=\"string\">'webpush1.wechatapp.com'</span>),</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        push_uri = base_uri</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (searchUrl, pushUrl) <span class=\"keyword\">in</span> services:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> base_uri.find(searchUrl) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                push_uri = <span class=\"string\">'https://%s/cgi-bin/mmwebwx-bin'</span> % pushUrl</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># closeQRImage</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> sys.platform.find(<span class=\"string\">'darwin'</span>) &gt;= <span class=\"number\">0</span>:  <span class=\"comment\"># for OSX with Preview</span></span><br><span class=\"line\">            os.system(<span class=\"string\">\"osascript -e 'quit app \\\"Preview\\\"'\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> code == <span class=\"string\">'408'</span>:  <span class=\"comment\"># 超时</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"comment\"># elif code == '400' or code == '500':</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> code</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> skey, wxsid, wxuin, pass_ticket, BaseRequest</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=redirect_uri)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    doc = xml.dom.minidom.parseString(data)</span><br><span class=\"line\">    root = doc.documentElement</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> root.childNodes:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> node.nodeName == <span class=\"string\">'skey'</span>:</span><br><span class=\"line\">            skey = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'wxsid'</span>:</span><br><span class=\"line\">            wxsid = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'wxuin'</span>:</span><br><span class=\"line\">            wxuin = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'pass_ticket'</span>:</span><br><span class=\"line\">            pass_ticket = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print('skey: %s, wxsid: %s, wxuin: %s, pass_ticket: %s' % (skey, wxsid,</span></span><br><span class=\"line\">    <span class=\"comment\"># wxuin, pass_ticket))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> all((skey, wxsid, wxuin, pass_ticket)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    BaseRequest = &#123;</span><br><span class=\"line\">        <span class=\"string\">'Uin'</span>: int(wxuin),</span><br><span class=\"line\">        <span class=\"string\">'Sid'</span>: wxsid,</span><br><span class=\"line\">        <span class=\"string\">'Skey'</span>: skey,</span><br><span class=\"line\">        <span class=\"string\">'DeviceID'</span>: deviceId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxinit</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxinit?pass_ticket=%s&amp;skey=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, skey, int(time.time()))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG:</span><br><span class=\"line\">        f = open(os.path.join(os.getcwd(), <span class=\"string\">'webwxinit.json'</span>), <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    data = data.decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">global</span> ContactList, My, SyncKey</span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    ContactList = dic[<span class=\"string\">'ContactList'</span>]</span><br><span class=\"line\">    My = dic[<span class=\"string\">'User'</span>]</span><br><span class=\"line\">    SyncKey = dic[<span class=\"string\">'SyncKey'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'webwxinit'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxgetcontact</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxgetcontact?pass_ticket=%s&amp;skey=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, skey, int(time.time()))</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url)</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG:</span><br><span class=\"line\">        f = open(os.path.join(os.getcwd(), <span class=\"string\">'webwxgetcontact.json'</span>), <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\">    data = data.decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 倒序遍历,不然删除的时候出问题..</span></span><br><span class=\"line\">    SpecialUsers = [<span class=\"string\">\"newsapp\"</span>, <span class=\"string\">\"fmessage\"</span>, <span class=\"string\">\"filehelper\"</span>, <span class=\"string\">\"weibo\"</span>, <span class=\"string\">\"qqmail\"</span>, <span class=\"string\">\"tmessage\"</span>, <span class=\"string\">\"qmessage\"</span>, <span class=\"string\">\"qqsync\"</span>, <span class=\"string\">\"floatbottle\"</span>, <span class=\"string\">\"lbsapp\"</span>, <span class=\"string\">\"shakeapp\"</span>, <span class=\"string\">\"medianote\"</span>, <span class=\"string\">\"qqfriend\"</span>, <span class=\"string\">\"readerapp\"</span>, <span class=\"string\">\"blogapp\"</span>, <span class=\"string\">\"facebookapp\"</span>, <span class=\"string\">\"masssendapp\"</span>,</span><br><span class=\"line\">                    <span class=\"string\">\"meishiapp\"</span>, <span class=\"string\">\"feedsapp\"</span>, <span class=\"string\">\"voip\"</span>, <span class=\"string\">\"blogappweixin\"</span>, <span class=\"string\">\"weixin\"</span>, <span class=\"string\">\"brandsessionholder\"</span>, <span class=\"string\">\"weixinreminder\"</span>, <span class=\"string\">\"wxid_novlwrv3lqwv11\"</span>, <span class=\"string\">\"gh_22b87fa7cb3c\"</span>, <span class=\"string\">\"officialaccounts\"</span>, <span class=\"string\">\"notification_messages\"</span>, <span class=\"string\">\"wxitil\"</span>, <span class=\"string\">\"userexperience_alarm\"</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(MemberList) - <span class=\"number\">1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">        Member = MemberList[i]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'VerifyFlag'</span>] &amp; <span class=\"number\">8</span> != <span class=\"number\">0</span>:  <span class=\"comment\"># 公众号/服务号</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>] <span class=\"keyword\">in</span> SpecialUsers:  <span class=\"comment\"># 特殊账号</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>].find(<span class=\"string\">'@@'</span>) != <span class=\"number\">-1</span>:  <span class=\"comment\"># 群聊</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>] == My[<span class=\"string\">'UserName'</span>]:  <span class=\"comment\"># 自己</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MemberList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">createChatroom</span><span class=\"params\">(UserNames)</span>:</span></span><br><span class=\"line\">    MemberList = [&#123;<span class=\"string\">'UserName'</span>: UserName&#125; <span class=\"keyword\">for</span> UserName <span class=\"keyword\">in</span> UserNames]</span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxcreatechatroom?pass_ticket=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, int(time.time()))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'MemberCount'</span>: len(MemberList),</span><br><span class=\"line\">        <span class=\"string\">'MemberList'</span>: MemberList,</span><br><span class=\"line\">        <span class=\"string\">'Topic'</span>: <span class=\"string\">''</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    ChatRoomName = dic[<span class=\"string\">'ChatRoomName'</span>]</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\">    DeletedList = []</span><br><span class=\"line\">    BlockedList = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">4</span>:  <span class=\"comment\"># 被对方删除了</span></span><br><span class=\"line\">            DeletedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">3</span>:  <span class=\"comment\"># 被加入黑名单</span></span><br><span class=\"line\">            BlockedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'createChatroom'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ChatRoomName, DeletedList, BlockedList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">deleteMember</span><span class=\"params\">(ChatRoomName, UserNames)</span>:</span></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxupdatechatroom?fun=delmember&amp;pass_ticket=%s'</span> % (pass_ticket)</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'ChatRoomName'</span>: ChatRoomName,</span><br><span class=\"line\">        <span class=\"string\">'DelMemberList'</span>: <span class=\"string\">','</span>.join(UserNames),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'deleteMember'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addMember</span><span class=\"params\">(ChatRoomName, UserNames)</span>:</span></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxupdatechatroom?fun=addmember&amp;pass_ticket=%s'</span> % (pass_ticket)</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'ChatRoomName'</span>: ChatRoomName,</span><br><span class=\"line\">        <span class=\"string\">'AddMemberList'</span>: <span class=\"string\">','</span>.join(UserNames),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\">    DeletedList = []</span><br><span class=\"line\">    BlockedList = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">4</span>:  <span class=\"comment\"># 被对方删除了</span></span><br><span class=\"line\">            DeletedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">3</span>:  <span class=\"comment\"># 被加入黑名单</span></span><br><span class=\"line\">            BlockedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'addMember'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> DeletedList, BlockedList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">syncKey</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    SyncKeyItems = [<span class=\"string\">'%s_%s'</span> % (item[<span class=\"string\">'Key'</span>], item[<span class=\"string\">'Val'</span>])</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> SyncKey[<span class=\"string\">'List'</span>]]</span><br><span class=\"line\">    SyncKeyStr = <span class=\"string\">'|'</span>.join(SyncKeyItems)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> SyncKeyStr</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">syncCheck</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    url = push_uri + <span class=\"string\">'/synccheck?'</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'skey'</span>: BaseRequest[<span class=\"string\">'Skey'</span>],</span><br><span class=\"line\">        <span class=\"string\">'sid'</span>: BaseRequest[<span class=\"string\">'Sid'</span>],</span><br><span class=\"line\">        <span class=\"string\">'uin'</span>: BaseRequest[<span class=\"string\">'Uin'</span>],</span><br><span class=\"line\">        <span class=\"string\">'deviceId'</span>: BaseRequest[<span class=\"string\">'DeviceID'</span>],</span><br><span class=\"line\">        <span class=\"string\">'synckey'</span>: syncKey(),</span><br><span class=\"line\">        <span class=\"string\">'r'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url + urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.synccheck=&#123;retcode:\"0\",selector:\"2\"&#125;</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.synccheck=&#123;retcode:\"(\\d+)\",selector:\"(\\d+)\"&#125;'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    retcode = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    selector = pm.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> selector</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxsync</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> SyncKey</span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + <span class=\"string\">'/webwxsync?lang=zh_CN&amp;skey=%s&amp;sid=%s&amp;pass_ticket=%s'</span> % (</span><br><span class=\"line\">        BaseRequest[<span class=\"string\">'Skey'</span>], BaseRequest[<span class=\"string\">'Sid'</span>], quote_plus(pass_ticket))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'SyncKey'</span>: SyncKey,</span><br><span class=\"line\">        <span class=\"string\">'rr'</span>: ~int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    SyncKey = dic[<span class=\"string\">'SyncKey'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'webwxsync'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">heartBeatLoop</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        selector = syncCheck()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> selector != <span class=\"string\">'0'</span>:</span><br><span class=\"line\">            webwxsync()</span><br><span class=\"line\">        time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\">        opener = wdf_urllib.build_opener(</span><br><span class=\"line\">            wdf_urllib.HTTPCookieProcessor(CookieJar()))</span><br><span class=\"line\">        opener.addheaders = [</span><br><span class=\"line\">            (<span class=\"string\">'User-agent'</span>, <span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36'</span>)]</span><br><span class=\"line\">        wdf_urllib.install_opener(opener)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> getUUID():</span><br><span class=\"line\">        print(<span class=\"string\">'获取uuid失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'正在获取二维码图片...'</span>)</span><br><span class=\"line\">    showQRImage()</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> waitForLogin() != <span class=\"string\">'200'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    os.remove(QRImagePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> login():</span><br><span class=\"line\">        print(<span class=\"string\">'登录失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> webwxinit():</span><br><span class=\"line\">        print(<span class=\"string\">'初始化失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    MemberList = webwxgetcontact()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'开启心跳线程'</span>)</span><br><span class=\"line\">    thread.start_new_thread(heartBeatLoop, ())</span><br><span class=\"line\"></span><br><span class=\"line\">    MemberCount = len(MemberList)</span><br><span class=\"line\">    print(<span class=\"string\">'通讯录共%s位好友'</span> % MemberCount)</span><br><span class=\"line\"></span><br><span class=\"line\">    ChatRoomName = <span class=\"string\">''</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    d = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        d[Member[<span class=\"string\">'UserName'</span>]] = (Member[<span class=\"string\">'NickName'</span>].encode(</span><br><span class=\"line\">            <span class=\"string\">'utf-8'</span>), Member[<span class=\"string\">'RemarkName'</span>].encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    print(<span class=\"string\">'开始查找...'</span>)</span><br><span class=\"line\">    group_num = int(math.ceil(MemberCount / float(MAX_GROUP_NUM)))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, group_num):</span><br><span class=\"line\">        UserNames = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, MAX_GROUP_NUM):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i * MAX_GROUP_NUM + j &gt;= MemberCount:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            Member = MemberList[i * MAX_GROUP_NUM + j]</span><br><span class=\"line\">            UserNames.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 新建群组/添加成员</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ChatRoomName == <span class=\"string\">''</span>:</span><br><span class=\"line\">            (ChatRoomName, DeletedList, BlockedList) = createChatroom(</span><br><span class=\"line\">                UserNames)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            (DeletedList, BlockedList) = addMember(ChatRoomName, UserNames)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># todo BlockedList 被拉黑列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">        DeletedCount = len(DeletedList)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> DeletedCount &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            result += DeletedList</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 删除成员</span></span><br><span class=\"line\">        deleteMember(ChatRoomName, UserNames)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 进度条</span></span><br><span class=\"line\">        progress = MAX_PROGRESS_LEN * (i + <span class=\"number\">1</span>) / group_num</span><br><span class=\"line\">        print(<span class=\"string\">'['</span>, <span class=\"string\">'#'</span> * progress, <span class=\"string\">'-'</span> * (MAX_PROGRESS_LEN - progress), <span class=\"string\">']'</span>, end=<span class=\"string\">' '</span>)</span><br><span class=\"line\">        print(<span class=\"string\">'新发现你被%d人删除'</span> % DeletedCount)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(DeletedCount):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> d[DeletedList[i]][<span class=\"number\">1</span>] != <span class=\"string\">''</span>:</span><br><span class=\"line\">                print(d[DeletedList[i]][<span class=\"number\">0</span>] + <span class=\"string\">'(%s)'</span> % d[DeletedList[i]][<span class=\"number\">1</span>])</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(d[DeletedList[i]][<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i != group_num - <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">'正在继续查找,请耐心等待...'</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 下一次进行接口调用需要等待的时间</span></span><br><span class=\"line\">            time.sleep(INTERFACE_CALLING_INTERVAL)</span><br><span class=\"line\">    <span class=\"comment\"># todo 删除群组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'\\n结果汇总完毕,20s后可重试...'</span>)</span><br><span class=\"line\">    resultNames = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d[r][<span class=\"number\">1</span>] != <span class=\"string\">''</span>:</span><br><span class=\"line\">            resultNames.append(d[r][<span class=\"number\">0</span>] + <span class=\"string\">'(%s)'</span> % d[r][<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            resultNames.append(d[r][<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'---------- 被删除的好友列表(共%d人) ----------'</span> % len(result))</span><br><span class=\"line\">    <span class=\"comment\"># 过滤emoji</span></span><br><span class=\"line\">    resultNames = map(<span class=\"keyword\">lambda</span> x: re.sub(<span class=\"string\">r'&lt;span.+/span&gt;'</span>, <span class=\"string\">''</span>, x), resultNames)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(resultNames):</span><br><span class=\"line\">        print(<span class=\"string\">'\\n'</span>.join(resultNames))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'---------------------------------------------'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># windows下编码问题修复</span></span><br><span class=\"line\"><span class=\"comment\"># http://blog.csdn.net/heyuxuanzee/article/details/8442718</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnicodeStreamFilter</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, target)</span>:</span></span><br><span class=\"line\">        self.target = target</span><br><span class=\"line\">        self.encoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\">        self.errors = <span class=\"string\">'replace'</span></span><br><span class=\"line\">        self.encode_to = self.target.encoding</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> type(s) == str:</span><br><span class=\"line\">            s = s.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">        s = s.encode(self.encode_to, self.errors).decode(self.encode_to)</span><br><span class=\"line\">        self.target.write(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> sys.stdout.encoding == <span class=\"string\">'cp936'</span>:</span><br><span class=\"line\">    sys.stdout = UnicodeStreamFilter(sys.stdout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'本程序的查询结果可能会引起一些心理上的不适,请小心使用...'</span>)</span><br><span class=\"line\">    main()</span><br><span class=\"line\">    print(<span class=\"string\">'回车键退出...'</span>)</span><br></pre></td></tr></table></figure>\n<p>按照指示做即可。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"查看被删的微信好友\"><a href=\"#查看被删的微信好友\" class=\"headerlink\" title=\"查看被删的微信好友\"></a>查看被删的微信好友</h2>","more":"<p><a href=\"https://github.com/0x5e/wechat-deleted-friends\" target=\"_blank\" rel=\"noopener\">来自这里</a></p>\n<blockquote>\n<p>原理：</p>\n</blockquote>\n<p>查看被删的微信好友<br>原理就是新建群组,如果加不进来就是被删好友了(不要在群组里讲话,别人是看不见的)<br>用的是微信网页版的接口<br>查询结果可能会引起一些心理上的不适,请小心使用.<br>Mac OS用法: 启动Terminal</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span><span class=\"bash\"> python wechat.py</span></span><br></pre></td></tr></table></figure>\n<p>下面是wechat.py的代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\"># coding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> __future__ <span class=\"keyword\">import</span> print_function</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">from</span> urllib <span class=\"keyword\">import</span> urlencode, quote_plus</span><br><span class=\"line\"><span class=\"keyword\">except</span> ImportError:</span><br><span class=\"line\">    <span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> urlencode, quote_plus</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    <span class=\"keyword\">import</span> urllib2 <span class=\"keyword\">as</span> wdf_urllib</span><br><span class=\"line\">    <span class=\"keyword\">from</span> cookielib <span class=\"keyword\">import</span> CookieJar</span><br><span class=\"line\"><span class=\"keyword\">except</span> ImportError:</span><br><span class=\"line\">    <span class=\"keyword\">import</span> urllib.request <span class=\"keyword\">as</span> wdf_urllib</span><br><span class=\"line\">    <span class=\"keyword\">from</span> http.cookiejar <span class=\"keyword\">import</span> CookieJar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> xml.dom.minidom</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> ssl</span><br><span class=\"line\"><span class=\"keyword\">import</span> thread</span><br><span class=\"line\"></span><br><span class=\"line\">DEBUG = <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">MAX_GROUP_NUM = <span class=\"number\">35</span>  <span class=\"comment\"># 每组人数</span></span><br><span class=\"line\">INTERFACE_CALLING_INTERVAL = <span class=\"number\">20</span>  <span class=\"comment\"># 接口调用时间间隔, 间隔太短容易出现\"操作太频繁\", 会被限制操作半小时左右</span></span><br><span class=\"line\">MAX_PROGRESS_LEN = <span class=\"number\">50</span></span><br><span class=\"line\"></span><br><span class=\"line\">QRImagePath = os.path.join(os.getcwd(), <span class=\"string\">'qrcode.jpg'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">tip = <span class=\"number\">0</span></span><br><span class=\"line\">uuid = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\">base_uri = <span class=\"string\">''</span></span><br><span class=\"line\">redirect_uri = <span class=\"string\">''</span></span><br><span class=\"line\">push_uri = <span class=\"string\">''</span></span><br><span class=\"line\"></span><br><span class=\"line\">skey = <span class=\"string\">''</span></span><br><span class=\"line\">wxsid = <span class=\"string\">''</span></span><br><span class=\"line\">wxuin = <span class=\"string\">''</span></span><br><span class=\"line\">pass_ticket = <span class=\"string\">''</span></span><br><span class=\"line\">deviceId = <span class=\"string\">'e000000000000000'</span></span><br><span class=\"line\"></span><br><span class=\"line\">BaseRequest = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">ContactList = []</span><br><span class=\"line\">My = []</span><br><span class=\"line\">SyncKey = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    xrange</span><br><span class=\"line\">    range = xrange</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    <span class=\"comment\"># python 3</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">responseState</span><span class=\"params\">(func, BaseResponse)</span>:</span></span><br><span class=\"line\">    ErrMsg = BaseResponse[<span class=\"string\">'ErrMsg'</span>]</span><br><span class=\"line\">    Ret = BaseResponse[<span class=\"string\">'Ret'</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG <span class=\"keyword\">or</span> Ret != <span class=\"number\">0</span>:</span><br><span class=\"line\">        print(<span class=\"string\">'func: %s, Ret: %d, ErrMsg: %s'</span> % (func, Ret, ErrMsg))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> Ret != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getRequest</span><span class=\"params\">(url, data=None)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        data = data.encode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> wdf_urllib.Request(url=url, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getUUID</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> uuid</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/jslogin'</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'appid'</span>: <span class=\"string\">'wx782c26e4c19acffb'</span>,</span><br><span class=\"line\">        <span class=\"string\">'fun'</span>: <span class=\"string\">'new'</span>,</span><br><span class=\"line\">        <span class=\"string\">'lang'</span>: <span class=\"string\">'zh_CN'</span>,</span><br><span class=\"line\">        <span class=\"string\">'_'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.QRLogin.code = 200; window.QRLogin.uuid = \"oZwt_bFfRg==\";</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.QRLogin.code = (\\d+); window.QRLogin.uuid = \"(\\S+?)\"'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    code = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    uuid = pm.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> code == <span class=\"string\">'200'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">showQRImage</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> tip</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/qrcode/'</span> + uuid</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'t'</span>: <span class=\"string\">'webwx'</span>,</span><br><span class=\"line\">        <span class=\"string\">'_'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\"></span><br><span class=\"line\">    tip = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    f = open(QRImagePath, <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">    f.write(response.read())</span><br><span class=\"line\">    f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> sys.platform.find(<span class=\"string\">'darwin'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        subprocess.call([<span class=\"string\">'open'</span>, QRImagePath])</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> sys.platform.find(<span class=\"string\">'linux'</span>) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">        subprocess.call([<span class=\"string\">'xdg-open'</span>, QRImagePath])</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        os.startfile(QRImagePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'请使用微信扫描二维码以登录'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waitForLogin</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> tip, base_uri, redirect_uri, push_uri</span><br><span class=\"line\"></span><br><span class=\"line\">    url = <span class=\"string\">'https://login.weixin.qq.com/cgi-bin/mmwebwx-bin/login?tip=%s&amp;uuid=%s&amp;_=%s'</span> % (</span><br><span class=\"line\">        tip, uuid, int(time.time()))</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.code=500;</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.code=(\\d+);'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    code = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> code == <span class=\"string\">'201'</span>:  <span class=\"comment\"># 已扫描</span></span><br><span class=\"line\">        print(<span class=\"string\">'成功扫描,请在手机上点击确认以登录'</span>)</span><br><span class=\"line\">        tip = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> code == <span class=\"string\">'200'</span>:  <span class=\"comment\"># 已登录</span></span><br><span class=\"line\">        print(<span class=\"string\">'正在登录...'</span>)</span><br><span class=\"line\">        regx = <span class=\"string\">r'window.redirect_uri=\"(\\S+?)\";'</span></span><br><span class=\"line\">        pm = re.search(regx, data)</span><br><span class=\"line\">        redirect_uri = pm.group(<span class=\"number\">1</span>) + <span class=\"string\">'&amp;fun=new'</span></span><br><span class=\"line\">        base_uri = redirect_uri[:redirect_uri.rfind(<span class=\"string\">'/'</span>)]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># push_uri与base_uri对应关系(排名分先后)(就是这么奇葩..)</span></span><br><span class=\"line\">        services = [</span><br><span class=\"line\">            (<span class=\"string\">'wx2.qq.com'</span>, <span class=\"string\">'webpush2.weixin.qq.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'qq.com'</span>, <span class=\"string\">'webpush.weixin.qq.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web1.wechat.com'</span>, <span class=\"string\">'webpush1.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web2.wechat.com'</span>, <span class=\"string\">'webpush2.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'wechat.com'</span>, <span class=\"string\">'webpush.wechat.com'</span>),</span><br><span class=\"line\">            (<span class=\"string\">'web1.wechatapp.com'</span>, <span class=\"string\">'webpush1.wechatapp.com'</span>),</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        push_uri = base_uri</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (searchUrl, pushUrl) <span class=\"keyword\">in</span> services:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> base_uri.find(searchUrl) &gt;= <span class=\"number\">0</span>:</span><br><span class=\"line\">                push_uri = <span class=\"string\">'https://%s/cgi-bin/mmwebwx-bin'</span> % pushUrl</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># closeQRImage</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> sys.platform.find(<span class=\"string\">'darwin'</span>) &gt;= <span class=\"number\">0</span>:  <span class=\"comment\"># for OSX with Preview</span></span><br><span class=\"line\">            os.system(<span class=\"string\">\"osascript -e 'quit app \\\"Preview\\\"'\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> code == <span class=\"string\">'408'</span>:  <span class=\"comment\"># 超时</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"comment\"># elif code == '400' or code == '500':</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> code</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> skey, wxsid, wxuin, pass_ticket, BaseRequest</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=redirect_uri)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    doc = xml.dom.minidom.parseString(data)</span><br><span class=\"line\">    root = doc.documentElement</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> root.childNodes:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> node.nodeName == <span class=\"string\">'skey'</span>:</span><br><span class=\"line\">            skey = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'wxsid'</span>:</span><br><span class=\"line\">            wxsid = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'wxuin'</span>:</span><br><span class=\"line\">            wxuin = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> node.nodeName == <span class=\"string\">'pass_ticket'</span>:</span><br><span class=\"line\">            pass_ticket = node.childNodes[<span class=\"number\">0</span>].data</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print('skey: %s, wxsid: %s, wxuin: %s, pass_ticket: %s' % (skey, wxsid,</span></span><br><span class=\"line\">    <span class=\"comment\"># wxuin, pass_ticket))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> all((skey, wxsid, wxuin, pass_ticket)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    BaseRequest = &#123;</span><br><span class=\"line\">        <span class=\"string\">'Uin'</span>: int(wxuin),</span><br><span class=\"line\">        <span class=\"string\">'Sid'</span>: wxsid,</span><br><span class=\"line\">        <span class=\"string\">'Skey'</span>: skey,</span><br><span class=\"line\">        <span class=\"string\">'DeviceID'</span>: deviceId,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxinit</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxinit?pass_ticket=%s&amp;skey=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, skey, int(time.time()))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG:</span><br><span class=\"line\">        f = open(os.path.join(os.getcwd(), <span class=\"string\">'webwxinit.json'</span>), <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    data = data.decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">global</span> ContactList, My, SyncKey</span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    ContactList = dic[<span class=\"string\">'ContactList'</span>]</span><br><span class=\"line\">    My = dic[<span class=\"string\">'User'</span>]</span><br><span class=\"line\">    SyncKey = dic[<span class=\"string\">'SyncKey'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'webwxinit'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxgetcontact</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxgetcontact?pass_ticket=%s&amp;skey=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, skey, int(time.time()))</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url)</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> DEBUG:</span><br><span class=\"line\">        f = open(os.path.join(os.getcwd(), <span class=\"string\">'webwxgetcontact.json'</span>), <span class=\"string\">'wb'</span>)</span><br><span class=\"line\">        f.write(data)</span><br><span class=\"line\">        f.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\">    data = data.decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 倒序遍历,不然删除的时候出问题..</span></span><br><span class=\"line\">    SpecialUsers = [<span class=\"string\">\"newsapp\"</span>, <span class=\"string\">\"fmessage\"</span>, <span class=\"string\">\"filehelper\"</span>, <span class=\"string\">\"weibo\"</span>, <span class=\"string\">\"qqmail\"</span>, <span class=\"string\">\"tmessage\"</span>, <span class=\"string\">\"qmessage\"</span>, <span class=\"string\">\"qqsync\"</span>, <span class=\"string\">\"floatbottle\"</span>, <span class=\"string\">\"lbsapp\"</span>, <span class=\"string\">\"shakeapp\"</span>, <span class=\"string\">\"medianote\"</span>, <span class=\"string\">\"qqfriend\"</span>, <span class=\"string\">\"readerapp\"</span>, <span class=\"string\">\"blogapp\"</span>, <span class=\"string\">\"facebookapp\"</span>, <span class=\"string\">\"masssendapp\"</span>,</span><br><span class=\"line\">                    <span class=\"string\">\"meishiapp\"</span>, <span class=\"string\">\"feedsapp\"</span>, <span class=\"string\">\"voip\"</span>, <span class=\"string\">\"blogappweixin\"</span>, <span class=\"string\">\"weixin\"</span>, <span class=\"string\">\"brandsessionholder\"</span>, <span class=\"string\">\"weixinreminder\"</span>, <span class=\"string\">\"wxid_novlwrv3lqwv11\"</span>, <span class=\"string\">\"gh_22b87fa7cb3c\"</span>, <span class=\"string\">\"officialaccounts\"</span>, <span class=\"string\">\"notification_messages\"</span>, <span class=\"string\">\"wxitil\"</span>, <span class=\"string\">\"userexperience_alarm\"</span>]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(MemberList) - <span class=\"number\">1</span>, <span class=\"number\">-1</span>, <span class=\"number\">-1</span>):</span><br><span class=\"line\">        Member = MemberList[i]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'VerifyFlag'</span>] &amp; <span class=\"number\">8</span> != <span class=\"number\">0</span>:  <span class=\"comment\"># 公众号/服务号</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>] <span class=\"keyword\">in</span> SpecialUsers:  <span class=\"comment\"># 特殊账号</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>].find(<span class=\"string\">'@@'</span>) != <span class=\"number\">-1</span>:  <span class=\"comment\"># 群聊</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'UserName'</span>] == My[<span class=\"string\">'UserName'</span>]:  <span class=\"comment\"># 自己</span></span><br><span class=\"line\">            MemberList.remove(Member)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> MemberList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">createChatroom</span><span class=\"params\">(UserNames)</span>:</span></span><br><span class=\"line\">    MemberList = [&#123;<span class=\"string\">'UserName'</span>: UserName&#125; <span class=\"keyword\">for</span> UserName <span class=\"keyword\">in</span> UserNames]</span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxcreatechatroom?pass_ticket=%s&amp;r=%s'</span> % (</span><br><span class=\"line\">            pass_ticket, int(time.time()))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'MemberCount'</span>: len(MemberList),</span><br><span class=\"line\">        <span class=\"string\">'MemberList'</span>: MemberList,</span><br><span class=\"line\">        <span class=\"string\">'Topic'</span>: <span class=\"string\">''</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    ChatRoomName = dic[<span class=\"string\">'ChatRoomName'</span>]</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\">    DeletedList = []</span><br><span class=\"line\">    BlockedList = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">4</span>:  <span class=\"comment\"># 被对方删除了</span></span><br><span class=\"line\">            DeletedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">3</span>:  <span class=\"comment\"># 被加入黑名单</span></span><br><span class=\"line\">            BlockedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'createChatroom'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> ChatRoomName, DeletedList, BlockedList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">deleteMember</span><span class=\"params\">(ChatRoomName, UserNames)</span>:</span></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxupdatechatroom?fun=delmember&amp;pass_ticket=%s'</span> % (pass_ticket)</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'ChatRoomName'</span>: ChatRoomName,</span><br><span class=\"line\">        <span class=\"string\">'DelMemberList'</span>: <span class=\"string\">','</span>.join(UserNames),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'deleteMember'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">addMember</span><span class=\"params\">(ChatRoomName, UserNames)</span>:</span></span><br><span class=\"line\">    url = base_uri + \\</span><br><span class=\"line\">        <span class=\"string\">'/webwxupdatechatroom?fun=addmember&amp;pass_ticket=%s'</span> % (pass_ticket)</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'ChatRoomName'</span>: ChatRoomName,</span><br><span class=\"line\">        <span class=\"string\">'AddMemberList'</span>: <span class=\"string\">','</span>.join(UserNames),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    MemberList = dic[<span class=\"string\">'MemberList'</span>]</span><br><span class=\"line\">    DeletedList = []</span><br><span class=\"line\">    BlockedList = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">4</span>:  <span class=\"comment\"># 被对方删除了</span></span><br><span class=\"line\">            DeletedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> Member[<span class=\"string\">'MemberStatus'</span>] == <span class=\"number\">3</span>:  <span class=\"comment\"># 被加入黑名单</span></span><br><span class=\"line\">            BlockedList.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'addMember'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> DeletedList, BlockedList</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">syncKey</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    SyncKeyItems = [<span class=\"string\">'%s_%s'</span> % (item[<span class=\"string\">'Key'</span>], item[<span class=\"string\">'Val'</span>])</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> SyncKey[<span class=\"string\">'List'</span>]]</span><br><span class=\"line\">    SyncKeyStr = <span class=\"string\">'|'</span>.join(SyncKeyItems)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> SyncKeyStr</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">syncCheck</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    url = push_uri + <span class=\"string\">'/synccheck?'</span></span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'skey'</span>: BaseRequest[<span class=\"string\">'Skey'</span>],</span><br><span class=\"line\">        <span class=\"string\">'sid'</span>: BaseRequest[<span class=\"string\">'Sid'</span>],</span><br><span class=\"line\">        <span class=\"string\">'uin'</span>: BaseRequest[<span class=\"string\">'Uin'</span>],</span><br><span class=\"line\">        <span class=\"string\">'deviceId'</span>: BaseRequest[<span class=\"string\">'DeviceID'</span>],</span><br><span class=\"line\">        <span class=\"string\">'synckey'</span>: syncKey(),</span><br><span class=\"line\">        <span class=\"string\">'r'</span>: int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url + urlencode(params))</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># window.synccheck=&#123;retcode:\"0\",selector:\"2\"&#125;</span></span><br><span class=\"line\">    regx = <span class=\"string\">r'window.synccheck=&#123;retcode:\"(\\d+)\",selector:\"(\\d+)\"&#125;'</span></span><br><span class=\"line\">    pm = re.search(regx, data)</span><br><span class=\"line\"></span><br><span class=\"line\">    retcode = pm.group(<span class=\"number\">1</span>)</span><br><span class=\"line\">    selector = pm.group(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> selector</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">webwxsync</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">global</span> SyncKey</span><br><span class=\"line\"></span><br><span class=\"line\">    url = base_uri + <span class=\"string\">'/webwxsync?lang=zh_CN&amp;skey=%s&amp;sid=%s&amp;pass_ticket=%s'</span> % (</span><br><span class=\"line\">        BaseRequest[<span class=\"string\">'Skey'</span>], BaseRequest[<span class=\"string\">'Sid'</span>], quote_plus(pass_ticket))</span><br><span class=\"line\">    params = &#123;</span><br><span class=\"line\">        <span class=\"string\">'BaseRequest'</span>: BaseRequest,</span><br><span class=\"line\">        <span class=\"string\">'SyncKey'</span>: SyncKey,</span><br><span class=\"line\">        <span class=\"string\">'rr'</span>: ~int(time.time()),</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    request = getRequest(url=url, data=json.dumps(params))</span><br><span class=\"line\">    request.add_header(<span class=\"string\">'ContentType'</span>, <span class=\"string\">'application/json; charset=UTF-8'</span>)</span><br><span class=\"line\">    response = wdf_urllib.urlopen(request)</span><br><span class=\"line\">    data = response.read().decode(<span class=\"string\">'utf-8'</span>, <span class=\"string\">'replace'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># print(data)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    dic = json.loads(data)</span><br><span class=\"line\">    SyncKey = dic[<span class=\"string\">'SyncKey'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    state = responseState(<span class=\"string\">'webwxsync'</span>, dic[<span class=\"string\">'BaseResponse'</span>])</span><br><span class=\"line\">    <span class=\"keyword\">return</span> state</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">heartBeatLoop</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</span><br><span class=\"line\">        selector = syncCheck()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> selector != <span class=\"string\">'0'</span>:</span><br><span class=\"line\">            webwxsync()</span><br><span class=\"line\">        time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\">        opener = wdf_urllib.build_opener(</span><br><span class=\"line\">            wdf_urllib.HTTPCookieProcessor(CookieJar()))</span><br><span class=\"line\">        opener.addheaders = [</span><br><span class=\"line\">            (<span class=\"string\">'User-agent'</span>, <span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.125 Safari/537.36'</span>)]</span><br><span class=\"line\">        wdf_urllib.install_opener(opener)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> getUUID():</span><br><span class=\"line\">        print(<span class=\"string\">'获取uuid失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'正在获取二维码图片...'</span>)</span><br><span class=\"line\">    showQRImage()</span><br><span class=\"line\">    time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> waitForLogin() != <span class=\"string\">'200'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">    os.remove(QRImagePath)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> login():</span><br><span class=\"line\">        print(<span class=\"string\">'登录失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> webwxinit():</span><br><span class=\"line\">        print(<span class=\"string\">'初始化失败'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\"></span><br><span class=\"line\">    MemberList = webwxgetcontact()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'开启心跳线程'</span>)</span><br><span class=\"line\">    thread.start_new_thread(heartBeatLoop, ())</span><br><span class=\"line\"></span><br><span class=\"line\">    MemberCount = len(MemberList)</span><br><span class=\"line\">    print(<span class=\"string\">'通讯录共%s位好友'</span> % MemberCount)</span><br><span class=\"line\"></span><br><span class=\"line\">    ChatRoomName = <span class=\"string\">''</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    d = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> Member <span class=\"keyword\">in</span> MemberList:</span><br><span class=\"line\">        d[Member[<span class=\"string\">'UserName'</span>]] = (Member[<span class=\"string\">'NickName'</span>].encode(</span><br><span class=\"line\">            <span class=\"string\">'utf-8'</span>), Member[<span class=\"string\">'RemarkName'</span>].encode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    print(<span class=\"string\">'开始查找...'</span>)</span><br><span class=\"line\">    group_num = int(math.ceil(MemberCount / float(MAX_GROUP_NUM)))</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, group_num):</span><br><span class=\"line\">        UserNames = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(<span class=\"number\">0</span>, MAX_GROUP_NUM):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i * MAX_GROUP_NUM + j &gt;= MemberCount:</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            Member = MemberList[i * MAX_GROUP_NUM + j]</span><br><span class=\"line\">            UserNames.append(Member[<span class=\"string\">'UserName'</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 新建群组/添加成员</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ChatRoomName == <span class=\"string\">''</span>:</span><br><span class=\"line\">            (ChatRoomName, DeletedList, BlockedList) = createChatroom(</span><br><span class=\"line\">                UserNames)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            (DeletedList, BlockedList) = addMember(ChatRoomName, UserNames)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># todo BlockedList 被拉黑列表</span></span><br><span class=\"line\"></span><br><span class=\"line\">        DeletedCount = len(DeletedList)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> DeletedCount &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">            result += DeletedList</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 删除成员</span></span><br><span class=\"line\">        deleteMember(ChatRoomName, UserNames)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 进度条</span></span><br><span class=\"line\">        progress = MAX_PROGRESS_LEN * (i + <span class=\"number\">1</span>) / group_num</span><br><span class=\"line\">        print(<span class=\"string\">'['</span>, <span class=\"string\">'#'</span> * progress, <span class=\"string\">'-'</span> * (MAX_PROGRESS_LEN - progress), <span class=\"string\">']'</span>, end=<span class=\"string\">' '</span>)</span><br><span class=\"line\">        print(<span class=\"string\">'新发现你被%d人删除'</span> % DeletedCount)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(DeletedCount):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> d[DeletedList[i]][<span class=\"number\">1</span>] != <span class=\"string\">''</span>:</span><br><span class=\"line\">                print(d[DeletedList[i]][<span class=\"number\">0</span>] + <span class=\"string\">'(%s)'</span> % d[DeletedList[i]][<span class=\"number\">1</span>])</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(d[DeletedList[i]][<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> i != group_num - <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">'正在继续查找,请耐心等待...'</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 下一次进行接口调用需要等待的时间</span></span><br><span class=\"line\">            time.sleep(INTERFACE_CALLING_INTERVAL)</span><br><span class=\"line\">    <span class=\"comment\"># todo 删除群组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'\\n结果汇总完毕,20s后可重试...'</span>)</span><br><span class=\"line\">    resultNames = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> r <span class=\"keyword\">in</span> result:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d[r][<span class=\"number\">1</span>] != <span class=\"string\">''</span>:</span><br><span class=\"line\">            resultNames.append(d[r][<span class=\"number\">0</span>] + <span class=\"string\">'(%s)'</span> % d[r][<span class=\"number\">1</span>])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            resultNames.append(d[r][<span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'---------- 被删除的好友列表(共%d人) ----------'</span> % len(result))</span><br><span class=\"line\">    <span class=\"comment\"># 过滤emoji</span></span><br><span class=\"line\">    resultNames = map(<span class=\"keyword\">lambda</span> x: re.sub(<span class=\"string\">r'&lt;span.+/span&gt;'</span>, <span class=\"string\">''</span>, x), resultNames)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> len(resultNames):</span><br><span class=\"line\">        print(<span class=\"string\">'\\n'</span>.join(resultNames))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无\"</span>)</span><br><span class=\"line\">    print(<span class=\"string\">'---------------------------------------------'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># windows下编码问题修复</span></span><br><span class=\"line\"><span class=\"comment\"># http://blog.csdn.net/heyuxuanzee/article/details/8442718</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UnicodeStreamFilter</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, target)</span>:</span></span><br><span class=\"line\">        self.target = target</span><br><span class=\"line\">        self.encoding = <span class=\"string\">'utf-8'</span></span><br><span class=\"line\">        self.errors = <span class=\"string\">'replace'</span></span><br><span class=\"line\">        self.encode_to = self.target.encoding</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write</span><span class=\"params\">(self, s)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> type(s) == str:</span><br><span class=\"line\">            s = s.decode(<span class=\"string\">'utf-8'</span>)</span><br><span class=\"line\">        s = s.encode(self.encode_to, self.errors).decode(self.encode_to)</span><br><span class=\"line\">        self.target.write(s)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> sys.stdout.encoding == <span class=\"string\">'cp936'</span>:</span><br><span class=\"line\">    sys.stdout = UnicodeStreamFilter(sys.stdout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    print(<span class=\"string\">'本程序的查询结果可能会引起一些心理上的不适,请小心使用...'</span>)</span><br><span class=\"line\">    main()</span><br><span class=\"line\">    print(<span class=\"string\">'回车键退出...'</span>)</span><br></pre></td></tr></table></figure>\n<p>按照指示做即可。</p>"},{"title":"知道Android 中Gradle 的这些技巧，提升编译构建速度","date":"2016-06-07T06:58:45.000Z","_content":"\n现在基本上都使用Android Studio 来开发，使用Gradle 构建项目，Gradle 的种种优点，多渠道打包方便，依赖类库统一管理，基于Groovy 的DSL 语言简洁方便。这些好处在我们开发省了我们不少事，但是唯一的问题就是编译构建运行的时候特别慢，甚至是致命的，最后发现加班的时间都浪费在编译构建上（说多了都是泪）。\n\n下面有几个技巧，让你你的Android Gradle 运行，编译更加快速。\n\n>原文链接：[http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/](http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/)\n\n\n<!-- more -->\n\n## 设置代理\n\n因为依赖要从Jcenter/Maven 仓库上下载，但是网络还是时不时地抽风。如果你使用VPN 或者全局代码可以从本地网络配置，就不需要在Android Studio 配置了（好像并没有什么用？）。给Gradle 设置代码需要在根目录的gradle.properties 配置。\n\n```\n// 举例ShadowSocket\nsystemProp.http.proxyHost=127.0.0.1\nsystemProp.http.proxyPort=1080\nsystemProp.https.proxyHost=127.0.0.1\nsystemProp.https.proxyPort=1080\n\n```\n如果你用ShadowSocket，记得在本地开启。如果你使用其他代理软件，也类似，会有主机和端口。\n\n## 更新Gradle,设置离线状态\n\nAndroid Studio 的版本一般都跟随着Gradle 的版本，在安装目录的根目录有个gradle 目录，就是最新版，我们可以在设置中打开Gradle，选择Use local gradle distribution，然后选择Gradle 的目录即可，这样就不会每次根据项目中./gradle/xxx 中的gradle 版本每次再下载。理论上Gradle 的版本越新构建运行越快，也只是理论上，所以推荐稳定版的版本。\n\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480c56owej20z50dedj1.jpg)\n\n如果需要使用命令行编译，可以配置—daemon —parallel —offline。\n\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480znt81ij20z50dutd3.jpg)\n\n## 守护进程，并行编译\n\n在项目的根目录中有一个gradle.properties 文件，\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480bomjc0j20ry0am42c.jpg)\n\norg.gradle.daemon=true 就是让你让你编译时使用守护进程。\n\norg.gradle.parallel=true 使用并行编译\n\norg.gradle.jvmargs=-Xmx2048m JVM最大允许分配的堆内存，按需分配\n\n-XX:MaxPermSize=512m JVM最大允许分配的非堆内存，按需分配\n\n当然你也可以在下面的目录下面创建`gradle.properties`,来配置全局的属性，在所有的项目中起作用。\n    `/home//.gradle/`(Linux)\n    `/Users//.gradle/`(Mac)\n    `C:\\Users\\\\.gradle`(Windows)\n当然也可以修改xxx\\android studio 安装目录\\bin\\studio64.exe.vmoptions 文件来配置JVM 的相关的参数。\n\n开发使用SDK=21\n\n```\nandroid {\n\t...\n\n    productFlavors {\n        dev {\n            minSdkVersion 21\n        }\n\n        release {\n            minSdkVersion 14\n        }\n    }\n}\n\n```\n我们都知道当API 不小于21，使用 ART，在 Build 时只做 class to dex，不做 mergeing dex，会省下大量的时间。\n\n## 使用aar依赖\n我们都知道我们或多或少使用第三方的开源库或者工具，还有自己封装的类库，但是一次编译的时候在Library Module 目录下， 打开build/outputs/aar，就有生成的aar 文件。把他放在libs 目录下，在build.gradle 添加。\n\n```\nallprojects {\n   repositories {\n      jcenter()\n      flatDir {\n        dirs 'libs'\n      }\n   }\n}\n\ndependencies {\n    compile(name:'cards', ext:'aar')\n}\n```\n\n**当然也可以这样添加**\n\n我们可以新建一个jar/aar Module，选择aar 文件，然后新建的Module 目录下，就会多了个build.gradle 和xxx.aar。\n\n```\nconfigurations.maybeCreate(\"default\")\nartifacts.add(\"default\", file('mylibrary-debug.aar'))\n```\n\n然后在我们的Module 中这样引用即可。\n\n```\ncompile project(':mylibrary-debug')\n```\n## dexOptions\n\n```\nclasspath 'com.android.tools.build:gradle:2.0.0-alpha9'\n```\n```\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\norg.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=512m\n```\n\n```\ndexOptions {\n    preDexLibraries true\n    javaMaxHeapSize \"3g\"\n    incremental true\n    dexInProcess = true\n}\n```\n\n这里是参考stackoverflow 上的，好像有Bug，作者本人试了Android gradle 的版本至少是2.0.0-alpha9，然后配置一些参数。这里为JVM 设置4G，给Dex 设置3G。\n\n\n## 参考\n[android - To run dex in process, the Gradle daemon needs a larger heap. It currently has 910 MB | Stack Overflow](http://stackoverflow.com/questions/35224255/to-run-dex-in-process-the-gradle-daemon-needs-a-larger-heap-it-currently-has-9)\n\n[How to manually include external aar package using new Gradle Android Build System | Stack Overflow](http://stackoverflow.com/questions/16682847/how-to-manually-include-external-aar-package-using-new-gradle-android-build-syst)\n\n[优化android studio编译效率的方法 | 开发技术前线](http://www.devtf.cn/?p=585)\n\n[加速Android Studio/Gradle构建 | 码农明明桑](http://blog.isming.me/2015/03/18/android-build-speed-up/)\n\n[android - Adding local .aar files to my gradle build | Stack Overflow](http://stackoverflow.com/questions/21882804/adding-local-aar-files-to-my-gradle-build)\n\n[Android模块化编程之引用本地的aar | Stormzhang](http://stormzhang.com/android/2015/03/01/android-reference-local-aar/)\n","source":"_posts/知道Android-中Gradle-的这些技巧，提升编译构建速度.md","raw":"---\ntitle: 知道Android 中Gradle 的这些技巧，提升编译构建速度\ndate: 2016-06-07 14:58:45\ntags: [android]\ncategories: android\n---\n\n现在基本上都使用Android Studio 来开发，使用Gradle 构建项目，Gradle 的种种优点，多渠道打包方便，依赖类库统一管理，基于Groovy 的DSL 语言简洁方便。这些好处在我们开发省了我们不少事，但是唯一的问题就是编译构建运行的时候特别慢，甚至是致命的，最后发现加班的时间都浪费在编译构建上（说多了都是泪）。\n\n下面有几个技巧，让你你的Android Gradle 运行，编译更加快速。\n\n>原文链接：[http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/](http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/)\n\n\n<!-- more -->\n\n## 设置代理\n\n因为依赖要从Jcenter/Maven 仓库上下载，但是网络还是时不时地抽风。如果你使用VPN 或者全局代码可以从本地网络配置，就不需要在Android Studio 配置了（好像并没有什么用？）。给Gradle 设置代码需要在根目录的gradle.properties 配置。\n\n```\n// 举例ShadowSocket\nsystemProp.http.proxyHost=127.0.0.1\nsystemProp.http.proxyPort=1080\nsystemProp.https.proxyHost=127.0.0.1\nsystemProp.https.proxyPort=1080\n\n```\n如果你用ShadowSocket，记得在本地开启。如果你使用其他代理软件，也类似，会有主机和端口。\n\n## 更新Gradle,设置离线状态\n\nAndroid Studio 的版本一般都跟随着Gradle 的版本，在安装目录的根目录有个gradle 目录，就是最新版，我们可以在设置中打开Gradle，选择Use local gradle distribution，然后选择Gradle 的目录即可，这样就不会每次根据项目中./gradle/xxx 中的gradle 版本每次再下载。理论上Gradle 的版本越新构建运行越快，也只是理论上，所以推荐稳定版的版本。\n\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480c56owej20z50dedj1.jpg)\n\n如果需要使用命令行编译，可以配置—daemon —parallel —offline。\n\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480znt81ij20z50dutd3.jpg)\n\n## 守护进程，并行编译\n\n在项目的根目录中有一个gradle.properties 文件，\n![image](http://ww3.sinaimg.cn/large/68622377gw1f480bomjc0j20ry0am42c.jpg)\n\norg.gradle.daemon=true 就是让你让你编译时使用守护进程。\n\norg.gradle.parallel=true 使用并行编译\n\norg.gradle.jvmargs=-Xmx2048m JVM最大允许分配的堆内存，按需分配\n\n-XX:MaxPermSize=512m JVM最大允许分配的非堆内存，按需分配\n\n当然你也可以在下面的目录下面创建`gradle.properties`,来配置全局的属性，在所有的项目中起作用。\n    `/home//.gradle/`(Linux)\n    `/Users//.gradle/`(Mac)\n    `C:\\Users\\\\.gradle`(Windows)\n当然也可以修改xxx\\android studio 安装目录\\bin\\studio64.exe.vmoptions 文件来配置JVM 的相关的参数。\n\n开发使用SDK=21\n\n```\nandroid {\n\t...\n\n    productFlavors {\n        dev {\n            minSdkVersion 21\n        }\n\n        release {\n            minSdkVersion 14\n        }\n    }\n}\n\n```\n我们都知道当API 不小于21，使用 ART，在 Build 时只做 class to dex，不做 mergeing dex，会省下大量的时间。\n\n## 使用aar依赖\n我们都知道我们或多或少使用第三方的开源库或者工具，还有自己封装的类库，但是一次编译的时候在Library Module 目录下， 打开build/outputs/aar，就有生成的aar 文件。把他放在libs 目录下，在build.gradle 添加。\n\n```\nallprojects {\n   repositories {\n      jcenter()\n      flatDir {\n        dirs 'libs'\n      }\n   }\n}\n\ndependencies {\n    compile(name:'cards', ext:'aar')\n}\n```\n\n**当然也可以这样添加**\n\n我们可以新建一个jar/aar Module，选择aar 文件，然后新建的Module 目录下，就会多了个build.gradle 和xxx.aar。\n\n```\nconfigurations.maybeCreate(\"default\")\nartifacts.add(\"default\", file('mylibrary-debug.aar'))\n```\n\n然后在我们的Module 中这样引用即可。\n\n```\ncompile project(':mylibrary-debug')\n```\n## dexOptions\n\n```\nclasspath 'com.android.tools.build:gradle:2.0.0-alpha9'\n```\n```\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\norg.gradle.jvmargs=-Xmx4g -XX:MaxPermSize=512m\n```\n\n```\ndexOptions {\n    preDexLibraries true\n    javaMaxHeapSize \"3g\"\n    incremental true\n    dexInProcess = true\n}\n```\n\n这里是参考stackoverflow 上的，好像有Bug，作者本人试了Android gradle 的版本至少是2.0.0-alpha9，然后配置一些参数。这里为JVM 设置4G，给Dex 设置3G。\n\n\n## 参考\n[android - To run dex in process, the Gradle daemon needs a larger heap. It currently has 910 MB | Stack Overflow](http://stackoverflow.com/questions/35224255/to-run-dex-in-process-the-gradle-daemon-needs-a-larger-heap-it-currently-has-9)\n\n[How to manually include external aar package using new Gradle Android Build System | Stack Overflow](http://stackoverflow.com/questions/16682847/how-to-manually-include-external-aar-package-using-new-gradle-android-build-syst)\n\n[优化android studio编译效率的方法 | 开发技术前线](http://www.devtf.cn/?p=585)\n\n[加速Android Studio/Gradle构建 | 码农明明桑](http://blog.isming.me/2015/03/18/android-build-speed-up/)\n\n[android - Adding local .aar files to my gradle build | Stack Overflow](http://stackoverflow.com/questions/21882804/adding-local-aar-files-to-my-gradle-build)\n\n[Android模块化编程之引用本地的aar | Stormzhang](http://stormzhang.com/android/2015/03/01/android-reference-local-aar/)\n","slug":"知道Android-中Gradle-的这些技巧，提升编译构建速度","published":1,"updated":"2016-06-07T07:16:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uulj003kpev2g2qal2k5","content":"<p>现在基本上都使用Android Studio 来开发，使用Gradle 构建项目，Gradle 的种种优点，多渠道打包方便，依赖类库统一管理，基于Groovy 的DSL 语言简洁方便。这些好处在我们开发省了我们不少事，但是唯一的问题就是编译构建运行的时候特别慢，甚至是致命的，最后发现加班的时间都浪费在编译构建上（说多了都是泪）。</p>\n<p>下面有几个技巧，让你你的Android Gradle 运行，编译更加快速。</p>\n<blockquote>\n<p>原文链接：<a href=\"http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/\" target=\"_blank\" rel=\"noopener\">http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/</a></p>\n</blockquote>\n<a id=\"more\"></a>\n<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><p>因为依赖要从Jcenter/Maven 仓库上下载，但是网络还是时不时地抽风。如果你使用VPN 或者全局代码可以从本地网络配置，就不需要在Android Studio 配置了（好像并没有什么用？）。给Gradle 设置代码需要在根目录的gradle.properties 配置。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 举例ShadowSocket</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.http</span><span class=\"selector-class\">.proxyHost</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.http</span><span class=\"selector-class\">.proxyPort</span>=<span class=\"number\">1080</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.https</span><span class=\"selector-class\">.proxyHost</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.https</span><span class=\"selector-class\">.proxyPort</span>=<span class=\"number\">1080</span></span><br></pre></td></tr></table></figure>\n<p>如果你用ShadowSocket，记得在本地开启。如果你使用其他代理软件，也类似，会有主机和端口。</p>\n<h2 id=\"更新Gradle-设置离线状态\"><a href=\"#更新Gradle-设置离线状态\" class=\"headerlink\" title=\"更新Gradle,设置离线状态\"></a>更新Gradle,设置离线状态</h2><p>Android Studio 的版本一般都跟随着Gradle 的版本，在安装目录的根目录有个gradle 目录，就是最新版，我们可以在设置中打开Gradle，选择Use local gradle distribution，然后选择Gradle 的目录即可，这样就不会每次根据项目中./gradle/xxx 中的gradle 版本每次再下载。理论上Gradle 的版本越新构建运行越快，也只是理论上，所以推荐稳定版的版本。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480c56owej20z50dedj1.jpg\" alt=\"image\"></p>\n<p>如果需要使用命令行编译，可以配置—daemon —parallel —offline。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480znt81ij20z50dutd3.jpg\" alt=\"image\"></p>\n<h2 id=\"守护进程，并行编译\"><a href=\"#守护进程，并行编译\" class=\"headerlink\" title=\"守护进程，并行编译\"></a>守护进程，并行编译</h2><p>在项目的根目录中有一个gradle.properties 文件，<br><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480bomjc0j20ry0am42c.jpg\" alt=\"image\"></p>\n<p>org.gradle.daemon=true 就是让你让你编译时使用守护进程。</p>\n<p>org.gradle.parallel=true 使用并行编译</p>\n<p>org.gradle.jvmargs=-Xmx2048m JVM最大允许分配的堆内存，按需分配</p>\n<p>-XX:MaxPermSize=512m JVM最大允许分配的非堆内存，按需分配</p>\n<p>当然你也可以在下面的目录下面创建<code>gradle.properties</code>,来配置全局的属性，在所有的项目中起作用。<br>    <code>/home//.gradle/</code>(Linux)<br>    <code>/Users//.gradle/</code>(Mac)<br>    <code>C:\\Users\\\\.gradle</code>(Windows)<br>当然也可以修改xxx\\android studio 安装目录\\bin\\studio64.exe.vmoptions 文件来配置JVM 的相关的参数。</p>\n<p>开发使用SDK=21</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\">android </span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\">productFlavors </span>&#123;</span><br><span class=\"line\">        <span class=\"class\">dev </span>&#123;</span><br><span class=\"line\">            minSdkVersion <span class=\"number\">21</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"class\">release </span>&#123;</span><br><span class=\"line\">            minSdkVersion <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们都知道当API 不小于21，使用 ART，在 Build 时只做 class to dex，不做 mergeing dex，会省下大量的时间。</p>\n<h2 id=\"使用aar依赖\"><a href=\"#使用aar依赖\" class=\"headerlink\" title=\"使用aar依赖\"></a>使用aar依赖</h2><p>我们都知道我们或多或少使用第三方的开源库或者工具，还有自己封装的类库，但是一次编译的时候在Library Module 目录下， 打开build/outputs/aar，就有生成的aar 文件。把他放在libs 目录下，在build.gradle 添加。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">      jcenter()</span><br><span class=\"line\">      <span class=\"keyword\">flatDir</span> &#123;</span><br><span class=\"line\">        dirs <span class=\"string\">'libs'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">compile</span>(name:<span class=\"string\">'cards'</span>, ext:<span class=\"string\">'aar'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>当然也可以这样添加</strong></p>\n<p>我们可以新建一个jar/aar Module，选择aar 文件，然后新建的Module 目录下，就会多了个build.gradle 和xxx.aar。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">configurations</span>.maybeCreate(<span class=\"string\">\"default\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">artifacts</span>.add(<span class=\"string\">\"default\"</span>, <span class=\"keyword\">file</span>(<span class=\"string\">'mylibrary-debug.aar'</span>))</span><br></pre></td></tr></table></figure>\n<p>然后在我们的Module 中这样引用即可。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">project</span>(<span class=\"string\">':mylibrary-debug'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"dexOptions\"><a href=\"#dexOptions\" class=\"headerlink\" title=\"dexOptions\"></a>dexOptions</h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">classpath</span> <span class=\"string\">'com.android.tools.build:gradle:2.0.0-alpha9'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Default value: -Xmx10248m -XX:MaxPermSize=256m</span></span><br><span class=\"line\">org.gradle.<span class=\"attribute\">jvmargs</span>=-Xmx4g -XX:<span class=\"attribute\">MaxPermSize</span>=512m</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">dexOptions</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">preDexLibraries</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    javaMaxHeapSize <span class=\"string\">\"3g\"</span></span><br><span class=\"line\">    incremental <span class=\"literal\">true</span></span><br><span class=\"line\">    dexInProcess = <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里是参考stackoverflow 上的，好像有Bug，作者本人试了Android gradle 的版本至少是2.0.0-alpha9，然后配置一些参数。这里为JVM 设置4G，给Dex 设置3G。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://stackoverflow.com/questions/35224255/to-run-dex-in-process-the-gradle-daemon-needs-a-larger-heap-it-currently-has-9\" target=\"_blank\" rel=\"noopener\">android - To run dex in process, the Gradle daemon needs a larger heap. It currently has 910 MB | Stack Overflow</a></p>\n<p><a href=\"http://stackoverflow.com/questions/16682847/how-to-manually-include-external-aar-package-using-new-gradle-android-build-syst\" target=\"_blank\" rel=\"noopener\">How to manually include external aar package using new Gradle Android Build System | Stack Overflow</a></p>\n<p><a href=\"http://www.devtf.cn/?p=585\" target=\"_blank\" rel=\"noopener\">优化android studio编译效率的方法 | 开发技术前线</a></p>\n<p><a href=\"http://blog.isming.me/2015/03/18/android-build-speed-up/\" target=\"_blank\" rel=\"noopener\">加速Android Studio/Gradle构建 | 码农明明桑</a></p>\n<p><a href=\"http://stackoverflow.com/questions/21882804/adding-local-aar-files-to-my-gradle-build\" target=\"_blank\" rel=\"noopener\">android - Adding local .aar files to my gradle build | Stack Overflow</a></p>\n<p><a href=\"http://stormzhang.com/android/2015/03/01/android-reference-local-aar/\" target=\"_blank\" rel=\"noopener\">Android模块化编程之引用本地的aar | Stormzhang</a></p>\n","site":{"data":{}},"excerpt":"<p>现在基本上都使用Android Studio 来开发，使用Gradle 构建项目，Gradle 的种种优点，多渠道打包方便，依赖类库统一管理，基于Groovy 的DSL 语言简洁方便。这些好处在我们开发省了我们不少事，但是唯一的问题就是编译构建运行的时候特别慢，甚至是致命的，最后发现加班的时间都浪费在编译构建上（说多了都是泪）。</p>\n<p>下面有几个技巧，让你你的Android Gradle 运行，编译更加快速。</p>\n<blockquote>\n<p>原文链接：<a href=\"http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/\" target=\"_blank\" rel=\"noopener\">http://tikitoo.github.io/2016/05/26/android-studio-gradle-build-run-faster/</a></p>\n</blockquote>","more":"<h2 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h2><p>因为依赖要从Jcenter/Maven 仓库上下载，但是网络还是时不时地抽风。如果你使用VPN 或者全局代码可以从本地网络配置，就不需要在Android Studio 配置了（好像并没有什么用？）。给Gradle 设置代码需要在根目录的gradle.properties 配置。</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 举例ShadowSocket</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.http</span><span class=\"selector-class\">.proxyHost</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.http</span><span class=\"selector-class\">.proxyPort</span>=<span class=\"number\">1080</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.https</span><span class=\"selector-class\">.proxyHost</span>=<span class=\"number\">127.0</span>.<span class=\"number\">0.1</span></span><br><span class=\"line\">systemProp<span class=\"selector-class\">.https</span><span class=\"selector-class\">.proxyPort</span>=<span class=\"number\">1080</span></span><br></pre></td></tr></table></figure>\n<p>如果你用ShadowSocket，记得在本地开启。如果你使用其他代理软件，也类似，会有主机和端口。</p>\n<h2 id=\"更新Gradle-设置离线状态\"><a href=\"#更新Gradle-设置离线状态\" class=\"headerlink\" title=\"更新Gradle,设置离线状态\"></a>更新Gradle,设置离线状态</h2><p>Android Studio 的版本一般都跟随着Gradle 的版本，在安装目录的根目录有个gradle 目录，就是最新版，我们可以在设置中打开Gradle，选择Use local gradle distribution，然后选择Gradle 的目录即可，这样就不会每次根据项目中./gradle/xxx 中的gradle 版本每次再下载。理论上Gradle 的版本越新构建运行越快，也只是理论上，所以推荐稳定版的版本。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480c56owej20z50dedj1.jpg\" alt=\"image\"></p>\n<p>如果需要使用命令行编译，可以配置—daemon —parallel —offline。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480znt81ij20z50dutd3.jpg\" alt=\"image\"></p>\n<h2 id=\"守护进程，并行编译\"><a href=\"#守护进程，并行编译\" class=\"headerlink\" title=\"守护进程，并行编译\"></a>守护进程，并行编译</h2><p>在项目的根目录中有一个gradle.properties 文件，<br><img src=\"http://ww3.sinaimg.cn/large/68622377gw1f480bomjc0j20ry0am42c.jpg\" alt=\"image\"></p>\n<p>org.gradle.daemon=true 就是让你让你编译时使用守护进程。</p>\n<p>org.gradle.parallel=true 使用并行编译</p>\n<p>org.gradle.jvmargs=-Xmx2048m JVM最大允许分配的堆内存，按需分配</p>\n<p>-XX:MaxPermSize=512m JVM最大允许分配的非堆内存，按需分配</p>\n<p>当然你也可以在下面的目录下面创建<code>gradle.properties</code>,来配置全局的属性，在所有的项目中起作用。<br>    <code>/home//.gradle/</code>(Linux)<br>    <code>/Users//.gradle/</code>(Mac)<br>    <code>C:\\Users\\\\.gradle</code>(Windows)<br>当然也可以修改xxx\\android studio 安装目录\\bin\\studio64.exe.vmoptions 文件来配置JVM 的相关的参数。</p>\n<p>开发使用SDK=21</p>\n<figure class=\"highlight dts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\">android </span>&#123;</span><br><span class=\"line\">\t...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\">productFlavors </span>&#123;</span><br><span class=\"line\">        <span class=\"class\">dev </span>&#123;</span><br><span class=\"line\">            minSdkVersion <span class=\"number\">21</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"class\">release </span>&#123;</span><br><span class=\"line\">            minSdkVersion <span class=\"number\">14</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>我们都知道当API 不小于21，使用 ART，在 Build 时只做 class to dex，不做 mergeing dex，会省下大量的时间。</p>\n<h2 id=\"使用aar依赖\"><a href=\"#使用aar依赖\" class=\"headerlink\" title=\"使用aar依赖\"></a>使用aar依赖</h2><p>我们都知道我们或多或少使用第三方的开源库或者工具，还有自己封装的类库，但是一次编译的时候在Library Module 目录下， 打开build/outputs/aar，就有生成的aar 文件。把他放在libs 目录下，在build.gradle 添加。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">allprojects</span> &#123;</span><br><span class=\"line\">   <span class=\"keyword\">repositories</span> &#123;</span><br><span class=\"line\">      jcenter()</span><br><span class=\"line\">      <span class=\"keyword\">flatDir</span> &#123;</span><br><span class=\"line\">        dirs <span class=\"string\">'libs'</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">dependencies</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">compile</span>(name:<span class=\"string\">'cards'</span>, ext:<span class=\"string\">'aar'</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>当然也可以这样添加</strong></p>\n<p>我们可以新建一个jar/aar Module，选择aar 文件，然后新建的Module 目录下，就会多了个build.gradle 和xxx.aar。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">configurations</span>.maybeCreate(<span class=\"string\">\"default\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">artifacts</span>.add(<span class=\"string\">\"default\"</span>, <span class=\"keyword\">file</span>(<span class=\"string\">'mylibrary-debug.aar'</span>))</span><br></pre></td></tr></table></figure>\n<p>然后在我们的Module 中这样引用即可。</p>\n<figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">compile</span> <span class=\"keyword\">project</span>(<span class=\"string\">':mylibrary-debug'</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"dexOptions\"><a href=\"#dexOptions\" class=\"headerlink\" title=\"dexOptions\"></a>dexOptions</h2><figure class=\"highlight gradle\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">classpath</span> <span class=\"string\">'com.android.tools.build:gradle:2.0.0-alpha9'</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Default value: -Xmx10248m -XX:MaxPermSize=256m</span></span><br><span class=\"line\">org.gradle.<span class=\"attribute\">jvmargs</span>=-Xmx4g -XX:<span class=\"attribute\">MaxPermSize</span>=512m</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">dexOptions</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">preDexLibraries</span> <span class=\"literal\">true</span></span><br><span class=\"line\">    javaMaxHeapSize <span class=\"string\">\"3g\"</span></span><br><span class=\"line\">    incremental <span class=\"literal\">true</span></span><br><span class=\"line\">    dexInProcess = <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里是参考stackoverflow 上的，好像有Bug，作者本人试了Android gradle 的版本至少是2.0.0-alpha9，然后配置一些参数。这里为JVM 设置4G，给Dex 设置3G。</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://stackoverflow.com/questions/35224255/to-run-dex-in-process-the-gradle-daemon-needs-a-larger-heap-it-currently-has-9\" target=\"_blank\" rel=\"noopener\">android - To run dex in process, the Gradle daemon needs a larger heap. It currently has 910 MB | Stack Overflow</a></p>\n<p><a href=\"http://stackoverflow.com/questions/16682847/how-to-manually-include-external-aar-package-using-new-gradle-android-build-syst\" target=\"_blank\" rel=\"noopener\">How to manually include external aar package using new Gradle Android Build System | Stack Overflow</a></p>\n<p><a href=\"http://www.devtf.cn/?p=585\" target=\"_blank\" rel=\"noopener\">优化android studio编译效率的方法 | 开发技术前线</a></p>\n<p><a href=\"http://blog.isming.me/2015/03/18/android-build-speed-up/\" target=\"_blank\" rel=\"noopener\">加速Android Studio/Gradle构建 | 码农明明桑</a></p>\n<p><a href=\"http://stackoverflow.com/questions/21882804/adding-local-aar-files-to-my-gradle-build\" target=\"_blank\" rel=\"noopener\">android - Adding local .aar files to my gradle build | Stack Overflow</a></p>\n<p><a href=\"http://stormzhang.com/android/2015/03/01/android-reference-local-aar/\" target=\"_blank\" rel=\"noopener\">Android模块化编程之引用本地的aar | Stormzhang</a></p>"},{"title":"编程中的命名设计那点事","date":"2016-05-30T04:56:30.000Z","_content":"\n# 编程中的命名设计那点事\n\n在我开始设计系统的时候，我会花去很多时间去设计命名，因为好的命名和好的设计是分不开的。\n```\nIn the beginning was the Word, and the Word was with God, and the Word was God\n太初有道。道与神同在，道就是神。 (约翰福音第一章，第一节)\n\n```\n<!-- more -->\n\n在设计过程中给类，方法和函数好的命名会带来好的设计，虽然这不是一定成立，但是如果坏的命名那一定不会给你带来好的设计。在设计过程，如果你发现你很难命名某一个模块，某个方法时，可能你真正遇到的问题不是难命名的问题，而是这个设计是否真的合理，你或许应该花更多的时间来重新设计一下你的模块。\n\n好的命名不仅会带来好的设计，好的命名还提高了程序的可读性，降低代码维护的成本。另一方面，如果糟糕的命名会给代码带来一堵无形的墙，让你必须深入代码去研究代码具有的行为，增加你理解代码的时间。\n\n为此我总结了几条关于命名的指导原则，希望这几条原则能为你的命名设计带来帮助，我使用的是C++的语法，当然这些原则也很容易扩展到其他语言中去。\n\n\n## 类型命名(类，接口，和结构)\n\n### 名字应该尽量采用名词\nBad:           Happy\nGood:          Happiness\n\n### 不要使用类似名字空间的前缀\nBad:           SystemOnlineMessage\nGood:          System::Online:Message\n\n### 形容词不要用太多，能描述清楚就行\nBad:           IAbstractFactoryPatternBase\nGood:          IFactory\n\n\n### 在类型中不要使用Manager 或则 Helper 或则其他没意义的单词\n如果你一定要在一个类型上加上Manager或Helper，那么这个类型要么就是命名的非常糟糕，要么就是设计的非常糟糕，如果是后则，那么这个类型就应该管理manage和帮助help一下自己了。\n\nBad:           ConnectionManager\n               XmlHelper\nGood:          Connection\n               XmlDocument, XmlNode, etc.\n### 如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\nBad:           IncomingMessageQueue\n               CharacterArray\n               SpatialOrganizer\nGood:          Mailbox\n               String\n               Map\n\n### 如果你使用类比，你就应该一致的使用它们\nBad:           Mailbox,DestinationID\nGood:          Mailbox,Address\n\n## 函数(方法和过程)\n### 简洁\nBad:           list.GetNumberOfItems()\nGood:          list.Count()\n\n### 不要太简洁\nBad:           list.Verify()\nGood:          list.ContainsNull()\n\n### 避免缩写\nBad:           list.Srt()\nGood:          list.Sort()\n\n### 对于完成某件事情的函数使用动词\nBad:           obj.RefCount();\nGood:          list.Clear();\n               list.Sort();\n               obj.AddReference();\n\n### 对于返回布尔型的函数，使用类似提问的方式\nBad:           list.Empty();\nGood:          list.IsEmpty();\n               list.Contains(item);\n\n### 对于只是返回属性，而不改变状态的函数则使用名词\nBad:           list.GetCount();\nGood:          list.Count();                              \n\n### 不要在函数名字中重复参数的名称\nBad:           list.AddItem(item);\n               handler.ReceiveMessage(msg);\nGood:          list.Add(item);\n               handler.Receive(msg);\n\n### 不要方法的名字中重复此方法的类的名称\nBad:           list.AddToList(item);\nGood:          list.Add(item);\n\n### 不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\nBad:           list.GetCountInt();\nGood:          list.GetCount();\n               message.GetIntValue();\n               message.GetFloatValue();\n\n### 不要名字中使用And 或则 Or                              \n如果你使用一个连接词来连接函数名，那么这个函数肯定是做了太多的事情，更好的做法是将其分成更小的函数来处理(类似面向对象设计准则中的责任单一原则)。\n如果你想确保是这是一个原子的操作，那么你应该用一个名字来描述这个操作或一个类来封装他\nBad:           mail.VerifyAddressAndSendStatus();\nGood:          mail.VerifyAddress();\n               mail.SendStatus();\n\n\n本文为转载：[查看原文](http://coolshell.cn/articles/990.html)\n","source":"_posts/编程中的命名设计那点事.md","raw":"---\ntitle: 编程中的命名设计那点事\ndate: 2016-05-30 12:56:30\ntags: [命名, android]\ncategories: android\n---\n\n# 编程中的命名设计那点事\n\n在我开始设计系统的时候，我会花去很多时间去设计命名，因为好的命名和好的设计是分不开的。\n```\nIn the beginning was the Word, and the Word was with God, and the Word was God\n太初有道。道与神同在，道就是神。 (约翰福音第一章，第一节)\n\n```\n<!-- more -->\n\n在设计过程中给类，方法和函数好的命名会带来好的设计，虽然这不是一定成立，但是如果坏的命名那一定不会给你带来好的设计。在设计过程，如果你发现你很难命名某一个模块，某个方法时，可能你真正遇到的问题不是难命名的问题，而是这个设计是否真的合理，你或许应该花更多的时间来重新设计一下你的模块。\n\n好的命名不仅会带来好的设计，好的命名还提高了程序的可读性，降低代码维护的成本。另一方面，如果糟糕的命名会给代码带来一堵无形的墙，让你必须深入代码去研究代码具有的行为，增加你理解代码的时间。\n\n为此我总结了几条关于命名的指导原则，希望这几条原则能为你的命名设计带来帮助，我使用的是C++的语法，当然这些原则也很容易扩展到其他语言中去。\n\n\n## 类型命名(类，接口，和结构)\n\n### 名字应该尽量采用名词\nBad:           Happy\nGood:          Happiness\n\n### 不要使用类似名字空间的前缀\nBad:           SystemOnlineMessage\nGood:          System::Online:Message\n\n### 形容词不要用太多，能描述清楚就行\nBad:           IAbstractFactoryPatternBase\nGood:          IFactory\n\n\n### 在类型中不要使用Manager 或则 Helper 或则其他没意义的单词\n如果你一定要在一个类型上加上Manager或Helper，那么这个类型要么就是命名的非常糟糕，要么就是设计的非常糟糕，如果是后则，那么这个类型就应该管理manage和帮助help一下自己了。\n\nBad:           ConnectionManager\n               XmlHelper\nGood:          Connection\n               XmlDocument, XmlNode, etc.\n### 如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\nBad:           IncomingMessageQueue\n               CharacterArray\n               SpatialOrganizer\nGood:          Mailbox\n               String\n               Map\n\n### 如果你使用类比，你就应该一致的使用它们\nBad:           Mailbox,DestinationID\nGood:          Mailbox,Address\n\n## 函数(方法和过程)\n### 简洁\nBad:           list.GetNumberOfItems()\nGood:          list.Count()\n\n### 不要太简洁\nBad:           list.Verify()\nGood:          list.ContainsNull()\n\n### 避免缩写\nBad:           list.Srt()\nGood:          list.Sort()\n\n### 对于完成某件事情的函数使用动词\nBad:           obj.RefCount();\nGood:          list.Clear();\n               list.Sort();\n               obj.AddReference();\n\n### 对于返回布尔型的函数，使用类似提问的方式\nBad:           list.Empty();\nGood:          list.IsEmpty();\n               list.Contains(item);\n\n### 对于只是返回属性，而不改变状态的函数则使用名词\nBad:           list.GetCount();\nGood:          list.Count();                              \n\n### 不要在函数名字中重复参数的名称\nBad:           list.AddItem(item);\n               handler.ReceiveMessage(msg);\nGood:          list.Add(item);\n               handler.Receive(msg);\n\n### 不要方法的名字中重复此方法的类的名称\nBad:           list.AddToList(item);\nGood:          list.Add(item);\n\n### 不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\nBad:           list.GetCountInt();\nGood:          list.GetCount();\n               message.GetIntValue();\n               message.GetFloatValue();\n\n### 不要名字中使用And 或则 Or                              \n如果你使用一个连接词来连接函数名，那么这个函数肯定是做了太多的事情，更好的做法是将其分成更小的函数来处理(类似面向对象设计准则中的责任单一原则)。\n如果你想确保是这是一个原子的操作，那么你应该用一个名字来描述这个操作或一个类来封装他\nBad:           mail.VerifyAddressAndSendStatus();\nGood:          mail.VerifyAddress();\n               mail.SendStatus();\n\n\n本文为转载：[查看原文](http://coolshell.cn/articles/990.html)\n","slug":"编程中的命名设计那点事","published":1,"updated":"2016-05-30T05:05:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uull003npev2s73kjkg9","content":"<h1 id=\"编程中的命名设计那点事\"><a href=\"#编程中的命名设计那点事\" class=\"headerlink\" title=\"编程中的命名设计那点事\"></a>编程中的命名设计那点事</h1><p>在我开始设计系统的时候，我会花去很多时间去设计命名，因为好的命名和好的设计是分不开的。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In <span class=\"keyword\">the</span> beginning was <span class=\"keyword\">the</span> Word, <span class=\"keyword\">and</span> <span class=\"keyword\">the</span> Word was <span class=\"keyword\">with</span> God, <span class=\"keyword\">and</span> <span class=\"keyword\">the</span> Word was God</span><br><span class=\"line\">太初有道。道与神同在，道就是神。 (约翰福音第一章，第一节)</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>在设计过程中给类，方法和函数好的命名会带来好的设计，虽然这不是一定成立，但是如果坏的命名那一定不会给你带来好的设计。在设计过程，如果你发现你很难命名某一个模块，某个方法时，可能你真正遇到的问题不是难命名的问题，而是这个设计是否真的合理，你或许应该花更多的时间来重新设计一下你的模块。</p>\n<p>好的命名不仅会带来好的设计，好的命名还提高了程序的可读性，降低代码维护的成本。另一方面，如果糟糕的命名会给代码带来一堵无形的墙，让你必须深入代码去研究代码具有的行为，增加你理解代码的时间。</p>\n<p>为此我总结了几条关于命名的指导原则，希望这几条原则能为你的命名设计带来帮助，我使用的是C++的语法，当然这些原则也很容易扩展到其他语言中去。</p>\n<h2 id=\"类型命名-类，接口，和结构\"><a href=\"#类型命名-类，接口，和结构\" class=\"headerlink\" title=\"类型命名(类，接口，和结构)\"></a>类型命名(类，接口，和结构)</h2><h3 id=\"名字应该尽量采用名词\"><a href=\"#名字应该尽量采用名词\" class=\"headerlink\" title=\"名字应该尽量采用名词\"></a>名字应该尽量采用名词</h3><p>Bad:           Happy<br>Good:          Happiness</p>\n<h3 id=\"不要使用类似名字空间的前缀\"><a href=\"#不要使用类似名字空间的前缀\" class=\"headerlink\" title=\"不要使用类似名字空间的前缀\"></a>不要使用类似名字空间的前缀</h3><p>Bad:           SystemOnlineMessage<br>Good:          System::Online:Message</p>\n<h3 id=\"形容词不要用太多，能描述清楚就行\"><a href=\"#形容词不要用太多，能描述清楚就行\" class=\"headerlink\" title=\"形容词不要用太多，能描述清楚就行\"></a>形容词不要用太多，能描述清楚就行</h3><p>Bad:           IAbstractFactoryPatternBase<br>Good:          IFactory</p>\n<h3 id=\"在类型中不要使用Manager-或则-Helper-或则其他没意义的单词\"><a href=\"#在类型中不要使用Manager-或则-Helper-或则其他没意义的单词\" class=\"headerlink\" title=\"在类型中不要使用Manager 或则 Helper 或则其他没意义的单词\"></a>在类型中不要使用Manager 或则 Helper 或则其他没意义的单词</h3><p>如果你一定要在一个类型上加上Manager或Helper，那么这个类型要么就是命名的非常糟糕，要么就是设计的非常糟糕，如果是后则，那么这个类型就应该管理manage和帮助help一下自己了。</p>\n<p>Bad:           ConnectionManager<br>               XmlHelper<br>Good:          Connection<br>               XmlDocument, XmlNode, etc.</p>\n<h3 id=\"如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\"><a href=\"#如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\" class=\"headerlink\" title=\"如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\"></a>如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名</h3><p>Bad:           IncomingMessageQueue<br>               CharacterArray<br>               SpatialOrganizer<br>Good:          Mailbox<br>               String<br>               Map</p>\n<h3 id=\"如果你使用类比，你就应该一致的使用它们\"><a href=\"#如果你使用类比，你就应该一致的使用它们\" class=\"headerlink\" title=\"如果你使用类比，你就应该一致的使用它们\"></a>如果你使用类比，你就应该一致的使用它们</h3><p>Bad:           Mailbox,DestinationID<br>Good:          Mailbox,Address</p>\n<h2 id=\"函数-方法和过程\"><a href=\"#函数-方法和过程\" class=\"headerlink\" title=\"函数(方法和过程)\"></a>函数(方法和过程)</h2><h3 id=\"简洁\"><a href=\"#简洁\" class=\"headerlink\" title=\"简洁\"></a>简洁</h3><p>Bad:           list.GetNumberOfItems()<br>Good:          list.Count()</p>\n<h3 id=\"不要太简洁\"><a href=\"#不要太简洁\" class=\"headerlink\" title=\"不要太简洁\"></a>不要太简洁</h3><p>Bad:           list.Verify()<br>Good:          list.ContainsNull()</p>\n<h3 id=\"避免缩写\"><a href=\"#避免缩写\" class=\"headerlink\" title=\"避免缩写\"></a>避免缩写</h3><p>Bad:           list.Srt()<br>Good:          list.Sort()</p>\n<h3 id=\"对于完成某件事情的函数使用动词\"><a href=\"#对于完成某件事情的函数使用动词\" class=\"headerlink\" title=\"对于完成某件事情的函数使用动词\"></a>对于完成某件事情的函数使用动词</h3><p>Bad:           obj.RefCount();<br>Good:          list.Clear();<br>               list.Sort();<br>               obj.AddReference();</p>\n<h3 id=\"对于返回布尔型的函数，使用类似提问的方式\"><a href=\"#对于返回布尔型的函数，使用类似提问的方式\" class=\"headerlink\" title=\"对于返回布尔型的函数，使用类似提问的方式\"></a>对于返回布尔型的函数，使用类似提问的方式</h3><p>Bad:           list.Empty();<br>Good:          list.IsEmpty();<br>               list.Contains(item);</p>\n<h3 id=\"对于只是返回属性，而不改变状态的函数则使用名词\"><a href=\"#对于只是返回属性，而不改变状态的函数则使用名词\" class=\"headerlink\" title=\"对于只是返回属性，而不改变状态的函数则使用名词\"></a>对于只是返回属性，而不改变状态的函数则使用名词</h3><p>Bad:           list.GetCount();<br>Good:          list.Count();                              </p>\n<h3 id=\"不要在函数名字中重复参数的名称\"><a href=\"#不要在函数名字中重复参数的名称\" class=\"headerlink\" title=\"不要在函数名字中重复参数的名称\"></a>不要在函数名字中重复参数的名称</h3><p>Bad:           list.AddItem(item);<br>               handler.ReceiveMessage(msg);<br>Good:          list.Add(item);<br>               handler.Receive(msg);</p>\n<h3 id=\"不要方法的名字中重复此方法的类的名称\"><a href=\"#不要方法的名字中重复此方法的类的名称\" class=\"headerlink\" title=\"不要方法的名字中重复此方法的类的名称\"></a>不要方法的名字中重复此方法的类的名称</h3><p>Bad:           list.AddToList(item);<br>Good:          list.Add(item);</p>\n<h3 id=\"不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\"><a href=\"#不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\" class=\"headerlink\" title=\"不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\"></a>不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别</h3><p>Bad:           list.GetCountInt();<br>Good:          list.GetCount();<br>               message.GetIntValue();<br>               message.GetFloatValue();</p>\n<h3 id=\"不要名字中使用And-或则-Or\"><a href=\"#不要名字中使用And-或则-Or\" class=\"headerlink\" title=\"不要名字中使用And 或则 Or\"></a>不要名字中使用And 或则 Or</h3><p>如果你使用一个连接词来连接函数名，那么这个函数肯定是做了太多的事情，更好的做法是将其分成更小的函数来处理(类似面向对象设计准则中的责任单一原则)。<br>如果你想确保是这是一个原子的操作，那么你应该用一个名字来描述这个操作或一个类来封装他<br>Bad:           mail.VerifyAddressAndSendStatus();<br>Good:          mail.VerifyAddress();<br>               mail.SendStatus();</p>\n<p>本文为转载：<a href=\"http://coolshell.cn/articles/990.html\" target=\"_blank\" rel=\"noopener\">查看原文</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"编程中的命名设计那点事\"><a href=\"#编程中的命名设计那点事\" class=\"headerlink\" title=\"编程中的命名设计那点事\"></a>编程中的命名设计那点事</h1><p>在我开始设计系统的时候，我会花去很多时间去设计命名，因为好的命名和好的设计是分不开的。<br><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">In <span class=\"keyword\">the</span> beginning was <span class=\"keyword\">the</span> Word, <span class=\"keyword\">and</span> <span class=\"keyword\">the</span> Word was <span class=\"keyword\">with</span> God, <span class=\"keyword\">and</span> <span class=\"keyword\">the</span> Word was God</span><br><span class=\"line\">太初有道。道与神同在，道就是神。 (约翰福音第一章，第一节)</span><br></pre></td></tr></table></figure></p>","more":"<p>在设计过程中给类，方法和函数好的命名会带来好的设计，虽然这不是一定成立，但是如果坏的命名那一定不会给你带来好的设计。在设计过程，如果你发现你很难命名某一个模块，某个方法时，可能你真正遇到的问题不是难命名的问题，而是这个设计是否真的合理，你或许应该花更多的时间来重新设计一下你的模块。</p>\n<p>好的命名不仅会带来好的设计，好的命名还提高了程序的可读性，降低代码维护的成本。另一方面，如果糟糕的命名会给代码带来一堵无形的墙，让你必须深入代码去研究代码具有的行为，增加你理解代码的时间。</p>\n<p>为此我总结了几条关于命名的指导原则，希望这几条原则能为你的命名设计带来帮助，我使用的是C++的语法，当然这些原则也很容易扩展到其他语言中去。</p>\n<h2 id=\"类型命名-类，接口，和结构\"><a href=\"#类型命名-类，接口，和结构\" class=\"headerlink\" title=\"类型命名(类，接口，和结构)\"></a>类型命名(类，接口，和结构)</h2><h3 id=\"名字应该尽量采用名词\"><a href=\"#名字应该尽量采用名词\" class=\"headerlink\" title=\"名字应该尽量采用名词\"></a>名字应该尽量采用名词</h3><p>Bad:           Happy<br>Good:          Happiness</p>\n<h3 id=\"不要使用类似名字空间的前缀\"><a href=\"#不要使用类似名字空间的前缀\" class=\"headerlink\" title=\"不要使用类似名字空间的前缀\"></a>不要使用类似名字空间的前缀</h3><p>Bad:           SystemOnlineMessage<br>Good:          System::Online:Message</p>\n<h3 id=\"形容词不要用太多，能描述清楚就行\"><a href=\"#形容词不要用太多，能描述清楚就行\" class=\"headerlink\" title=\"形容词不要用太多，能描述清楚就行\"></a>形容词不要用太多，能描述清楚就行</h3><p>Bad:           IAbstractFactoryPatternBase<br>Good:          IFactory</p>\n<h3 id=\"在类型中不要使用Manager-或则-Helper-或则其他没意义的单词\"><a href=\"#在类型中不要使用Manager-或则-Helper-或则其他没意义的单词\" class=\"headerlink\" title=\"在类型中不要使用Manager 或则 Helper 或则其他没意义的单词\"></a>在类型中不要使用Manager 或则 Helper 或则其他没意义的单词</h3><p>如果你一定要在一个类型上加上Manager或Helper，那么这个类型要么就是命名的非常糟糕，要么就是设计的非常糟糕，如果是后则，那么这个类型就应该管理manage和帮助help一下自己了。</p>\n<p>Bad:           ConnectionManager<br>               XmlHelper<br>Good:          Connection<br>               XmlDocument, XmlNode, etc.</p>\n<h3 id=\"如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\"><a href=\"#如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\" class=\"headerlink\" title=\"如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名\"></a>如果某个类不能通过简单的命名来描述它具有的功能，可以考虑用类比的方式来命名</h3><p>Bad:           IncomingMessageQueue<br>               CharacterArray<br>               SpatialOrganizer<br>Good:          Mailbox<br>               String<br>               Map</p>\n<h3 id=\"如果你使用类比，你就应该一致的使用它们\"><a href=\"#如果你使用类比，你就应该一致的使用它们\" class=\"headerlink\" title=\"如果你使用类比，你就应该一致的使用它们\"></a>如果你使用类比，你就应该一致的使用它们</h3><p>Bad:           Mailbox,DestinationID<br>Good:          Mailbox,Address</p>\n<h2 id=\"函数-方法和过程\"><a href=\"#函数-方法和过程\" class=\"headerlink\" title=\"函数(方法和过程)\"></a>函数(方法和过程)</h2><h3 id=\"简洁\"><a href=\"#简洁\" class=\"headerlink\" title=\"简洁\"></a>简洁</h3><p>Bad:           list.GetNumberOfItems()<br>Good:          list.Count()</p>\n<h3 id=\"不要太简洁\"><a href=\"#不要太简洁\" class=\"headerlink\" title=\"不要太简洁\"></a>不要太简洁</h3><p>Bad:           list.Verify()<br>Good:          list.ContainsNull()</p>\n<h3 id=\"避免缩写\"><a href=\"#避免缩写\" class=\"headerlink\" title=\"避免缩写\"></a>避免缩写</h3><p>Bad:           list.Srt()<br>Good:          list.Sort()</p>\n<h3 id=\"对于完成某件事情的函数使用动词\"><a href=\"#对于完成某件事情的函数使用动词\" class=\"headerlink\" title=\"对于完成某件事情的函数使用动词\"></a>对于完成某件事情的函数使用动词</h3><p>Bad:           obj.RefCount();<br>Good:          list.Clear();<br>               list.Sort();<br>               obj.AddReference();</p>\n<h3 id=\"对于返回布尔型的函数，使用类似提问的方式\"><a href=\"#对于返回布尔型的函数，使用类似提问的方式\" class=\"headerlink\" title=\"对于返回布尔型的函数，使用类似提问的方式\"></a>对于返回布尔型的函数，使用类似提问的方式</h3><p>Bad:           list.Empty();<br>Good:          list.IsEmpty();<br>               list.Contains(item);</p>\n<h3 id=\"对于只是返回属性，而不改变状态的函数则使用名词\"><a href=\"#对于只是返回属性，而不改变状态的函数则使用名词\" class=\"headerlink\" title=\"对于只是返回属性，而不改变状态的函数则使用名词\"></a>对于只是返回属性，而不改变状态的函数则使用名词</h3><p>Bad:           list.GetCount();<br>Good:          list.Count();                              </p>\n<h3 id=\"不要在函数名字中重复参数的名称\"><a href=\"#不要在函数名字中重复参数的名称\" class=\"headerlink\" title=\"不要在函数名字中重复参数的名称\"></a>不要在函数名字中重复参数的名称</h3><p>Bad:           list.AddItem(item);<br>               handler.ReceiveMessage(msg);<br>Good:          list.Add(item);<br>               handler.Receive(msg);</p>\n<h3 id=\"不要方法的名字中重复此方法的类的名称\"><a href=\"#不要方法的名字中重复此方法的类的名称\" class=\"headerlink\" title=\"不要方法的名字中重复此方法的类的名称\"></a>不要方法的名字中重复此方法的类的名称</h3><p>Bad:           list.AddToList(item);<br>Good:          list.Add(item);</p>\n<h3 id=\"不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\"><a href=\"#不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\" class=\"headerlink\" title=\"不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别\"></a>不要在函数的名字中加入返回类型，除非函数名必须以返回类型进行区别</h3><p>Bad:           list.GetCountInt();<br>Good:          list.GetCount();<br>               message.GetIntValue();<br>               message.GetFloatValue();</p>\n<h3 id=\"不要名字中使用And-或则-Or\"><a href=\"#不要名字中使用And-或则-Or\" class=\"headerlink\" title=\"不要名字中使用And 或则 Or\"></a>不要名字中使用And 或则 Or</h3><p>如果你使用一个连接词来连接函数名，那么这个函数肯定是做了太多的事情，更好的做法是将其分成更小的函数来处理(类似面向对象设计准则中的责任单一原则)。<br>如果你想确保是这是一个原子的操作，那么你应该用一个名字来描述这个操作或一个类来封装他<br>Bad:           mail.VerifyAddressAndSendStatus();<br>Good:          mail.VerifyAddress();<br>               mail.SendStatus();</p>\n<p>本文为转载：<a href=\"http://coolshell.cn/articles/990.html\" target=\"_blank\" rel=\"noopener\">查看原文</a></p>"},{"title":"英语谚语","date":"2016-03-12T02:51:05.000Z","_content":"\n#### 英语谚语\n> English proverbs\n\n<!-- more -->\n\nGreat minds have purpose, others have wishes.\n伟大的人有目标， 平庸的人只有愿望。\n\n\nIf winter comes, can spring be far behind?\n冬天来了， 春天还会远吗？\n\nBehind the fear of an ideal you, you create the fear, you can beat him.\n恐惧的背后有一个理想的你，恐惧是你自己创造，你也可以打败他。\n\nThe best preparation for tomorrow is doing your best today.\n立足当下，赢在未来。\n\nThe more you care, the more you have to lose.\n在意的越多，失去的越多。\n\nAll sad people like poetry, happy people like songs.\n悲伤的人喜欢诗，幸福的人喜欢歌。\n\nLife's a little bit messy. We all make mistakes, No matter what type of animal you are, change starts with you.\n生活总会有点不顺意，我们都会犯错。天性如何并不重要，重要的是你开始改变。\n\nThe first wealth is health.\n健康是人生第一财富。\n\nSweat is the lubricant of success.\n汗水是成功的润滑剂。\n\nBe confident with yourself and stop worring what other people think. Do what's best for your future happiness.\n对自己要自信，别再管其他人怎么想了，为了未来幸福全力以赴吧！\n\nTrue mastery of any skill taskes a lifetime.\n对任何技能的掌握都需要一生的刻苦操练。\n\nYou're unique, nothing can replace you.\n你举世无双，无人可以替代。\n\nThe less you reveal the more people can wonder.\n越矜持神秘，越令人神往。--人间烟火0000译\n\nWe are as indestructible as we believe ourselves to be.\n如我所念，坚不可摧。--悄然翩跹译\n\nTo be close to your friend, but closer to your enemy.\n亲近你的朋友，但更要亲近你的敌人。--雪织天医译\n\nWhere there is life, there is hope.\n有生命必有希望。\n\nEven the smallest person can change the course of the future.\n即使是小人物，也可以改变未来。--清清me(~~)心译文\n\nIntelligence without ambition is a bird without wings.\n无志之才，如无翼之鸟。\n\nI have no secret of success but hard work.\n除辛勤工作之外，我别无成功的秘诀。\n\nThat man is the richest whose pleasures are the cheapest.\n能处处寻求快乐的人才是最富有的人。\n\nA smile is a curve that sets everything straight.\n微笑是一道弧线，去能把一切摆平。\n\nThink great thoughts and you will be great.\n心怀伟大的理想，你将会变得伟大。\n\nWe must hang together, or we'll be hanged separately.\n我们必须团结在一起，否则我们将被一个个绞死。\n\nLive well, love lots, and laugh often.\n善待生活，热爱一切，笑口常开。\n\nBut all sunshine without shade, all pleasure without pain, is not life at all.\n但只有阳光没有阴影，只有快乐没有痛苦，根本不是真正的生活。\n\nNever regret anything because at one time it was exactly what you wanted.\n不要后悔做任何事情，因为曾经有个时候，那正是你想要的。\n\nBeauty is an attitude. It has nothing to do with age.\n美，是一种态度，与年龄无关  --也许就这样译\n\nThe cloud stood humbly in a corner of the sky. The morning crowned it with splendor.\n白云谦卑地站在天边，晨光给它披上壮丽的光彩。 --泰戈尔\n\nI am a slow walker, but I never walk backwards.\n我走的很慢，但是我从来不会后退。\n\nMusic is the best school in life, and at the same time it is the best way   for us to extricate ourselves from it.\n音乐是生活中最好的学校，而同时它又是我们从中解脱的最佳途径。\n\nIt's kind of fun to do the impossible.\n乐在为不可为之事。—千倩晶汀译\n\nWhatever is worth doing is worth doing well.\n任何值得做的，都值得把它做好。\n\nStay hungry,stay foolish.\n求知若饥，虚心若愚。\n\nThe best preparation for tomorrow is doing your best today.\n对明天做好的准备就是今天做到最好。\n\nEither move or be moved.\n先发制人，后发而制于人。\n\nCowards die many times before their actual deaths.\n胆小怕死，虽生犹死。\n\nA friend without faults will never be found.\n没有缺点的朋友是永远找不到的。\n\nEvery man desires to live long, but no man wishes to be old.\n人人都想要长命百岁，但没人愿意变老。\n\nBrevity is the soul of wit.\n简洁是智慧的灵魂。\n\nEvery man dies, not every man really lives.\n任何人都将会死去，然而并不是每个人都真真正正的活过。\n\nSweet are the uses of adversity.\n逆境和厄运自有妙处。\n\nHad I not seen the sun, I could have borne the shade.\n我本可以忍受黑暗，如果我不曾见过阳光。\n","source":"_posts/英语谚语.md","raw":"---\ntitle: 英语谚语\ndate: 2016-03-12 10:51:05\ntags: [english]\ncategories: english\n---\n\n#### 英语谚语\n> English proverbs\n\n<!-- more -->\n\nGreat minds have purpose, others have wishes.\n伟大的人有目标， 平庸的人只有愿望。\n\n\nIf winter comes, can spring be far behind?\n冬天来了， 春天还会远吗？\n\nBehind the fear of an ideal you, you create the fear, you can beat him.\n恐惧的背后有一个理想的你，恐惧是你自己创造，你也可以打败他。\n\nThe best preparation for tomorrow is doing your best today.\n立足当下，赢在未来。\n\nThe more you care, the more you have to lose.\n在意的越多，失去的越多。\n\nAll sad people like poetry, happy people like songs.\n悲伤的人喜欢诗，幸福的人喜欢歌。\n\nLife's a little bit messy. We all make mistakes, No matter what type of animal you are, change starts with you.\n生活总会有点不顺意，我们都会犯错。天性如何并不重要，重要的是你开始改变。\n\nThe first wealth is health.\n健康是人生第一财富。\n\nSweat is the lubricant of success.\n汗水是成功的润滑剂。\n\nBe confident with yourself and stop worring what other people think. Do what's best for your future happiness.\n对自己要自信，别再管其他人怎么想了，为了未来幸福全力以赴吧！\n\nTrue mastery of any skill taskes a lifetime.\n对任何技能的掌握都需要一生的刻苦操练。\n\nYou're unique, nothing can replace you.\n你举世无双，无人可以替代。\n\nThe less you reveal the more people can wonder.\n越矜持神秘，越令人神往。--人间烟火0000译\n\nWe are as indestructible as we believe ourselves to be.\n如我所念，坚不可摧。--悄然翩跹译\n\nTo be close to your friend, but closer to your enemy.\n亲近你的朋友，但更要亲近你的敌人。--雪织天医译\n\nWhere there is life, there is hope.\n有生命必有希望。\n\nEven the smallest person can change the course of the future.\n即使是小人物，也可以改变未来。--清清me(~~)心译文\n\nIntelligence without ambition is a bird without wings.\n无志之才，如无翼之鸟。\n\nI have no secret of success but hard work.\n除辛勤工作之外，我别无成功的秘诀。\n\nThat man is the richest whose pleasures are the cheapest.\n能处处寻求快乐的人才是最富有的人。\n\nA smile is a curve that sets everything straight.\n微笑是一道弧线，去能把一切摆平。\n\nThink great thoughts and you will be great.\n心怀伟大的理想，你将会变得伟大。\n\nWe must hang together, or we'll be hanged separately.\n我们必须团结在一起，否则我们将被一个个绞死。\n\nLive well, love lots, and laugh often.\n善待生活，热爱一切，笑口常开。\n\nBut all sunshine without shade, all pleasure without pain, is not life at all.\n但只有阳光没有阴影，只有快乐没有痛苦，根本不是真正的生活。\n\nNever regret anything because at one time it was exactly what you wanted.\n不要后悔做任何事情，因为曾经有个时候，那正是你想要的。\n\nBeauty is an attitude. It has nothing to do with age.\n美，是一种态度，与年龄无关  --也许就这样译\n\nThe cloud stood humbly in a corner of the sky. The morning crowned it with splendor.\n白云谦卑地站在天边，晨光给它披上壮丽的光彩。 --泰戈尔\n\nI am a slow walker, but I never walk backwards.\n我走的很慢，但是我从来不会后退。\n\nMusic is the best school in life, and at the same time it is the best way   for us to extricate ourselves from it.\n音乐是生活中最好的学校，而同时它又是我们从中解脱的最佳途径。\n\nIt's kind of fun to do the impossible.\n乐在为不可为之事。—千倩晶汀译\n\nWhatever is worth doing is worth doing well.\n任何值得做的，都值得把它做好。\n\nStay hungry,stay foolish.\n求知若饥，虚心若愚。\n\nThe best preparation for tomorrow is doing your best today.\n对明天做好的准备就是今天做到最好。\n\nEither move or be moved.\n先发制人，后发而制于人。\n\nCowards die many times before their actual deaths.\n胆小怕死，虽生犹死。\n\nA friend without faults will never be found.\n没有缺点的朋友是永远找不到的。\n\nEvery man desires to live long, but no man wishes to be old.\n人人都想要长命百岁，但没人愿意变老。\n\nBrevity is the soul of wit.\n简洁是智慧的灵魂。\n\nEvery man dies, not every man really lives.\n任何人都将会死去，然而并不是每个人都真真正正的活过。\n\nSweet are the uses of adversity.\n逆境和厄运自有妙处。\n\nHad I not seen the sun, I could have borne the shade.\n我本可以忍受黑暗，如果我不曾见过阳光。\n","slug":"英语谚语","published":1,"updated":"2016-05-03T02:15:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjbn5uuln003rpev28fknd4ih","content":"<h4 id=\"英语谚语\"><a href=\"#英语谚语\" class=\"headerlink\" title=\"英语谚语\"></a>英语谚语</h4><blockquote>\n<p>English proverbs</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>Great minds have purpose, others have wishes.<br>伟大的人有目标， 平庸的人只有愿望。</p>\n<p>If winter comes, can spring be far behind?<br>冬天来了， 春天还会远吗？</p>\n<p>Behind the fear of an ideal you, you create the fear, you can beat him.<br>恐惧的背后有一个理想的你，恐惧是你自己创造，你也可以打败他。</p>\n<p>The best preparation for tomorrow is doing your best today.<br>立足当下，赢在未来。</p>\n<p>The more you care, the more you have to lose.<br>在意的越多，失去的越多。</p>\n<p>All sad people like poetry, happy people like songs.<br>悲伤的人喜欢诗，幸福的人喜欢歌。</p>\n<p>Life’s a little bit messy. We all make mistakes, No matter what type of animal you are, change starts with you.<br>生活总会有点不顺意，我们都会犯错。天性如何并不重要，重要的是你开始改变。</p>\n<p>The first wealth is health.<br>健康是人生第一财富。</p>\n<p>Sweat is the lubricant of success.<br>汗水是成功的润滑剂。</p>\n<p>Be confident with yourself and stop worring what other people think. Do what’s best for your future happiness.<br>对自己要自信，别再管其他人怎么想了，为了未来幸福全力以赴吧！</p>\n<p>True mastery of any skill taskes a lifetime.<br>对任何技能的掌握都需要一生的刻苦操练。</p>\n<p>You’re unique, nothing can replace you.<br>你举世无双，无人可以替代。</p>\n<p>The less you reveal the more people can wonder.<br>越矜持神秘，越令人神往。–人间烟火0000译</p>\n<p>We are as indestructible as we believe ourselves to be.<br>如我所念，坚不可摧。–悄然翩跹译</p>\n<p>To be close to your friend, but closer to your enemy.<br>亲近你的朋友，但更要亲近你的敌人。–雪织天医译</p>\n<p>Where there is life, there is hope.<br>有生命必有希望。</p>\n<p>Even the smallest person can change the course of the future.<br>即使是小人物，也可以改变未来。–清清me(~~)心译文</p>\n<p>Intelligence without ambition is a bird without wings.<br>无志之才，如无翼之鸟。</p>\n<p>I have no secret of success but hard work.<br>除辛勤工作之外，我别无成功的秘诀。</p>\n<p>That man is the richest whose pleasures are the cheapest.<br>能处处寻求快乐的人才是最富有的人。</p>\n<p>A smile is a curve that sets everything straight.<br>微笑是一道弧线，去能把一切摆平。</p>\n<p>Think great thoughts and you will be great.<br>心怀伟大的理想，你将会变得伟大。</p>\n<p>We must hang together, or we’ll be hanged separately.<br>我们必须团结在一起，否则我们将被一个个绞死。</p>\n<p>Live well, love lots, and laugh often.<br>善待生活，热爱一切，笑口常开。</p>\n<p>But all sunshine without shade, all pleasure without pain, is not life at all.<br>但只有阳光没有阴影，只有快乐没有痛苦，根本不是真正的生活。</p>\n<p>Never regret anything because at one time it was exactly what you wanted.<br>不要后悔做任何事情，因为曾经有个时候，那正是你想要的。</p>\n<p>Beauty is an attitude. It has nothing to do with age.<br>美，是一种态度，与年龄无关  –也许就这样译</p>\n<p>The cloud stood humbly in a corner of the sky. The morning crowned it with splendor.<br>白云谦卑地站在天边，晨光给它披上壮丽的光彩。 –泰戈尔</p>\n<p>I am a slow walker, but I never walk backwards.<br>我走的很慢，但是我从来不会后退。</p>\n<p>Music is the best school in life, and at the same time it is the best way   for us to extricate ourselves from it.<br>音乐是生活中最好的学校，而同时它又是我们从中解脱的最佳途径。</p>\n<p>It’s kind of fun to do the impossible.<br>乐在为不可为之事。—千倩晶汀译</p>\n<p>Whatever is worth doing is worth doing well.<br>任何值得做的，都值得把它做好。</p>\n<p>Stay hungry,stay foolish.<br>求知若饥，虚心若愚。</p>\n<p>The best preparation for tomorrow is doing your best today.<br>对明天做好的准备就是今天做到最好。</p>\n<p>Either move or be moved.<br>先发制人，后发而制于人。</p>\n<p>Cowards die many times before their actual deaths.<br>胆小怕死，虽生犹死。</p>\n<p>A friend without faults will never be found.<br>没有缺点的朋友是永远找不到的。</p>\n<p>Every man desires to live long, but no man wishes to be old.<br>人人都想要长命百岁，但没人愿意变老。</p>\n<p>Brevity is the soul of wit.<br>简洁是智慧的灵魂。</p>\n<p>Every man dies, not every man really lives.<br>任何人都将会死去，然而并不是每个人都真真正正的活过。</p>\n<p>Sweet are the uses of adversity.<br>逆境和厄运自有妙处。</p>\n<p>Had I not seen the sun, I could have borne the shade.<br>我本可以忍受黑暗，如果我不曾见过阳光。</p>\n","site":{"data":{}},"excerpt":"<h4 id=\"英语谚语\"><a href=\"#英语谚语\" class=\"headerlink\" title=\"英语谚语\"></a>英语谚语</h4><blockquote>\n<p>English proverbs</p>\n</blockquote>","more":"<p>Great minds have purpose, others have wishes.<br>伟大的人有目标， 平庸的人只有愿望。</p>\n<p>If winter comes, can spring be far behind?<br>冬天来了， 春天还会远吗？</p>\n<p>Behind the fear of an ideal you, you create the fear, you can beat him.<br>恐惧的背后有一个理想的你，恐惧是你自己创造，你也可以打败他。</p>\n<p>The best preparation for tomorrow is doing your best today.<br>立足当下，赢在未来。</p>\n<p>The more you care, the more you have to lose.<br>在意的越多，失去的越多。</p>\n<p>All sad people like poetry, happy people like songs.<br>悲伤的人喜欢诗，幸福的人喜欢歌。</p>\n<p>Life’s a little bit messy. We all make mistakes, No matter what type of animal you are, change starts with you.<br>生活总会有点不顺意，我们都会犯错。天性如何并不重要，重要的是你开始改变。</p>\n<p>The first wealth is health.<br>健康是人生第一财富。</p>\n<p>Sweat is the lubricant of success.<br>汗水是成功的润滑剂。</p>\n<p>Be confident with yourself and stop worring what other people think. Do what’s best for your future happiness.<br>对自己要自信，别再管其他人怎么想了，为了未来幸福全力以赴吧！</p>\n<p>True mastery of any skill taskes a lifetime.<br>对任何技能的掌握都需要一生的刻苦操练。</p>\n<p>You’re unique, nothing can replace you.<br>你举世无双，无人可以替代。</p>\n<p>The less you reveal the more people can wonder.<br>越矜持神秘，越令人神往。–人间烟火0000译</p>\n<p>We are as indestructible as we believe ourselves to be.<br>如我所念，坚不可摧。–悄然翩跹译</p>\n<p>To be close to your friend, but closer to your enemy.<br>亲近你的朋友，但更要亲近你的敌人。–雪织天医译</p>\n<p>Where there is life, there is hope.<br>有生命必有希望。</p>\n<p>Even the smallest person can change the course of the future.<br>即使是小人物，也可以改变未来。–清清me(~~)心译文</p>\n<p>Intelligence without ambition is a bird without wings.<br>无志之才，如无翼之鸟。</p>\n<p>I have no secret of success but hard work.<br>除辛勤工作之外，我别无成功的秘诀。</p>\n<p>That man is the richest whose pleasures are the cheapest.<br>能处处寻求快乐的人才是最富有的人。</p>\n<p>A smile is a curve that sets everything straight.<br>微笑是一道弧线，去能把一切摆平。</p>\n<p>Think great thoughts and you will be great.<br>心怀伟大的理想，你将会变得伟大。</p>\n<p>We must hang together, or we’ll be hanged separately.<br>我们必须团结在一起，否则我们将被一个个绞死。</p>\n<p>Live well, love lots, and laugh often.<br>善待生活，热爱一切，笑口常开。</p>\n<p>But all sunshine without shade, all pleasure without pain, is not life at all.<br>但只有阳光没有阴影，只有快乐没有痛苦，根本不是真正的生活。</p>\n<p>Never regret anything because at one time it was exactly what you wanted.<br>不要后悔做任何事情，因为曾经有个时候，那正是你想要的。</p>\n<p>Beauty is an attitude. It has nothing to do with age.<br>美，是一种态度，与年龄无关  –也许就这样译</p>\n<p>The cloud stood humbly in a corner of the sky. The morning crowned it with splendor.<br>白云谦卑地站在天边，晨光给它披上壮丽的光彩。 –泰戈尔</p>\n<p>I am a slow walker, but I never walk backwards.<br>我走的很慢，但是我从来不会后退。</p>\n<p>Music is the best school in life, and at the same time it is the best way   for us to extricate ourselves from it.<br>音乐是生活中最好的学校，而同时它又是我们从中解脱的最佳途径。</p>\n<p>It’s kind of fun to do the impossible.<br>乐在为不可为之事。—千倩晶汀译</p>\n<p>Whatever is worth doing is worth doing well.<br>任何值得做的，都值得把它做好。</p>\n<p>Stay hungry,stay foolish.<br>求知若饥，虚心若愚。</p>\n<p>The best preparation for tomorrow is doing your best today.<br>对明天做好的准备就是今天做到最好。</p>\n<p>Either move or be moved.<br>先发制人，后发而制于人。</p>\n<p>Cowards die many times before their actual deaths.<br>胆小怕死，虽生犹死。</p>\n<p>A friend without faults will never be found.<br>没有缺点的朋友是永远找不到的。</p>\n<p>Every man desires to live long, but no man wishes to be old.<br>人人都想要长命百岁，但没人愿意变老。</p>\n<p>Brevity is the soul of wit.<br>简洁是智慧的灵魂。</p>\n<p>Every man dies, not every man really lives.<br>任何人都将会死去，然而并不是每个人都真真正正的活过。</p>\n<p>Sweet are the uses of adversity.<br>逆境和厄运自有妙处。</p>\n<p>Had I not seen the sun, I could have borne the shade.<br>我本可以忍受黑暗，如果我不曾见过阳光。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjbn5uujl0008pev2y8tytetr","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uujv000gpev2p2ox5cxi"},{"post_id":"cjbn5uuj80000pev2rmtjmda2","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uujx000kpev21618sysf"},{"post_id":"cjbn5uujp000dpev21wmianjk","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uujz000mpev2c8joeaui"},{"post_id":"cjbn5uujd0002pev294y2l1jm","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uuk0000qpev26v3vwhh7"},{"post_id":"cjbn5uuji0006pev2sropmlqy","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uuk2000spev2az28gwqj"},{"post_id":"cjbn5uujt000fpev2uvxfp9r2","category_id":"cjbn5uuk2000tpev206bmfme3","_id":"cjbn5uuk90014pev2wnu0evtl"},{"post_id":"cjbn5uuk4000xpev2riqioq31","category_id":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uukb0018pev2g8yc99ql"},{"post_id":"cjbn5uuk60011pev2q6bo07f0","category_id":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uukc001bpev2thabzalj"},{"post_id":"cjbn5uujx000jpev266sh2imn","category_id":"cjbn5uuk6000zpev2c9tfwon3","_id":"cjbn5uukd001gpev2mzkcvov8"},{"post_id":"cjbn5uuk80013pev2rtcvmljr","category_id":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uukf001ipev2tkn1ox5i"},{"post_id":"cjbn5uujy000lpev2uabk8q2r","category_id":"cjbn5uuk90015pev2f1vijlg4","_id":"cjbn5uukh001mpev2dxqw6kgo"},{"post_id":"cjbn5uukc001dpev23i4pcyhe","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uuki001opev2l52d5xmw"},{"post_id":"cjbn5uuke001hpev2kifrx12j","category_id":"cjbn5uuk6000zpev2c9tfwon3","_id":"cjbn5uukl001rpev29qqezr3k"},{"post_id":"cjbn5uuk0000ppev2nt77umdj","category_id":"cjbn5uukd001epev237r5yovu","_id":"cjbn5uukm001upev24bgybmxi"},{"post_id":"cjbn5uukf001jpev26ap0x7sx","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uukn001wpev2hrjrznq2"},{"post_id":"cjbn5uukh001npev2jjgbrffv","category_id":"cjbn5uukd001epev237r5yovu","_id":"cjbn5uukp0020pev2zg2adfha"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","category_id":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uukr0023pev2tcv0l2ub"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","category_id":"cjbn5uukg001kpev2m13ucx9i","_id":"cjbn5uuks0028pev2pdu0cjz8"},{"post_id":"cjbn5uuk1000rpev2fmvn0xom","category_id":"cjbn5uukl001qpev21xllgpgc","_id":"cjbn5uuku002bpev2v8k3fgld"},{"post_id":"cjbn5uuk2000vpev2ejeu9kji","category_id":"cjbn5uuko001xpev2kwgjv9fs","_id":"cjbn5uukv002gpev2db89cxlf"},{"post_id":"cjbn5uuka0017pev2glrszg3g","category_id":"cjbn5uuks0026pev2c6eikskz","_id":"cjbn5uuky002kpev2q240b66b"},{"post_id":"cjbn5uukv002ipev2k31spip5","category_id":"cjbn5uukd001epev237r5yovu","_id":"cjbn5uul4002qpev235lk24i0"},{"post_id":"cjbn5uukb001apev2g7sfgqdv","category_id":"cjbn5uukv002epev2cjeiludj","_id":"cjbn5uul6002vpev21ex9f18s"},{"post_id":"cjbn5uukx002jpev2gpcac4zp","category_id":"cjbn5uujz000npev2tbn0pxwa","_id":"cjbn5uul8002ypev2x9zr4p7w"},{"post_id":"cjbn5uukj001ppev2539e2a89","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uul90032pev2ga6twkx3"},{"post_id":"cjbn5uul2002ppev20hksgjx7","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uulc0036pev2twlc8tc7"},{"post_id":"cjbn5uul5002upev2i3088d4o","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uule003apev2u4w4v0hd"},{"post_id":"cjbn5uukl001tpev2sw3fw9p8","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uulg003dpev2f3tb5e7h"},{"post_id":"cjbn5uul7002xpev2smt8b0xy","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uuli003hpev2dr1kgo9s"},{"post_id":"cjbn5uul90031pev2dq8rdkfe","category_id":"cjbn5uukl001qpev21xllgpgc","_id":"cjbn5uulk003lpev29j1k526l"},{"post_id":"cjbn5uukm001vpev2amvoe69s","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uulm003opev2k9g2t939"},{"post_id":"cjbn5uula0035pev2xpv7f550","category_id":"cjbn5uukv002epev2cjeiludj","_id":"cjbn5uulo003spev2mhooo2i0"},{"post_id":"cjbn5uuko001zpev2j16ijzcs","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uulo003upev2tzbs7bee"},{"post_id":"cjbn5uulf003cpev2qg2arc4f","category_id":"cjbn5uukl001qpev21xllgpgc","_id":"cjbn5uulp003vpev28u04zh57"},{"post_id":"cjbn5uukq0022pev2uwwm9vrp","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uulq003zpev2r5nshj82"},{"post_id":"cjbn5uulj003kpev2g2qal2k5","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uulq0041pev25gwoxbq3"},{"post_id":"cjbn5uull003npev2s73kjkg9","category_id":"cjbn5uujg0004pev254qha7m4","_id":"cjbn5uulr0045pev2sf0ajlew"},{"post_id":"cjbn5uukr0025pev2xvigqjyz","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uulr0047pev28bbcyeo5"},{"post_id":"cjbn5uukt002apev26vpjh324","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uuls0049pev2qzrknmnc"},{"post_id":"cjbn5uuku002dpev2ez0p2r5n","category_id":"cjbn5uukz002lpev2c9j3hgt3","_id":"cjbn5uuls004bpev2qny5g0qd"},{"post_id":"cjbn5uul0002npev28bmm8wcs","category_id":"cjbn5uulr0043pev2da09uc72","_id":"cjbn5uuls004dpev2ujvtd0o7"},{"post_id":"cjbn5uuld0039pev2l0bkzovd","category_id":"cjbn5uuls004apev2uiq4k6hl","_id":"cjbn5uulv004hpev2ac7a8pw1"},{"post_id":"cjbn5uulh003gpev2k5kit6wq","category_id":"cjbn5uulr0043pev2da09uc72","_id":"cjbn5uulw004lpev2h4zjpzar"},{"post_id":"cjbn5uuln003rpev28fknd4ih","category_id":"cjbn5uulv004gpev2sj8dn6w0","_id":"cjbn5uulw004opev2mu2sjzfh"}],"PostTag":[{"post_id":"cjbn5uujl0008pev2y8tytetr","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uujp000cpev2y4htibzb"},{"post_id":"cjbn5uuj80000pev2rmtjmda2","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uujs000epev244pbx2x2"},{"post_id":"cjbn5uujd0002pev294y2l1jm","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uuk4000wpev2ig9ykclt"},{"post_id":"cjbn5uujd0002pev294y2l1jm","tag_id":"cjbn5uujv000ipev2v1vzn4yx","_id":"cjbn5uuk6000ypev24mhsulnz"},{"post_id":"cjbn5uujd0002pev294y2l1jm","tag_id":"cjbn5uujz000opev2d1houn8j","_id":"cjbn5uuk80012pev2ej4159mc"},{"post_id":"cjbn5uuji0006pev2sropmlqy","tag_id":"cjbn5uuk2000upev2vwt6zk1k","_id":"cjbn5uukb0019pev203vga88s"},{"post_id":"cjbn5uuji0006pev2sropmlqy","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uukc001cpev2qs8que84"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","tag_id":"cjbn5uuka0016pev2aailux45","_id":"cjbn5uukq0021pev2ueo9jjex"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","tag_id":"cjbn5uukd001fpev2hw2yszzo","_id":"cjbn5uukr0024pev2skbljxuf"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","tag_id":"cjbn5uukh001lpev2chsl2guq","_id":"cjbn5uuks0029pev22wb7ozur"},{"post_id":"cjbn5uujm0009pev2e1s6xeqt","tag_id":"cjbn5uukl001spev2l1abfomr","_id":"cjbn5uuku002cpev2kvwgd41u"},{"post_id":"cjbn5uujp000dpev21wmianjk","tag_id":"cjbn5uuko001ypev2wga6vlkx","_id":"cjbn5uukv002hpev24eqizcnf"},{"post_id":"cjbn5uujt000fpev2uvxfp9r2","tag_id":"cjbn5uuks0027pev2pgrjlam5","_id":"cjbn5uul2002opev2pccovlym"},{"post_id":"cjbn5uujt000fpev2uvxfp9r2","tag_id":"cjbn5uukv002fpev229vxj20a","_id":"cjbn5uul4002rpev2hq9k904l"},{"post_id":"cjbn5uukx002jpev2gpcac4zp","tag_id":"cjbn5uukh001lpev2chsl2guq","_id":"cjbn5uul7002wpev2appcvujp"},{"post_id":"cjbn5uujx000jpev266sh2imn","tag_id":"cjbn5uukz002mpev23sb3yvzj","_id":"cjbn5uul8002zpev2lrurdgvd"},{"post_id":"cjbn5uul2002ppev20hksgjx7","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uula0034pev2xz1odut0"},{"post_id":"cjbn5uujy000lpev2uabk8q2r","tag_id":"cjbn5uul5002tpev26mgl8pu3","_id":"cjbn5uulc0037pev29eb68pzk"},{"post_id":"cjbn5uuk0000ppev2nt77umdj","tag_id":"cjbn5uula0033pev2bnvu74wn","_id":"cjbn5uulg003epev2ctpdl3s2"},{"post_id":"cjbn5uulf003cpev2qg2arc4f","tag_id":"cjbn5uulf003bpev2nm9p4vn4","_id":"cjbn5uulj003jpev2xz3n6j9q"},{"post_id":"cjbn5uulj003kpev2g2qal2k5","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uulm003ppev2l7dl7moe"},{"post_id":"cjbn5uuk1000rpev2fmvn0xom","tag_id":"cjbn5uulf003bpev2nm9p4vn4","_id":"cjbn5uulq003ypev2f152fqs7"},{"post_id":"cjbn5uuk1000rpev2fmvn0xom","tag_id":"cjbn5uulj003ipev23ceaqocw","_id":"cjbn5uulq0040pev25tq069zo"},{"post_id":"cjbn5uuk1000rpev2fmvn0xom","tag_id":"cjbn5uulm003qpev2qyfmpexs","_id":"cjbn5uulr0044pev28irgib7p"},{"post_id":"cjbn5uuk2000vpev2ejeu9kji","tag_id":"cjbn5uulp003wpev2uzdwczjg","_id":"cjbn5uulr0046pev2pugv2uia"},{"post_id":"cjbn5uuk4000xpev2riqioq31","tag_id":"cjbn5uulq0042pev205s0rm6b","_id":"cjbn5uulv004ipev29x25hzy2"},{"post_id":"cjbn5uuk4000xpev2riqioq31","tag_id":"cjbn5uulr0048pev2a0kd05vh","_id":"cjbn5uulv004jpev2pz2wa7l5"},{"post_id":"cjbn5uuk4000xpev2riqioq31","tag_id":"cjbn5uukh001lpev2chsl2guq","_id":"cjbn5uulw004mpev2mixgd2vd"},{"post_id":"cjbn5uuk60011pev2q6bo07f0","tag_id":"cjbn5uukh001lpev2chsl2guq","_id":"cjbn5uulx004qpev2bis2c46g"},{"post_id":"cjbn5uuk60011pev2q6bo07f0","tag_id":"cjbn5uulv004kpev258dqb5hk","_id":"cjbn5uulx004rpev2bi50e058"},{"post_id":"cjbn5uuk60011pev2q6bo07f0","tag_id":"cjbn5uulw004npev2ne6yn680","_id":"cjbn5uulx004tpev2uppmoy48"},{"post_id":"cjbn5uuk80013pev2rtcvmljr","tag_id":"cjbn5uukh001lpev2chsl2guq","_id":"cjbn5uulx004upev28pnv541o"},{"post_id":"cjbn5uuka0017pev2glrszg3g","tag_id":"cjbn5uulq0042pev205s0rm6b","_id":"cjbn5uuly004wpev2a01jtn1d"},{"post_id":"cjbn5uukb001apev2g7sfgqdv","tag_id":"cjbn5uulx004vpev2yeb1nlqc","_id":"cjbn5uuly004ypev29ma5ybms"},{"post_id":"cjbn5uukc001dpev23i4pcyhe","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uulz0050pev2pqw233zo"},{"post_id":"cjbn5uukc001dpev23i4pcyhe","tag_id":"cjbn5uuly004xpev2ki9qb8xt","_id":"cjbn5uulz0051pev2rcagh3pu"},{"post_id":"cjbn5uuke001hpev2kifrx12j","tag_id":"cjbn5uukz002mpev23sb3yvzj","_id":"cjbn5uum00053pev2n6s4wvhn"},{"post_id":"cjbn5uukf001jpev26ap0x7sx","tag_id":"cjbn5uulz0052pev26jojhlme","_id":"cjbn5uum00055pev2dr0ce9nr"},{"post_id":"cjbn5uukh001npev2jjgbrffv","tag_id":"cjbn5uum00054pev27kz8qsx7","_id":"cjbn5uum10057pev2dy025cuf"},{"post_id":"cjbn5uukj001ppev2539e2a89","tag_id":"cjbn5uum00056pev28fbaojf6","_id":"cjbn5uum20059pev256girn3e"},{"post_id":"cjbn5uukl001tpev2sw3fw9p8","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum3005bpev2m351qct9"},{"post_id":"cjbn5uukm001vpev2amvoe69s","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum4005dpev2tgj2txk9"},{"post_id":"cjbn5uuko001zpev2j16ijzcs","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum4005fpev2szo0matw"},{"post_id":"cjbn5uukq0022pev2uwwm9vrp","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum5005hpev201m2etw4"},{"post_id":"cjbn5uukr0025pev2xvigqjyz","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum6005jpev2128d816d"},{"post_id":"cjbn5uukt002apev26vpjh324","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum6005lpev22xczrdgg"},{"post_id":"cjbn5uuku002dpev2ez0p2r5n","tag_id":"cjbn5uum10058pev2amvrhf2t","_id":"cjbn5uum7005npev2hydz0ybi"},{"post_id":"cjbn5uukv002ipev2k31spip5","tag_id":"cjbn5uula0033pev2bnvu74wn","_id":"cjbn5uum7005ppev2tovvqne8"},{"post_id":"cjbn5uul0002npev28bmm8wcs","tag_id":"cjbn5uum7005opev2i6xaydmx","_id":"cjbn5uum8005rpev2o7ny53xq"},{"post_id":"cjbn5uul5002upev2i3088d4o","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uum8005tpev2cbkktaim"},{"post_id":"cjbn5uul5002upev2i3088d4o","tag_id":"cjbn5uum7005qpev2m8thrc23","_id":"cjbn5uum8005upev2fv8s0lgy"},{"post_id":"cjbn5uul7002xpev2smt8b0xy","tag_id":"cjbn5uum8005spev208lj7xwd","_id":"cjbn5uum9005wpev2f2suflkk"},{"post_id":"cjbn5uul90031pev2dq8rdkfe","tag_id":"cjbn5uulf003bpev2nm9p4vn4","_id":"cjbn5uuma005ypev2qle38vnv"},{"post_id":"cjbn5uula0035pev2xpv7f550","tag_id":"cjbn5uulx004vpev2yeb1nlqc","_id":"cjbn5uuma0060pev2hmrwf8tt"},{"post_id":"cjbn5uuld0039pev2l0bkzovd","tag_id":"cjbn5uuma005zpev2cs6oteyv","_id":"cjbn5uuma0062pev2zwe51lix"},{"post_id":"cjbn5uulh003gpev2k5kit6wq","tag_id":"cjbn5uuma0061pev2mppzb4u7","_id":"cjbn5uumc0066pev2qiog4a90"},{"post_id":"cjbn5uulh003gpev2k5kit6wq","tag_id":"cjbn5uumb0063pev2rxfi26f0","_id":"cjbn5uumc0067pev2cu13u3mn"},{"post_id":"cjbn5uulh003gpev2k5kit6wq","tag_id":"cjbn5uum7005opev2i6xaydmx","_id":"cjbn5uumd0069pev2f1yf0yjs"},{"post_id":"cjbn5uull003npev2s73kjkg9","tag_id":"cjbn5uumc0065pev2wi1n46kb","_id":"cjbn5uumd006apev2susyo29e"},{"post_id":"cjbn5uull003npev2s73kjkg9","tag_id":"cjbn5uujh0005pev2cl7ivcip","_id":"cjbn5uumd006bpev2nuqonvq0"},{"post_id":"cjbn5uuln003rpev28fknd4ih","tag_id":"cjbn5uumc0068pev2no0rmlmr","_id":"cjbn5uumd006cpev2te6wx4qt"}],"Tag":[{"name":"android","_id":"cjbn5uujh0005pev2cl7ivcip"},{"name":"qq","_id":"cjbn5uujv000ipev2v1vzn4yx"},{"name":"intent","_id":"cjbn5uujz000opev2d1houn8j"},{"name":"ndk","_id":"cjbn5uuk2000upev2vwt6zk1k"},{"name":"atom","_id":"cjbn5uuka0016pev2aailux45"},{"name":"tools","_id":"cjbn5uukd001fpev2hw2yszzo"},{"name":"mac","_id":"cjbn5uukh001lpev2chsl2guq"},{"name":"RAML","_id":"cjbn5uukl001spev2l1abfomr"},{"name":"EditText","_id":"cjbn5uuko001ypev2wga6vlkx"},{"name":"github","_id":"cjbn5uuks0027pev2pgrjlam5"},{"name":"安全","_id":"cjbn5uukv002fpev229vxj20a"},{"name":"git","_id":"cjbn5uukz002mpev23sb3yvzj"},{"name":"hexo","_id":"cjbn5uul5002tpev26mgl8pu3"},{"name":"linux","_id":"cjbn5uula0033pev2bnvu74wn"},{"name":"java","_id":"cjbn5uulf003bpev2nm9p4vn4"},{"name":"math","_id":"cjbn5uulj003ipev23ceaqocw"},{"name":"round","_id":"cjbn5uulm003qpev2qyfmpexs"},{"name":"gyp","_id":"cjbn5uulp003wpev2uzdwczjg"},{"name":"mysql","_id":"cjbn5uulq0042pev205s0rm6b"},{"name":"数据库","_id":"cjbn5uulr0048pev2a0kd05vh"},{"name":"dns","_id":"cjbn5uulv004kpev258dqb5hk"},{"name":"缓存","_id":"cjbn5uulw004npev2ne6yn680"},{"name":"qt","_id":"cjbn5uulx004vpev2yeb1nlqc"},{"name":"WebView","_id":"cjbn5uuly004xpev2ki9qb8xt"},{"name":"glide","_id":"cjbn5uulz0052pev26jojhlme"},{"name":"grep","_id":"cjbn5uum00054pev27kz8qsx7"},{"name":"appicon","_id":"cjbn5uum00056pev28fbaojf6"},{"name":"ios","_id":"cjbn5uum10058pev2amvrhf2t"},{"name":"python","_id":"cjbn5uum7005opev2i6xaydmx"},{"name":"lint","_id":"cjbn5uum7005qpev2m8thrc23"},{"name":"keyboard","_id":"cjbn5uum8005spev208lj7xwd"},{"name":"Git","_id":"cjbn5uuma005zpev2cs6oteyv"},{"name":"wechat","_id":"cjbn5uuma0061pev2mppzb4u7"},{"name":"微信","_id":"cjbn5uumb0063pev2rxfi26f0"},{"name":"命名","_id":"cjbn5uumc0065pev2wi1n46kb"},{"name":"english","_id":"cjbn5uumc0068pev2no0rmlmr"}]}}